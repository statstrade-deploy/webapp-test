{"version":3,"file":"app/api/trpc/[trpc]/route.js","mappings":"yFACA,qCAA6C,CAC7C,QACA,CAAC,EAAC,CAKF,cACA,0CACA,cACA,QACA,CAAK,CACL,EACA,GACA,0BACA,QACA,CAAK,CACL,uBACA,QACA,CACA,CAAC,EAED,UADyB,EAAQ,KAAkB,EACnD,UADgC,OAChC,CACA,gBACA,yCACA,MACA,OAEA,eAGA,OACA,MACA,UAJA,UAKA,SAJA,gCAKA,CACA,CACA,kBACA,oBACA,EAGA,WAFA,GAGA,CACA,gBACA,0BACA,IAGA,KACA,cAGA,4DCnDW,uBACX,cACA,2GACA,CACA,kBACA,WACA,CACA,CACO,wBACP,eAGA,QACA,0BACA,WAIA,sBACA,OAA2B,GAAc,YAEzC,sBAIA,8CAEA,cAEA,OAAuB,GAAc,WACrC,CAAa,CACb,aACA,sBACA,OAA2B,GAAc,cAEzC,sBAIA,8CAEA,OAAuB,GAAc,gBACrC,CAAa,CACb,SACA,6BAAqD,GAAc,UACnE,sBAIA,qDAEA,YAEuB,GAAc,SACrC,CAAa,CACb,oBACA,6BAAqD,GAAc,qBACnE,sBAIA,qDAEA,YAEuB,GAAc,oBACrC,CACA,CAAS,CACT,CAIA,eACA,oBACA,WACA,UACA,aACA,aACA,UACA,0BAEA,OAA+B,GAAc,WAC7C,CACA,CACA,CAAS,CACT,CAOA,gBACA,8BACA,CACA,CAMA,sBACA,uBACA,QACA,CACA,YACA,sBACA,mBACA,iBACA,EACA,EACA,CACU,iBACV,UAEA,iBAEA,CACA,UACA,uBAEA,OACA,6BACA,yBACA,IACA,CACA,OACA,gCAEA,SACA,iBACA,CACA,aACA,8BACA,kBAEA,CACA,WACA,wCACA,sBAGA,aACA,OACA,EACA,EACA,CAEA,CACA,QACA,wCACA,qBACA,QACA,CACA,CACA,UACA,wCAGA,iBACA,QACA,CACA,CACA,oBACA,qBACA,CACA,kCCvKA,CAO8B,CAL9B,GAAM,EAAQ,KAA0D,EAK1C,UALjB,YAKiB,CACX,cACiB,+BAChB,eACG,kBACQ,0BAC/B,IAA+B,2BACA,0BACI,8HCjBnC,IAAMA,EAAqB,sBAEpB,OAAMC,UAA2BC,MAGtCC,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AhBA,QACA,eACA,OAA8B,uBAAkC,EAChE,EAaA,GACA,kCACA,kCACA,6BACA,qCACA,+BACA,8BACA,+BACA,+BACA,kCACA,gCACA,CAAC,EACD,UAhBA,CARA,YACA,+CACA,kBACA,oBACA,OAA6B,kDAA4F,EAEzH,SACA,EACA,IAAoD,eAAkB,SAAa,EAgBnF,GAGA,MAAiC,EAAQ,IAA+B,EAExE,WAFwC,CAGxC,cAAgB,0CAAoC,CACpD,cAAgB,kNAAyC,CACzD,UACA,gBACA,iBACA,CAAE,EAAI,EACN,UACA,YACA,gIAGA,WACA,MACA,sCACA,KACA,QACA,2BACA,SACA,sDACA,mBAA8B,gCAAgC,GAAG,CAEjE,CAAO,CACP,MACA,gDACA,CACA,CAAK,CACL,EACA,MACA,mBACA,2BACA,GACA,GACA,MACA,EACA,CACA,UACA,CAGA,QAGA,EAAkC,EAAQ,IAA+B,EACzE,EAA+B,EAAQ,IAAmB,EAC1D,CAFyC,CAEzC,SADsC,KACtC,2BACA,iBACA,SACA,cACA,CACA,aACA,UAKA,MAJA,yBACA,iGACA,+CACA,gDAEA,CACA,eACA,oBACA,CACA,gBACA,sBACA,QACA,CAAK,CACL,CACA,kBACA,MACA,+BACA,8EACA,wCACA,6BACA,sBACA,KAEA,WACA,CAAK,EACL,iDACA,CACA,EACA,cACA,cAAgB,0CAAoC,CACpD,cAAgB,kNAAyC,CACzD,UACA,gBACA,CAAE,EAAI,EACN,MACA,UACA,YACA,gIAGA,sCACA,KACA,QACA,2BACA,SACA,sDACA,mBAA4B,gCAAgC,GAAG,CAE/D,CAAK,CACL,MAHwE,QAIxE,UACA,CACA,CAAG,CACH,CAGA,MAAkC,EAAQ,IAA+B,EACzE,EAAgC,EAAQ,IAAmB,EAC3D,CAFyC,CAEzC,SADuC,KACvC,2BACA,iBACA,SACA,cACA,CACA,aACA,MACA,+BACA,gFACA,qDACA,GAIA,CADA,6DACA,IAEA,eACA,oBACA,CACA,gBACA,sBACA,QACA,CAAK,CACL,CACA,kBACA,iCACA,sBACA,KAEA,WACA,CAAK,CACL,2BACA,+CAEA,CACA,EACA,cACA,cAAgB,0CAAoC,CACpD,cAAgB,kNAAyC,CACzD,UACA,gBACA,CAAE,EAAI,EACN,MACA,UACA,YACA,gIAGA,sCACA,KACA,QACA,2BACA,SACA,sDACA,mBAA4B,gCAAgC,GAAG,CAE/D,CAAK,CACL,MAHwE,QAIxE,UACA,CACA,CAAG,CACH,CAGA,MAAkC,EAAQ,IAA+B,EACzE,WADyC,KACzC,2BACA,iBACA,SACA,eACA,gBACA,CACA,aACA,MAEA,oBADA,mBACA,sBACA,CACA,eACA,CACA,gBACA,CACA,EACA,cACA,cAAgB,0CAAoC,CACpD,cAAgB,kNAAyC,CACzD,UACA,gBACA,CAAE,EAAI,EACN,MACA,UACA,YACA,gIAGA,sCACA,KACA,QACA,2BACA,SACA,sDACA,mBAA4B,gCAAgC,GAAG,CAE/D,CAAK,CACL,MAHwE,QAIxE,UACA,CACA,CAAG,CACH,CAGA,MAAkC,EAAQ,IAA+B,EACzE,WADyC,KACzC,2BACA,iBACA,SACA,cACA,CACA,aACA,MAEA,gBADA,uBACA,uBAEA,eACA,uBACA,2BACA,CACA,gBACA,uBACA,UACA,sBACA,QACA,CAAK,CACL,CACA,EACA,cACA,cAAgB,0CAAoC,CACpD,cAAgB,kNAAyC,CACzD,UACA,gBACA,CAAE,EAAI,EACN,MACA,UACA,YACA,gIAGA,sCACA,KACA,QACA,2BACA,SACA,sDACA,mBAA4B,gCAAgC,GAAG,CAE/D,CAAK,CACL,MACA,kBACA,CACA,CAAG,CACH,CAGA,QAGA,YACA,cAAgB,0CAAoC,CACpD,cAAgB,kNAAyC,CACzD,UACA,gBACA,CAAE,EAAI,EAIN,OAHA,aACA,wMAEA,GACA,cACA,cACA,UACA,eACA,CAAG,CACH,CACA,cACA,cAAgB,0CAAoC,CACpD,cAAgB,kNAAyC,CACzD,UACA,gBACA,CAAE,EAAI,EAIN,OAHA,aACA,sMAEA,KACA,cACA,cACA,UACA,eACA,CAAG,CACH,CACA,cACA,cAAgB,0CAAoC,CACpD,cAAgB,kNAAyC,CACzD,UACA,gBACA,CAAE,EAAI,EAIN,OA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,gBACA,sBACA,CACA,WACA,4BACA,sBACA,SAAkB,cAAc,IAAI,UAAU,EAAE,EAAS,EAAE,EAAO,EAAE,UAAU,EAE9E,YACA,iBACA,cACA,CACA,aACA,0BAEA,eACA,4BAEA,gBACA,sBACA,CACA,WACA,wBAEA,YACA,kBACA,CACA,aACA,0BAEA,cACA,oBACA,CACA,eACA,4BAEA,gBACA,sBACA,CACA,eACA,4BAEA,gBACA,sBACA,CACA,eACA,wBAEA,gBACA,yCAAsE,EAAM,EAE5E,WACA,gBACA,CACA,SACA,iBAEA,8CACA,OACA,eACA,mBACA,uBACA,uBACA,uBACA,eACA,uBACA,eACA,uBACA,mBACA,+BACA,cACA,CACA,CACA,QACA,0CACA,CACA,2IC9KO,SACP,uBAAkB,0BAAiC,EACnD,4BACA,iBACA,eACA,mBACA,sBAAiC,MAAY,IAC7C,sBACA,CACA,SACA,GAAY,OAAU,IACtB,gBACA,IAEA,mEACU,wBAEV,yBAEA,8GACA,YACA,cACA,eACA,CAAa,CAEb,CACA,eAEA,gBACA,IAEA,MAA8B,IAAoB,WAClD,IACA,2BAEA,MAA+B,GAAqB,YAKpD,yBACA,uBAGA,kCACA,2DACA,iDAOA,MAAgC,QAAY,WAC5C,IACA,MAAsB,GAAqB,MAC3C,oBACA,CAAiB,SACjB,CAAc,SACd,kCACA,CACA,CAAS,EACT,yBACA,CACA,4BAEA,OADA,sCACA,mBACA,CACA,qBACA,sCACA,iCACA,gBAEA,MAA0B,GAAgB,YAC1C,MACA,gCAA4C,GAAc,wEAC1D,aACA,cACA,eACA,CAAa,EAEb,MAAe,OAAsB,QACrC,2BACA,6BAEA,CACA,qBAIA,GADA,gIACA,iBAEA,IACA,qDACA,CAAc,SACd,wCAAwD,GAAc,4EACtE,OACA,CAAiB,uBACjB,aACA,cACA,eACA,CAAiB,EACjB,CAEA,CACA,CACA,aACA,8JACA,YACA,cACA,eACA,CAAK,CACL,mCCpHO,iBAA2B,mHAAiH,EAkBnJ,OACA,mBAFA,+FAGA,OACA,sBACA,MAAe,OAAgB,IAC/B,iBAEA,kDACA,sCACA,4BACA,4BACA,wBACA,4CACA,0BACA,oBACA,oBACA,UACA,kEAAqG,CACrG,+CACA,sBAUA,GACA,cAAY,gCAAuC,EACnD,WAAe,EAAY,CAC3B,SAD2B,CAC3B,EACA,UACA,aACA,CAAK,CACL,EAjBA,GACA,0CACA,cACA,4BACA,uBAiBA,WACA,cACA,EAA0B,QAAsB,GAChD,KACA,iBACA,mBACA,QAAiD,OAAgB,4BAIjE,QACA,GA3BA,EAGA,OADA,UACA,CACA,+CClDO,OAAMsD,UAAuB3lB,MAClCC,YAAY2lB,CAAe,CAAExe,CAAsB,CAAE,CACnD,KAAK,CACF,eAAawe,CAAAA,CAAQ1C,QAAQ,CAAC,KAAO0C,EAAUA,EAAU,KAAE,6BAC5Dxe,GAEF,IAAI,CAACvB,IAAI,CAAG,gBACd,CACF,qCCPA,8CACA,0BAA6C,UAC7C,EACA,qCAA6C,CAAE,SAAa,EAAC,EAC7D,cAAsB,CAAG,kBAAwB,CAAG,2BAAiC,CAAG,wBAA8B,CAAG,uBAA6B,CAAG,iBAAuB,QAEhL,QAA0C,EAAQ,IAAmB,GACrE,UADiD,OAC1B,WACvB,QAAgD,EAAQ,IAAyB,GACjF,UADuD,aAC1B,WAC7B,QAAiD,EAAQ,IAA0B,GACnF,UADwD,cAC1B,WAC9B,QAAoD,EAAQ,IAA6B,GACzF,UAD2D,iBAC1B,WACjC,QAA2C,EAAQ,IAAoB,GACvE,UADkD,QAC1B,WACxB,QAAyC,EAAQ,IAAkB,GACnE,UADgD,MAC1B,WACtB,SAAe,EACf,0BACA,gCACA,iCACA,oCACA,2BACA,uDCnBO,SAASggB,EACdnL,CAAuB,EAEvB,OACEA,UACA,iBAAOA,GACP,SAAUA,GACc,YAAxB,OAAOA,EAAQnY,IAAI,mDaPvB,E0CHA,EACA,E+CKA,EgCoOA,yDRrHA,UzFgLA,MiGgLA,QIxdA,8OxIqEA,IAAMujB,EAAoCjlB,OAAOC,GAAG,CAClD,gCCtEK,mBAEP,MADA,wGAGA,WACA,mBAEA,2DACA,IACA,QAEA,cACA,6BACA,IACA,kBACA,CAAU,SAEV,MADA,mEAAmF,UAAY,EAC/F,CACA,CAEA,CAWA,WACO,aAIP,OAHA,GACA,QAEA,CACA,CACA,cAEA,oDAAyD,EAAO;AAChE,0EAyCA,UAAoB,GAAM,WAE1B,YAAsB,GAAM,aACpB,GAAM,kBAId,yDACA,MA/CA,YACA,4BAAyC,EACzC,SACA,cACA,QAEA,8DACA,aACA,cACA,eACA,CAAa,CACb,CAAS,CACT,YACA,6DACA,aACA,cACA,eACA,CAAa,CACb,CAAS,CACT,aACA,2BACA,cAEA,8DACA,aACA,cACA,eACA,CAAa,CACb,CACA,CAAK,EACL,mBAAuB,EACvB,SACA,CAAK,CACL,EAeA,cACA,eACA,CAAK,EAEL,4BC9FA,yBACA,wBACA,qBACA,SACA,iBACA,WACA,WACA,gBACA,UACA,EAAU,CACV,gBACA,YAEA,CAEA,eACA,SACA,4BAEA,CAEA,yBACA,UACA,CACA,aACA,6BAIA,MADA,qBACA,GAIA,wBAEA,CACA,CAIO,kBACP,eACA,MACA,wDACA,sBACA,CAKA,cACA,gCAAwC,IAAkB,EAC1D,qBACS,uBACT,aACA,cACA,eACA,CAAS,CACT,CAKA,cACA,gCAAwC,IAAkB,EAC1D,qBACS,uBACT,aACA,cACA,eACA,CAAS,CACT,CACA,6CCpEA,kCACA,WACA,IACA,IACA,IACA,IACA,IACA,EACA,gBACA,MACA,kDACA,2CACA,yGACA,aACA,cACA,eACA,CAAa,EAEb,SACA,iCACA,mCACA,UAEA,kDACA,CACA,CAKW,yBACX,kBAA+B,EAC/B,WACA,mBAEA,YADA,IAA4B,IAAe,IAC3C,CACA,WACA,UACA,aACA,UAEA,eACA,8BACA,iBAKA,OAJA,aAAsD,IAAe,EACrE,kDAAyG,QAAe,gBAExH,OACA,CACA,CAEA,SACA,OAA+B,GAAc,WAC7C,CACA,CACA,CAAS,CACT,UACA,UACA,cAAgC,GAAO,QACvC,QAAyB,QAAyB,IAClD,wBACa,QACb,CACA,CACA,8CACA,OACA,qBACA,aAEA,eACA,uBACA,yCACA,WACA,2BACA,mBACA,2BACA,eAEA,CACA,cACA,sBACA,CACA,iBACA,yBACA,sBACA,CACA,qBACA,0DACA,aACA,+HACA,aACA,cACA,eACA,CAAa,EAEb,8BACA,wCAEA,OADA,iBAAgC,QAAW,KAC3C,YACA,KACA,UACA,QACA,CAAS,CACT,CACA,oBACA,4CAGA,OAFA,6BAA4C,QAAW,KACvD,OACA,YACA,KACA,SACA,CAAS,CACT,CACA,eACA,4CAGA,OAFA,+BACA,OACA,YACA,KACA,SACA,CAAS,CACT,CACA,CChHO,SAASilB,EACd3C,CAAiB,CACjB4C,CAAkB,EAElB,IAAMC,EAA0B,UAAhB,OAAOD,EAAoB,IAAIE,IAAIF,GAAQA,EACrDG,EAAW,IAAID,IAAI9C,EAAK4C,GAGxBI,EAAaD,EAASE,MAAM,GAAKJ,EAAQI,MAAM,CAErD,MAAO,CACLjD,IAAKgD,EACDD,EAAS7Z,QAAQ,GAAGtH,KAAK,CAACihB,EAAQI,MAAM,CAACljB,MAAM,EAC/CgjB,EAAS7Z,QAAQ,cACrB8Z,CACF,CACF,cC9BA,CACI,IAAoB,wDC0BjB,UACP,WACA,iBACA,uGACA,aACA,cACA,eACA,CAAa,EAEb,wCACA,gBACA,CACA,gBACA,iBACA,wGACA,aACA,cACA,eACA,CAAa,CAEb,mBACA,8CAEA,gBACA,CACA,cACA,4BACA,iBACA,gBACA,CACA,CCtDW,cACX,OACA,cAA4D,CAArC,KAAqC,6BAC5D,EADoG,CAAgB,mBACpH,gDACA,2EACA,CACA,QCJA,yDCgBO,kBAA8B,GAAW,CAChD,eACA,sBACA,uBAEA,cACA,gCAAwC,IAAkB,EAC1D,qBACS,uBACT,aACA,cACA,eACA,CAAS,CACT,CACA,cACA,gCAAwC,IAAkB,EAC1D,qBACS,uBACT,aACA,cACA,eACA,CAAS,CACT,CACA,YACA,gCAAwC,IAAkB,EAC1D,qBACS,uBACT,aACA,cACA,eACA,CAAS,CACT,CACA,CACA,QACA,6BACA,2BACA,EACA,UACmB,SAAS,GAC5B,sCAEA,MAWO,yBACP,MAqGA,EACA,EAhHA,SACA,MACA,+CACA,sBAAoB,wBAAwC,EAAU,IAA6C,EACnH,IACA,OAFqE,CAGrE,CAMA,MAAU,IAEV,2BAFyC,eAEzC,CACA,cAAyB,O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DAdA,CAEA,WACA,8BACA,eAEA,OACA,GACA,8CAEA,EAAsC,GAGtC,CAGA,CAHU,OAGV,+BAEA,uDAEA,WACA,qEAIA,KADA,WACA,GACA,sBACA,uBACA,mCACA,2BACA,uBAAiC,GAAmB,wBACpD,2BACA,SACA,EAA2B,KAA2B,oFACtD,+BAEA,GAEA,GAA8B,SDqLvB,KACP,cCtL0D,EDsL1D,SAA0B,KAAkC,KAA0B,KAAsC,QAA8B,KAAkC,iBCtLlI,iFAE1D,GACA,0BACA,MACA,KACA,cACA,gBACA,kBACA,qBACA,kBACA,qBACA,EAAa,CAEb,CACA,6BAGA,qEACA,6BAAoD,GAAO,MAG3D,qBAEA,MADA,4BAEA,CACA,wBACA,YbhFkCwlB,EagFsB,EbhFV,IagFP,ab9ElB1R,Ia8EmC,Cb9E9B0R,IAAS,CAAC7D,GAAe6D,GAC1C,QADyC7D,CACjC6D,EACA,MAATA,EACE,SACAzH,CAAAA,EAAAA,GAAAA,CAAAA,CAAkBA,CAACyH,Ga2E7B,CACA,oBACA,OACA,sEACA,CACA,cACA,4BACA,mBACA,IACA,QAEA,sBACA,YACA,IACA,oBAEA,CACA,CAAS,EAET,OADA,oBACA,CACA,CACA,uBACA,MACA,4DACA,CAEA,6BAAyC,EAIzC,SACA,kBACA,kBACA,UAEA,wCACA,aACA,KACA,IACA,mCACA,SACA,oBACA,oBACA,YAEA,UACA,mBACA,SACA,CAAiC,GAEjC,CACA,CAAqB,GAErB,mBAEA,oCACA,oBAEA,IACA,eACA,WACA,WAGA,YACA,CAAkB,SAClB,uCACA,CACA,EAAc,uCACd,aAEA,aADA,iBACA,YACA,SACA,IACA,kBACA,UAAuC,EAAI,GAAG,kCAC9C,mBACA,EAEA,gBAEqB,YAAc,EACnC,CAEA,EAAc,8CACd,aACA,wBACA,uBACA,oBACA,EACA,EACA,YACiB,CACjB,EAAc,6BACd,eACA,kBAGA,uCAAkD,oDAA2E,WAG7H,yCACA,sCACA,sBA1EA,KA4EA,6BACA,EACA,SACA,EACA,OACA,WACA,cACA,WACA,iBACA,YACA,QACA,EACA,CAC+C,MAC/C,EA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UAAgB,YAAmB,YACnC,MAA6B,WAAoB,EAAE,EAAM,GACzD,GACA,OAA6B,EAAW,IAGxC,WAEA,EADA,iBACA,6CACU,EACV,sBAEA,GAEA,mBACA,CACA,SACA,EAwMA,MACA,EACA,EIvM8B,CAC9B,qCACA,sCACA,4BAEA,WAAwB,CAExB,gBACA,CAAS,EACgB,4BAAoC,GAAsB,4BACnF,sBACA,MAAoC,GAIpC,GACA,SALmD,kBAMnD,CACA,UACA,SAA0B,CAC1B,gBAAiC,CACjC,QAT6B,KAU7B,cAVgD,CAUhD,GACa,CACb,YACA,2BACA,YACA,0BACA,wBACA,cACA,aAAiC,KAA6B,UAC9D,EACA,CADsC,CAEtC,IAFqF,cAErF,uCACa,CACb,eACA,UACA,CACA,EAEA,qCACA,GDlEA,oBCoEA,CAmBA,OAlBA,+BACA,sCAEA,4BACA,OAQA,eADgC,SzBvFzB,KAQP,KyB+EmD,CzB/EnD,oBACA,UAEA,OADA,+BACA,YyB4EmD,8BACnD,CACA,gBACA,wBACA,kBACa,EATb,oCAWA,CACA,CACA,sCCxGA,QACA,mBACA,mBACA,6BACA,uBACA,mBACA,2BACA,uBACA,oBACA,wBACA,iBACA,iBACA,4BACA,eACA,gBACA,2BACA,yBACA,8BACA,6BACA,yBACA,4BACA,EACA,IACA,uBACA,uBACA,iCACA,wBACA,4BACA,qBACA,qBACA,gCACA,mBACA,oBACA,+BACA,6BACA,kCACA,iCACA,6BACA,gCACA,EAkBA,oBACA,2CACA,+BACA,oDAAwF,EAAI,EAC5F,WAEA,QACA,CAKA,SAAS,GAAQ,GACjB,iBADiB,CACjB,8BACA,CACA,eACA,0BACA,CAKA,eACA,2CACA,CApCA,eACA,uBACA,mBACA,yBAkCA,yDACA,eACA,WAAmC,GAAQ,6BAC3C,CAIA,IAAM,GAAG,OAET,QAFS,CAET,MACA,QACA,CCjGA,qBACA,yBACA,mCACA,8BACA,yBACA,mCACA,qBACA,8BAA0D,YAAa,uBAEvE,eACA,gFAA2I,IAAO,IAClJ,OACA,6BACA,2BACA,sCACG,EAEH,QACA,EACA,mCAAmG,wBAGlG,EAHkG,gBACnG,QACA,aACA,CAAC,MAID,IAAM,GAAI,OACV,OACA,UAFU,GAEV,kBACA,EAmCA,OAlCA,kBACA,MACA,kBAyBA,OAxBA,4BAAwG,GAAI,CAC5G,SACA,cAF4G,MAE5G,cACA,sBACA,CAAG,CACH,aACA,oBACA,GACA,OACA,MACA,EAWA,MAVA,cACA,2BACA,kBACA,EACA,iBACA,yBACA,kBACA,GACA,WACA,WACA,IACA,CACA,EAAE,EACF,KACA,EAMA,0BAeA,IACA,gBACA,gBACA,iBACA,qBACA,cACA,cACA,yBACA,YACA,aACA,wBACA,sBACA,2BACA,0BACA,sBACA,0BACA,0BACA,oBACA,gBACA,wBACA,mBACA,EAsBA,eACA,MACA,4BACA,CA0BA,WAAkC,oHAClC,cAEA,2FACA,eACA,EAAI,YACJ,mGACA,CAAG,yDACH,CACA,gEACA,CAAG,EAIH,OAAuC,yHACvC,kBAWA,WAVA,cACA,+BACA,4BACA,eACA,6BACA,0BACA,gEACA,CACA,qCACA,EACA,oDACA,CAAG,EAIH,OAAyC,2HACzC,mBACA,MAKA,WAJA,YACA,oBACA,2BACA,EACA,oDACA,CAAG,EAIH,OAA0C,4HAC1C,UASA,WARA,gBACA,8CACA,QACA,cACA,gBACA,WACA,CAAG,UACH,EACA,mDACA,EAAG,EAIH,OAAyC,2HACzC,WACA,gBACA,qBACA,iCACA,qCACA,4BACA,wDACI,mBACJ,CACA,QACA,CAYA,UAXA,YACA,YAAkB,mBAAsB,KACxC,wCACA,yCACA,WACA,CAAI,mIACJ,+DACA,CAAI,CACJ,CACA,QACA,EACA,oDACA,CAAG,EAIH,cAIA,eACA,SAAS,oBAAsB,EAC/B,MAAS,GAAO,QAChB,GACA,kBACA,KAAQ,EAAuB,IAC/B,MACA,OACA,WAvGA,GAuGA,EAvGA,KAwGA,CACA,EAGA,OAFA,sEACA,oCACA,iDAAoG,MAAW,QAAI,EAAO,EAC1H,CC9PA,SAA4B,QAAO,GACnC,EAKA,OAA4B,GAAQ,IAAD,CAAuB,GAC1D,cAD0D,GAC1D,QASA,eACA,oBACA,yCADA,SAEA,cACA,6BACA,OACA,CAAE,EAEF,OADA,+CACA,CACA,CACA,2BACA,eACA,UACA,MArBA,YACA,+BACA,eACA,8CACA,wCACA,GAAK,GAAQ,kCAEb,EAcA,SAEA,MADA,kEACA,OAAmB,EAAO,EAC1B,oCACA,mCACA,iBACA,sBACA,gCACA,CACA,EAIA,GAA6B,GAAQ,IAAD,CAAsB,GAc1D,QACA,KAf0D,CAe1D,CACA,eACA,gBACA,CAAE,CACF,QACA,eACA,gBACA,CACA,EACA,uBACA,4CAAuG,MAAW,EAAI,8CAAwD,EAC9K,kDAA6G,MAAW,EAAI,uCAAkF,aAAkB,EAAI,mDAA6D,EAAG,EACpS,CACA,CAIA,iBACA,iDACA,CAmBA,IAuBI,GAAuB,GAAQ,IAAD,CAAsB,GACxD,aADwD,CACxD,QA8BA,CA/BwB,EA+BxB,CACA,UACA,iBACA,WACA,UAAY,CACZ,YAAc,CACd,gBAAkB,CAClB,kBACA,cACA,EAIA,IACA,OACA,OACA,QACA,CAIA,eAmEA,OAlEA,YACA,wDACA,0DAAoF,qCACpF,MAAqB,GAAa,EAAG,EACrC,EAAiB,GAAa,CADI,CACD,EAiDjC,EA3BA,IAtB8B,KAsB9B,UACA,MAAqB,GAAa,EAAG,EACrC,MADkC,CAClC,mCAAwF,OArDxF,EAsDA,GAxDA,mBAwDA,GAxDA,MAwDA,GACA,sBAzBA,cACA,OACA,UACA,cA3DA,GACA,eACA,IACA,WACA,eACA,EAEA,EAoDA,UACA,oBACA,oBACA,cAGA,eAFA,sCACA,YACA,6BAEA,EADA,mBACA,IACA,UACA,OACA,MACA,6BACO,CAEP,CAAK,CACL,CACA,EAKA,CACA,OACA,MACA,MACA,WACA,CAAM,EACN,QACA,CACA,GA9DQ,GADR,EA+DA,IA9D2B,GAAQ,WAAnB,SAAmB,OA8DnC,CACA,+BACA,QACA,CACA,aA0BA,GACA,0BACA,EA5BA,IACA,mBACA,QACA,CACA,yBACA,sCAA+D,EAAQ,EACvE,QACA,MACA,CACA,QACA,EACA,GACA,KAAmB,GAAoB,YAAc,GAAoB,UACzE,SADuC,CAEvC,UACA,IAHyE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,CADe,GAE9B,oBAAwB,IACxB,CACA,CACA,EC3Va,GAAO,QDwVuB,QCvV9B,CADO,EACA,gBCcP,CDdO,ECcK,IACzB,cACA,CAFyB,CAEzB,yBACA,YAAoB,WAAmB,IACvC,qBAEA,QACA,EACO,OACP,OACA,0BACA,GAAkB,GAAO,WAEzB,MAFyB,KAEzB,+CACA,IACA,OAAe,GAAY,EAC3B,CACA,MACA,UAH2B,MAG3B,oDACA,CACA,CCpCO,OAAM,WAAS,MACtB,kBACA,wBACA,CACA,eACA,SACA,6BACA,gCACA,gDACA,CACA,CACO,MAAM,WAAiC,GAC9C,aADuD,IACvD,CACA,uCACA,CACA,iDACA,SACA,4CACA,aACA,cACA,cACA,CACA,CACO,iBAAyB,GAChC,aADyC,IACzC,CACA,uBACA,CACA,iDACA,SACA,4BACA,aACA,cACA,cACA,CACA,CACO,MAAM,WAA0B,GACvC,UAD8B,GAAkB,CAEhD,oBACA,oCACA,CACA,kBACA,gCACA,CACA,CACO,MAAM,WAAyB,GACtC,SAD6B,IAC7B,CACA,oBACA,kCACA,CACA,kBACA,8BACA,CACA,CAoBO,MAAM,WAAmB,GAChC,GADuB,UAAkB,CAEzC,oBACA,2BACA,CACA,kBACA,uBACA,CACA,CACO,MAAM,WAAmB,GAChC,GADuB,UAAkB,CAEzC,oBACA,2BACA,CACA,kBACA,uBACA,CACA,CAuCA,2BAWa,WAAuC,GACpD,aAD6D,CAE7D,SAF2C,WAG3C,kDACA,4CACA,CACA,kBACA,6CACA,CACA,CCpJA,OAAe,MAAM,CACR,CADS,EACE,0BCAT,GAAM,qBAAsB,IYmF3C,KZnFiD,CAAC,CYmFlD,CZnFmD,KYmFnD,IACA,UACA,4EAEA,cAAY,eAAuB,SAtFnC,GACA,MACA,EACA,cACA,UACA,cACA,YACA,YACA,YACA,GAAkC,2BAA8B,gBAAkB,GAClF,0BACA,KACA,aACA,YACA,YACA,GAAkC,qCAAwC,gBAAkB,GAC5F,0BACA,KACA,gBACA,mBACA,mBACA,mBACA,GACA,gBACA,YAAqC,gCAAqC,GAE1E,oDACA,KACA,SACA,UAA8B,GAAgB,+DAC9C,CACA,KAEA,UACA,cACA,YACA,GAAkC,iCAClC,0BACA,KACA,aACA,GAAkC,iCAClC,0BACA,KACA,aACA,GAAkC,iCAClC,0BACA,KACA,eACA,qBACA,qBACA,qBACA,GAAkC,8BAClC,wBACA,KACA,SACA,UAA8B,GAAgB,+DAC9C,CACA,KAEA,WACA,cACA,YACA,GAAkC,YAClC,0BACA,KACA,eACA,qBACA,qBACA,qBACA,GAAkC,YAClC,wBACA,KACA,SACA,UAA8B,GAAgB,+DAC9C,CACA,KAEA,SACA,UAAsB,GAAgB,8DACtC,CACA,iBAAa,cACb,EAKmC,GACnC,GACA,EACA,UACA,aACA,CACA,GAAsB,MAGtB,OAFA,aACA,aACW,GAAM,8BACjB,EChGA,MAAkC,GAAM,MAGxC,GACA,sCAEA,oBACA,eACA,UACA,YAEA,YAA4B,GAAS,CAAG,CDsFpB,ECtFoB,GAAH,GAAG,EAAa,EAOrD,OANA,EAIA,OAHA,SAAyB,MAAkB,EAK3C,CACA,EA6BA,GAAe,CAAE,mBA5BjB,QACA,UACA,gBAA+B,aAAe,QAO9C,CANA,WACA,YACA,YACA,WACA,WACA,YACA,KACA,SAEA,mBACA,YACA,CACA,QACA,EAYiB,oBAXjB,QACA,UACA,gBAA+B,aAAe,SAC9C,IACA,SAEA,mBACA,YACA,CACA,QACA,CACiB,CAAyC,COjB1D,CPiB2D,EOjD3D,SAAS,CAAY,IAgCN,CAhCM,SAYrB,EAXA,SADqB,GACrB,IA+B4B,EA/B5B,mBACA,8EAEA,uBACA,eAEA,2BACA,mBACA,iDACA,qGASA,aALA,EADA,WACA,+CAGA,EAEA,SACA,aACA,UAAsB,GAAgB,+BAAgC,EAAU,sBAEhF,iBACA,2CAAyD,EAAU,eAEnE,2BACA,2CAAyD,EAAU,+BAEnE,CACA,sBACA,EOzBwB,SGPxB,OAAe,QACf,2CACA,kBAAgB,GAAgB,YAChC,8BACA,mBAAmC,GAAK,sDAExC,CACA,CAAC,CCPD,CDOE,QCPF,yBACA,mEAA2E,GAAM,UAAU,EAAK,EAChG,CACA,iBACA,iBACA,CACA,eACA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UACA,CAAS,CACT,MACA,QACA,OAES,CACT,KACA,mBACA,CAAS,CACT,QACA,sBACA,CAAS,CACT,KACA,mBACA,CAAS,CACT,KACA,mBACA,CAAS,CACT,QACA,sBACA,CAAS,CACT,OACA,MACA,2CAIA,YACA,CAAS,CACT,UACA,wBACA,CACA,CAAK,EACL,CACA,CA4HA,eACA,gEAAyF,OAAS,0BAAmC,EAAI,QACzI,CAYA,OAA0B,QAA2C,KACrE,iBACA,kBAAqC,EAAM,kBAC3C,sCAA8C,EAAO,OAAO,EAAW,gJACvE,aACA,cACA,eACA,CAAK,CACL,CACA,cACA,6BACA,OACA,EACA,UACA,CACA,eACA,2BACA,oBAEA,QACA,QC9TA,mBA2OM,GAAoB,QAA2C,CACrE,aADuB,CAEvB,kBAAqC,EAAM,kBAC3C,sCAA8C,EAAO,OAAO,EAAW,gJACvE,aACA,cACA,eACA,CAAK,CACL,GCpUO,cAEP,kCACA,kCAIA,OAHA,UACA,4BAJA,aAMA,QACA,cACA,wBACA,aACA,qBAIA,6CACA,KACA,cAIA,iBACA,oBACA,uBAMA,eAEA,SAEA,OADA,CAEA,CACA,CACA,iBACA,IAIA,EAJA,oBACA,IAQA,QAEA,YACA,EACA,QACA,mBACA,eACA,gBACA,qBAiBA,OAhBA,qCACA,QACA,YAEA,OACA,qCACA,QACA,YACA,aACA,CAAa,CACb,CAAS,CACT,cACA,eACA,CAAK,EACL,0BACA,4BACA,CACA,CAoCA,SACA,eACA,gBACA,CACA,uBACA,uBACA,yBAIA,SAGA,2BACA,uBACA,uBAEA,CACA,UACA,4BACA,uBACA,wBAEA,CACA,CAYA,IAAM,GAAoB,QAA2C,CACrE,cACA,EAFuB,EAEvB,cAAqC,EAAM,kBAC3C,sCAA8C,EAAO,OAAO,EAAW,kJACvE,aACA,cACA,eACA,CAAK,CACL,GACA,eACA,kCACA,kCACA,MAGA,KACA,qBACA,2CAA+D,SAAa,QAAQ,EAAW,+OAC/F,aACA,cACA,eACA,CAAiB,OACH,6BACd,2CAA+D,SAAa,QAAQ,EAAW,wRAC/F,aACA,cACA,eACA,CAAiB,OACH,qBACd,2CAA+D,SAAa,QAAQ,EAAW,kOAC/F,aACA,cACA,eACA,CAAiB,CACjB,CAEA,wBACA,+DAA2E,SAAa,+EAA+E,EAAW,oJAClL,aACA,cACA,eACA,CAAa,EAEb,KACA,0BAEA,2CAAuE,SAAa,OAAO,GAAY,sJACvG,aACA,cACA,eACA,CAAiB,EACjB,0DACA,EAAc,gCAEd,uDACc,gCAEd,eACA,4DAAkF,SAAa,oDAAoD,EAAW,qGAC9J,aACA,cACA,eACA,CAAiB,CAGjB,OAFA,4BACA,4BACA,CACA,CAAoH,CAEvG,CAGb,CE9NA,YFyNkH,EAAE,IExNpH,aACA,wBACA,uBACA,CAeA,OAdA,8BACA,yBACA,wBACA,EACA,iCACA,6BACA,EACA,mCACA,6BACA,EACA,6BACA,wBACA,uBACA,EACA,CACA,CAAC,GCnBD,cACA,cACA,0BACA,YAAsB,EACtB,CAmBA,OAlBA,KAFqC,MAErC,wBACA,wBAGA,GACA,+BAEA,iBACA,EACA,6BACA,eACA,EACA,sCACA,4BACA,EACA,iCACA,0BACA,EACA,CACA,CAAC,GCzBD,GAA6B,UAAZ,CACjB,QADqB,IAAI,GACzB,KAIA,CAL6B,KAE7B,0BACA,EAAe,eAAgB,+BAAsC,cAAkB,EACvF,cAA8B,wEAC9B,IACA,EACA,qBACA,kCACA,kFAEA,aAAwB,mBADxB,OAEA,qEACA,CACA,CAAC,GAED,eAEA,aACA,8BAAqD,cAAgB,QAErE,OADA,8BACA,CACA,CAeA,OApBA,QAMA,mCACA,oBACA,cACA,6CAEA,gDAGA,mCAEA,EACA,wCACA,sCACA,EACA,CACA,CAAC,CAAC,ICtCF,GAA0B,CDsChB,MCtCI,EAAY,KAC1B,EADkB,EAClB,EADsB,SAAI,GAC1B,kCACA,eACA,yBACA,IACA,8DACA,CACA,SAAoB,GAAM,gBAC1B,CACA,IACA,mCACA,QACA,CAAkB,mBAClB,CACA,QACA,EA8BO,iBACP,sCACA,qBACA,SADA,KACA,EACA,CAAK,CACL,CACO,iBACP,wBACA,CACO,iBACP,YAAoB,WAAmB,KACvC,WACA,QACA,QAEA,CAEA,CC7DA,kBACA,aACA,mBACA,CAYA,OAXA,iCACA,0BACA,EACA,uCACA,ODqBO,ICrBY,KDqBZ,KACP,eAfA,GACA,qBAEA,wBAEA,SAEA,eACA,qBACA,aAGA,QACA,EAEA,GACA,cAEA,iBAGA,YAAoB,EADpB,EACoB,OAA2B,KAC/C,MAFA,CAEA,IACA,QACA,QAEA,CAEA,ECnCmB,6BACnB,wBACA,CAAS,CACT,EACA,mCACA,0BACA,EACA,CACA,CAAC,GCdM,eACP,iBACA,EAEO,qBACP,8BAEA,uBAEA,iCAEA,4CACA,EACO,eACP,yCAEO,eACP,uBACA,EAaO,eACP,uBACA,EACO,eACP,uBACA,EACO,eACP,iBAxCA,+BAwCA,GAxCA,WAyCA,EAOO,eACP,kCACA,EACO,eACP,MAxBA,kBAwBA,GA/CyC,OAgDzC,GACA,OA7BA,iBA8BA,GA9BA,OA8BA,IAjCA,iBAkCA,GACA,KACA,EC3DO,eAAiC,+BACjC,eACP,SACA,YACA,QACA,SACA,EACO,eAGP,QAFA,KACA,KACA,IAAoB,WAAmB,KACvC,kBAEA,GADA,8BACA,CACA,OACA,IACA,QACA,CAEA,GADA,QACA,CACA,UACA,KACA,QACA,CACA,IACA,CAjBA,IAkBA,IAEA,OADA,UACA,CACA,EC7BA,GAA4B,SAAZ,EAShB,MARA,CADoB,GACpB,CADwB,MACxB,GAD4B,GAC5B,cACA,iCAAiD,IAAO,IAExD,aADA,eACA,2CACA,YAEA,QACA,GACA,qBACA,EACI,GAAsB,aAAhB,CACV,GADc,CACd,QADkB,IAAI,EACtB,OAD0B,QAC1B,mBACA,eACA,yBACA,IACA,8DACA,CACA,SAAoB,GAAM,gBAC1B,CACA,IACA,mCACA,QACA,CAAkB,mBAClB,CACA,QACA,EACA,GAAiC,cAAZ,IACrB,KADyB,CACzB,GAD6B,CAC7B,QADiC,CACjC,WAAqD,IAAQ,QAC7D,UACA,QACA,EAGA,qBACA,OACA,eACA,aACA,YACA,aACA,CACA,CACA,QACA,GAAyB,GAAW,uBAA6B,YAAc,YAAgB,CAAmB,EAAnB,GFiBxF,YACP,cEjBiC,EFiBjC,QACA,EElBiC,qBAA2B,oBAAsB,mBAClF,2BACA,WAEA,+CACA,EACA,CAAK,EACL,GFRO,YACP,MEOyB,CFPzB,KEO+B,QFP/B,yBACA,EEM+B,mBAAyB,uBAAyB,aAAiB,mBAAqB,EACvH,GFNO,YACP,MEKyB,CFLzB,MEKgC,OFLhC,KACA,EEIgC,sBAChC,OACA,YACA,mBAKA,OAHA,wCACA,UACS,EACT,CACA,CAAK,eACL,uBAMA,OALA,cACA,gBACA,wCACA,UACS,EACT,CACA,CAAK,EACL,GFvCO,YACP,MEsCyB,CFtCzB,OEsCiC,MFtCjC,MACA,EEqCiC,qBAA2B,WAAgB,aAG5E,kBAFA,8BACA,8BAEA,CAAK,EACL,GAAyB,GAAK,MAG9B,YAAmB,aAAyB,GAAM,cAAgB,YAAiB,kBAAoB,EACvG,GAAyB,GAAK,kBAAwB,aAAyB,GAAM,cAAiB,aAAiB,kBAAoB,EAC3I,mBFjBO,EEiBiC,OAAO,GAAU,IFhBzD,CADO,CEiByD,CAAP,KFhBzD,IEgB0E,CFhB1E,QEgB0E,CAAM,6BAChF,GAAsB,GACtB,IADsB,EAGtB,IACA,WAGA,WAEA,CAAK,SACL,eAAwC,wBAAwC,qBAChF,UACA,CAAK,SACL,GFzBO,YAAiC,MEyBf,CFzBe,IEyBV,SFzBU,KEyBV,kBAAwB,oBAAsB,aAAiB,kBAAoB,EACjH,CACA,qBACA,OACA,eACA,aACA,YACA,aACA,CACA,CACA,8BACA,EAAQ,GAAQ,IAChB,CADgB,CAChB,iCAIA,CAAC,eAED,gBADA,kCACA,CACC,aAAiB,qBAAuB,iBACzC,sCACA,MACA,oDAEA,QACA,CAAC,EACD,IACA,UACA,WACA,WACA,YACA,WACA,YACA,aACA,aACA,kBACA,sBAEA,OADA,YACA,CACA,CAAC,GAAI,EACL,MFpEO,YACP,SEmE6C,UFnE7C,EEmEyD,IFnEzD,6BACA,EEkEyD,YAAiB,yCAA6C,aAAiB,aAAyB,GAAM,IAAO,SAAP,CAAO,KAC9K,eACA,MACA,yDAEA,eACA,CAAC,EACM,wBACP,0BACA,8CAIA,CACA,2BAEA,eADA,6CACA,CACC,eACD,qDACA,MACA,YAA0B,IAE1B,SAIA,OAHA,sBACA,UACK,EACL,CACA,CAAC,iBACD,qCACA,MACA,mIAEA,kDACA,CAAC,EACD,oBACA,qDACA,CAAC,eAED,gBADA,8CACA,MACC,eAED,OADA,8CACA,YACA,CAAC,iBACD,mDACA,MACA,0DAEA,uBACA,CAAC,EACD,iBACO,iBACP,MAAkC,GAAO,eACzC,0BACA,CAAK,EACL,KACA,OACA,uBACA,sBACA,EAEA,MAA+B,GAAO,eACtC,0BACA,CAAK,EACL,KACA,OACA,uBACA,kBAIA,EACA,MACA,uBACA,kBACA,CAAC,EACM,uBACP,GAAQ,GAAO,GACf,CADe,MACf,MACA,aACA,4BACA,aACA,4BACA,cACA,4BACA,mBACA,4BACA,SACA,yCACA,CAGA,YACA,MACA,0CAEA,yBAEA,ECrOA,iBAEA,IADA,eACA,KACA,SACA,IAEA,uBAEA,eACA,GAAQ,GAAQ,eAChB,sDAEA,GAAQ,GAAQ,eAChB,sDAEA,GAAQ,GAAQ,iBAChB,uDAEA,CACO,qBACP,MACA,YAAoB,WAAiB,KACrC,WACA,GAAY,GAAK,GACjB,gBAEA,GAAiB,GAAK,IACtB,SACA,2BACA,UACA,UACA,UACA,IACA,KACA,aACA,UAEA,CACA,MAEA,OAGA,QACA,EACO,mBAEP,GADA,MACA,aACA,YAGA,QADA,IACA,IAAoB,aAAqB,KACzC,WACA,GAAY,GAAO,GAEnB,CAFmB,CAEnB,EADA,GACA,MAEA,GAAiB,GAAa,GAC9B,OAD8B,KAG9B,GAAiB,GAAK,IACtB,SACA,SACA,MACA,GAAiB,GAAK,IAEtB,GADA,eAEA,MAEA,SACA,2BACA,UACA,UACA,UACA,IACA,KACA,aACA,UAEA,CACA,CACA,CA/BA,IAgCA,gBAOA,GANQ,GAAO,GACf,eAEa,GAAa,IAC1B,MAD0B,EAC1B,OAEQ,GAAK,IACb,eACA,OACA,QACA,YACA,SAEA,CACA,GAAQ,GAAK,IACb,qBACA,UACA,sBACA,UACA,UACA,WACA,kBACA,OACA,YAEA,KAEA,aACA,oBAGA,CACA,CACA,QACA,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ACA,OACA,EACA,IAAW,SAAgB,EAC3B,uBACA,OACA,cACA,OACA,CACA,CAAG,CACH,iBACA,iBACA,CACA,aACA,OACA,EAEA,EACA,QAAU,0BACV,CACA,CACA,CCpHA,IAAI,GAAyB,GAAQ,IAAD,CAAsB,GAK1D,aAL0D,EAM1D,WACA,OAP0B,EAO1B,8BACA,IACA,OACA,eACA,aACA,QACA,0BACA,gBAAyB,GAAS,OAClC,WAAc,GAAS,CACvB,mBACA,qDACA,OACA,CAAK,CACL,EAAI,EACJ,UACA,QAVA,CAYA,CAAG,CACH,WACA,cAEA,CACA,CACA,QACA,WACA,MACA,yFACA,CAAE,CACF,eACA,MACA,QAAU,GAAM,EAChB,oCACA,+BACA,mBACA,EACA,qBACA,iCACA,qBACA,EAAK,qBACL,uBACA,aAA8B,0DAC9B,IAAQ,GAAQ,aAAoB,GAAS,CAC7C,GADgB,EAA6B,cAE7C,+DACA,CAAI,EACJ,SACA,uBACA,UACA,0EACA,CACA,QACA,CAAG,EACH,uCACA,YAA2B,GAAkB,YAC7C,GAD6C,GAC7C,CACA,OACA,YACA,sBAEA,MADA,gBACA,IACA,sDACA,IAIA,EAHA,mIACA,IAA2B,GAAQ,QAAqB,GAAsB,YAAc,GAAsB,WAAY,MAAY,YAA5D,EAAgE,EAAa,EAG3J,yBAAoE,GAAa,CAEjF,CACA,QACA,CAAK,CACL,YACA,MACA,wCAEA,CACA,CAAG,GACH,oBACA,MACA,gDACG,mBAEH,sBAAgC,GAAS,CACzC,mBACA,+CAAmD,yBAA6B,EAC7E,EACH,oDACA,yCAUA,MATA,CACA,cACA,oCACA,QACA,OACA,+BApHA,YACA,MACA,IACA,eACA,CAAG,SACH,UAAY,GAAS,CACrB,KADqB,cAErB,yCACA,OACA,CAAG,CACH,KAzBA,EA0BA,EAzBA,IACA,wBACA,IAAO,GAAQ,kCACf,4DACA,gFAAwG,kBAAyC,EAAI,IAAI,SAAa,cAAc,GACpL,QACA,CAAG,SACH,UAAY,GAAS,CACrB,mBACA,0CACA,OACA,CAAG,CACH,CAcA,EAwGA,GACA,gBACA,SACA,CAEA,CACA,EA+DA,IACA,GA/DA,CACA,WACA,MACA,4FACA,CAAE,CACF,eACA,QAAU,GAAM,EAChB,+BAAuC,GAAS,CAChD,KADgD,uBAEhD,2EACA,CAAG,EACH,kBACA,oBAGA,QAA0B,GAAkB,iBAC5C,OACA,YACA,QACA,YACA,mBACA,gBACA,WACA,CAAI,EACJ,eACA,gBACA,sBACA,gBACA,SACA,CACA,CACA,EACA,CACA,WACA,MACA,iGACA,CAAE,CACF,eACA,QAAU,GAAM,EAChB,+BAAuC,GAAS,CAChD,KADgD,uBAEhD,gFACA,CAAG,EACH,kBACA,QAEA,OACA,QACA,YACA,mBACA,gBACA,gBAAqB,GAAkB,gBACvC,CAAI,EACJ,eACA,YACA,gBACA,sBACA,gBACA,UAEA,CACA,EAKA,CAUA,qBACA,MAVA,YACA,+BACA,cACA,iCACA,WAAW,GAAS,CACpB,KADoB,yBAEpB,mEAA0E,8BAAgC,+BAC1G,CAAE,CACF,EAEA,OACA,uBACA,CAOA,4BACA,sCACA,CAIA,IAAI,GAAwB,GAAQ,IAAD,CAAuB,GAK1D,cAL0D,KAS1D,UACA,GAVyB,MAUzB,YAkCA,eACA,eACA,GAAM,GAAqB,gCAC3B,GAAM,GAAqB,KADA,EACA,yBAC3B,GAAM,GAAqB,KADA,EACA,0BAC3B,GAAM,GAAqB,IADA,GACA,sBAC3B,cAD2B,KAC3B,8BACA,eACA,4BACA,gBAAW,GAAc,KACzB,sBACA,iBACA,mBACA,OACA,EACA,6BAA4E,EAAS,IACrF,IACA,CAAI,CACJ,CAAG,CACH,0BACA,gBAAW,GAAc,KACzB,sBACA,iBACA,kBACA,QACA,EACA,4BAA4E,EAAQ,IACpF,IACA,CAAI,CACJ,CAAG,CACH,CAmBA,YAGA,IAFA,EACA,EACA,YAAU,GAAa,KACvB,iBA6HA,MAbA,EACA,EAhHA,sFACA,MAoHA,CACA,QALA,oBACA,IACA,GACA,CAAE,EAGF,UACA,QACA,CAvHA,mBA0HA,EA1HA,iBA2HA,MA3HA,EA2HA,EA1HA,YACA,OACA,2CA6HA,cACA,mBACA,gBAJA,cAIA,MAJA,cAKA,QACA,EAjIA,oBACA,CACA,EAAI,IACJ,WAAW,GAAS,EACpB,2CACA,yBACA,IACA,CACA,oCAAkC,EAAa,CAC/C,CAEA,UACA,uBACA,aAAU,GAAc,EACxB,8CAAmE,EAAa,CAChF,CACA,SACA,uBACA,aAAU,GAAc,EACxB,6CAAuD,EAAa,CACpE,CACA,WACA,uBACA,aAAU,GAAc,EACxB,+CAAwD,EAAa,CACrE,CAIA,gBACA,kCACA,kDACA,CAEA,oCACA,eAGA,OAFA,YACA,YACA,CACA,CAEA,iCACA,gBACA,CAIA,kBACA,+FACA,6BACA,CACA,oBAEA,MADA,4BACA,eACA,IACA,2BACA,EAAI,OACJ,wBAAiC,EAAa,IAC9C,GACA,CAAI,CACJ,CACA,CACA,qBAEA,MADA,4BACA,eACA,IACA,4BACA,EAAI,OACJ,wBAAiC,EAAa,IAC9C,GACA,CAAI,CACJ,CACA,CAaA,+BACA,gBACA,IACA,4BACA,EAAI,OACJ,8BACA,CACA,CACA,EAOA,eACA,gCACA,CAyDA,iBAEA,6BAKA,OANA,CAEA,gCACA,UACA,0BACA,EALA,CAOA,CAjCA,+CACA,yDAoCA,gBACA,eACA,WACA,gBA/BA,KAEA,wBAKA,OAJA,uBACA,IACA,YACA,EALA,CAOA,EAuBA,CAAuB,QACvB,0CAIA,OAHA,gBACA,yBACA,CAAG,CAEH,EAAI,MACJ,kBACA,CAAE,CACF,CAIA,OAAuB,GAAU,CAAG,MAAH,2GAAG,KAuDpC,UAtDA,WACA,uEACA,cACA,0DACA,CAAG,KAAQ,MACX,gBACA,YACA,qHACA,qEACA,6EACA,oEACA,kBACA,IACA,SACA,CAAO,SACP,wBACA,CACA,EAAK,SACL,IACA,IACA,GACA,CAAK,CACL,EAAK,eACL,IACA,GACA,CAAI,EACJ,QACA,CACA,OACA,IACA,kBACA,kBACA,aACA,mBACA,aACA,KAAY,UAAY,KACxB,8DACA,QACA,oBACA,+CACA,EAAQ,QACR,CAAO,SACP,WACA,CACA,0DACA,gBACA,CACA,cACA,+BACA,CACA,UACA,CACA,CACA,EACA,oDACA,CAAG,EAIH,GAA4B,GAAU,CAAG,MAAH,gHAAG,KAIzC,UAHA,cACA,iBACA,EACA,oDACA,CAAG,EAIH,GAAkC,GAAU,CAAG,MAAH,sHAAG,KAC/C,UAIA,WAHA,YACA,iBACA,EACA,oDACA,CAAG,EAIH,GAAiC,GAAU,CAAG,MAAH,qHAAG,KAC9C,WAMA,cACA,QACA,gBACA,IACA,yCACA,0CACA,MACA,mCACA,8BACA,gBAEA,6BACA,CAAK,aACL,YACA,CAAK,CACL,CAAK,SACL,YACA,CACA,CACA,gBACA,UACA,aACA,WACA,QACA,OACA,CAAM,EACN,KACA,aACA,YACA,KACA,oBACA,QACA,OACA,CAAK,CACL,CACA,gCACA,CACA,2BACA,iCACA,OACA,MACA,MACA,UACA,SACA,SACA,CACA,4BACA,CAAI,CACJ,CAAG,kDACH,CACA,2FACA,YACE,8BACF,6BACA,CAAE,+BACF,8BACA,CAAE,gCACF,+BACA,EACA,UAhEA,YACA,kBACA,qCACA,CACA,EA4DA,oDACA,CAAG,EAIH,GAAwB,GAAO,QAC/B,GAAmC,GAAO,QAC1C,GAAkC,GAAO,QACzC,eACA,uCACA,yBACA,eACA,KACA,4CACA,CAAE,CACF,CAOA,cAqBA,MApBA,kCACA,QAKA,EAJA,uBACA,iBAEA,EADA,yBACA,QAEA,QAGA,GAFA,iDACA,SACA,eACA,eACA,MACA,CACA,CAAI,SACJ,KACA,EAAI,OACJ,0BACA,CACA,EAAE,EACF,qBACA,CASA,cAuBA,MAtBA,kCACA,QAGA,EAFA,uBACA,iBAEA,2BACA,UACA,oBAA0C,EAC1C,QAGA,GAFA,iDACA,SACA,4BACA,QACA,sBACA,MACA,CACA,CAAI,SACJ,KACA,EAAI,OACJ,0BACA,CACA,EAAE,EACF,qBACA,CAIA,cACA,MACA,EAKA,OACA,QALA,oBACA,IACA,GACA,CAAE,EAGF,UACA,QACA,CACA,CAIA,OAAwB,GAAO,QAC/B,GAAmC,GAAO,QAC1C,GAAkC,GAAO,QA0JzC,eACA,gCACA,2BACA,eACA,KACA,4CACA,CAAG,CACH,cACA,qBACA,sBACA,UAGA,kBACA,CACA,CAAE,CACF,CAIA,OAAwB,GAAO,QAC/B,GAAmC,GAAO,QAC1C,GAAkC,GAAO,QACzC,sBAKA,iBACA,+BACA,CACA,cA8BA,MA7BA,kCACA,QAGA,EAFA,uBACA,iBAEA,WACA,WACA,uBACA,iBAEA,GADA,kDACA,IACA,SACA,QACA,CACA,yBACA,WACA,cACA,MACA,CAAK,SACL,KACA,EAAK,OACL,KACA,CACA,CAAI,SACJ,KACA,EAAI,OACJ,0BACA,CACA,EAAE,EACF,qBACA,CAIA,OAA4B,GAAU,CAAG,MAAH,gHAAG,KAUzC,cACA,cACA,0EACA,aACA,iDACA,OACA,QACA,MACA,CACA,CAAI,CACJ,CACA,qBACA,uBACA,CAAG,YACH,OACA,OACA,gBACA,wCACA,CAAI,CACJ,mBACA,oBACA,mCACA,QACA,OACA,CAAK,8BACL,CAAI,CACJ,kBACA,oBACA,gEACA,CACA,CAAG,SACH,CACA,UAzCA,YACA,cACA,2EAAwF,IAAI,EAC5F,sCACA,4CACA,mCACA,CACA,+CACA,EAiCA,oDACA,CAAG,EAIH,GAAmC,GAAO,QAC1C,GAAkC,GAAO,QACzC,GAAwB,GAAO,QAC/B,GAA6B,GAAO,QAWpC,SAAS,GAAS,GAClB,OAAS,GAAQ,IAAW,GAAU,WADpB,EACD,IAAqB,yEACtC,CACA,2BACA,eACA,iDACA,WACA,CACA,EAIA,cA+JA,MA9JA,gCACA,SAAU,GAAO,EACjB,IAEA,EAnPA,WACA,aACA,OAIA,KAIA,UACA,KACA,cACA,wBACA,eApEA,KACA,gCACA,SACA,aACA,SACA,QACA,CA4BA,OACA,KA5BA,WACA,aACA,YAEA,EADA,OACA,SACA,WACA,SACA,GACA,gBACA,cACK,EACL,IACA,MACA,CACA,SACA,GACA,eACA,cACI,CACJ,CAAG,YACH,GACA,eACA,OACA,CAAI,EACJ,GACA,CAAG,EACH,EAGA,kBACA,MACA,IACA,2CACA,CACA,CACA,EA0BA,MACA,kBACA,iBACA,YACA,cACA,KACA,cACA,YACA,KACA,aACA,cACA,WAEA,CACA,YACA,CAAG,EACH,SACA,QACA,CACA,OACA,OACA,UACA,WACA,UACA,KACA,eACA,IAGA,CACA,CAAG,CACH,2BACA,2BACA,IACA,uBACA,kDAiBA,IAhBA,YACA,SAAwD,WACxD,SACA,SAWA,GAVA,uDACA,IACA,iBACA,CAAS,SACT,SACA,CACA,CAAO,GACP,WACA,UACA,YACA,kCACA,CAAM,GACN,yBACA,gBAEA,IADA,+BACA,aACA,mBACA,iBACA,YACA,cACA,SACA,KACA,2BAEA,CACA,MACA,CACA,CAAM,SACN,KACA,EAAM,OACN,0BACA,CACA,CAAI,GAEJ,CACA,IA2JA,cACA,UACA,OAEA,OADA,SACA,CACA,CA8FA,qBACA,0CACA,IACA,CACA,oBAjGA,EAEA,EA0CA,EAsDA,GAAO,GAAS,UAjIhB,GA+BA,EAkGgB,EAjGhB,GACA,WAgGgB,IAhGhB,eACA,QA+FgB,GA9FhB,IACA,YACA,KACA,gCACA,QACA,KAyFgB,CAxFhB,CAAQ,CACR,CAAO,EACP,qBAEA,IACA,4BACA,OACA,EA9CA,EAgDA,IA+EgB,GA7EhB,CAAO,SACP,OACA,gCACA,QACA,KAyEgB,CAxEhB,CAAO,EACP,MACA,EAxDA,EA0DA,yCACA,QACA,KAkEgB,CAjEhB,CAAQ,EACR,CAEA,CAAK,EACL,YACA,8BACA,KA2DgB,CAChB,GAAO,GAAe,IACtB,QADsB,KACtB,wDACA,OAnIA,EAyEA,GACA,8BACA,IACA,IAsBA,IAtBA,mBACA,QAsDA,GArDA,aACA,aAoDA,IAnDA,IACA,QACA,oCACA,WACA,MACA,EAlFA,EAoFA,UA4CA,GA3CA,CACA,KACA,CACA,MACA,EAxFA,EA0FA,UAqCA,GApCA,CAEA,CAAQ,SAER,+BACA,QACA,KA8BA,CA7BA,CAAQ,EACR,MACA,EAnGA,EAqGA,yCACA,QACA,KAuBA,CAtBA,CAAS,EACT,CAEA,CAAO,SACP,KACA,EAAO,OACP,0BACA,CACA,CAAK,EACL,YACA,8BACA,IAWA,CAEA,WACA,CACA,gBACA,yBACA,aACA,aApHA,EAoHA,cACA,GA9IA,EA8IQ,kBA9IR,oBA8IqB,KA9IrB,MA8IqB,eACrB,SACA,KACA,kCACA,oBACA,OACA,OACA,QACA,CACA,KA9HA,EA+HA,gBACA,CACA,iBAEA,SACA,8CACA,SACA,OACA,8BACA,SACA,KAEA,IACA,QAFA,EAEA,sBAA8E,0CAA+G,MAC7L,oBACA,CACA,CACA,CAAI,SACJ,KACA,GACA,EAAI,OACJ,IACA,oDACA,EAAK,OACL,YACA,CACA,CACA,EAAE,EACF,qBACA,CAwPA,OAAqC,GAAU,CAAG,MAAH,yHAAG,KAClD,UAsBA,WArBA,YACA,QAAY,MACZ,gBACA,YAEI,CACJ,QACA,YAJA,0BACA,UACA,CAAI,EAEJ,EACA,CACA,CACA,+EACA,YACG,oBACH,6BACA,CAAG,kDACH,kBACA,mBACA,EAAG,oDACH,+BACA,EAAG,EACH,EACA,oDACA,CAAG,EAIH,GAA2B,GAAO,QAClC,GAAiC,GAAO,QACxC,GAAkC,GAAO,QACzC,GAAoC,GAAO,QAC3C,GAAsB,GAAO,QAyP7B,QACA,mCACA,yCACA,yBACA,uBACA,EAIA,OAAgC,GAAO,QACnC,GAAuB,GAAQ,IAAD,CAAsB,GACxD,aADwD,EAExD,OAAQ,GAAG,MAFa,OAEb,cACX,OACA,CAAE,EACF,CACA,QACA,kBACA,cACA,sBAEA,IACA,kBACA,qBACA,2BACA,EACA,eACA,UACA,QAAS,mEAAmE,EAC5E,IAAkC,SnGhnDlC,GAEA,KmG8mDmD,CnG9mDnD,SADA,wBACA,QACA,gBAAwB,GAAQ,eAChC,KADgC,OAEhC,qFAEA,GADgB,EAA0B,eAE1C,CACA,UACA,CAAE,UACF,eACA,uBAEA,EmGkmDmD,OACnD,KACA,8BACA,6BACA,MACA,OACA,4CACA,OACA,SACA,kBACA,uBAGG,MAHH,oBACA,MACA,iDACG,wDACH,EAAE,OACF,aACA,sFAKA,8FACA,+BAGA,OADA,uBACA,CAAU,SACV,CAiCA,qBACA,EAAM,GAAQ,OACT,GAAe,IACpB,MAFc,CAEd,CADoB,KACpB,SAA8B,KAAS,sBAA2B,IAClE,CACA,EAFuC,QAA0C,KAEjF,UACA,YAuTA,EAtTA,WAAS,SAAc,EACvB,wCACA,iBACA,iBACA,+CAAwD,WAAa,EACrE,qFACA,wDACA,QAAyB,GAAG,UAC5B,IACA,CAF4B,KAE5B,kBACA,MACA,gCACA,SACA,4BACA,sBACA,KACA,CAAI,GACA,SACJ,OAAW,GAAuB,UAClC,CACA,CAAE,EACF,EAAoB,GAAG,CAHW,IAIlC,MACA,IAFuB,EAEvB,CACA,sBACA,KACA,YACI,CACJ,WACA,WACA,aACA,QACA,CAAI,CACJ,iBACA,2EACA,IACA,kCAA4C,EAAM,EAClD,aACM,SACN,GAAe,GAAuB,WAEtC,CACA,CACA,CAAE,EACF,UAIA,qDACA,gDACA,IACA,WACA,aACA,+BAAoD,GAAS,CAC7D,KAD6D,cAE7D,+CACA,CAAG,EAEH,+BAAmD,GAAS,CAC5D,KAD4D,GAC5D,+DACA,kBACA,CAAG,CACH,mBACA,4BACA,kBACA,IACA,yBACA,gBAAyB,GAAS,CAClC,KADkC,YAElC,uCAA6C,OAAU,GAClD,EACL,gDAAsE,GAAS,CAC/E,KAD+E,uBAE/E,uBAA6B,SAAW,cAAc,aAAgB,qBAAqB,OAAU,GAChG,EACL,iCAEA,wBAAqC,GAAS,CAC9C,KAD8C,cAE9C,yCACA,CAAM,EAEN,eACA,YACA,0BACA,cACA,iBACA,oBACK,EACL,oBAAsB,EAAM,EACvB,SACL,UACA,MAAkB,GAAuB,GACzC,aASA,IAVyC,GAEzC,+BACA,QACA,YACA,QACA,yBACA,oEACA,UACK,EACL,WAEA,CAAG,EACH,mBACA,eACA,iBACA,eACA,cACA,eACA,aAEA,GADA,yCACA,oCAA8F,GAAS,CACvG,KADuG,yBAEvG,4FACA,CAAM,EACN,SAA2B,MAAO,GAAa,CAC/C,SAD+C,IAE/C,qBACA,QACA,iBACA,YACA,YACM,GAAI,CAAI,QAAU,cACxB,MACA,yBACA,OACA,4BACA,gBACA,UACA,sBACM,EACN,mCAAwC,GAAqB,OAC7D,WAD6D,IAC7D,CACA,SACA,CAAM,CACN,CACA,oBACA,MAAsB,GAAG,IACzB,QACA,EAIA,CANyB,EAMF,YAAiC,QAI3B,GAAY,CAJe,CAIf,MAAgB,CAAhB,EAAyC,4BAJ1B,OAA+C,GAAS,CAChH,KADgH,GAChH,gBAAgC,QAAW,kDAC3C,4BACA,CAAO,GAPP,OAA4D,GAAS,CACrE,KADqE,uBAErE,sDACA,CAAO,IAQP,EAveA,YACA,cACA,cAAS,EAAY,EAAQ,EAAG,EAChC,GACA,uDACA,+DACA,EACA,0BACA,sNAAmP,cAAiB,qCAAqC,6BAAkC,GAI3U,aAkDA,OAjDA,iCAYA,EACA,CAZA,OACA,MArBA,YAsBA,sBACA,EACA,aACA,4BA1yBA,cACA,+BACA,EAwyBA,GACA,QACA,eACA,EAAI,EACJ,uEA70BA,KACA,+BACA,EA20BA,GAA+H,+BAAmC,EAClK,sEAGA,SACA,KAEA,IACA,QlGtqCA,EkGoqCA,EAEA,sBAA6E,0CAA6G,MAG1L,GAFA,cAEA,IACA,MACA,MA5CA,OA6CA,OACA,EACA,QACA,CACA,GAA+B,EAA/B,EAAc,MlG/qCd,WkG+qC+B,ClG/qC/B,UkG+qC+B,CAC/B,QACA,SACA,EAAQ,CAAI,SACZ,+BACA,QACA,OACA,MAEA,CACA,CAAK,SACL,KACA,GACA,EAAK,OACL,IACA,oDACA,EAAM,OACN,YACA,CACA,CACA,EAAG,EACH,qBACA,CAIA,aAmBA,OAlBA,6BACA,IACA,+CA5DA,8BACA,MA4DA,MACA,MA7EA,SA8EA,OACA,CACA,CAAK,aACL,IACA,GAj1CQ,GAi1CR,IAj1CgB,sBAi1ChB,OACA,MAAkB,GAAuB,GACzC,iBADyC,CACzC,wCAAmK,GAAO,QAC1K,OACA,MAxFA,mBAyFA,yBACA,CACA,CACA,EAAG,EACH,qBACA,CAEA,UAzBA,WACA,8BACA,KAuBA,iCAAiD,eACjD,iCAAqD,QAAY;AAAA,GACjE,+BAAmD,OAAW;AAAA,GAC9D,2BAA+C,KAAS;AAAA,GACxD,8BAAkD,UAAc;AAAA,GAChE,iBACA,EAAI,qCACJ,EAuYA,GAA0C,GAAoB,YAAc,GAAoB,WAAY,UAAiB,EAC7H,IAD8D,CAC9D,EACA,YAFgG,CAEhG,kCACA,eACA,UACA,MAAuB,GAAuB,SAC9C,WAD8C,IAC9C,aACA,wBACA,0EAiBA,OAhBA,+BACA,QACA,OACA,QACA,yBACA,UACA,MACA,CAAQ,EACa,GAAa,CAClC,SADkC,IAElC,qBACA,QACA,QACA,OACA,MACA,CAAQ,CAER,CACA,CAAM,GACN,6CACA,UACA,yBACA,OACA,4BACA,UACA,UACA,sBACA,CAAM,EACN,uBACA,UACA,gBACM,CACN,CACA,CACA,CACA,mCACA,yCACA,qCACA,UACA,yBACA,OACA,4BACA,UACA,UACA,sBACA,CAAI,EACJ,WA1zBA,GACA,kBAzKA,GACA,+BACA,EAuKA,IACA,WAAS,GAAY,EAKrB,OAJA,yCAAkE,eAClE,qBACA,eACA,EAAI,IACJ,mCAAiD,eACjD,sBACA,iCACA,EAAI,qCACJ,EA+yBA,GAA0C,GAAoB,YAAc,GAAoB,WAAY,YAAmB,EAC/H,EAD8D,OAC9D,IACA,IAFgG,CAEhG,gBACA,iBACA,aACA,MACA,QACA,OAAe,MAAO,GAAa,CACnC,SADmC,IAEnC,qBACA,QACA,iBACA,YACA,mEACA,CAAO,EACP,CAKA,MAAsB,GAAY,QAAgB,CAAhB,EAAyC,6CAC3E,OAAc,wBAA0B,OAAgB,EACxD,CAAK,EACL,yCACA,YACA,OACA,gCACA,MAAa,GAAuB,GACpC,YACA,KAFoC,CAEpC,OACA,yBACA,UACA,gDACA,CAAM,CACN,CAAK,CACL,eACA,QACA,wCACA,EAAmB,GAAuB,SAC1C,WAD0C,IAC1C,aACA,wBACA,0EASA,OARmB,GAAa,CAChC,SACA,yBACA,QACA,QACA,OACA,MACA,CAAM,CAEN,CACA,CAAI,GACJ,uBACA,UACA,eACA,CAAI,CACJ,CAOA,yCACA,qCACA,kBACA,IACA,gBAA8C,GAAS,CACvD,KADuD,yBAEvD,4FACA,CAAI,UACJ,CACA,CAAG,EACH,oBACA,iBACA,MACA,QACA,OAAa,MAAO,GAAa,CACjC,SADiC,IAEjC,qBACA,QACA,iBACA,YACA,mEACA,CAAK,EACL,CACA,OAAY,QAAU,aACtB,CAAG,EACH,kCACA,MACA,yBACA,OACA,4BACA,oBACA,SACA,SACA,C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BACA,eACA,4BACA,QAEA,CACA,QACA,gICJW,uBACX,cACA,yJACA,CACA,kBACA,WACA,CACA,CACO,QACP,eACA,oBACA,WACA,UACA,YACA,aACA,UACA,iBACA,SACA,OAA+B,GAAc,WAC7C,CACA,CACA,CAAS,CACT,CACA,CACA,yCAQO,gBACP,MARO,YACP,kBACA,kCAGA,EAFA,IAKA,GACA,gBACA,SAKA,UAA2B,IAAe,IAC1C,aAEA,eACA,SAGA,eACA,SAEA,QACA,CACO,QACP,iBACA,UAAoC,IAAe,cACnD,wBACA,SAEA,SACA,UACA,OAEA,MAA8B,GAAgB,YAM9C,GALA,GACA,0BAGA,EADA,WACA,yBACA,GACA,SACA,gBACA,UAA4C,IAAe,cAC3D,SACA,oBACA,CACA,IACA,CACA,EACA,eACA,WACA,UAEA,OACA,QAGA,cACA,sBACA,4CACA,IAEA,OADA,eACA,CACA,EAA8B,OAC9B,GACA,CACA,CACA,WACA,sBACA,4CACA,IAEA,OADA,YACA,CACA,EAA8B,OAC9B,GACA,CACA,CACA,SACA,OAA+B,GAAc,WAC7C,CACA,CACA,CAAS,EACT,QACA,CACA,CACO,cACP,mBACA,WACA,UACA,aACA,sBAGA,OAFA,sBACA,eACA,CACA,CACA,WACA,sBAGA,OAFA,mBACA,YACA,CACA,CACA,SACA,OAA2B,GAAc,WACzC,CACA,CACA,CAAK,EACL,QACA,CACO,cACP,wBACA,CAOA,cAEA,MADyB,QAAuB,KAGhD,WAEA,+BC5JE,iBAAsE,yDCHjE,IAAI,EAAe,YAO1B,OANA,sBACA,wBACA,gBACA,gBACA,sBACA,gBACA,CACA,CAAC,GAAG,EACO,EAAoB,YAM/B,OALA,KAD+B,KAC/B,YACA,wBACA,gBACA,gBACA,gBACA,CACA,CAAC,GAAG,kBCZJ,gBACA,GACA,IACA,IACA,IACA,IACA,EAEA,gBACA,GACA,GACA,IACA,IACA,IACA,EAIA,gBACA,GACA,GACA,IACA,IACA,GACA,IACA,GACA,EAEA,gBACA,GACA,GACA,GACA,IACA,IACA,IACA,GACA,EAEA,gBACA,GACA,GACA,IACA,IACA,IACA,IACA,GACA,EAEA,gBACA,GACA,GACA,GACA,IACA,IACA,IACA,GACA,GACA,GACA,IACA,IACA,IACA,IACA,GACA,iBCpDA,kFIFAE,EAAOnR,OAAO,CALLvgB,EAAQ,IAAoC,aAArCA,sFCCL,cACX,kBACA,iCAIA,aAHA,oBACA,EACA,CAEA,aACA,oBACA,iBAEA,eAGA,QACA,CAUU,cACV,IAEA,EACA,EACA,EACA,EACA,EANA,KACA,IAMA,aACA,yCACA,KAEA,kBAMA,kBAGA,IAFA,IACA,KACA,KAEA,SADA,gBACA,CAMA,IAJA,IACA,KACA,IACA,IACA,YAbA,MADA,iBACA,EAAsC,IAAtC,GAAsC,SActC,IAGA,gCAEA,KAEA,IACA,yBACA,KAIA,KAEA,EAAc,IACd,IAGA,oBACA,+BAEA,CACA,QACA,CAOW,cACX,SACA,KACA,KACA,2BACA,gCAIA,gBACA,0BAEA,OAIA,QACA,CAGW,cACX,IACA,iCACA,CAAM,SACN,uDAAmE,UAAY,+FAC/E,OACA,CAAS,uBACT,YACA,cACA,eACA,CAAS,CACT,CACA,CAIW,cAKX,YAJA,CACQ,IAAuB,CACvB,GAA+B,CACvC,CAEA,0BACA,6BAGA,WACA,+BC7IA,qCAA6C,CAAE,SAAa,EAAC,EAC7D,eAAuB,QACvB,MAAkB,EAAQ,IAAW,EACrC,WADyB,MACF,EAAK,gCAAiC,UAAkB,+FCE/E,kBAaA,OAZA,2CACA,uBACA,yBACA,2CACA,6BACA,6EACA,iDACA,yCACA,uCACA,2DACA,mDACA,mCACA,CACA,CAAC,MAAqB,EACtB,cAGA,OAFA,yEACA,iDACA,CACA,CAAC,MAAyB,EAC1B,cAKA,OAJA,mDACA,mCACA,+DACA,2CACA,CACA,CAAC,MAAqB,EACtB,cAgCA,OA/BA,2CACA,yCACA,2DACA,iEACA,+DACA,6DACA,iEACA,6DACA,iEACA,qDACA,6CACA,iCACA,iCACA,yCACA,iDACA,2CACA,uDACA,yDACA,mDACA,yEACA,uDACA,6CACA,2CACA,uDACA,uCACA,+CAEA,gBACA,0BACA,4BACA,gCACA,CACA,CAAC,MAAyB,EAC1B,cAEA,OADA,wCACA,CACA,CAAC,MAAsB,EACvB,cAMA,OALA,iDACA,yCACA,yCACA,yCACA,6CACA,CACA,CAAC,MAAiB,EAClB,cAKA,OAJA,4CACA,4DACA,0CACA,0BACA,CACA,CAAC,MAAoB,EACrB,cAEA,OADA,qCACA,CACA,CAAC,MAAiB,EAClB,cAEA,OADA,+BACA,CACA,CAAC,MAAe,EAChB,cAEA,OADA,gDACA,CACA,CAAC,MAAgC,EACjC,cAGA,OAFA,sDACA,sDACA,CACA,CAAC,MAA0B,EAC3B,cAEA,OADA,+BACA,CACA,CAAC,MAAqB,EAEf,OACP,qBACA,2BACA,4BACA,wBACA,kBACA,0BACA,wBACA,kBACA,mCACA,mCACA,mCACA,qCACA,oCACA,uCACA,+BACA,wCACA,CAGO,GACP,oCACA,qCACA,wCACA,wBClIA,qBACA,YACA,wFAGA,yMCPO,aACA,SAEA,2BACA,wCACA,kBACA,cACA,iBACA,SAEA,UACA,UAEA,sBACA,4BACA,gCAIA,MACA,MAEA,UAEA,UAIA,aA6CP,GAGA,gBAIA,4BAGA,0BAGA,+BAGA,mBAGA,mBAGA,wBAGA,wBAGA,uBAGA,oCAGA,oCAGA,8BAGA,6BACA,EACA,EACA,KACA,OACA,cACA,wBACA,gBACA,CACA,YACA,wBACA,gBACA,aACA,aACA,CACA,eAEA,UACA,UACA,CACA,YACA,sBACA,kBACA,CACA,SACA,wBACA,gBACA,sBACA,kBACA,SACA,aACA,aACA,CACA,UAEA,wBACA,sBACA,kBACA,gBACA,EAEA,8DCzJA,OACA,YACA,EAEA,EAAgC,YAAhC,OAAqB,OAAW,CAAkB,OAAW,MAI7D,EAAoE,aAqBzD,EArBY,MAA6B,CAqBzC,KACX,sBAkBA,EAjBA,QAmBA,CACA,CAxCA,EACA,IACA,IACA,YACA,EAAM,OACN,cACA,CACA,CAAC,yBCnBD,wDCAA,oFCAO,kBAkBP,OAfA,gBAGA,wBAIA,sBAIA,wBAGA,gBACA,CACA,CAAC,GAAG,+BCdG,SAAS8iB,EAA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ACtH,aACA,cACA,eACA,CAA6B,EAE7B,+BACA,KAEA,kBAEA,kBACA,yEAAyG,GAAU,oEACnH,aACA,cACA,eACA,CAA6B,EAE7B,KAEA,mBAEA,sBACA,6BACA,EAA8C,IAAc,CAK5D,CAsBA,GArBA,WACA,uBAGkB,wBAClB,IACA,mCACkB,GAClB,IACA,kBACkB,GAClB,IACA,oBAGA,eACA,iBAAqF,IAAc,GAdnG,EAAsC,IAAc,CACpD,gCAec,GACd,kBAA6C,GAAgB,EAI7D,yBACA,IAGA,mBAGA,SACA,2BAKA,OAJA,IACA,YACA,QAE+B,OAAkB,+BAEzB,QAAyB,4BAAkD,GAAO,EAAE,QAAgB,EAK5H,WACA,gBAEA,CACA,8BAEA,kBAAoB,GAAmB,EACvC,kFACA,uDACA,IACA,mCACA,CAAkB,SAClB,mDACA,CAEA,sBACA,mBACA,4BACA,eACA,OACA,QACA,cACA,UACA,YACA,YACA,SACA,OACA,WACA,WACA,iBACA,SACA,YAEA,MACA,SACA,CACA,CACA,MACA,QACA,GACA,wBAEA,eAEA,UAEA,sBACA,EAAkB,UAClB,YAA4B,wBAAuC,EACnE,GACA,KACA,UACA,iBACA,CACA,CAEA,OACA,KACA,MACA,yBACA,mBACA,UACA,CACA,EACA,6BAYA,GAXA,OACA,KACA,QACA,MACA,iBACA,mCACA,eACA,gBACA,sBACA,CAAyB,EAEzB,wEACA,SAAwE,IAAc,CAAG,IAAc,GACvG,4BAGA,4BACA,GACA,gDACA,KAAsC,EAAM,2BAC5C,gBACA,WAgBA,OAZA,eACA,KAAsC,IAAe,OACrD,OACA,YACA,CAA6B,EAC7B,cACA,WACA,WACA,MACA,CAA6B,EAC7B,UAEA,gBACA,kBACA,gBACA,wBAC6B,CAC7B,CAA0B,IAK1B,MAAuD,EAAa,GA2BpE,OAvBA,CAJoE,CAIpE,6BACA,MACA,MAAmD,EAAM,QACzD,GACA,gDACA,0BACA,gBACA,UAEA,2DACA,GACA,eACA,KAA8C,IAAe,OAC7D,OACA,YACA,CAAqC,EACrC,cACA,WACA,WACA,MACA,CAAqC,CAErC,CAA6B,qEAC7B,CACA,CACA,CAIA,OADA,UACA,CACA,CAAiB,YAEjB,MADA,IACA,CACA,CAAiB,CACjB,EAEA,KACA,KACA,SACA,MAKA,GAJA,8DACA,oCACA,MAEA,OACA,kBACA,iDACA,KAA8B,IAAoB,OAClD,aACA,WACA,WACA,OACA,+BACqB,EAerB,GAdA,GAIA,yBACA,MAAkC,QAA6B,GAG/D,EACA,UAGA,2CAEA,yCAAuF,IAAe,OAGtG,6BACA,SAC0B,CAC1B,eACA,0BACA,2BACA,4BACA,2BACA,kBACA,gBACA,wBACA,CAAyC,eACzC,0BACA,mCACqC,EAGrC,uBACA,yBACA,CAEA,eAGA,CACA,MACA,GACA,KACA,QACA,MACA,cACA,0BACA,eACA,qBACA,uCACA,CAAyB,EAEzB,mBAAkD,EAAM,uBACxD,kBACA,gBACqB,EAIrB,OAHA,+BACA,YACqB,EACrB,CACA,CACA,CACA,gDACA,UAAwB,GAAQ,EAGhC,GADA,eACA,eAEA,2BAKA,OAJA,IACA,YACA,QAE+B,OAAkB,+BAEzB,QAAyB,uBAA6C,GAAO,EAAE,QAAgB,GAGvH,iBACA,MAAwB,MAAY,EACpC,gEACA,oBAEA,2BACA,MAAmC,OAAkB,+BAEzB,QAAyB,4BAAkD,GAAO,EAAE,QAAgB,EAGhI,kCACA,2BAEA,CACA,gBACA,CAIA,UAgDA,cAhDA,EACA,OACA,2BACA,8BACA,MACA,cACA,4BACA,kBACA,gBACA,wBACqB,CACrB,CASA,cAIA,KAAsB,GAsBtB,MArBA,IADmC,CACnC,eACA,WACA,OACA,2BACA,kBACA,gBACA,wBAEA,CAAiB,eACjB,MAGA,8CAGA,gCACiB,EAGjB,YAA8C,EAC9C,0BACA,eACA,CAGA,CAHc,EAId,KACA,IACA,cACA,EAAc,OACd,GACA,WAEA,CAEA,QACA,EASA,OAJA,mBACA,6BACA,uBACA,iBACA,CACA,EAUA,IACA,oHCrqBA,iBANA,4BAAuC,YACvC,8BAAyC,cACzC,GAAqB,SAAN,GAAM,CAAoB,OAAO,GAAM,OACtD,uCACA,IAIO,cAEP,EAAe,gBAER,UAF6C,CAE7C,CAF8C,EAG9C,UACA,wCCpBP,qCAA6C,CAAE,SAAa,CAM5D,CAN6D,MAM7D,gBACA,eACA,iBACA,2BACA,uBACA,iBACA,gBACA,CACA,CACA,SAAe,+RCfK,gBAAb,IACM,EADA,IACO,YCcP,EDdO,EADA,ECgBpB,cACA,EAFyB,IAEzB,qBACA,YAAoB,WAAmB,IACvC,qBAEA,QACA,EACO,MACP,OACA,0BACA,GAAkB,EAAO,WAEzB,OAFyB,IAEzB,+CACA,IACA,OAAe,EAAY,EAC3B,CACA,SACA,QAH2B,QAG3B,oDACA,CACA,CCpCO,uBACP,kBACA,wBACA,CACA,eACA,MACA,SACA,6BACA,gCACA,sEACA,CACA,CAgCO,MAAM,UAAgB,EAC7B,WAD6B,EAC7B,CACA,oBACA,kCACA,CACA,kBACA,8BACA,CACA,CAyDO,kBACP,cACA,oBACA,4BACA,CACA,kBACA,wBACA,CACA,CACO,kBACP,cACA,oBACA,qCACA,8DACA,CACA,kBACA,gCACA,CACA,CACO,kBACP,cACA,oBACA,4CACA,mEACA,CACA,kBACA,uCACA,CACA,CACA,2BACO,YACP,cACA,oBACA,6BACA,gCACA,CACA,kBACA,wBACA,CACA,CCnJA,MAAe,MAAM,CCCN,CDDO,CCCD,qBAAsB,Ge0H3C,Of1HkD,EAAC,Ge0HnD,IACA,QACA,UACA,4EAEA,cAAY,eAAuB,SA7HnC,GACA,MACA,EACA,cACA,UACA,cACA,YACA,YACA,YACA,GAAkC,wBAA2B,gBAAkB,GAC/E,oBACA,KACA,qBACA,oBACA,oBACA,UAA8B,EAAgB,GAAI,OAAS,WAAb,mCAAa,EAC3D,eACA,cACA,cACA,gBACA,gBACA,gBACA,GAAkC,gBAClC,wBACA,KACA,cACA,aACA,aACA,GAAkC,eAClC,0BACA,KACA,0BACA,yBACA,yBACA,GAAkC,eAClC,iBACA,KACA,SACA,UAA8B,EAAgB,+DAC9C,CACA,KAEA,WACA,cACA,YACA,YACA,YACA,GAAkC,2BAA8B,gBAAkB,GAClF,0BACA,KACA,aACA,YACA,YACA,GAAkC,qCAAwC,gBAAkB,GAC5F,0BACA,KACA,gBACA,mBACA,mBACA,mBACA,GACA,gBACA,YAAqC,gCAAqC,GAE1E,oDACA,KACA,SACA,UAA8B,EAAgB,+DAC9C,CACA,KAEA,UACA,cACA,YACA,GAAkC,iCAClC,0BACA,KACA,aACA,GAAkC,iCAClC,0BACA,KACA,aACA,GAAkC,iCAClC,0BACA,KACA,eACA,qBACA,qBACA,qBACA,GAAkC,8BAClC,wBACA,KACA,SACA,UAA8B,EAAgB,+DAC9C,CACA,KAEA,WACA,cACA,YACA,GAAkC,YAClC,0BACA,KACA,eACA,qBACA,qBACA,qBACA,GAAkC,YAClC,wBACA,KACA,SACA,UAA8B,EAAgB,+DAC9C,CACA,KAEA,SACA,UAAsB,EAAgB,8DACtC,CACA,iBAAa,cACb,EAMmC,GACnC,GACA,EACA,mBACA,wBACA,CACA,qBACA,OAAe,EAAM,uBAAyB,EAAS,WAEvD,OAAsB,MAGtB,OAFA,aACA,aACW,EAAM,8BACjB,EC1Ie,SAAS,EAAQ,GAChC,aADgC,OAChC,GAHA,OAGA,yDACA,SAEA,mCACA,SAEA,QACA,sCACA,2BAEA,mCACA,CCQO,eAAe,EAAS,OAC/B,MACA,CAF+B,EAE/B,CAAS,EAAQ,GACjB,aADiB,GACjB,yBAGA,OADA,aACA,OACA,UACA,8BACA,2DAGA,GADA,wBACA,EACA,OAAuB,EAAW,CAAG,OAAH,EAAG,yBAAyE,EAE9G,OAAmB,EAAe,SAClC,MACA,kBACA,UAA0B,EAAgB,qEAE1C,UACA,UACA,OFiGe,EEjGe,CAAG,EFiGb,CEjGa,IAAH,EAAG,EAAa,CAC9C,SACA,UAAsB,EAAgB,+CACtC,CACA,CWxCwB,SmBJxB,cACA,0BACA,wBAAgC,GAAa,oBAE7C,EEOO,cACP,UACA,oBACA,uBACA,eACA,CACA,cACA,OAAW,EAAQ,EACnB,CAOO,QACP,KATmB,OASnB,GAEA,GADA,yBACA,MACA,UAAsB,EAAW,6BAEjC,YAZA,kBACA,mCACA,mBAEA,6BACA,EAOA,EACA,CACA,kBACA,QAAgB,SAAW,CAAI,iCAC/B,EAtCA,YACA,yCACA,SACA,SACA,WACA,UACA,UACA,UACA,WACA,SACA,UAAsB,EAAgB,iDACtC,CACA,EA0BA,GACA,6BACA,gBAgBA,GAfA,uBACA,cAEA,2BACA,cAEA,2BACA,kBAEA,6BACA,iCAEA,gBACA,uCAEA,EACA,UACA,YACA,kBACA,KACA,cACA,sBACA,KACA,aACA,kBACA,KACA,aACA,kBAIA,QACA,CAAS,EACT,CAAgB,cAAiB,EACjC,SACA,UAAsB,EAEtB,UACA,KAHuC,CAGvC,IAA8B,EAC9B,SAAoB,GAAU,UADwB,CAEtD,0CACA,eACA,IACA,oBACA,CACA,SACA,QACA,CAEA,EACA,CACA,CACA,0BACA,CACA,CACA,wBACA,0BAAsD,SACtD,kBACA,YAA0B,EAAS,CAAG,YAAmB,CAAtB,GACnC,8CACA,UAAsB,EAAW,+CAEjC,OACA,CACA,YC3GA,qBAGA,IAFA,EACA,EACA,IACA,sCACA,sBACA,kBACA,KACA,SACA,CAAS,KAET,0BACA,yBACA,kBACA,kBACK,YACL,KACA,UAAsB,CACtB,QACA,CAAK,CAF4B,CAKjC,GAFA,YACA,gBACA,eACA,UAAkB,EAAS,2DAE3B,IACA,qBACA,CACA,SACA,UAAkB,EAAS,6DAC3B,CACA,gBUhCA,gBACA,wBACA,kCACA,6BACA,wBACA,kCAIA,cACA,+CACA,kBACA,oBACA,OAA6B,kDAA4F,EAEzH,QACA,EACA,gCAAmG,GAKnG,oBAAuG,EAAvG,eAAyE,sBAA8B,EACvG,EACA,EAGA,EArBA,mBACA,6BAA2D,YAAa,sBACxE,EAmBA,CACA,wEAEA,QAIA,cACA,sBACA,iDAMA,IAJA,SAEA,GADA,OACA,UACA,IACA,aACA,uBACA,UACA,MAEA,kBAAmC,KACnC,UACA,gBACU,QACV,kBAAoC,SACpC,QACA,CACA,0BACA,kBACA,2BACA,uBACA,kBAEA,cAkGA,KACA,IACA,WACA,CAAQ,SACR,QACA,CACA,EAxGA,IACA,CACA,KACA,CACA,QACA,EAlCA,YAmCA,gBACA,YACA,cACA,wBACA,4CAEA,cACA,4CAEA,WACA,iBACA,2CAEA,cACA,mBACA,iBACA,0BACA,4CAEA,MAAkB,uBAClB,CACA,aACA,qBACA,4CAEA,MAAkB,kBAElB,WACA,mBACA,0CAEA,MAAkB,cAElB,cACA,IAuDA,EAvDA,YACA,GAsDA,EAtDA,EAuDA,mDAvDA,mBACA,6CAEA,MAAkB,yBAClB,CAOA,GANA,YACA,OAAkB,WAElB,UACA,OAAkB,SAElB,WAEA,OADA,iEAEA,UACA,MAAsB,cACtB,KACA,cACA,MAAsB,iBACtB,KACA,YACA,MAAsB,eACtB,KACA,SACA,6CACA,CAEA,cAEA,OADA,iEAEA,OAMA,aALA,MAAsB,iBACtB,KACA,WACA,MAAsB,cACtB,KAIA,YACA,MAAsB,eACtB,KACA,SACA,6CACA,CAEA,QACA,EApHA,gCACA,0CAoHA,cACA,kDACA,CACA,cACA,4BACA,CAWA,CACA,CAAC,EAGD,SAGA,SAEA,cACA,MACA,YAEA,IACA,oBACA,MACA,YAEA,iCACA,SAEA,gCACA,kCAA4C,mBAAyB,GAErE,2BACA,EAAoB,EAAgB,GACpC,CP7LsC,CO6LtC,SADoC,OAEpC,KAAY,cAAoB,wBAChC,OACA,aACA,wCACA,oBACA,kBACA,mBACA,oBACA,4BACA,MACA,KACA,aACA,KAEA,CACA,CAAI,SAEJ,OADA,iDACA,IACA,CACA,CACA,cACA,MACA,uBACA,eACA,gBACA,iBACA,yBACA,0CACA,CACA,CAGA,aACA,2DAIA,OACA,SACA,eACA,cACA,EAOA,EAHA,UAAuB,SAAoB,KAkC3C,MAlC2C,EAmC3C,eACA,oBACA,KACA,KACA,gBAEA,CACA,WACA,wBACA,mCACA,SAEA,KACA,4BAEA,eAhCA,QACA,IACC,EACD,SACA,aAAoB,KAEpB,QADA,GAAyB,EAAI,GAAG,EAAE,GAElC,MACA,MAEA,SACA,CACA,+BACA,EAmBA,KACA,mBAEA,yCACA,CACA,aACA,4CACA,oBAKA,CA1DA,gBAGA,OADA,oBAFA,UAFA,IAIA,GAEA,QAAc,eAAkB,EAEhC,SACA,UANA,GAWA,OAJA,2BACA,SAAoB,EAAI,GAAG,EAAE,EAC7B,aAAkB,UAAqB,CACvC,CAAG,EACH,EACA,EA6CA,EADA,EADA,gBAGA,YACA,8BACA,CAAK,CACL,CACA,cACA,4BACA,6BACA,CACA,uBACA,mBACA,oBAEA,CACA,6BACA,aAAyB,KACzB,SAA4B,EAAI,GAAG,EAAE,EAErC,YADA,kBAEA,MAEA,oBACA,CACA,CACA,EAGA,kBACA,eACA,QACA,CACA,oBACA,IAGA,CADA,2BACA,IAFA,IAGA,CACA,eACA,QACA,WACA,sCACA,sBACA,WACA,CAAK,CACL,CACA,gBACA,QACA,WACA,uCACA,sBACA,SACA,WACA,CAAK,CACL,CACA,EAIA,kBACA,MACA,UACA,MAAS,QAAY,MACrB,KACA,MACA,gBACA,mBACA,qBACA,kBACA,uBAEA,2CACA,8BACQ,GAER,CAAG,CACH,CACA,cACA,qCCvXA,4BACA,kCACA,6BACA,kCAgBA,KAWA,cACA,MACA,OACA,4BAAqC,OAAO,EAC5C,sDAAmE,yEAAgF,EACnJ,oDAAgE,SAAS,EACzE,kCAA2C,SAAS,EACpD,iCACA,uCACA,wCAAiD,WAAW,EAC5D,gDACA,wCAAiD,WAAW,EAC5D,iBACA,KAAyB,OAAO,GAAG,2CAAqD,EACxF,yBAA+C,IAAc,EAAE,UAAc,GAAG,EAEhF,cACA,cACA,wBAAqC,KACrC,MACA,SACA,qBACA,WACA,gBACA,QACA,CACA,qCACA,IACA,6CACA,CAAM,MACN,CACA,CACA,QACA,CACA,cACA,MACA,OAEA,qBACA,CACA,SACA,UACA,WACA,SACA,OACA,WACA,SACA,cACA,WACA,CAAI,mBACJ,gBACA,iCACA,EACA,EAeA,MAYA,EAKA,EAfA,EAfA,CACA,OACA,4BACA,SACA,OAAoB,oBAA4B,CAChD,OAAqB,YAAgB,CACrC,wBAAuC,iBAAwB,CAC/D,OACA,OAAqB,SAmBrB,WADA,GADA,EAjBqB,GAkBrB,eACA,QAnBqB,CAAmC,CACxD,OAAmB,UAAc,CACjC,OAAqB,SAsBrB,WADA,GADA,EApBqB,GAqBrB,eACA,QAtBqB,CAAmC,CACxD,OAAwB,iBAKxB,SACA,eACA,MACA,YAGA,QATA,CACA,CA/EA,CAhBA,QACA,eACA,OAA8B,uBAAkC,EAChE,EAaA,GACA,qBACA,sBACA,kBACA,qBACA,qBACA,CAAC,EACD,UAXA,CARA,YACA,+CACA,kBACA,oBACA,OAA6B,kDAA4F,EAEzH,QACA,GACA,IAAoD,eAAkB,SAAa,EAWnF,GAkFA,8BAKA,0BA0DA,QACA,eAEA,qBACA,gBACA,sBACA,KAEA,eADA,KAEA,yBAAiC,UAAa,CAG9C,CACA,oBACA,sCACA,CAIA,WACA,yBAEA,UACA,2CACA,0BACA,CACA,aACA,MACA,+BACA,aACA,yBAEA,8DACA,6CACA,CACA,OACA,0BACA,CACA,UACA,+CACA,eAMA,OALA,cAAoB,UAAa,EACjC,kBACA,SACA,yCAA4E,IAE5E,KAKA,UACA,mBACA,qDAKA,OAJA,kBACA,SACA,yCAA0E,IAE1E,CACA,CAIA,QAEA,OADA,6CACA,KAKA,8CACA,wBAA6B,iDAAiD,EAE9E,WACA,2CAAoD,OAAO,GAAG,4BAA4B,WAAW,EACrG,CACA,EAGA,QACA,mBAGA,KADA,sBAEA,gBACA,+FAEA,aADA,mBA3IA,YACA,MACA,SACA,IAEA,EACA,EACA,EACA,EACA,EANA,KACA,IAMA,aACA,yCACA,KAEA,kBAMA,kBAGA,IAFA,IACA,KACA,KAEA,SADA,gBACA,CAKA,IAJA,IACA,KACA,IACA,IACA,YAZA,MADA,iBACA,EAAkC,IAAlC,GAAkC,SAalC,IAEA,gCACA,KACA,IACA,yBACA,KAEA,KAEA,EAAQ,IACR,IAGA,oBACA,+BAEA,CACA,QACA,EAyFA,GACA,CACA,UACA,IACA,0BACA,CACA,CAIA,UACA,2CACA,0BACA,CAIA,aACA,MACA,wCACA,aACA,SAEA,8DACA,8BACA,CACA,OACA,0BACA,CAIA,UACA,sDACA,eAGA,OAFA,iBAyBA,GAAoC,iBAAqB,EAUzD,MATA,4BACA,gCAEA,UACA,8CAEA,kCACA,aAEA,CACA,EApCA,MAAoC,eAAwB,GAC5D,SAiBA,KAEA,cADA,uBACA,IACA,WACA,wBACA,CACA,EAvBA,iBACA,KAKA,aACA,uDACA,iBAAsB,yCAAmE,CACzF,CACA,8CACA,yBAA8B,iDAAiD,EAE/E,WACA,gDAAmE,EACnE,CACA,qCCtTA,8CACA,0BAA6C,UAC7C,EACA,qCAA6C,CAAE,SAAa,EAAC,IAE7D,IAAqC,EAAQ,IAAsB,GACnE,IAAyC,EAAQ,IADL,EAE5C,SACA,EAFgD,UAEhD,GACA,2BACA,qBACA,eACA,uBACA,qBACA,iBACA,6CACA,qBACA,mCACA,QACA,mBAEA,0BACA,qBAGA,gBAEA,CAOA,eAEA,OADA,2BACA,KAKA,eAGA,OAFA,6BAAuC,eACvC,kBACA,KAEA,UAEA,uBAGA,qCACA,2CAGA,6CAEA,2CACA,kDAKA,MADA,eACA,qBACA,mBACA,qBACA,+BACA,mBACS,iBACT,UACA,WACA,OACA,OACA,WACA,eACA,SACA,yBACA,oBACA,UAIA,EADA,kCAGA,qBACA,gEACA,EAGA,cAEA,CACA,sFACA,8DACA,mBACA,mBAIA,4DACA,YACA,GAEA,gBACA,2BAAwD,UAAa,wDACrE,UACA,+DACA,EACA,OACA,OACA,MACA,oBAGA,EADA,aACA,KAGA,KAGA,KACA,CACA,qBACA,IACA,gBAEA,mCACA,KACA,OACA,MACA,OAEA,CACA,SAEA,wBACA,MACA,gBAGA,GACA,SACA,CAEA,CAMA,GALA,0FACA,OACA,MACA,QAEA,2BACA,sBAEA,CAQA,MAPA,CACA,QACA,OACA,QACA,SACA,YACA,CAEA,CAAS,EAkBT,OAjBA,yBACA,eACA,UACA,OACA,OACA,WAAoC,+CAA6H,UAAI,mBAA2E,EAChP,WAAoC,sCAAoH,EACxJ,QACA,QAAiC,qCAAmH,CACpJ,CAAqB,CACrB,UACA,WACA,SACA,aACA,CAAiB,EACJ,EAEb,WACA,CACA,CACA,SAAe,wEI1Kf,sMHXW,SACX,sBAAkB,eAAsB,EACxC,gBACA,iBACA,CACA,yBCLW,OACX,MACA,OACA,UACA,OACA,MACA,SACA,QACA,6CEIA,QAAQ,YAAc,4CACtB,oFACA,cACA,yBACA,0BACA,eACA,yBACA,EACA,aACA,EA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,kBACA,KAEA,oBAGA,iBAGA,kBACA,KACA,aAGA,wBACA,0CACA,KACA,SAEA,WA6HA,KACA,OACA,WACA,UACA,aACA,mBACA,UACA,WACA,aACA,eACA,aAIA,OADA,KAD8C,IAAoB,YAClE,WAA0E,EAAK,GAChD,GAAc,WAE7C,aACA,gDACA,SACA,OAA2B,GAAc,WACzC,CACA,CACA,EACA,GACA,SACA,UACA,cACA,4CACA,eACA,cACA,UACA,WACA,WACA,WACA,WACA,kBACA,eAOA,OAJA,KAD8C,IAAoB,YAClE,WAA0E,EAAK,GAIhD,GAAc,WAE7C,aACA,mCAOA,aACA,SAIA,OAA2B,GAAc,WACzC,CACA,CACA,EACA,qBACA,EA5LA,IACA,CAEA,MAAkC,SrB1dvB,GAEX,aACA,EqBud6D,CrBvd7D,aACA,cAEA,sBAIA,MAHA,iBAEA,gCAEA,EqB+c6D,uBAC7D,EAAmC,QAAS,GAG5C,OADA,uCACA,QAAwC,IAAyB,aACjE,sCAA+D,EAAM,EACrE,YACA,cACA,CACA,CAAqB,iCACrB,CAAiB,IAGjB,4BAEA,0BACA,UACA,CAAa,EAEb,yCACA,6LACA,aACA,cACA,eACA,CAAa,EAEb,4CAEA,uOACA,aACA,cACA,eACA,CAAa,EAEb,QACA,CACA,CAiBA,yBACA,mBACA,mBACA,0BACA,kBACA,sBACA,qBACA,qBAKA,IACA,WACA,UACA,cACA,qBAAyE,GAAc,oBAAoB,GAC3G,eACA,qBAAyE,IAAqB,UAAU,gBAAc,eAAe,IACrI,eACA,6CACA,WAIA,0BACA,MACA,SACA,MACA,aACA,mCAOA,cACA,SACA,OAAuB,GAAc,WACrC,CACA,CACA,EACA,IACA,WACA,UAEA,aACA,QACA,oBACA,yCACA,YACA,qBAAmE,QAAQ,CNnkBhE,GACX,iBAIA,OAHA,wBACA,YACA,kBACA,CACA,EM6jB2E,aAC3E,cACA,eACA,gCAEA,WAIA,MACA,aACA,iDACA,SACA,OAAuB,GAAc,WACrC,CACA,CACA,EAiEA,IACA,WACA,UACA,cACA,6CACA,eACA,cACA,UACA,WACA,WACA,WACA,WACA,kBACA,eACA,gCAAgD,GAAqB,UAAU,oBAAyB,uFAAuF,EAAK,2BACpM,aACA,cACA,eACA,CAAiB,CACjB,aACA,mCAOA,cACA,SACA,OAAuB,GAAc,WACrC,CACA,CACA,EACA,IACA,WACA,UACA,aACA,mBACA,UACA,WACA,aACA,eACA,aACA,gCAAgD,GAAqB,UAAU,YAAiB,uFAAuF,EAAK,2BAC5L,aACA,cACA,eACA,CAAiB,CACjB,aACA,iDACA,SACA,OAAuB,GAAc,WACrC,CACA,CACA,EACA,eACA,iCAAqC,oBAAkB,UAAU,GAAO,+JACxE,aACA,cACA,eACA,CAAK,CACL,CACO,mBACP,KACA,qBACA,2CAA2D,SAAa,QAAQ,EAAW,kJAAkJ,EAAW,6LACxP,aACA,cACA,eACA,CAAa,OACH,6BACV,2CAA2D,SAAa,QAAQ,EAAW,mLAAmL,EAAW,qMACzR,aACA,cACA,eACA,CAAa,CACb,CAEA,wBACA,gCAAwC,GAAqB,UAAU,SAAa,+EAA+E,EAAW,oJAC9K,aACA,cACA,eACA,CAAS,EAET,KACA,0BAEA,2CAAmE,SAAa,OAAO,GAAY,sJACnG,aACA,cACA,eACA,CAAa,EACD,QAA2C,eACvD,EAAU,gCAEE,QAAoB,mCACtB,gCAEV,eACA,gCAAkD,oBAAkB,UAAU,SAAa,oDAAoD,EAAW,qGAC1J,aACA,cACA,eACA,CAAa,CAGb,OAFA,4BACA,4BACA,CACA,CAAgH,CAEvG,SAFU,KAA2F,EAAE,eCjwBrG,cAEX,IADA,EACA,GACA,aACA,GACA,QAEA,WACA,SACA,CAAa,aAIb,CAAa,EACb,YAEA,EACA,QACA,+DCtBO,SACP,iBACA,mBACA,mBACA,iBACA,eACA,6BACA,CACA,SACA,iBACA,4BACA,8BACA,gDAGA,oBACA,uCAEA,oBACA,oBACA,kBACA,aACA,CACA,aACA,MACA,cACA,oBACA,CACA,OACA,aACA,wBACA,cAIA,OADA,cACA,CACA,CACA,SACA,uBACA,cACA,qBACA,oBACA,wBAEA,CACA,mBACA,qDACA,6BAEA,CACA,yBACA,qCACA,eACA,0BACA,mBA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sBAGA,YACA,0BACA,cACA,oBACA,iBACA,CAAC,UAA4C,CCrC9B,SACf,cACA,oBACA,CACA,mBACA,4BACA,yBAEA,mBACA,iBAEA,IAA0B,CAC1B,CACA,iBACA,sBACA,kBACA,mCACA,CACA,wBACA,oBACA,gBACA,uBACA,2BACA,KACA,+BAGA,OAFA,KAEA,CAAiB,iCADjB,6CACiB,CACjB,CACA,CCnBe,QACf,iBACA,gBACA,iBACA,kBACA,aACA,gBACA,gBACA,CACA,QACA,aACA,wBACA,CAEA,kBACA,yBACA,2BACA,wBACA,eACA,CAAS,8BACT,CACA,EC3BA,YACA,oBACA,cACA,cACA,wBACA,kBACA,kBACA,cACA,cACA,wBACA,cACA,wBACA,cACA,gBACA,gBACA,oBACA,YACA,oBACA,cACA,cACA,wBACA,4BACA,kBACA,oBACA,uBACA,CAAC,YAaM,eAAwD,IAC/D,MACA,iCACA,qCACA,gBACA,GACK,EAAI,CACT,EAeO,cACP,4BACA,wBACA,cACA,kBACA,OAEA,IACA,EAcO,UAEP,qBAEA,WADA,qBAIA,UACA,YACA,WACA,eACA,cACA,YACA,YACA,YACA,eACA,WACA,WACA,aACA,aACA,WACA,kBACA,WACA,MAD6C,EAC7C,QACA,YACA,iBACA,iBACA,iBACA,aACA,eACA,YACA,YACA,mBACA,cACA,eACA,iBAEA,QADA,WAIA,CACA,EACA,KACA,EAEO,MACP,UACA,QACA,QACA,SACA,QACA,SACA,QACA,CACA,EACO,MACP,uBACA,oBACA,oBACA,QAEA,CACA,QACA,EACO,MACP,sBACA,IACA,oBACA,CACA,SACA,iCAA6C,EAAM,EAEnD,CAEA,QACA,EAWO,UACP,sBACA,SAEA,iBACA,OAGA,KAAwB,IAFxB,MAEwB,EAAsB,IAAtB,EAAsB,CAE9C,IADA,EACA,eAEA,IACA,uBACA,CACA,SAEA,oBAEA,uBACA,CACA,QACA,EAQO,KACP,mBACA,mBAEA,EAEO,MACP,QAGA,MADA,GADA,6BACA,+DACA,kBACA,CCtNe,SASf,oBAA4C,GJPrC,GIOgE,EACvE,GADwD,CACxD,WACA,aACA,eACA,eACA,aACA,yBACA,YACA,uBACA,iBACA,kBACA,CACA,UACA,eACA,uBACA,YACA,mBACA,uBACA,aACA,WACA,CACA,OACA,+BAGA,oBACA,aACA,0BACA,yBACA,iBACA,qBACA,aACA,gCACA,CAAS,EACT,CACA,iBACA,2CAAqD,iBACrD,CACA,aACA,MAKA,OAJA,sBACA,iDAEA,2BAA6B,aAAkB,EAC/C,KAEA,eACA,oBAGA,wCACA,qDAOA,iCAA0C,CAN1C,IACA,uBACA,sBACA,oBACA,qBACA,GAEA,kCACA,yBAAsC,CACtC,CAAS,eACT,CACA,aACA,eACA,4CAAmD,aAAkB,CACrE,CACA,UACA,uBACA,qBACA,CACA,kBACA,eAGA,kCAA2C,CAC3C,CACA,iBACA,gCACA,wBACA,CACA,sBAAoB,aAAmB,EACvC,cACA,wBACA,yBACA,CACA,gBACA,sDACA,CACA,EC9FA,YACA,cACA,cACA,eACA,CAAC,WACc,SAQf,iBACA,eACA,cACA,qBACA,kBACA,aACA,aAA6B,CAC7B,cAA8B,CAC9B,aAA6B,EAE7B,kCACA,uBACA,oBACA,EACA,2BAAyC,KACzC,WAAoB,sBAA0B,YAC9C,qCACA,yCACA,8BACA,uCACA,CAAa,EACb,qBACA,GACA,CAAS,EACT,0BAAwC,KACxC,WAAoB,sBAA0B,YAC9C,0BACA,2BAGA,wCACA,IAEA,CAAS,EACT,sBACA,kCACA,aACA,MACA,mBACA,cACA,CAAa,CACb,CAAS,EACT,uBACA,kCACA,cACA,MACA,mBACA,eACA,CAAa,CACb,CAAS,EACT,iBACA,kCAAgD,aAAe,CAC/D,CAAS,CACT,CAWA,0BACA,wBACA,yBACA,KACA,KAwBA,OAvBA,mBACA,MACA,QAEA,CAAS,EACT,mBACA,WACA,MACA,+BACA,2BACA,2CACA,0CACA,aACA,SAEA,YACA,QAEA,MAEA,MAEA,CAAS,EACT,uBAAsC,WAAe,KACrD,CAWA,yBACA,UAAgB,YAAgB,CAChC,mCACA,oCACA,EA6BA,OA5BA,GACA,WAEA,GACA,WAEA,mBACA,MACA,0BAEA,GADA,uBACA,YACA,kCACA,2CACA,kBACA,CACA,QACA,CAAS,EACT,mBACA,WACA,MACA,OACA,+BACA,2CACA,OACA,SACA,cACA,YACS,EACT,CACA,CAEA,gBACA,sDACA,CAwBA,yBAEA,kCADA,qBACA,eACA,WAYA,MAXA,YACA,qBACA,yBACA,iBACA,sBACA,IAIA,OAEA,CACA,CAAS,GAAI,CACb,CAEA,oBACA,oCACA,CAEA,UACA,oBACA,CAEA,WACA,qBACA,CAEA,UACA,oBACA,CAEA,qBACA,2DACA,CACA,ECvNA,YACA,UACA,kBACA,kBACA,iBACA,CAAC,UAAwF,EAEzF,YACA,wBACA,sBACA,sCACA,iBACA,CAAC,UAAsD,EAEvD,YACA,0BACA,wBACA,kBACA,+BACA,CAAC,UAA8D,CAOhD,SACf,YAEA,KAAsB,UAAY,IAClC,aACA,cACA,cACA,iBACA,WAAqB,EAAc,OACnC,eADmC,CACnC,GACA,mBACA,0CACA,kCACA,WAAyB,eAAyB,CAClD,UAAwB,OAAS,CACjC,UACA,CAAS,WACT,iCACA,kBAA4B,EAAI,KAAO,EAAc,+BACrD,qBAA+B,EAAK,+DACpC,gCACA,WAAyB,EAAc,OACvC,eADuC,CACvC,SACA,qCACA,mBACS,EACT,mBACA,yBACA,mCAAgD,YAAY,EAAE,gBAAgB,GAC9E,WAAyB,EAAc,OACvC,eADuC,IACvC,MACA,CAAS,EACT,kBACA,sCAGA,mCAAgD,WAAW,KAC3D,WAAyB,EAAc,QACvC,cADuC,EACvC,mBACA,CAAS,EACT,qCACA,oBAGA,qCAAkD,WAAW,yBAC7D,WAAyB,EAAc,QACvC,cADuC,EACvC,mBACA,CAAS,EACT,SAAiB,EAAc,QAAU,IAAV,KAC/B,wCACA,CAAS,EACT,kBAA4B,EAAgB,MAC5C,QAD4C,iBAC5C,CACY,EAAe,uCAC3B,2CACA,CAEA,4BACA,QAIA,GAHA,2BACA,sBAEA,gBACA,2GAEA,EACA,IAAoB,kBAAU,uBAAyC,EAAI,YAC3E,sDACA,8CACA,SACA,GACA,YACA,WACA,mGACA,SACA,CACA,+BACA,8CAEA,6CAAmD,EAAQ,KAC3D,mBACA,gBACA,cACA,qCAAwC,EAAkB,IAC1D,MAEA,GADA,sBACA,YACA,yBACA,MACA,CACA,CACA,qCACA,wCACA,KACA,YAAoC,IAAiB,KACrD,WACA,CAAgC,cAAU,4BAA8B,EAAI,EAC5E,UACA,MACA,aACA,cACA,aACA,aACA,qCAAmF,KAA4B,QAA6B,OAE5I,CACA,mBACA,sGACA,MACA,CACA,CACA,iCACA,mBACA,MACA,CACA,CAAa,EACb,oBACA,uFAEA,CAAa,EACb,uBACA,uBAEA,CAAa,CACb,CACA,YAEA,gBACA,2BAEA,kBAAkC,EAClC,wBACA,gBACA,cACA,SACA,CAAS,yBACT,CACA,kBAA2B,EAC3B,wBACA,gBACA,eACA,CAAS,GACT,CACA,UACA,sBACA,CAUA,iBAA8B,EAC9B,QACA,yCAsCA,uBACA,UACA,kDACA,oHACA,QAEA,4BACA,kCACA,uCACA,CAAa,CA/Cb,EACA,UAAoB,aAAmC,EAIvD,GACA,cACA,SACA,cANA,6BACA,UAA4B,6BAA6B,EACzD,GAKA,gDACA,iCACA,CAAiB,CACjB,qBACA,UACA,CACA,oBACA,QACA,UACA,oBACA,CAAyB,CACzB,CACiB,CACjB,EACA,IACA,mGAEA,OADA,2CACA,iBACA,CACA,SACA,yBACA,kBAGA,aAEA,CACA,CAaA,CACA,qBACA,8BACA,CAUA,4BACA,WAAqB,EAAc,QACnC,WACA,GAFmC,CAEnC,+BAAgD,WAAW,GAC3D,cAA0B,EAAc,8BACxC,EAIA,OAHA,yBAEA,wBACA,gBACA,UAAkC,EAAI,KAAO,EAAc,QAAU,IACrE,EACA,kBACA,IACA,OACA,CAAa,EACb,uBACA,IACA,cACA,CAAa,EACb,qBACA,UACA,CAAa,EACb,SACA,iBACA,iBAA0C,CAE1C,CAAS,CACT,CAEA,+BACA,0BACA,8BACA,0DAAoF,KAAc,gBAA2B,GAE7H,OADA,gBACA,CACA,CAEA,0BACA,oBACA,uBAAoC,EAAM,QAAQ,WAAW,iEAE7D,UAA4B,EAAI,YAQhC,OAPA,gBACA,UAGA,iBACA,yBAEA,CACA,CASA,kBACA,QACA,CAEA,aACA,qBACA,CAEA,WACA,yBAGA,gBACA,QACA,4BACA,OAAgB,0BAA8B,EAE9C,MADA,MAD4D,CAC5D,GACA,mCACA,OAEA,6BACA,SACA,mFAEA,yCACA,uDACA,UACA,iDACA,8EACA,CAAa,0BAGb,yCACA,gBACA,4DAiBA,sCAhBA,aACA,WACA,oCACA,UACA,wCACA,UACA,yCACA,qDACA,CACA,CACA,8FACA,eACA,mEACA,CAKA,CAAa,UACb,kCACA,aACA,QAA4B,8CAAgD,EAU5E,gCAAmE,CATnE,CACA,SACA,QACA,mBACA,YACA,MAA+B,CAC/B,MAA+B,CAC/B,QACA,GACmE,2BACnE,CACA,eACA,CAAa,CAEb,CAEA,YACA,oBAA8B,EAAc,OAG5C,YACA,GAJ4C,IAI5C,aAA8B,EAAc,OAG5C,aACA,EAJ4C,KAI5C,aAA8B,EAAc,QAG5C,aACA,CAJ4C,MAI5C,aAA8B,EAAc,QAG5C,cAH4C,EAG5C,GACA,oBAA6B,EAAI,EAGjC,WACA,4BACA,GACA,OACA,SACA,UACA,EAOA,OANA,iBACA,yBAGA,qBAEA,KAGA,UACA,4BAMA,OALA,6CACA,MACA,6DACA,sBACA,CAAS,EACT,KAGA,oBACA,iDACA,SAEA,eACA,eACA,SAGA,QACA,CAEA,wBACA,mCACA,2BACA,cAEA,CAMA,YACA,SAAiB,EAAc,QAAU,GACzC,CAMA,YACA,SAAiB,EAAc,QAAU,SACzC,CAMA,WACA,kDACA,CAEA,wBACA,oBAGA,wCACA,WAAqB,EAAc,QACnC,wBACA,CAEA,sBACA,OACA,MAAmB,CACnB,MAAmB,EAQnB,MANA,wCACA,OAA0B,EAA8B,qBAExD,wCACA,OAA0B,EAA8B,yBAExD,CACA,CACA,CC3eA,IAAM,EAAI,OACV,UADU,KACV,iBACA;AACA;AACA;AACA,sCAAsC,oBAAoB;AAC1D;AACA,GAAG,EAAE,QACU,EAkBf,iBACA,KACA,4BACA,iBACA,iBACA,iBACA,qBACA,aAAuB,EACvB,aADsC,EAEtC,aPrCO,EOqCgB,EACvB,aADsC,WACtC,KACA,2BACA,8BACA,WACA,YAAsB,EACtB,eACA,EAF0B,EAE1B,eACA,oBAA8B,EAC9B,QADwC,iBACxC,EACA,QACA,SACA,SACA,YAEA,sBAMA,uBACA,MAUA,OARA,EADA,IAGA,0BACA,QAAsC,sCAA8B,QAAS,UAAgB,YAG7F,OAEA,eACA,EACA,iBAA2B,EAAS,GAAG,EAAU,UAAW,EAC5D,kBAA4B,EAAe,GAC3C,UAD2C,IAC3C,eACA,2BAGA,oBAEA,2BACA,uBACA,4BACA,4CAAyD,2BACzD,4BACA,yBACA,2BACA,uBACA,wCACA,iDACA,wDAuBA,GAtBA,IACA,wBACA,eAEA,0DACA,mBACA,GACA,4BAEA,sCACA,SACA,OACA,qBAEA,sCACA,SACA,6CACA,wBAAkC,EAAK,UACvC,kBACA,cACA,CAAS,wBACT,sDACA,yBACA,8CACA,0CAEA,2CACA,0CAEA,qDACA,CAIA,UACA,eAGA,mBACA,wDACA,qBACa,EACb,MACA,CACA,MACA,4CACA,uBACA,MACA,CACA,2CACA,WACA,cACA,CAAa,CACJ,EACD,2CAAY,QAAS,UAAa,IAC1C,2CACA,oBACA,CAAa,EACb,sBACA,CAAS,EACT,CAKA,cACA,wDAAiE,cAAiB,IP7J3E,CO6JgF,GAAG,IAAE,EAC5F,CAOA,gBACA,YACA,+BACA,CADiD,CAEjD,gCAGA,kBAEA,eAEA,wDACA,4BAEA,CAIA,cACA,qBAMA,uBACA,4BAIA,OAHA,0BACA,kBAEA,CACA,CAIA,0BACA,+DAEA,OADA,kBACA,CACA,CAMA,WACA,kBACA,CAIA,kBACA,wCACA,KAAiB,EAAa,kBACP,EAAgB,gBACtB,EAAa,KAC9B,MAD8B,CACP,EAAgB,UACtB,EAAa,EADS,KACT,CAC9B,GAD8B,IACP,EAAgB,gBAEvC,OAAuB,EAAgB,OAEvC,CAIA,MANuC,OAMvC,CACA,gCAA0C,EAAgB,IAC1D,CACA,aAA8B,UAAY,EAC1C,UAAyB,EAAe,YAAa,CAAb,CAAmB,UAE3D,OADA,sBACA,CACA,CAMA,QACA,UAAgB,2BAA6B,EAC7C,OACA,kBACA,KACA,+BACA,CAAa,CACb,EACA,mBAA4B,GAAO,EAAE,GAAO,GAAG,EAAI,MACnD,mBACA,IAGA,uBAEA,CAUA,sBACA,SACA,4CACA,sBACA,MACA,WACA,IACA,mCACA,CACA,UACA,aAGA,CADA,MADA,sBACA,SAGA,OADA,iFAAsG,MAAW,GACjH,gFAA2G,MAAW,EAGtH,yBACA,0BACA,wBAA2D,eAA2B,EACtF,6BACA,QAAkC,EAAc,cAChD,cACA,CAAqB,CAErB,CAAa,CACb,CACA,CAIA,sBACA,MACA,uBAGA,6BACA,8BACA,iFACA,6BAA2E,IAAe,oBAC1F,MACA,CACA,yCACA,WACA,gBACA,kBACA,UAAuB,CACvB,6BACS,EACT,eACA,CAIA,kBACA,+CACA,gCACA,mBAEA,CAMA,WACA,iBAOA,OANA,aACA,WAGA,WAEA,mBACA,CAMA,mBACA,0EACA,IACA,iDAA8D,EAAM,IACpE,gBAEA,CAQA,WACA,kEACA,CAMA,kBACA,YACA,mCACA,wCACA,0CACA,8CACA,0CAEA,CAEA,kBACA,uBACA,UAAkB,2BAA6B,CAC/C,kCACA,gCAEA,sBAAmC,cAAsB,EAAE,GAAO,EAAE,GAAO,EAAE,iBAA+B,KAC5G,cACA,0BACA,8BACA,kDACA,CAAS,CACT,CAEA,oBAIA,GAHA,qCAA8C,mBAAmB,GACjE,uBACA,4BACA,YAIA,CACA,eACA,8CAA+D,eAAe,GAG9E,6CAEA,2CACA,8BACA,2BACA,4CACA,0BACA,EACA,6BACA,4BACA,oBAEA,EACA,4BACA,cACA,kCACa,CACb,MAzBA,wDACA,mFAyBA,8CACA,CAEA,gBACA,gCACA,yBACA,wDACA,sCACA,gDACA,CAEA,gBACA,gCACA,yBACA,gDACA,CAEA,oBACA,oCAA4D,EAAc,OAC1E,CAEA,IAH0E,UAG1E,KACA,6BACA,SAEA,4BACA,yBACA,SAAkB,EAAI,EAAE,EAAO,EAAE,EAAM,CACvC,CACA,oBACA,MACA,KACA,QAEA,CACA,oBAAqD,8BAAgC,EACrF,wBACA,CACA,QACA,CACA,CACA,QACA,mBACA,8BACA,oBACA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DA,kBACA,UAGA,kBADA,eADA,0CAGA,+BACA,QACA,CAIO,2BAIP,aAHA,eACA,wBACA,iCAEA,mHACA,GARA,KAUA,aAVA,uDAYA,CACO,4BACP,iBArCA,sBADA,IAEA,+BACA,2EACA,WACA,KACA,YAAwB,EANxB,GAM4C,IAC5C,yCAEA,QACA,CAEA,OADA,0BACA,yBACA,IA0BA,GACA,IACA,0BAEA,cAAmC,EAAW,mBAC9C,kBACA,uBACA,WACA,CAxGA,8BA0GA,gBAAmC,EAAE,iDCrQ9B,wBACP,mBACA,SACA,sBACA,sBACA,cACA,WACA,CACA,CACO,eACP,uDACA,CACO,oBACP,mBACA,aACA,yBACA,cACA,WACA,CACA,CAIO,oBACP,iBACA,SACA,6BACA,oBACA,CACA,CACO,oBACP,qBACA,aACA,YACA,aACA,CACA,CACO,oBACP,cACA,mEACA,CACA,CAIO,oBACP,cACA,gFACA,CACA,CACO,oBACP,eACA,iDACA,CACA,CACO,oBACP,sBACA,qDACA,kBACA,cACA,CACA,SACA,OACA,eACA,qBACA,mBACA,qBAEA,CACA,CAIO,oBACP,sBACA,qDACA,kBACA,cACA,CACA,SACA,OACA,eACA,qBACA,mBACA,qBAEA,CACA,CACO,oBACP,iBACA,2CACA,CACA,CACO,eACP,iDAOO,oBACP,mBACA,mDACA,cACA,CACA,CC1GA,OAA0B,OAAZ,EAAY,KAC1B,EADkB,EAClB,EADsB,CACtB,EACA,MAF0B,EAE1B,kEACA,YACA,4DACA,8CAA6D,WAAc,IAC3E,uEACA,kBAEA,QACA,EAIA,IAAM,GAAgB,qEACtB,iBACO,eAAe,GAAW,OACjC,MAQA,CATiC,CAgBjC,EAdA,IAAS,GAAsB,GAC/B,UAAkB,GAAwB,GADX,GAC2B,GAE1D,WAFyC,CAAiB,EAE1D,WAEA,UAAkB,GAAwB,GAAgB,aAG1D,IAHyC,CAAiB,CAI1D,cACA,CACA,SACA,UAAkB,GAAiB,GAAgB,KACnD,CAEA,MFqOO,MExO4C,GFwO5C,GACP,WEtOsD,IFsOtD,KAA4C,IAC5C,OAGA,YAJmE,CAEnE,YA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,aACA,CAAK,CACL,eACa,MAGb,cAHiC,SAGjC,cACA,CACA,EAKO,gBAA6C,EACpD,OACA,WACA,WAEA,gBACA,MACA,CAAS,CACT,eACA,YACS,CAET,CEpCO,QAIP,qBACQ,MACR,cAD4B,SAC5B,EACA,2EACA,CAMO,wBACP,eACA,SACA,wBACA,CACA,CACO,oBACP,CA4BO,yBACP,UACA,oEAEA,qCAiBA,OAhBA,KACA,gBACA,UACA,UACA,qEAEA,CAAS,IAUT,4EACA,CACA,iBACA,cACA,EACA,CACA,iBACA,gBACS,WACT,MACA,UACA,qEAEA,IACA,gBACA,QACA,CACA,UACA,oEAEA,CACA,CAEA,SAIA,MAHA,UACA,+EAEA,6DAAiH,EAAK,uBAGtH,YACA,IACA,+CACA,2FACA,CACA,SACA,sFACA,CAOA,OADA,wQACA,SAGA,CAAK,EACL,CDtHA,+BAEA,IACA,oDACA,eACA,YACa,CACb,eACA,CAAS,EAET,+BAEA,kCAEA,SACA,0BAEA,sBAEA,CEbA,QACA,IRVO,CQUE,UAAU,aACnB,WRVO,CQUS,WAAW,UAC3B,oBACA,kBACA,sBACA,QAAa,GACb,oBACA,SACA,IAH4B,yBAG5B,EACA,EAMA,yBACA,gBACA,CACe,SAIf,eACA,OACA,yBACA,iCACA,4BACA,oCACA,6BAOA,4BACA,2BACA,qCACA,kCACA,qBACA,sBAIA,2BACA,wBACA,kCACA,qBACA,mBAAmC,MACnC,WAD4C,CAC5C,iNAEA,oCAAuD,QAwDvD,GAvDA,gCACA,4BACA,sBAEA,qCACA,6BACA,yCACA,eAAyB,GAAc,CACvC,UACA,eAFuC,EAEvC,CACA,cACS,EACT,eACA,uBACA,WAAqB,GAAY,SACjC,qBACA,6CACA,yBACA,iEACA,OACA,iBAEiB,MAAS,wEAC1B,UAAwB,GAGxB,UAHqC,GAKrC,UACA,+BACA,+BACA,mCACA,qCACA,yCACA,uDACA,8EACA,EACA,oBACA,UACA,uBAGoB,KACpB,aAAmC,EADK,EAIxC,eAHsD,GAGtD,IACA,aAAmC,GAAyB,sBAK5D,sBACA,aAA2B,GAAyB,qBAEx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CAAoD,EAAM,GAC1D,uCAAgE,EAAU,GAC1E,IACA,0BACA,yCAAoD,YAAgB,EAEpE,SACA,8DACA,IACA,qBACA,CACA,SACA,SACA,CACA,CAAa,EAEb,GADA,qBACA,YACA,YAAgC,WAAmB,KACnD,mBAEA,YAEA,QACA,CACA,oBACA,CACA,CAKA,sBACA,iCAGA,kCACA,MAAc,GAAY,+BAC1B,CACA,uBACA,iCACA,MAAc,GAAe,8BAC7B,mDACA,CAOA,mCACA,mDACA,qCACA,oCACA,IACA,GAA4B,MAAS,kDACrC,gDAEA,CACA,SACA,4DACA,CACA,CAKA,0BACA,8BACA,oCACA,mDA5hDA,IA6hDA,0BACA,kDAOA,UAGA,8DAIA,mBAKA,qBACA,6BACA,kCACA,CAAS,GACT,CAKA,yBACA,mCACA,6BACA,4BACA,GACA,gBAEA,CAuBA,yBACA,wCACA,8BACA,CASA,wBACA,wCACA,6BACA,CAIA,8BACA,gDACA,IACA,oCACA,IACA,iBACA,IACA,wCACA,IAAoC,cAAQ,EAAS,EAAI,EACzD,mDACA,qDAIA,sCAznDA,KA0nDA,kEAA+F,gBAAgB,sBAAsB,uBAAmF,EACxN,EADgK,CAvnDhK,GAynDA,uBAF2L,KAE3L,iBAEA,CAAyB,CACzB,CACA,IANwN,EAMxN,GACA,yFACA,CACA,QACA,CACA,6CACA,CACA,CAAa,CACb,CACA,SACA,oCAAmD,GACnD,oBAD0E,2CAI1E,OAEA,CACA,CAMA,gCAEA,GADA,0CACA,CAAa,MAAS,+CAKtB,OAJA,uBAEA,wBAEA,GAEA,IACA,4EACA,yFAGA,mCACA,CACA,IAFmD,EAEnD,GACA,0CACA,CACA,CAIA,8BACA,+BAAoD,EAAqB,GACzE,0DACA,sCACA,uBAGA,yBAEA,IAKA,6BACA,qCACA,oDACA,yHAKA,gCACA,CAAiB,IAGjB,qCACA,uBACA,uBAGA,CAOA,gCACA,mBAAuC,sBAA6B,GAOpE,GANA,+BACA,sBAA0C,iCAAuC,GAEjF,2BACA,iBAAqC,6BAAmC,GAExE,wBACA,eAA+D,GAAyB,8BACxF,uBACA,kBAAmC,sBAAkC,EACrE,yBAA0C,sBAAwC,EACrE,EACb,oBACA,CACA,iCACA,yCACA,oBACA,CAIA,MAHA,wCACA,6BAAiD,sBAA4B,GAE7E,GAAkB,EAAI,GAAG,YAAoB,EAE7C,mBACA,IACA,wCACA,MACA,IAAwB,gBAAyC,SACjE,EACA,CAA6B,mBAE7B,MAA6B,GAAQ,uBAA0B,SAAS,WAAW,WAAgB,GACnG,qBACA,6DACiB,CACjB,CAAa,CACb,CACA,SACA,GAAgB,GAAW,GAC3B,KAD2B,CAC3B,CAAyB,kBAEzB,QACA,CACA,CACA,iBACA,IACA,wCACA,QACA,IAAwB,gBAAyC,EACjE,KACA,OAA6B,mBAE7B,qBAA6C,sDAAoE,yBAAqC,eAAsB,CAAI,gBAAuB,EACvM,MAAwB,WAAc,MAAQ,GAAQ,qBAAwB,SAAS,WACvF,OACA,qBACA,6DACiB,SACjB,EACA,CAA6B,oBAE7B,2EACA,oCAA4D,QAAQ,gBAAkB,EAEtF,MAAyB,cACzB,CAAa,CACb,CACA,SACA,GAAgB,GAAW,GAC3B,KAD2B,CAC3B,CAAyB,kBAEzB,QACA,CACA,CAIA,iBACA,sCACA,IACA,wCACA,MACA,IAA4B,gBAAyC,EACrE,KACA,OAAiC,mBAEjC,IAA4B,gBAAc,MAAQ,GAAQ,qBAAwB,SAAS,WAAW,WAAgB,UACtH,MAAgC,uCAAqD,CACrF,qBACA,4DACA,CAAqB,SACrB,EACA,CAAiC,oBAEjC,uCAA4D,mDAA6D,KACzH,6DACA,MAA6B,WAC7B,CAAiB,CACjB,CACA,SACA,GAAoB,GAAW,GAC/B,KAD+B,CAC/B,CAA6B,kBAE7B,QACA,CACA,CAAS,CACT,CAIA,oBACA,sCACA,IACA,wCACA,MACA,IAA4B,gBAAyC,SACrE,EACA,CAAiC,mBAEjC,MAAiC,GAAQ,qBAAwB,SAAS,WAAW,WAAgB,aACrG,MAAgC,kBAAyB,CACzD,qBACA,6DACqB,CACrB,CAAiB,CACjB,CACA,SACA,GAAoB,GAAW,GAC/B,KAD+B,CAC/B,CAA6B,kBAE7B,QACA,CACA,CAAS,CACT,CAIA,6BAGA,IAAgB,gBAA6C,uBAC7D,oBACS,SACT,EACA,CAAqB,mBAErB,oBACA,oBACA,iBACA,YACS,CACT,CAIA,qBAEA,IAAgB,WAAQ,EAAM,UAAsB,qBACpD,KACA,OAAqB,mBAErB,qCACA,6DACA,8DACA,OACA,MACA,MACA,OACA,OACA,CAAa,CACb,UACA,CACA,CAIA,wCACA,qCACA,iCACA,QACA,IAAwB,cAAQ,EAAS,UAAyB,EAClE,KACA,OAA6B,mBAE7B,MACA,OACA,MAAgC,iEAAuE,CACvG,UACA,EAEA,sCACA,MACA,QACA,UAEA,QAMA,MALA,oFACA,UACA,WAGA,CAAyB,mBAAQ,2CADjC,UACwF,YACxF,CAAa,EAEb,CACA,CACA,oBEx7DA,OADmB,EEAZ,UFAwB,MAChB,EEDyB,GACxC,KFAyB,EAAC,KEA1B,EADkD,CAElD,QACA,CACA,CCiBe,SAaf,mBACA,UAGA,GAFA,mBACA,mBACA,GACA,wCACA,MACA,wCACA,MAA+C,Ef3B/C,We2B6B,Gf3B7B,Ge4BA,YAD+C,KAC/C,IAA8B,EAAa,qCAC3C,gBAA0B,EAAa,UACvC,mBAA6B,EAAa,aAC1C,qBAA+B,EAAa,eAE5C,YAAwC,6CAA6C,aAOrF,EfrCO,cACP,IAAY,EeoCiC,CfpCjC,8BAAsF,EAClG,CAAY,iCAA0H,EACtI,GACA,iCAA0C,OAC1C,mCAA4C,OAC5C,uCAAgD,OAChD,qCAA8C,OAC9C,kBAA2B,GA3BE,gBA2BO,MA3BP,EA2BO,OA3BP,EA2BO,YAAsC,SAAY,CAzBtF,IAF6B,EA2BO,OAzBpC,yBACA,cAAoC,IAAM,aAA+B,SAAY,MACrF,cAAmC,IAAM,cAAmC,SAAY,MACxF,kBAJA,EAIgC,mBAJJ,CAA5B,EAIgC,OAJJ,kCAA+D,MAAiB,EAI5E,UAChC,8BACA,CAAK,EAqBL,EAQA,OAPA,cACA,4BAIA,qBAEA,CACA,EemB6C,YAAsD,CANnG,CACA,GAAgB,GAChB,SAAsB,GACtB,GAFkC,EAElC,gBAD8C,KAC9C,SAAgD,CAAE,IAAoB,CAAK,aAA+B,EAApC,OAClD,EACpB,EAEA,kBAH0C,KAG1C,2BACA,6CACA,eAIA,+BACA,sBAAoC,EACpC,YACA,yHAAiJ,WAAc,iBAC/J,CAAiB,CACJ,GARb,4DAA6G,8BAU7G,WAAqB,GAAa,kDAClC,sDAAiE,iEAAqE,cACtI,cAAwB,EAAe,GAAI,EAAa,QAAjB,CAAiB,EACxD,qBACA,mBACA,iBACS,EACT,eACA,2BAEA,CAIA,gBACA,WAAmB,EAAe,mBAClC,qBACA,uBACS,CACT,CAIA,cACA,WAAmB,GAAqB,wCACxC,CAMA,QACA,wBACA,CASA,UACA,0BACA,CAyBA,UAAqB,KAAc,EACnC,2BACA,CAQA,aAA2B,UAAY,EACvC,iCACA,CAIA,cACA,kCACA,CAOA,iBACA,qCACA,CAIA,oBACA,wCACA,CACA,sBACA,IA9K6B,QA+K7B,OA/K6B,EA+KL,KA/KK,EA+KL,OA/KK,EA+KL,OA/KK,EA+KL,YACxB,oBACA,gCAEA,SAAoB,GAAO,6BAC3B,iEACA,CAAS,CAnLT,kCACA,cAAoC,IAAM,aAA+B,SAAY,MACrF,cAAmC,IAAM,cAAmC,SAAY,MACxF,kBAJA,EAIgC,kBAJJ,EAA5B,EAIgC,OAJJ,kCAA+D,MAAiB,EAI5E,UAChC,8BACA,CAAK,CA+KL,CACA,0CAA8B,yFAAmG,MACjI,OACA,wBAAqC,iBAAiB,EACtD,UAAuB,iBAAiB,GAExC,WAAmB,GAAkB,CACrC,cADqC,EACrC,CACA,sCAAmD,OACnD,aACA,mBACA,iBACA,qBACA,UACA,WACA,OACA,QACA,QAGA,4DACS,CACT,CACA,uBACA,WAAmB,EAAc,+CAAiD,KAAc,sBAAwB,wBAA0B,0BAAqE,EACvN,CACA,uBAIA,OAHA,oCACA,kEACA,CAAS,CAET,CACA,2BACA,0CACA,4BACA,0BAEA,mBACA,wBACA,cACA,oBACA,+BAEA,CACA,CCzNO,gBACP,IAAe,GAAc,iGCNtB,gCAKI,yBACX,kBAAgC,EAChC,oDACQ,QAAW,IAUnB,gCACA,WACA,UAA4B,GAAO,IACnC,QAAqB,QAAyB,eAC9C,uBACA,CAAS,CACT,UACA,YAAyB,IAAc,eACvC,UACA,IAAqE,CAApD,CAAoD,KAAN,GAAM,EACrE,CACA,CACA,8CACA,OACA,qBACA,qBACA,aAEA,uBACA,iBACA,6BACA,6BACA,yCACA,yBACA,yBACA,mBACA,eACA,uBACA,uBACA,mCACA,mBAEA,CACA,cACA,sBACA,CACA,cACA,uBAMA,WACA,UAAkB,IAAgB,CAMlC,SACA,UAAkB,IAAc,CAEhC,UACA,mBAEA,mCC5EA,qDAiBA,YAAQ,oEAAsE,EARpE,EAAQ,IAAoB,CAS/B,YATU,KASV,MACP,iBACA,mCACA,CACA,CAKA,cACA,CALO,kBACP,8BACA,eACA,EAEA,aACA,kCAEA,GACA,qBAEA,aACA,aACA,iCACS,GAET,OACA,EACA,UACA,wCACA,IACA,UACA,GACA,WACA,QACA,MACA,OACA,CAAS,CACT,CACA,CACA,SAKA,oBACA,qCACA,CACA,aACA,QACA,CACA,0BACA,iBACA,KAEA,OADA,gBACA,CACA,CACA,qBACA,2CACA,CACA,6BACA,iBACA,uBAEA,WAEA,uBACA,kBACA,CACA,YACA,MACA,aAEA,CAAgB,gBAAc,sBAC9B,KACA,UACA,EAAU,CACV,KACA,SACA,KAEA,EACA,gBACA,IAAa,IAAwB,8DACrC,WAGA,oFACA,KACA,EAGU,mDACV,QAHA,iCACA,MAIA,UAMA,OALA,cACA,mBACA,mBACA,iBAEA,4EACA,8FACA,OACA,YACA,6CAAiF,IAAgB,kBACjG,uBAA+C,yCAAyC,QAAQ,kEAAoF,GACpL,QACA,qBACA,CAAyB,CAEzB,CACA,IACA,+CAAuG,IAEvG,IACA,cACA,sBAEA,WACA,GAAwB,OAAU,IAElC,kBACA,QAGA,IACyB,UAEzB,MADA,OACA,CACA,CAAyB,aAKzB,OAHA,QACA,IAEA,CACA,CAAkB,SAGlB,MAFA,OACA,IACA,CACA,CACA,CAAa,EACb,CACA,WACA,WACA,wBACA,KACA,EAAc,CACd,KACA,QACA,EAAa,EAAwB,kDAGrC,WACA,OACA,6CACA,4BAEA,yBACA,eACA,wBAUA,+CAVA,EACA,wCACA,2BACA,yBAEA,OADA,cACA,uBACA,EACA,yBAEA,CAGA,CAHc,CAlBd,CAsBA,CACA,gBACA,WACA,gFACA,gDACA,CACA,kBAEA,OADA,gCAEA,CACA,wBACA,6BACA,eACA,CACA,0BACA,6BACA,UACA,IACA,UAEA,CACA,CACA,YACA,YACA,WACA,CAAC,oFClND,UACA,OACA,UACA,CAGA,sBACA,mBACA,YAAuB,aAA8B,KACrD,6BACA,IAEA,2CACA,MAAqC,EAAY,EAAE,wBAAsC,SAEzF,UAEA,CACA,CACA,QACA,EAgBO,wBACP,SACA,cAGA,aADA,KAEA,KAAiB,IAA0B,CAAC,EAAE,EAAI,EAClD,UAIA,mBACA,SAAuB,IAA0B,CAAC,EAAE,WAAa,EACjE,SACA,CACA,OACA,OACA,gCA7BA,GACA,cACA,EAA0B,QAAsB,GAChD,KACA,iBACA,qBACA,QAAiD,OAAgB,kCAIjE,QACA,EAkBA,EACA,CACA,yBCxDA,OACA,gBACA,OACA,SACA,EAEA,cACA,oCACA,CAEA,gBACA,IAiDA,EAGA,EACA,EACA,EAtDA,YAAqC,aAGrC,GA8CA,EA/CA,UAkDA,KACA,KAEA,CADA,gBACA,UACA,YACA,eAAoC,EAEpC,EAGA,CAAW,iBA1DX,SACA,UAEA,IACA,gBAAsB,MACtB,EAEA,IACA,wCACA,CAAI,KADkE,CAClE,GACJ,cACA,8EACA,EACA,gEACA,EAEA,CAEA,OACA,OACA,OACA,EAqBA,OAnBA,sBACA,mBACA,qCACA,aACA,eACA,sBACM,cACN,wBACM,aACN,YACM,eACN,cACM,eACN,aAEA,MAEA,CAAG,EAEH,CACA,CAkBA,gBAKA,GAJA,IACA,gBAAsB,MACtB,EAEA,GACA,UACA,cAEA,SAIA,aACA,6CAGA,gCACM,2BAEN,8BACM,CAEN,MACA,UACA,wCACA,oCACA,CAAW,EACX,CAEA,gCACA,aACA,0LAAoM,cAAc,4BAGlN,GACA,OAUA,CARA,kBACA,QAOA,CAJA,IACA,gBAAsB,MACtB,GAEA,KAMA,iCACA,aAEA,OADA,YACA,CACA,CAAK,CALL,IAJA,4BACA,aACA,CAAK,CASL,CAsFA,YACA,eAAoB,GACpB,qBAA0B,GAC1B,4BAAiC,CA5EjC,YACA,oBACA,SAEA,sBACA,SAGA,I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AO,MAAM,MAAM,SAAS,SAAW,KAAQ,MAAM,KAAW,CAAX,EAAW,WAAc,aAAkB,SAAgB,MAAM,sDAAmD,IAAW,CAAX,IAAW,oCAAuC,4BAAiC,CAAK,UAAa,oBAAoB,oBAAoB,EAAK,oBAAoB,qBAAoB,mBAAmB,0BAA4B,eAAoB,EAAS,8CAA8C,UAAU,cAAc,KAAS,cAAgC,WAAW,cAAkB,iBAAiB,YAAY,YAAY,KAAW,IAAI,oBAAsC,KAAQ,QAAQ,eAAiB,iBAAiB,KAAmE,KAA6C,IAApC,KAAoC,CAA/B,MAA+B,CAAiB,gCCW3vK,MAAY,EAAQ,IAA0B,EAC9C,WADmB,EACnB,CACA,OACA,GACA,IACA,aACA,YACA,2FAEA,CAAK,CACL,IACA,IACA,IACA,IACA,IACA,IACA,GACA,CAAG,CACH,IACA,gBACA,EACA,sEACA,YACA,2KAEA,sBACA,cACA,mBACA,iCACA,CACA,8DAAoE,CACpE,EACA,YAAkB,eAClB,oBACA,KAGA,gBAFA,kBAGA,sBACA,EACA,GACA,OACA,KACA,WACA,EACA,aAAmB,aACnB,4BACA,EACA,SAAe,eACf,iDACA,WACA,qBACA,EACA,gDACA,EACA,iCACA,gBACA,MACA,aACA,MACA,EACA,kDACA,CACA,cACA,YACA,eACA,GAEA,cACA,SACA,cACA,YACA,gBACA,6CACA,CAAS,CACT,CACA,EACA,eAAqB,eACrB,sBACA,gCACA,iCACA,QACA,KACA,eAEA,SACA,cACA,UACA,gDACA,6CACA,CAAS,CACT,OACM,iBACN,EACA,SAAe,eACf,GACA,oBACA,oBACA,UACA,sBACA,CACA,WACA,qBACA,WACA,cACA,UACA,gDACA,8CACA,2CACA,cACA,iCACA,gBACA,OACA,eACA,kCACA,iBACA,OACA,YACA,oDACA,WACA,kDACA,6CACA,CAAK,CACL,CACA,EACA,eAAqB,eACrB,sBACA,MACA,4BACA,SACA,GACA,uCACA,KACA,OACA,cACA,UACA,+CACA,CAAO,CACP,EAAM,YACN,EACA,SAAe,gECnJR,SAAS/Q,EAAmBzD,CAAY,EAC7C,OAAOA,EAAKhB,UAAU,CAAC,KAAOgB,EAAQ,IAAGA,CAC3C,kFCNO,uBACP,kBAAkB,EAAM,EACxB,yBAAiC,EAAK;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,IACA,CACA,CACO,sBACP,cACA;AACA;AACA,IACA,CACA,CACO,sBACP,cACA;AACA;AACA,IACA,CACA,+BClBO,SAASoG,EAAoB5C,CAAa,EAC/C,OAAOA,EAAMhV,OAAO,CAAC,MAAO,KAAO,GACrC,6CCEA,OAA6B,eAC7B,cACA,oCACA,uBACA,+CACA,YAAoB,mBAAsB,IAC1C,8CACA,CACA,MACA,yBACA,EACA,GAAO,QACP,EACA,gHAEA,CACA,oBACA,2CACA,6BACA,+BACA,kCACA,+BACA,kCACA,+BACA,2BACA,2BACA,kBAQA,kCACA,gBACA,wBAEA,OACA,WACA,OACA,MACA,aALA,UAKA,OACA,OACA,CACA,CAWA,cACA,MACA,oBACA,UACA,cAEA,CAUA,aACA,oBAVA,EACA,EAUA,iDAXA,EAYA,SAXA,GAAwB,mBAExB,IACA,8BACA,YACK,GAOL,cACA,CACA,cA+IA,kBACA,oBACA,SACA,IAIA,OArHA,sBACA,IAlEA,IAnBA,EAqFA,UACA,4CACA,SACA,sBAEA,UACA,aACA,aACA,aACA,KACA,KACA,cACA,mBACA,OACA,OACA,KACA,KACA,QACA,OACA,cAEA,YACA,EACA,EACA,EACA,EAGA,CACA,CACA,KACA,OACA,OACA,EACA,oBACA,KACA,MACA,SACA,GACA,wBACA,uBACA,QACA,EAAW,EACX,SACA,QA9GA,EAgHA,EAhHA,EAiHA,EACA,cACA,iBACA,GACA,mBACA,EACA,OACA,KACA,EAVA,EA9GA,EACA,OACA,EACA,OACA,OACA,OACA,UAoHA,WACA,EAEA,IACA,uBACA,QACA,YAAoB,WAAqB,IACzC,EACA,IADA,OACA,GACA,KACA,EACA,EACA,EACA,EACA,QAEA,wBA7JA,QADA,EA8JA,IA7JA,wBAIA,kBAHA,GACA,SACA,iBACA,MAyJA,EACA,IACA,gBACA,oBAGA,EACA,IADA,UACA,KACA,KACA,EACA,EACA,EACA,EACA,QAEA,iBACA,6BACA,SA3HA,YACA,iBACA,gBACA,mBACA,WACA,cACA,SACA,OACA,0BACA,YACA,oBACA,OACA,YACA,sBACA,sBACA,UACA,CAAe,CACf,YACA,sBACA,gCACA,EACA,EACA,UAEA,gBACA,cACA,gBACA,eAEA,CACA,OACA,EA6FA,GACA,EACA,EACA,EACA,EAGA,aACA,EACA,GACA,oBAJA,cAKA,mBAA+B,8BAAyC,EACxE,GAGA,CACA,QACA,EAKA,sBACA,sBACA,CAAG,EACH,CACA,CACA,cACA,mBACA,gBACA,QACA,KACA,YACA,iCACA,yBACA,CAAO,CACP,YACA,iCACA,yBACA,GAEA,yCACA,CACA,gDACA,UAEA,aACA,kBACA,CACA,aACA,OAAW,2BACX,CACA,UAAgB,EAChB,MACA,wBACA,EACA,EACA,WACA,uBACA,CAAO,CACP,EAEA,CAAG,CACH,kBACA,QAIA,OAHA,eACA,GACA,CAAK,EACL,CACA,CAAG,CACH,oBACA,OACA,gBACA,QACA,CAAO,MAEJ,CACH,iBACA,6BACA,QACA,CACA,EACA,UAAgB,GAChB,UAAgB,GAChB,YAAkB,GAClB,UAAgB,GAChB,iEAAuE,CACvE,EACA,OAAa,aACb,kBACA,UACA,qCACA,0BAEA,UADA,cAEA,mBACA,IACA,2BAAmC,IAAW,KAC9C,mBACA,GACA,sBACA,6BACA,CACA,iBACA,uBAEA,SADA,cAEA,kBACA,EAAQ,IACR,gBACA,gBAEA,SADA,cAEA,OACA,WACA,CACA,sBACA,qBACA,IACA,8BAGA,MADA,CADA,KACA,IACA,KACA,CAAM,SACN,sBACA,CACA,CACA,EACA,mBAAyB,YACzB,WACA,EACA,cAAoB,iBACpB,WACA,sBACA,UAAuB,UACvB,QACA,SACA,WACA,oCACA,6BACA,EACA,aACA,WACA,cACA,gBACA,6BACA,YACA,yBACA,2BACA,QACA,uBAAkD,IAAc,IAChE,oBACA,YACA,CACA,oCACA,EACA,eAAqB,iBACrB,MACA,IAAc,CACd,OACA,WACA,wCACA,aACA,WACA,cACA,gBACA,YACA,yBACA,2BACA,QACA,uBAAwD,IAAoB,IAC5E,oBACA,YACA,CACA,qBACA,0BACA,eACA,YACA,kCACA,EACA,WAAiB,YACjB,OAAW,aACX,EACA,YAAkB,aAClB,OAAW,oBACX,EACA,gBAAsB,GACtB,MAAY,aACZ,OACA,WACA,UAAgB,qBAA4B,CAC5C,OACA,CACA,EACA,MAAY,eACZ,OACA,WACA,OACA,yBACA,CACA,EACA,KAAW,aACX,iBACA,EACA,aAAmB,eACnB,2BACA,EACA,eAAqB,cACrB,OAAa,YACb,kBACA,EACA,SAAe,eACf,uBACA,EACA,SAAe,4HE3af,qCAA6C,CAAE,SAAa,EAAC,EAC7D,OAAe,QACf,SAAe","sources":["webpack://_N_E/../../node_modules/next/dist/experimental/testmode/context.js","webpack://_N_E/../../node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js","webpack://_N_E/../../node_modules/next/dist/compiled/react-server-dom-webpack/server.edge.js","webpack://_N_E/../../../src/client/components/hooks-server-context.ts","webpack://_N_E/","webpack://_N_E/../../node_modules/next/dist/compiled/querystring-es3/index.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/async-local-storage.js?142e","webpack://_N_E/../../../src/client/components/app-router-headers.ts","webpack://_N_E/../../node_modules/next/dist/compiled/@opentelemetry/api/index.js","webpack://_N_E/../../node_modules/next/dist/esm/server/request-meta.js","webpack://_N_E/../../node_modules/next/dist/esm/server/web/spec-extension/adapters/next-request.js","webpack://_N_E/../../node_modules/next/dist/esm/server/pipe-readable.js","webpack://_N_E/../../node_modules/next/dist/compiled/string-hash/index.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-nextjs/dist/index.js","webpack://_N_E/../../node_modules/next/dist/experimental/testmode/fetch.js","webpack://_N_E/../../../src/client/components/static-generation-bailout.ts","webpack://_N_E/../../node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.production.js","webpack://_N_E/../../node_modules/@supabase/postgrest-js/dist/cjs/PostgrestClient.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/metadata/metadata-constants.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/dynamic-rendering.js","webpack://_N_E/../../node_modules/next/dist/esm/server/revalidation-utils.js","webpack://_N_E/../../../../src/shared/lib/i18n/normalize-locale-path.ts","webpack://_N_E/../../../src/shared/lib/segment.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/app-paths.ts","webpack://_N_E/../../node_modules/@supabase/postgrest-js/dist/cjs/PostgrestFilterBuilder.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/work-unit-async-storage.external.js","webpack://_N_E/../../../../src/shared/lib/i18n/detect-domain-locale.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/add-path-prefix.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/add-path-suffix.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/add-locale.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/format-next-pathname-info.ts","webpack://_N_E/../../../src/shared/lib/get-hostname.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/remove-path-prefix.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/get-next-pathname-info.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/web/next-url.js","webpack://_N_E/../../node_modules/next/dist/esm/server/after/after-context.js","webpack://_N_E/../../node_modules/next/dist/esm/server/async-storage/work-store.js","webpack://_N_E/../../../src/shared/lib/invariant-error.ts","webpack://_N_E/../../node_modules/@supabase/postgrest-js/dist/cjs/index.js","webpack://_N_E/../../../src/shared/lib/is-thenable.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/action-utils.js","webpack://_N_E/../../../src/server/app-render/encryption-utils.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/web/globals.js","webpack://_N_E/../../node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js","webpack://_N_E/../../node_modules/next/dist/esm/server/web/spec-extension/response.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/relativize-url.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/internal-utils.js","webpack://_N_E/../../node_modules/next/dist/esm/server/web/web-on-close.js","webpack://_N_E/../../node_modules/next/dist/esm/server/web/get-edge-preview-props.js","webpack://_N_E/../../node_modules/next/dist/esm/server/after/builtin-request-context.js","webpack://_N_E/../../node_modules/next/dist/esm/server/web/adapter.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/multi-file-writer.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/incremental-cache/file-system-cache.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/interception-routes.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/is-dynamic.ts","webpack://_N_E/../../../src/shared/lib/utils.ts","webpack://_N_E/../../../../src/shared/lib/page-path/normalize-page-path.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/to-route.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/incremental-cache/shared-cache-controls.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/path-match.ts","webpack://_N_E/../../../src/shared/lib/escape-regexp.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/route-regex.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/route-matcher.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/querystring.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/parse-relative-url.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/parse-url.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/api-utils/get-cookie-parser.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/prepare-destination.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/server-utils.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/incremental-cache/index.js","webpack://_N_E/../../node_modules/next/dist/esm/server/route-matchers/route-matcher.js","webpack://_N_E/../../node_modules/next/dist/esm/server/web/internal-edge-wait-until.js","webpack://_N_E/../../node_modules/next/dist/esm/server/web/edge-route-module-wrapper.js","webpack://_N_E/../../node_modules/@trpc/server/dist/utils-DdbbrDku.mjs","webpack://_N_E/../../node_modules/@trpc/server/dist/getErrorShape-Uhlrl4Bk.mjs","webpack://_N_E/../../node_modules/@trpc/server/dist/tracked-gU3ttYjg.mjs","webpack://_N_E/../../node_modules/@trpc/server/dist/initTRPC-IT_6ZYJd.mjs","webpack://_N_E/../../node_modules/jose/dist/browser/lib/buffer_utils.js","webpack://_N_E/../../node_modules/jose/dist/browser/runtime/base64url.js","webpack://_N_E/../../node_modules/jose/dist/browser/util/errors.js","webpack://_N_E/../../node_modules/jose/dist/browser/runtime/webcrypto.js","webpack://_N_E/../../node_modules/jose/dist/browser/runtime/random.js","webpack://_N_E/../../node_modules/jose/dist/browser/lib/iv.js","webpack://_N_E/../../node_modules/jose/dist/browser/lib/check_iv_length.js","webpack://_N_E/../../node_modules/jose/dist/browser/runtime/check_cek_length.js","webpack://_N_E/../../node_modules/jose/dist/browser/runtime/decrypt.js","webpack://_N_E/../../node_modules/jose/dist/browser/runtime/bogus.js","webpack://_N_E/../../node_modules/jose/dist/browser/runtime/aeskw.js","webpack://_N_E/../../node_modules/jose/dist/browser/runtime/ecdhes.js","webpack://_N_E/../../node_modules/jose/dist/browser/lib/check_p2s.js","webpack://_N_E/../../node_modules/jose/dist/browser/runtime/pbes2kw.js","webpack://_N_E/../../node_modules/jose/dist/browser/runtime/subtle_rsaes.js","webpack://_N_E/../../node_modules/jose/dist/browser/runtime/rsaes.js","webpack://_N_E/../../node_modules/jose/dist/browser/runtime/jwk_to_key.js","webpack://_N_E/../../node_modules/jose/dist/browser/runtime/normalize_key.js","webpack://_N_E/../../node_modules/jose/dist/browser/lib/cek.js","webpack://_N_E/../../node_modules/jose/dist/browser/runtime/asn1.js","webpack://_N_E/../../node_modules/jose/dist/browser/key/import.js","webpack://_N_E/../../node_modules/jose/dist/browser/runtime/encrypt.js","webpack://_N_E/../../node_modules/jose/dist/browser/lib/aesgcmkw.js","webpack://_N_E/../../node_modules/jose/dist/browser/lib/decrypt_key_management.js","webpack://_N_E/../../node_modules/jose/dist/browser/lib/validate_crit.js","webpack://_N_E/../../node_modules/jose/dist/browser/jwe/flattened/decrypt.js","webpack://_N_E/../../node_modules/jose/dist/browser/jwe/compact/decrypt.js","webpack://_N_E/../../node_modules/jose/dist/browser/jwe/general/decrypt.js","webpack://_N_E/../../node_modules/jose/dist/browser/runtime/key_to_jwk.js","webpack://_N_E/../../node_modules/jose/dist/browser/key/export.js","webpack://_N_E/../../node_modules/jose/dist/browser/lib/encrypt_key_management.js","webpack://_N_E/../../node_modules/jose/dist/browser/jwe/flattened/encrypt.js","webpack://_N_E/../../node_modules/jose/dist/browser/jwe/general/encrypt.js","webpack://_N_E/../../node_modules/jose/dist/browser/runtime/subtle_dsa.js","webpack://_N_E/../../node_modules/jose/dist/browser/runtime/check_key_length.js","webpack://_N_E/../../node_modules/jose/dist/browser/lib/crypto_key.js","webpack://_N_E/../../node_modules/jose/dist/browser/lib/invalid_key_input.js","webpack://_N_E/../../node_modules/jose/dist/browser/runtime/is_key_like.js","webpack://_N_E/../../node_modules/jose/dist/browser/runtime/get_sign_verify_key.js","webpack://_N_E/../../node_modules/jose/dist/browser/runtime/verify.js","webpack://_N_E/../../node_modules/jose/dist/browser/lib/is_disjoint.js","webpack://_N_E/../../node_modules/jose/dist/browser/lib/is_object.js","webpack://_N_E/../../node_modules/jose/dist/browser/lib/check_key_type.js","webpack://_N_E/../../node_modules/jose/dist/browser/lib/validate_algorithms.js","webpack://_N_E/../../node_modules/jose/dist/browser/jws/flattened/verify.js","webpack://_N_E/../../node_modules/jose/dist/browser/jws/compact/verify.js","webpack://_N_E/../../node_modules/jose/dist/browser/jws/general/verify.js","webpack://_N_E/../../node_modules/jose/dist/browser/lib/epoch.js","webpack://_N_E/../../node_modules/jose/dist/browser/lib/secs.js","webpack://_N_E/../../node_modules/jose/dist/browser/lib/jwt_claims_set.js","webpack://_N_E/../../node_modules/jose/dist/browser/jwt/verify.js","webpack://_N_E/../../node_modules/jose/dist/browser/jwt/decrypt.js","webpack://_N_E/../../node_modules/jose/dist/browser/jwe/compact/encrypt.js","webpack://_N_E/../../node_modules/jose/dist/browser/runtime/sign.js","webpack://_N_E/../../node_modules/jose/dist/browser/jws/flattened/sign.js","webpack://_N_E/../../node_modules/jose/dist/browser/jws/compact/sign.js","webpack://_N_E/../../node_modules/jose/dist/browser/jws/general/sign.js","webpack://_N_E/../../node_modules/jose/dist/browser/jwt/produce.js","webpack://_N_E/../../node_modules/jose/dist/browser/jwt/sign.js","webpack://_N_E/../../node_modules/jose/dist/browser/jwt/encrypt.js","webpack://_N_E/../../node_modules/jose/dist/browser/jwk/thumbprint.js","webpack://_N_E/../../node_modules/jose/dist/browser/jwk/embedded.js","webpack://_N_E/../../node_modules/jose/dist/browser/jwks/local.js","webpack://_N_E/../../node_modules/jose/dist/browser/runtime/fetch_jwks.js","webpack://_N_E/../../node_modules/jose/dist/browser/jwks/remote.js","webpack://_N_E/../../node_modules/jose/dist/browser/jwt/unsecured.js","webpack://_N_E/../../node_modules/jose/dist/browser/util/base64url.js","webpack://_N_E/../../node_modules/jose/dist/browser/util/decode_protected_header.js","webpack://_N_E/../../node_modules/jose/dist/browser/util/decode_jwt.js","webpack://_N_E/../../node_modules/jose/dist/browser/runtime/generate.js","webpack://_N_E/../../node_modules/jose/dist/browser/key/generate_key_pair.js","webpack://_N_E/../../node_modules/jose/dist/browser/key/generate_secret.js","webpack://_N_E/../../node_modules/jose/dist/browser/index.js","webpack://_N_E/../../node_modules/next/dist/esm/server/request/utils.js","webpack://_N_E/../../node_modules/next/dist/esm/server/request/cookies.js","webpack://_N_E/../../node_modules/next/dist/esm/server/request/headers.js","webpack://_N_E/../../node_modules/next/dist/esm/server/request/draft-mode.js","webpack://_N_E/../../node_modules/next/dist/esm/api/headers.js","webpack://_N_E/../../node_modules/superjson/dist/esm/double-indexed-kv.js","webpack://_N_E/../../node_modules/superjson/dist/esm/registry.js","webpack://_N_E/../../node_modules/superjson/dist/esm/class-registry.js","webpack://_N_E/../../node_modules/superjson/dist/esm/util.js","webpack://_N_E/../../node_modules/superjson/dist/esm/custom-transformer-registry.js","webpack://_N_E/../../node_modules/superjson/dist/esm/is.js","webpack://_N_E/../../node_modules/superjson/dist/esm/pathstringifier.js","webpack://_N_E/../../node_modules/superjson/dist/esm/transformer.js","webpack://_N_E/../../node_modules/superjson/dist/esm/accessDeep.js","webpack://_N_E/../../node_modules/superjson/dist/esm/plainer.js","webpack://_N_E/../../node_modules/is-what/dist/index.js","webpack://_N_E/../../node_modules/copy-anything/dist/index.js","webpack://_N_E/../../node_modules/superjson/dist/esm/index.js","webpack://_N_E/../../packages/api/src/trpc.ts","webpack://_N_E/../../packages/api/src/routers/greeting.ts","webpack://_N_E/../../packages/api/src/routers/_app.ts","webpack://_N_E/../../packages/api/src/index.ts","webpack://_N_E/../../node_modules/@trpc/server/dist/observable-UMO3vUa_.mjs","webpack://_N_E/../../node_modules/@trpc/server/dist/resolveResponse-CzlbRpCI.mjs","webpack://_N_E/../../node_modules/@trpc/server/dist/adapters/fetch/index.mjs","webpack://_N_E/./app/api/trpc/[trpc]/route.ts","webpack://_N_E/./app/api/trpc/[trpc]/route.ts?6bac","webpack://_N_E/?3120","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/cache-handlers/default.js","webpack://_N_E/../../node_modules/next/dist/esm/server/use-cache/handlers.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/scheduler.js","webpack://_N_E/../../node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js","webpack://_N_E/../../node_modules/next/dist/compiled/path-to-regexp/index.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/incremental-cache/tags-manifest.external.js","webpack://_N_E/../../node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js","webpack://_N_E/../../node_modules/next/dist/compiled/react-dom/react-dom.react-server.js","webpack://_N_E/../../node_modules/next/dist/esm/server/response-cache/types.js","webpack://_N_E/../../node_modules/next/dist/esm/server/stream-utils/encodedTags.js","webpack://_N_E/../../node_modules/next/dist/esm/server/stream-utils/node-web-streams-helper.js","webpack://_N_E/../../node_modules/next/dist/esm/server/render-result.js","webpack://_N_E/../../node_modules/next/dist/esm/server/response-cache/utils.js","webpack://_N_E/../../node_modules/next/dist/esm/server/response-cache/index.js","webpack://_N_E/../../../../src/shared/lib/isomorphic/path.js","webpack://_N_E/../../node_modules/next/dist/esm/server/web/utils.js","webpack://_N_E/../../node_modules/@supabase/postgrest-js/dist/cjs/constants.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/trace/constants.js","webpack://_N_E/../../node_modules/ws/browser.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/constants.js","webpack://_N_E/../../node_modules/next/dist/esm/server/create-deduped-by-callsite-server-error-logger.js","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/../../node_modules/next/dist/esm/server/route-kind.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/parse-path.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/clone-response.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/dedupe-fetch.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/patch-fetch.js","webpack://_N_E/../../node_modules/@supabase/node-fetch/browser.js","webpack://_N_E/../../node_modules/@supabase/postgrest-js/dist/cjs/PostgrestError.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/lib/buffer_utils.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/runtime/base64url.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/util/errors.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/runtime/webcrypto.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/runtime/random.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/lib/iv.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/lib/check_iv_length.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/runtime/check_cek_length.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/runtime/decrypt.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/runtime/zlib.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/runtime/bogus.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/runtime/aeskw.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/runtime/ecdhes.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/lib/check_p2s.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/runtime/pbes2kw.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/runtime/subtle_rsaes.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/runtime/rsaes.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/lib/cek.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/runtime/asn1.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/runtime/jwk_to_key.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/lib/is_object.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/key/import.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/runtime/encrypt.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/lib/aesgcmkw.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/lib/decrypt_key_management.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/lib/validate_crit.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/jwe/flattened/decrypt.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/jwe/compact/decrypt.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/jwe/general/decrypt.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/runtime/key_to_jwk.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/key/export.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/lib/encrypt_key_management.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/jwe/flattened/encrypt.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/jwe/general/encrypt.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/runtime/subtle_dsa.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/runtime/verify.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/jws/flattened/verify.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/jws/compact/verify.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/jws/general/verify.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/lib/secs.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/lib/jwt_claims_set.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/jwt/verify.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/jwt/decrypt.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/jwe/compact/encrypt.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/runtime/sign.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/jws/flattened/sign.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/jws/compact/sign.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/jws/general/sign.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/jwt/produce.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/jwt/sign.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/jwt/encrypt.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/jwk/thumbprint.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/jwk/embedded.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/jwks/local.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/runtime/fetch_jwks.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/jwks/remote.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/jwt/unsecured.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/util/base64url.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/util/decode_protected_header.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/util/decode_jwt.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/runtime/generate.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/key/generate_key_pair.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/key/generate_secret.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/node_modules/jose/dist/browser/index.js","webpack://_N_E/../../node_modules/@supabase/auth-helpers-shared/dist/index.mjs","webpack://_N_E/../../node_modules/next/dist/compiled/@edge-runtime/cookies/index.js","webpack://_N_E/../../node_modules/@supabase/postgrest-js/dist/cjs/PostgrestBuilder.js","webpack://_N_E/../../node_modules/next/dist/esm/server/route-modules/route-module.js","webpack://_N_E/../../node_modules/next/dist/esm/server/web/http.js","webpack://_N_E/../../node_modules/next/dist/esm/server/route-modules/app-route/helpers/get-pathname-from-absolute-path.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/picocolors.js","webpack://_N_E/../../node_modules/next/dist/esm/build/output/log.js","webpack://_N_E/../../node_modules/next/dist/esm/server/route-modules/app-route/helpers/auto-implement-methods.js","webpack://_N_E/../../node_modules/next/dist/esm/server/route-modules/app-route/helpers/parsed-url-query-to-params.js","webpack://_N_E/../../../../src/shared/lib/lazy-dynamic/bailout-to-csr.ts","webpack://_N_E/../../../../src/client/components/http-access-fallback/http-access-fallback.ts","webpack://_N_E/../../../src/client/components/redirect-status-code.ts","webpack://_N_E/../../../src/client/components/redirect-error.ts","webpack://_N_E/../../../src/client/components/is-next-router-error.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/create-error-handler.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/prospective-render-utils.js","webpack://_N_E/../../../src/shared/lib/app-router-context.shared-runtime.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/route-modules/app-route/shared-modules.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/server-action-request-meta.js","webpack://_N_E/../../node_modules/next/dist/esm/server/route-modules/app-route/helpers/clean-url.js","webpack://_N_E/../../node_modules/next/dist/esm/server/route-modules/app-route/helpers/is-static-gen-enabled.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/cache-signal.js","webpack://_N_E/../../../../src/shared/lib/utils/reflect-utils.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/request/params.js","webpack://_N_E/../../../src/client/components/redirect.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/route-modules/app-route/module.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/lazy-result.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/lru-cache.js","webpack://_N_E/../../node_modules/next/dist/compiled/native-url/index.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/action-async-storage-instance.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/action-async-storage.external.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/work-async-storage-instance.js","webpack://_N_E/?e2aa","webpack://_N_E/../../node_modules/@supabase/postgrest-js/dist/cjs/PostgrestTransformBuilder.js","webpack://_N_E/../../node_modules/next/dist/esm/server/route-modules/app-route/module.compiled.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/work-unit-async-storage-instance.js","webpack://_N_E/../../node_modules/next/dist/compiled/cookie/index.js","webpack://_N_E/../../node_modules/next/dist/experimental/testmode/server-edge.js","webpack://_N_E/../../node_modules/next/dist/compiled/p-queue/index.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/async-local-storage.js","webpack://_N_E/../../node_modules/next/dist/esm/server/dynamic-rendering-utils.js","webpack://_N_E/../../node_modules/@supabase/functions-js/dist/module/helper.js","webpack://_N_E/../../node_modules/@supabase/functions-js/dist/module/types.js","webpack://_N_E/../../node_modules/@supabase/functions-js/dist/module/FunctionsClient.js","webpack://_N_E/../../node_modules/@supabase/postgrest-js/dist/esm/wrapper.mjs","webpack://_N_E/../../node_modules/@supabase/realtime-js/dist/module/lib/version.js","webpack://_N_E/../../node_modules/@supabase/realtime-js/dist/module/lib/constants.js","webpack://_N_E/../../node_modules/@supabase/realtime-js/dist/module/lib/serializer.js","webpack://_N_E/../../node_modules/@supabase/realtime-js/dist/module/lib/timer.js","webpack://_N_E/../../node_modules/@supabase/realtime-js/dist/module/lib/transformers.js","webpack://_N_E/../../node_modules/@supabase/realtime-js/dist/module/lib/push.js","webpack://_N_E/../../node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js","webpack://_N_E/../../node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js","webpack://_N_E/../../node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js","webpack://_N_E/../../node_modules/@supabase/realtime-js/dist/module/index.js","webpack://_N_E/../../node_modules/@supabase/storage-js/dist/module/lib/errors.js","webpack://_N_E/../../node_modules/@supabase/storage-js/dist/module/lib/helpers.js","webpack://_N_E/../../node_modules/@supabase/storage-js/dist/module/lib/fetch.js","webpack://_N_E/../../node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.js","webpack://_N_E/../../node_modules/@supabase/storage-js/dist/module/lib/version.js","webpack://_N_E/../../node_modules/@supabase/storage-js/dist/module/lib/constants.js","webpack://_N_E/../../node_modules/@supabase/storage-js/dist/module/packages/StorageBucketApi.js","webpack://_N_E/../../node_modules/@supabase/storage-js/dist/module/StorageClient.js","webpack://_N_E/../../node_modules/@supabase/supabase-js/dist/module/lib/version.js","webpack://_N_E/../../node_modules/@supabase/supabase-js/dist/module/lib/constants.js","webpack://_N_E/../../node_modules/@supabase/supabase-js/dist/module/lib/fetch.js","webpack://_N_E/../../node_modules/@supabase/supabase-js/dist/module/lib/helpers.js","webpack://_N_E/../../node_modules/@supabase/auth-js/dist/module/lib/version.js","webpack://_N_E/../../node_modules/@supabase/auth-js/dist/module/lib/constants.js","webpack://_N_E/../../node_modules/@supabase/auth-js/dist/module/lib/helpers.js","webpack://_N_E/../../node_modules/@supabase/auth-js/dist/module/lib/errors.js","webpack://_N_E/../../node_modules/@supabase/auth-js/dist/module/lib/fetch.js","webpack://_N_E/../../node_modules/@supabase/auth-js/dist/module/GoTrueAdminApi.js","webpack://_N_E/../../node_modules/@supabase/auth-js/dist/module/lib/local-storage.js","webpack://_N_E/../../node_modules/@supabase/auth-js/dist/module/lib/polyfills.js","webpack://_N_E/../../node_modules/@supabase/auth-js/dist/module/lib/locks.js","webpack://_N_E/../../node_modules/@supabase/auth-js/dist/module/GoTrueClient.js","webpack://_N_E/../../node_modules/@supabase/auth-js/dist/module/AuthAdminApi.js","webpack://_N_E/../../node_modules/@supabase/auth-js/dist/module/AuthClient.js","webpack://_N_E/../../node_modules/@supabase/auth-js/dist/module/index.js","webpack://_N_E/../../node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js","webpack://_N_E/../../node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js","webpack://_N_E/../../node_modules/@supabase/supabase-js/dist/module/index.js","webpack://_N_E/../../node_modules/next/dist/esm/server/web/spec-extension/request.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/trace/tracer.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/implicit-tags.js","webpack://_N_E/../../node_modules/set-cookie-parser/lib/set-cookie.js","webpack://_N_E/../../node_modules/@supabase/postgrest-js/dist/cjs/PostgrestQueryBuilder.js","webpack://_N_E/../../node_modules/next/dist/esm/server/web/spec-extension/cookies.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/after-task-async-storage-instance.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/after-task-async-storage.external.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/path-has-prefix.ts","webpack://_N_E/../../node_modules/next/dist/compiled/react/react.react-server.js","webpack://_N_E/../../node_modules/next/dist/esm/server/api-utils/index.js","webpack://_N_E/../../node_modules/next/dist/esm/server/async-storage/draft-mode-provider.js","webpack://_N_E/../../node_modules/next/dist/esm/server/async-storage/request-store.js","webpack://_N_E/../../node_modules/next/dist/compiled/path-browserify/index.js","webpack://_N_E/../../node_modules/next/dist/compiled/react-dom/cjs/react-dom.react-server.production.js","webpack://_N_E/../../../../src/shared/lib/page-path/ensure-leading-slash.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/web/error.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/remove-trailing-slash.ts","webpack://_N_E/../../node_modules/next/dist/compiled/react/cjs/react.react-server.production.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/work-async-storage.external.js","webpack://_N_E/../../node_modules/@supabase/postgrest-js/dist/cjs/version.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    getTestReqInfo: null,\n    withRequest: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    getTestReqInfo: function() {\n        return getTestReqInfo;\n    },\n    withRequest: function() {\n        return withRequest;\n    }\n});\nconst _nodeasync_hooks = require(\"node:async_hooks\");\nconst testStorage = new _nodeasync_hooks.AsyncLocalStorage();\nfunction extractTestInfoFromRequest(req, reader) {\n    const proxyPortHeader = reader.header(req, 'next-test-proxy-port');\n    if (!proxyPortHeader) {\n        return undefined;\n    }\n    const url = reader.url(req);\n    const proxyPort = Number(proxyPortHeader);\n    const testData = reader.header(req, 'next-test-data') || '';\n    return {\n        url,\n        proxyPort,\n        testData\n    };\n}\nfunction withRequest(req, reader, fn) {\n    const testReqInfo = extractTestInfoFromRequest(req, reader);\n    if (!testReqInfo) {\n        return fn();\n    }\n    return testStorage.run(testReqInfo, fn);\n}\nfunction getTestReqInfo(req, reader) {\n    const testReqInfo = testStorage.getStore();\n    if (testReqInfo) {\n        return testReqInfo;\n    }\n    if (req && reader) {\n        return extractTestInfoFromRequest(req, reader);\n    }\n    return undefined;\n}\n\n//# sourceMappingURL=context.js.map","import { ReflectAdapter } from './reflect';\n/**\n * @internal\n */ export class ReadonlyHeadersError extends Error {\n    constructor(){\n        super('Headers cannot be modified. Read more: https://nextjs.org/docs/app/api-reference/functions/headers');\n    }\n    static callable() {\n        throw new ReadonlyHeadersError();\n    }\n}\nexport class HeadersAdapter extends Headers {\n    constructor(headers){\n        // We've already overridden the methods that would be called, so we're just\n        // calling the super constructor to ensure that the instanceof check works.\n        super();\n        this.headers = new Proxy(headers, {\n            get (target, prop, receiver) {\n                // Because this is just an object, we expect that all \"get\" operations\n                // are for properties. If it's a \"get\" for a symbol, we'll just return\n                // the symbol.\n                if (typeof prop === 'symbol') {\n                    return ReflectAdapter.get(target, prop, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return undefined.\n                if (typeof original === 'undefined') return;\n                // If the original casing exists, return the value.\n                return ReflectAdapter.get(target, original, receiver);\n            },\n            set (target, prop, value, receiver) {\n                if (typeof prop === 'symbol') {\n                    return ReflectAdapter.set(target, prop, value, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, use the prop as the key.\n                return ReflectAdapter.set(target, original ?? prop, value, receiver);\n            },\n            has (target, prop) {\n                if (typeof prop === 'symbol') return ReflectAdapter.has(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return false.\n                if (typeof original === 'undefined') return false;\n                // If the original casing exists, return true.\n                return ReflectAdapter.has(target, original);\n            },\n            deleteProperty (target, prop) {\n                if (typeof prop === 'symbol') return ReflectAdapter.deleteProperty(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return true.\n                if (typeof original === 'undefined') return true;\n                // If the original casing exists, delete the property.\n                return ReflectAdapter.deleteProperty(target, original);\n            }\n        });\n    }\n    /**\n   * Seals a Headers instance to prevent modification by throwing an error when\n   * any mutating method is called.\n   */ static seal(headers) {\n        return new Proxy(headers, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case 'append':\n                    case 'delete':\n                    case 'set':\n                        return ReadonlyHeadersError.callable;\n                    default:\n                        return ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n    /**\n   * Merges a header value into a string. This stores multiple values as an\n   * array, so we need to merge them into a string.\n   *\n   * @param value a header value\n   * @returns a merged header value (a string)\n   */ merge(value) {\n        if (Array.isArray(value)) return value.join(', ');\n        return value;\n    }\n    /**\n   * Creates a Headers instance from a plain object or a Headers instance.\n   *\n   * @param headers a plain object or a Headers instance\n   * @returns a headers instance\n   */ static from(headers) {\n        if (headers instanceof Headers) return headers;\n        return new HeadersAdapter(headers);\n    }\n    append(name, value) {\n        const existing = this.headers[name];\n        if (typeof existing === 'string') {\n            this.headers[name] = [\n                existing,\n                value\n            ];\n        } else if (Array.isArray(existing)) {\n            existing.push(value);\n        } else {\n            this.headers[name] = value;\n        }\n    }\n    delete(name) {\n        delete this.headers[name];\n    }\n    get(name) {\n        const value = this.headers[name];\n        if (typeof value !== 'undefined') return this.merge(value);\n        return null;\n    }\n    has(name) {\n        return typeof this.headers[name] !== 'undefined';\n    }\n    set(name, value) {\n        this.headers[name] = value;\n    }\n    forEach(callbackfn, thisArg) {\n        for (const [name, value] of this.entries()){\n            callbackfn.call(thisArg, value, name, this);\n        }\n    }\n    *entries() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(name);\n            yield [\n                name,\n                value\n            ];\n        }\n    }\n    *keys() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            yield name;\n        }\n    }\n    *values() {\n        for (const key of Object.keys(this.headers)){\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(key);\n            yield value;\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n}\n\n//# sourceMappingURL=headers.js.map","'use strict';\n\nvar s;\nif (process.env.NODE_ENV === 'production') {\n  s = require('./cjs/react-server-dom-webpack-server.edge.production.js');\n} else {\n  s = require('./cjs/react-server-dom-webpack-server.edge.development.js');\n}\n\nexports.renderToReadableStream = s.renderToReadableStream;\nexports.decodeReply = s.decodeReply;\nexports.decodeReplyFromAsyncIterable = s.decodeReplyFromAsyncIterable;\nexports.decodeAction = s.decodeAction;\nexports.decodeFormState = s.decodeFormState;\nexports.registerServerReference = s.registerServerReference;\nexports.registerClientReference = s.registerClientReference;\nexports.createClientModuleProxy = s.createClientModuleProxy;\nexports.createTemporaryReferenceSet = s.createTemporaryReferenceSet;\n","const DYNAMIC_ERROR_CODE = 'DYNAMIC_SERVER_USAGE'\n\nexport class DynamicServerError extends Error {\n  digest: typeof DYNAMIC_ERROR_CODE = DYNAMIC_ERROR_CODE\n\n  constructor(public readonly description: string) {\n    super(`Dynamic server usage: ${description}`)\n  }\n}\n\nexport function isDynamicServerError(err: unknown): err is DynamicServerError {\n  if (\n    typeof err !== 'object' ||\n    err === null ||\n    !('digest' in err) ||\n    typeof err.digest !== 'string'\n  ) {\n    return false\n  }\n\n  return err.digest === DYNAMIC_ERROR_CODE\n}\n",null,"(function(){\"use strict\";var e={815:function(e){function hasOwnProperty(e,r){return Object.prototype.hasOwnProperty.call(e,r)}e.exports=function(e,n,t,o){n=n||\"&\";t=t||\"=\";var a={};if(typeof e!==\"string\"||e.length===0){return a}var i=/\\+/g;e=e.split(n);var u=1e3;if(o&&typeof o.maxKeys===\"number\"){u=o.maxKeys}var c=e.length;if(u>0&&c>u){c=u}for(var p=0;p<c;++p){var f=e[p].replace(i,\"%20\"),s=f.indexOf(t),_,l,y,d;if(s>=0){_=f.substr(0,s);l=f.substr(s+1)}else{_=f;l=\"\"}y=decodeURIComponent(_);d=decodeURIComponent(l);if(!hasOwnProperty(a,y)){a[y]=d}else if(r(a[y])){a[y].push(d)}else{a[y]=[a[y],d]}}return a};var r=Array.isArray||function(e){return Object.prototype.toString.call(e)===\"[object Array]\"}},577:function(e){var stringifyPrimitive=function(e){switch(typeof e){case\"string\":return e;case\"boolean\":return e?\"true\":\"false\";case\"number\":return isFinite(e)?e:\"\";default:return\"\"}};e.exports=function(e,t,o,a){t=t||\"&\";o=o||\"=\";if(e===null){e=undefined}if(typeof e===\"object\"){return map(n(e),(function(n){var a=encodeURIComponent(stringifyPrimitive(n))+o;if(r(e[n])){return map(e[n],(function(e){return a+encodeURIComponent(stringifyPrimitive(e))})).join(t)}else{return a+encodeURIComponent(stringifyPrimitive(e[n]))}})).join(t)}if(!a)return\"\";return encodeURIComponent(stringifyPrimitive(a))+o+encodeURIComponent(stringifyPrimitive(e))};var r=Array.isArray||function(e){return Object.prototype.toString.call(e)===\"[object Array]\"};function map(e,r){if(e.map)return e.map(r);var n=[];for(var t=0;t<e.length;t++){n.push(r(e[t],t))}return n}var n=Object.keys||function(e){var r=[];for(var n in e){if(Object.prototype.hasOwnProperty.call(e,n))r.push(n)}return r}}};var r={};function __nccwpck_require__(n){var t=r[n];if(t!==undefined){return t.exports}var o=r[n]={exports:{}};var a=true;try{e[n](o,o.exports,__nccwpck_require__);a=false}finally{if(a)delete r[n]}return o.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var n={};!function(){var e=n;e.decode=e.parse=__nccwpck_require__(815);e.encode=e.stringify=__nccwpck_require__(577)}();module.exports=n})();","const sharedAsyncLocalStorageNotAvailableError = Object.defineProperty(new Error('Invariant: AsyncLocalStorage accessed in runtime where it is not available'), \"__NEXT_ERROR_CODE\", {\n    value: \"E504\",\n    enumerable: false,\n    configurable: true\n});\nclass FakeAsyncLocalStorage {\n    disable() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    getStore() {\n        // This fake implementation of AsyncLocalStorage always returns `undefined`.\n        return undefined;\n    }\n    run() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    exit() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    enterWith() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    static bind(fn) {\n        return fn;\n    }\n}\nconst maybeGlobalAsyncLocalStorage = typeof globalThis !== 'undefined' && globalThis.AsyncLocalStorage;\nexport function createAsyncLocalStorage() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return new maybeGlobalAsyncLocalStorage();\n    }\n    return new FakeAsyncLocalStorage();\n}\nexport function bindSnapshot(fn) {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.bind(fn);\n    }\n    return FakeAsyncLocalStorage.bind(fn);\n}\nexport function createSnapshot() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.snapshot();\n    }\n    return function(fn, ...args) {\n        return fn(...args);\n    };\n}\n\n//# sourceMappingURL=async-local-storage.js.map","export const RSC_HEADER = 'RSC' as const\nexport const ACTION_HEADER = 'Next-Action' as const\n// TODO: Instead of sending the full router state, we only need to send the\n// segment path. Saves bytes. Then we could also use this field for segment\n// prefetches, which also need to specify a particular segment.\nexport const NEXT_ROUTER_STATE_TREE_HEADER = 'Next-Router-State-Tree' as const\nexport const NEXT_ROUTER_PREFETCH_HEADER = 'Next-Router-Prefetch' as const\n// This contains the path to the segment being prefetched.\n// TODO: If we change Next-Router-State-Tree to be a segment path, we can use\n// that instead. Then Next-Router-Prefetch and Next-Router-Segment-Prefetch can\n// be merged into a single enum.\nexport const NEXT_ROUTER_SEGMENT_PREFETCH_HEADER =\n  'Next-Router-Segment-Prefetch' as const\nexport const NEXT_HMR_REFRESH_HEADER = 'Next-HMR-Refresh' as const\nexport const NEXT_HMR_REFRESH_HASH_COOKIE = '__next_hmr_refresh_hash__' as const\nexport const NEXT_URL = 'Next-Url' as const\nexport const RSC_CONTENT_TYPE_HEADER = 'text/x-component' as const\n\nexport const FLIGHT_HEADERS = [\n  RSC_HEADER,\n  NEXT_ROUTER_STATE_TREE_HEADER,\n  NEXT_ROUTER_PREFETCH_HEADER,\n  NEXT_HMR_REFRESH_HEADER,\n  NEXT_ROUTER_SEGMENT_PREFETCH_HEADER,\n] as const\n\nexport const NEXT_RSC_UNION_QUERY = '_rsc' as const\n\nexport const NEXT_ROUTER_STALE_TIME_HEADER = 'x-nextjs-stale-time' as const\nexport const NEXT_DID_POSTPONE_HEADER = 'x-nextjs-postponed' as const\nexport const NEXT_REWRITTEN_PATH_HEADER = 'x-nextjs-rewritten-path' as const\nexport const NEXT_REWRITTEN_QUERY_HEADER = 'x-nextjs-rewritten-query' as const\nexport const NEXT_IS_PRERENDER_HEADER = 'x-nextjs-prerender' as const\n","(()=>{\"use strict\";var e={491:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ContextAPI=void 0;const n=r(223);const a=r(172);const o=r(930);const i=\"context\";const c=new n.NoopContextManager;class ContextAPI{constructor(){}static getInstance(){if(!this._instance){this._instance=new ContextAPI}return this._instance}setGlobalContextManager(e){return(0,a.registerGlobal)(i,e,o.DiagAPI.instance())}active(){return this._getContextManager().active()}with(e,t,r,...n){return this._getContextManager().with(e,t,r,...n)}bind(e,t){return this._getContextManager().bind(e,t)}_getContextManager(){return(0,a.getGlobal)(i)||c}disable(){this._getContextManager().disable();(0,a.unregisterGlobal)(i,o.DiagAPI.instance())}}t.ContextAPI=ContextAPI},930:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagAPI=void 0;const n=r(56);const a=r(912);const o=r(957);const i=r(172);const c=\"diag\";class DiagAPI{constructor(){function _logProxy(e){return function(...t){const r=(0,i.getGlobal)(\"diag\");if(!r)return;return r[e](...t)}}const e=this;const setLogger=(t,r={logLevel:o.DiagLogLevel.INFO})=>{var n,c,s;if(t===e){const t=new Error(\"Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation\");e.error((n=t.stack)!==null&&n!==void 0?n:t.message);return false}if(typeof r===\"number\"){r={logLevel:r}}const u=(0,i.getGlobal)(\"diag\");const l=(0,a.createLogLevelDiagLogger)((c=r.logLevel)!==null&&c!==void 0?c:o.DiagLogLevel.INFO,t);if(u&&!r.suppressOverrideMessage){const e=(s=(new Error).stack)!==null&&s!==void 0?s:\"<failed to generate stacktrace>\";u.warn(`Current logger will be overwritten from ${e}`);l.warn(`Current logger will overwrite one already registered from ${e}`)}return(0,i.registerGlobal)(\"diag\",l,e,true)};e.setLogger=setLogger;e.disable=()=>{(0,i.unregisterGlobal)(c,e)};e.createComponentLogger=e=>new n.DiagComponentLogger(e);e.verbose=_logProxy(\"verbose\");e.debug=_logProxy(\"debug\");e.info=_logProxy(\"info\");e.warn=_logProxy(\"warn\");e.error=_logProxy(\"error\")}static instance(){if(!this._instance){this._instance=new DiagAPI}return this._instance}}t.DiagAPI=DiagAPI},653:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.MetricsAPI=void 0;const n=r(660);const a=r(172);const o=r(930);const i=\"metrics\";class MetricsAPI{constructor(){}static getInstance(){if(!this._instance){this._instance=new MetricsAPI}return this._instance}setGlobalMeterProvider(e){return(0,a.registerGlobal)(i,e,o.DiagAPI.instance())}getMeterProvider(){return(0,a.getGlobal)(i)||n.NOOP_METER_PROVIDER}getMeter(e,t,r){return this.getMeterProvider().getMeter(e,t,r)}disable(){(0,a.unregisterGlobal)(i,o.DiagAPI.instance())}}t.MetricsAPI=MetricsAPI},181:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.PropagationAPI=void 0;const n=r(172);const a=r(874);const o=r(194);const i=r(277);const c=r(369);const s=r(930);const u=\"propagation\";const l=new a.NoopTextMapPropagator;class PropagationAPI{constructor(){this.createBaggage=c.createBaggage;this.getBaggage=i.getBaggage;this.getActiveBaggage=i.getActiveBaggage;this.setBaggage=i.setBaggage;this.deleteBaggage=i.deleteBaggage}static getInstance(){if(!this._instance){this._instance=new PropagationAPI}return this._instance}setGlobalPropagator(e){return(0,n.registerGlobal)(u,e,s.DiagAPI.instance())}inject(e,t,r=o.defaultTextMapSetter){return this._getGlobalPropagator().inject(e,t,r)}extract(e,t,r=o.defaultTextMapGetter){return this._getGlobalPropagator().extract(e,t,r)}fields(){return this._getGlobalPropagator().fields()}disable(){(0,n.unregisterGlobal)(u,s.DiagAPI.instance())}_getGlobalPropagator(){return(0,n.getGlobal)(u)||l}}t.PropagationAPI=PropagationAPI},997:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.TraceAPI=void 0;const n=r(172);const a=r(846);const o=r(139);const i=r(607);const c=r(930);const s=\"trace\";class TraceAPI{constructor(){this._proxyTracerProvider=new a.ProxyTracerProvider;this.wrapSpanContext=o.wrapSpanContext;this.isSpanContextValid=o.isSpanContextValid;this.deleteSpan=i.deleteSpan;this.getSpan=i.getSpan;this.getActiveSpan=i.getActiveSpan;this.getSpanContext=i.getSpanContext;this.setSpan=i.setSpan;this.setSpanContext=i.setSpanContext}static getInstance(){if(!this._instance){this._instance=new TraceAPI}return this._instance}setGlobalTracerProvider(e){const t=(0,n.registerGlobal)(s,this._proxyTracerProvider,c.DiagAPI.instance());if(t){this._proxyTracerProvider.setDelegate(e)}return t}getTracerProvider(){return(0,n.getGlobal)(s)||this._proxyTracerProvider}getTracer(e,t){return this.getTracerProvider().getTracer(e,t)}disable(){(0,n.unregisterGlobal)(s,c.DiagAPI.instance());this._proxyTracerProvider=new a.ProxyTracerProvider}}t.TraceAPI=TraceAPI},277:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.deleteBaggage=t.setBaggage=t.getActiveBaggage=t.getBaggage=void 0;const n=r(491);const a=r(780);const o=(0,a.createContextKey)(\"OpenTelemetry Baggage Key\");function getBaggage(e){return e.getValue(o)||undefined}t.getBaggage=getBaggage;function getActiveBaggage(){return getBaggage(n.ContextAPI.getInstance().active())}t.getActiveBaggage=getActiveBaggage;function setBaggage(e,t){return e.setValue(o,t)}t.setBaggage=setBaggage;function deleteBaggage(e){return e.deleteValue(o)}t.deleteBaggage=deleteBaggage},993:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.BaggageImpl=void 0;class BaggageImpl{constructor(e){this._entries=e?new Map(e):new Map}getEntry(e){const t=this._entries.get(e);if(!t){return undefined}return Object.assign({},t)}getAllEntries(){return Array.from(this._entries.entries()).map((([e,t])=>[e,t]))}setEntry(e,t){const r=new BaggageImpl(this._entries);r._entries.set(e,t);return r}removeEntry(e){const t=new BaggageImpl(this._entries);t._entries.delete(e);return t}removeEntries(...e){const t=new BaggageImpl(this._entries);for(const r of e){t._entries.delete(r)}return t}clear(){return new BaggageImpl}}t.BaggageImpl=BaggageImpl},830:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.baggageEntryMetadataSymbol=void 0;t.baggageEntryMetadataSymbol=Symbol(\"BaggageEntryMetadata\")},369:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.baggageEntryMetadataFromString=t.createBaggage=void 0;const n=r(930);const a=r(993);const o=r(830);const i=n.DiagAPI.instance();function createBaggage(e={}){return new a.BaggageImpl(new Map(Object.entries(e)))}t.createBaggage=createBaggage;function baggageEntryMetadataFromString(e){if(typeof e!==\"string\"){i.error(`Cannot create baggage metadata from unknown type: ${typeof e}`);e=\"\"}return{__TYPE__:o.baggageEntryMetadataSymbol,toString(){return e}}}t.baggageEntryMetadataFromString=baggageEntryMetadataFromString},67:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.context=void 0;const n=r(491);t.context=n.ContextAPI.getInstance()},223:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopContextManager=void 0;const n=r(780);class NoopContextManager{active(){return n.ROOT_CONTEXT}with(e,t,r,...n){return t.call(r,...n)}bind(e,t){return t}enable(){return this}disable(){return this}}t.NoopContextManager=NoopContextManager},780:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ROOT_CONTEXT=t.createContextKey=void 0;function createContextKey(e){return Symbol.for(e)}t.createContextKey=createContextKey;class BaseContext{constructor(e){const t=this;t._currentContext=e?new Map(e):new Map;t.getValue=e=>t._currentContext.get(e);t.setValue=(e,r)=>{const n=new BaseContext(t._currentContext);n._currentContext.set(e,r);return n};t.deleteValue=e=>{const r=new BaseContext(t._currentContext);r._currentContext.delete(e);return r}}}t.ROOT_CONTEXT=new BaseContext},506:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.diag=void 0;const n=r(930);t.diag=n.DiagAPI.instance()},56:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagComponentLogger=void 0;const n=r(172);class DiagComponentLogger{constructor(e){this._namespace=e.namespace||\"DiagComponentLogger\"}debug(...e){return logProxy(\"debug\",this._namespace,e)}error(...e){return logProxy(\"error\",this._namespace,e)}info(...e){return logProxy(\"info\",this._namespace,e)}warn(...e){return logProxy(\"warn\",this._namespace,e)}verbose(...e){return logProxy(\"verbose\",this._namespace,e)}}t.DiagComponentLogger=DiagComponentLogger;function logProxy(e,t,r){const a=(0,n.getGlobal)(\"diag\");if(!a){return}r.unshift(t);return a[e](...r)}},972:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagConsoleLogger=void 0;const r=[{n:\"error\",c:\"error\"},{n:\"warn\",c:\"warn\"},{n:\"info\",c:\"info\"},{n:\"debug\",c:\"debug\"},{n:\"verbose\",c:\"trace\"}];class DiagConsoleLogger{constructor(){function _consoleFunc(e){return function(...t){if(console){let r=console[e];if(typeof r!==\"function\"){r=console.log}if(typeof r===\"function\"){return r.apply(console,t)}}}}for(let e=0;e<r.length;e++){this[r[e].n]=_consoleFunc(r[e].c)}}}t.DiagConsoleLogger=DiagConsoleLogger},912:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.createLogLevelDiagLogger=void 0;const n=r(957);function createLogLevelDiagLogger(e,t){if(e<n.DiagLogLevel.NONE){e=n.DiagLogLevel.NONE}else if(e>n.DiagLogLevel.ALL){e=n.DiagLogLevel.ALL}t=t||{};function _filterFunc(r,n){const a=t[r];if(typeof a===\"function\"&&e>=n){return a.bind(t)}return function(){}}return{error:_filterFunc(\"error\",n.DiagLogLevel.ERROR),warn:_filterFunc(\"warn\",n.DiagLogLevel.WARN),info:_filterFunc(\"info\",n.DiagLogLevel.INFO),debug:_filterFunc(\"debug\",n.DiagLogLevel.DEBUG),verbose:_filterFunc(\"verbose\",n.DiagLogLevel.VERBOSE)}}t.createLogLevelDiagLogger=createLogLevelDiagLogger},957:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagLogLevel=void 0;var r;(function(e){e[e[\"NONE\"]=0]=\"NONE\";e[e[\"ERROR\"]=30]=\"ERROR\";e[e[\"WARN\"]=50]=\"WARN\";e[e[\"INFO\"]=60]=\"INFO\";e[e[\"DEBUG\"]=70]=\"DEBUG\";e[e[\"VERBOSE\"]=80]=\"VERBOSE\";e[e[\"ALL\"]=9999]=\"ALL\"})(r=t.DiagLogLevel||(t.DiagLogLevel={}))},172:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.unregisterGlobal=t.getGlobal=t.registerGlobal=void 0;const n=r(200);const a=r(521);const o=r(130);const i=a.VERSION.split(\".\")[0];const c=Symbol.for(`opentelemetry.js.api.${i}`);const s=n._globalThis;function registerGlobal(e,t,r,n=false){var o;const i=s[c]=(o=s[c])!==null&&o!==void 0?o:{version:a.VERSION};if(!n&&i[e]){const t=new Error(`@opentelemetry/api: Attempted duplicate registration of API: ${e}`);r.error(t.stack||t.message);return false}if(i.version!==a.VERSION){const t=new Error(`@opentelemetry/api: Registration of version v${i.version} for ${e} does not match previously registered API v${a.VERSION}`);r.error(t.stack||t.message);return false}i[e]=t;r.debug(`@opentelemetry/api: Registered a global for ${e} v${a.VERSION}.`);return true}t.registerGlobal=registerGlobal;function getGlobal(e){var t,r;const n=(t=s[c])===null||t===void 0?void 0:t.version;if(!n||!(0,o.isCompatible)(n)){return}return(r=s[c])===null||r===void 0?void 0:r[e]}t.getGlobal=getGlobal;function unregisterGlobal(e,t){t.debug(`@opentelemetry/api: Unregistering a global for ${e} v${a.VERSION}.`);const r=s[c];if(r){delete r[e]}}t.unregisterGlobal=unregisterGlobal},130:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.isCompatible=t._makeCompatibilityCheck=void 0;const n=r(521);const a=/^(\\d+)\\.(\\d+)\\.(\\d+)(-(.+))?$/;function _makeCompatibilityCheck(e){const t=new Set([e]);const r=new Set;const n=e.match(a);if(!n){return()=>false}const o={major:+n[1],minor:+n[2],patch:+n[3],prerelease:n[4]};if(o.prerelease!=null){return function isExactmatch(t){return t===e}}function _reject(e){r.add(e);return false}function _accept(e){t.add(e);return true}return function isCompatible(e){if(t.has(e)){return true}if(r.has(e)){return false}const n=e.match(a);if(!n){return _reject(e)}const i={major:+n[1],minor:+n[2],patch:+n[3],prerelease:n[4]};if(i.prerelease!=null){return _reject(e)}if(o.major!==i.major){return _reject(e)}if(o.major===0){if(o.minor===i.minor&&o.patch<=i.patch){return _accept(e)}return _reject(e)}if(o.minor<=i.minor){return _accept(e)}return _reject(e)}}t._makeCompatibilityCheck=_makeCompatibilityCheck;t.isCompatible=_makeCompatibilityCheck(n.VERSION)},886:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.metrics=void 0;const n=r(653);t.metrics=n.MetricsAPI.getInstance()},901:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ValueType=void 0;var r;(function(e){e[e[\"INT\"]=0]=\"INT\";e[e[\"DOUBLE\"]=1]=\"DOUBLE\"})(r=t.ValueType||(t.ValueType={}))},102:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.createNoopMeter=t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC=t.NOOP_OBSERVABLE_GAUGE_METRIC=t.NOOP_OBSERVABLE_COUNTER_METRIC=t.NOOP_UP_DOWN_COUNTER_METRIC=t.NOOP_HISTOGRAM_METRIC=t.NOOP_COUNTER_METRIC=t.NOOP_METER=t.NoopObservableUpDownCounterMetric=t.NoopObservableGaugeMetric=t.NoopObservableCounterMetric=t.NoopObservableMetric=t.NoopHistogramMetric=t.NoopUpDownCounterMetric=t.NoopCounterMetric=t.NoopMetric=t.NoopMeter=void 0;class NoopMeter{constructor(){}createHistogram(e,r){return t.NOOP_HISTOGRAM_METRIC}createCounter(e,r){return t.NOOP_COUNTER_METRIC}createUpDownCounter(e,r){return t.NOOP_UP_DOWN_COUNTER_METRIC}createObservableGauge(e,r){return t.NOOP_OBSERVABLE_GAUGE_METRIC}createObservableCounter(e,r){return t.NOOP_OBSERVABLE_COUNTER_METRIC}createObservableUpDownCounter(e,r){return t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC}addBatchObservableCallback(e,t){}removeBatchObservableCallback(e){}}t.NoopMeter=NoopMeter;class NoopMetric{}t.NoopMetric=NoopMetric;class NoopCounterMetric extends NoopMetric{add(e,t){}}t.NoopCounterMetric=NoopCounterMetric;class NoopUpDownCounterMetric extends NoopMetric{add(e,t){}}t.NoopUpDownCounterMetric=NoopUpDownCounterMetric;class NoopHistogramMetric extends NoopMetric{record(e,t){}}t.NoopHistogramMetric=NoopHistogramMetric;class NoopObservableMetric{addCallback(e){}removeCallback(e){}}t.NoopObservableMetric=NoopObservableMetric;class NoopObservableCounterMetric extends NoopObservableMetric{}t.NoopObservableCounterMetric=NoopObservableCounterMetric;class NoopObservableGaugeMetric extends NoopObservableMetric{}t.NoopObservableGaugeMetric=NoopObservableGaugeMetric;class NoopObservableUpDownCounterMetric extends NoopObservableMetric{}t.NoopObservableUpDownCounterMetric=NoopObservableUpDownCounterMetric;t.NOOP_METER=new NoopMeter;t.NOOP_COUNTER_METRIC=new NoopCounterMetric;t.NOOP_HISTOGRAM_METRIC=new NoopHistogramMetric;t.NOOP_UP_DOWN_COUNTER_METRIC=new NoopUpDownCounterMetric;t.NOOP_OBSERVABLE_COUNTER_METRIC=new NoopObservableCounterMetric;t.NOOP_OBSERVABLE_GAUGE_METRIC=new NoopObservableGaugeMetric;t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC=new NoopObservableUpDownCounterMetric;function createNoopMeter(){return t.NOOP_METER}t.createNoopMeter=createNoopMeter},660:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NOOP_METER_PROVIDER=t.NoopMeterProvider=void 0;const n=r(102);class NoopMeterProvider{getMeter(e,t,r){return n.NOOP_METER}}t.NoopMeterProvider=NoopMeterProvider;t.NOOP_METER_PROVIDER=new NoopMeterProvider},200:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){if(n===undefined)n=r;Object.defineProperty(e,n,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,n){if(n===undefined)n=r;e[n]=t[r]});var a=this&&this.__exportStar||function(e,t){for(var r in e)if(r!==\"default\"&&!Object.prototype.hasOwnProperty.call(t,r))n(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:true});a(r(46),t)},651:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t._globalThis=void 0;t._globalThis=typeof globalThis===\"object\"?globalThis:global},46:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){if(n===undefined)n=r;Object.defineProperty(e,n,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,n){if(n===undefined)n=r;e[n]=t[r]});var a=this&&this.__exportStar||function(e,t){for(var r in e)if(r!==\"default\"&&!Object.prototype.hasOwnProperty.call(t,r))n(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:true});a(r(651),t)},939:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.propagation=void 0;const n=r(181);t.propagation=n.PropagationAPI.getInstance()},874:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopTextMapPropagator=void 0;class NoopTextMapPropagator{inject(e,t){}extract(e,t){return e}fields(){return[]}}t.NoopTextMapPropagator=NoopTextMapPropagator},194:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.defaultTextMapSetter=t.defaultTextMapGetter=void 0;t.defaultTextMapGetter={get(e,t){if(e==null){return undefined}return e[t]},keys(e){if(e==null){return[]}return Object.keys(e)}};t.defaultTextMapSetter={set(e,t,r){if(e==null){return}e[t]=r}}},845:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.trace=void 0;const n=r(997);t.trace=n.TraceAPI.getInstance()},403:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NonRecordingSpan=void 0;const n=r(476);class NonRecordingSpan{constructor(e=n.INVALID_SPAN_CONTEXT){this._spanContext=e}spanContext(){return this._spanContext}setAttribute(e,t){return this}setAttributes(e){return this}addEvent(e,t){return this}setStatus(e){return this}updateName(e){return this}end(e){}isRecording(){return false}recordException(e,t){}}t.NonRecordingSpan=NonRecordingSpan},614:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopTracer=void 0;const n=r(491);const a=r(607);const o=r(403);const i=r(139);const c=n.ContextAPI.getInstance();class NoopTracer{startSpan(e,t,r=c.active()){const n=Boolean(t===null||t===void 0?void 0:t.root);if(n){return new o.NonRecordingSpan}const s=r&&(0,a.getSpanContext)(r);if(isSpanContext(s)&&(0,i.isSpanContextValid)(s)){return new o.NonRecordingSpan(s)}else{return new o.NonRecordingSpan}}startActiveSpan(e,t,r,n){let o;let i;let s;if(arguments.length<2){return}else if(arguments.length===2){s=t}else if(arguments.length===3){o=t;s=r}else{o=t;i=r;s=n}const u=i!==null&&i!==void 0?i:c.active();const l=this.startSpan(e,o,u);const g=(0,a.setSpan)(u,l);return c.with(g,s,undefined,l)}}t.NoopTracer=NoopTracer;function isSpanContext(e){return typeof e===\"object\"&&typeof e[\"spanId\"]===\"string\"&&typeof e[\"traceId\"]===\"string\"&&typeof e[\"traceFlags\"]===\"number\"}},124:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopTracerProvider=void 0;const n=r(614);class NoopTracerProvider{getTracer(e,t,r){return new n.NoopTracer}}t.NoopTracerProvider=NoopTracerProvider},125:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ProxyTracer=void 0;const n=r(614);const a=new n.NoopTracer;class ProxyTracer{constructor(e,t,r,n){this._provider=e;this.name=t;this.version=r;this.options=n}startSpan(e,t,r){return this._getTracer().startSpan(e,t,r)}startActiveSpan(e,t,r,n){const a=this._getTracer();return Reflect.apply(a.startActiveSpan,a,arguments)}_getTracer(){if(this._delegate){return this._delegate}const e=this._provider.getDelegateTracer(this.name,this.version,this.options);if(!e){return a}this._delegate=e;return this._delegate}}t.ProxyTracer=ProxyTracer},846:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ProxyTracerProvider=void 0;const n=r(125);const a=r(124);const o=new a.NoopTracerProvider;class ProxyTracerProvider{getTracer(e,t,r){var a;return(a=this.getDelegateTracer(e,t,r))!==null&&a!==void 0?a:new n.ProxyTracer(this,e,t,r)}getDelegate(){var e;return(e=this._delegate)!==null&&e!==void 0?e:o}setDelegate(e){this._delegate=e}getDelegateTracer(e,t,r){var n;return(n=this._delegate)===null||n===void 0?void 0:n.getTracer(e,t,r)}}t.ProxyTracerProvider=ProxyTracerProvider},996:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.SamplingDecision=void 0;var r;(function(e){e[e[\"NOT_RECORD\"]=0]=\"NOT_RECORD\";e[e[\"RECORD\"]=1]=\"RECORD\";e[e[\"RECORD_AND_SAMPLED\"]=2]=\"RECORD_AND_SAMPLED\"})(r=t.SamplingDecision||(t.SamplingDecision={}))},607:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.getSpanContext=t.setSpanContext=t.deleteSpan=t.setSpan=t.getActiveSpan=t.getSpan=void 0;const n=r(780);const a=r(403);const o=r(491);const i=(0,n.createContextKey)(\"OpenTelemetry Context Key SPAN\");function getSpan(e){return e.getValue(i)||undefined}t.getSpan=getSpan;function getActiveSpan(){return getSpan(o.ContextAPI.getInstance().active())}t.getActiveSpan=getActiveSpan;function setSpan(e,t){return e.setValue(i,t)}t.setSpan=setSpan;function deleteSpan(e){return e.deleteValue(i)}t.deleteSpan=deleteSpan;function setSpanContext(e,t){return setSpan(e,new a.NonRecordingSpan(t))}t.setSpanContext=setSpanContext;function getSpanContext(e){var t;return(t=getSpan(e))===null||t===void 0?void 0:t.spanContext()}t.getSpanContext=getSpanContext},325:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.TraceStateImpl=void 0;const n=r(564);const a=32;const o=512;const i=\",\";const c=\"=\";class TraceStateImpl{constructor(e){this._internalState=new Map;if(e)this._parse(e)}set(e,t){const r=this._clone();if(r._internalState.has(e)){r._internalState.delete(e)}r._internalState.set(e,t);return r}unset(e){const t=this._clone();t._internalState.delete(e);return t}get(e){return this._internalState.get(e)}serialize(){return this._keys().reduce(((e,t)=>{e.push(t+c+this.get(t));return e}),[]).join(i)}_parse(e){if(e.length>o)return;this._internalState=e.split(i).reverse().reduce(((e,t)=>{const r=t.trim();const a=r.indexOf(c);if(a!==-1){const o=r.slice(0,a);const i=r.slice(a+1,t.length);if((0,n.validateKey)(o)&&(0,n.validateValue)(i)){e.set(o,i)}else{}}return e}),new Map);if(this._internalState.size>a){this._internalState=new Map(Array.from(this._internalState.entries()).reverse().slice(0,a))}}_keys(){return Array.from(this._internalState.keys()).reverse()}_clone(){const e=new TraceStateImpl;e._internalState=new Map(this._internalState);return e}}t.TraceStateImpl=TraceStateImpl},564:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.validateValue=t.validateKey=void 0;const r=\"[_0-9a-z-*/]\";const n=`[a-z]${r}{0,255}`;const a=`[a-z0-9]${r}{0,240}@[a-z]${r}{0,13}`;const o=new RegExp(`^(?:${n}|${a})$`);const i=/^[ -~]{0,255}[!-~]$/;const c=/,|=/;function validateKey(e){return o.test(e)}t.validateKey=validateKey;function validateValue(e){return i.test(e)&&!c.test(e)}t.validateValue=validateValue},98:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.createTraceState=void 0;const n=r(325);function createTraceState(e){return new n.TraceStateImpl(e)}t.createTraceState=createTraceState},476:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.INVALID_SPAN_CONTEXT=t.INVALID_TRACEID=t.INVALID_SPANID=void 0;const n=r(475);t.INVALID_SPANID=\"0000000000000000\";t.INVALID_TRACEID=\"00000000000000000000000000000000\";t.INVALID_SPAN_CONTEXT={traceId:t.INVALID_TRACEID,spanId:t.INVALID_SPANID,traceFlags:n.TraceFlags.NONE}},357:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.SpanKind=void 0;var r;(function(e){e[e[\"INTERNAL\"]=0]=\"INTERNAL\";e[e[\"SERVER\"]=1]=\"SERVER\";e[e[\"CLIENT\"]=2]=\"CLIENT\";e[e[\"PRODUCER\"]=3]=\"PRODUCER\";e[e[\"CONSUMER\"]=4]=\"CONSUMER\"})(r=t.SpanKind||(t.SpanKind={}))},139:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.wrapSpanContext=t.isSpanContextValid=t.isValidSpanId=t.isValidTraceId=void 0;const n=r(476);const a=r(403);const o=/^([0-9a-f]{32})$/i;const i=/^[0-9a-f]{16}$/i;function isValidTraceId(e){return o.test(e)&&e!==n.INVALID_TRACEID}t.isValidTraceId=isValidTraceId;function isValidSpanId(e){return i.test(e)&&e!==n.INVALID_SPANID}t.isValidSpanId=isValidSpanId;function isSpanContextValid(e){return isValidTraceId(e.traceId)&&isValidSpanId(e.spanId)}t.isSpanContextValid=isSpanContextValid;function wrapSpanContext(e){return new a.NonRecordingSpan(e)}t.wrapSpanContext=wrapSpanContext},847:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.SpanStatusCode=void 0;var r;(function(e){e[e[\"UNSET\"]=0]=\"UNSET\";e[e[\"OK\"]=1]=\"OK\";e[e[\"ERROR\"]=2]=\"ERROR\"})(r=t.SpanStatusCode||(t.SpanStatusCode={}))},475:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.TraceFlags=void 0;var r;(function(e){e[e[\"NONE\"]=0]=\"NONE\";e[e[\"SAMPLED\"]=1]=\"SAMPLED\"})(r=t.TraceFlags||(t.TraceFlags={}))},521:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.VERSION=void 0;t.VERSION=\"1.6.0\"}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var a=t[r]={exports:{}};var o=true;try{e[r].call(a.exports,a,a.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return a.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r={};(()=>{var e=r;Object.defineProperty(e,\"__esModule\",{value:true});e.trace=e.propagation=e.metrics=e.diag=e.context=e.INVALID_SPAN_CONTEXT=e.INVALID_TRACEID=e.INVALID_SPANID=e.isValidSpanId=e.isValidTraceId=e.isSpanContextValid=e.createTraceState=e.TraceFlags=e.SpanStatusCode=e.SpanKind=e.SamplingDecision=e.ProxyTracerProvider=e.ProxyTracer=e.defaultTextMapSetter=e.defaultTextMapGetter=e.ValueType=e.createNoopMeter=e.DiagLogLevel=e.DiagConsoleLogger=e.ROOT_CONTEXT=e.createContextKey=e.baggageEntryMetadataFromString=void 0;var t=__nccwpck_require__(369);Object.defineProperty(e,\"baggageEntryMetadataFromString\",{enumerable:true,get:function(){return t.baggageEntryMetadataFromString}});var n=__nccwpck_require__(780);Object.defineProperty(e,\"createContextKey\",{enumerable:true,get:function(){return n.createContextKey}});Object.defineProperty(e,\"ROOT_CONTEXT\",{enumerable:true,get:function(){return n.ROOT_CONTEXT}});var a=__nccwpck_require__(972);Object.defineProperty(e,\"DiagConsoleLogger\",{enumerable:true,get:function(){return a.DiagConsoleLogger}});var o=__nccwpck_require__(957);Object.defineProperty(e,\"DiagLogLevel\",{enumerable:true,get:function(){return o.DiagLogLevel}});var i=__nccwpck_require__(102);Object.defineProperty(e,\"createNoopMeter\",{enumerable:true,get:function(){return i.createNoopMeter}});var c=__nccwpck_require__(901);Object.defineProperty(e,\"ValueType\",{enumerable:true,get:function(){return c.ValueType}});var s=__nccwpck_require__(194);Object.defineProperty(e,\"defaultTextMapGetter\",{enumerable:true,get:function(){return s.defaultTextMapGetter}});Object.defineProperty(e,\"defaultTextMapSetter\",{enumerable:true,get:function(){return s.defaultTextMapSetter}});var u=__nccwpck_require__(125);Object.defineProperty(e,\"ProxyTracer\",{enumerable:true,get:function(){return u.ProxyTracer}});var l=__nccwpck_require__(846);Object.defineProperty(e,\"ProxyTracerProvider\",{enumerable:true,get:function(){return l.ProxyTracerProvider}});var g=__nccwpck_require__(996);Object.defineProperty(e,\"SamplingDecision\",{enumerable:true,get:function(){return g.SamplingDecision}});var p=__nccwpck_require__(357);Object.defineProperty(e,\"SpanKind\",{enumerable:true,get:function(){return p.SpanKind}});var d=__nccwpck_require__(847);Object.defineProperty(e,\"SpanStatusCode\",{enumerable:true,get:function(){return d.SpanStatusCode}});var _=__nccwpck_require__(475);Object.defineProperty(e,\"TraceFlags\",{enumerable:true,get:function(){return _.TraceFlags}});var f=__nccwpck_require__(98);Object.defineProperty(e,\"createTraceState\",{enumerable:true,get:function(){return f.createTraceState}});var b=__nccwpck_require__(139);Object.defineProperty(e,\"isSpanContextValid\",{enumerable:true,get:function(){return b.isSpanContextValid}});Object.defineProperty(e,\"isValidTraceId\",{enumerable:true,get:function(){return b.isValidTraceId}});Object.defineProperty(e,\"isValidSpanId\",{enumerable:true,get:function(){return b.isValidSpanId}});var v=__nccwpck_require__(476);Object.defineProperty(e,\"INVALID_SPANID\",{enumerable:true,get:function(){return v.INVALID_SPANID}});Object.defineProperty(e,\"INVALID_TRACEID\",{enumerable:true,get:function(){return v.INVALID_TRACEID}});Object.defineProperty(e,\"INVALID_SPAN_CONTEXT\",{enumerable:true,get:function(){return v.INVALID_SPAN_CONTEXT}});const O=__nccwpck_require__(67);Object.defineProperty(e,\"context\",{enumerable:true,get:function(){return O.context}});const P=__nccwpck_require__(506);Object.defineProperty(e,\"diag\",{enumerable:true,get:function(){return P.diag}});const N=__nccwpck_require__(886);Object.defineProperty(e,\"metrics\",{enumerable:true,get:function(){return N.metrics}});const S=__nccwpck_require__(939);Object.defineProperty(e,\"propagation\",{enumerable:true,get:function(){return S.propagation}});const C=__nccwpck_require__(845);Object.defineProperty(e,\"trace\",{enumerable:true,get:function(){return C.trace}});e[\"default\"]={context:O.context,diag:P.diag,metrics:N.metrics,propagation:S.propagation,trace:C.trace}})();module.exports=r})();","/* eslint-disable no-redeclare */ // FIXME: (wyattjoh) this is a temporary solution to allow us to pass data between bundled modules\nexport const NEXT_REQUEST_META = Symbol.for('NextInternalRequestMeta');\nexport function getRequestMeta(req, key) {\n    const meta = req[NEXT_REQUEST_META] || {};\n    return typeof key === 'string' ? meta[key] : meta;\n}\n/**\n * Sets the request metadata.\n *\n * @param req the request to set the metadata on\n * @param meta the metadata to set\n * @returns the mutated request metadata\n */ export function setRequestMeta(req, meta) {\n    req[NEXT_REQUEST_META] = meta;\n    return meta;\n}\n/**\n * Adds a value to the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to set\n * @param value the value to set\n * @returns the mutated request metadata\n */ export function addRequestMeta(request, key, value) {\n    const meta = getRequestMeta(request);\n    meta[key] = value;\n    return setRequestMeta(request, meta);\n}\n/**\n * Removes a key from the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to remove\n * @returns the mutated request metadata\n */ export function removeRequestMeta(request, key) {\n    const meta = getRequestMeta(request);\n    delete meta[key];\n    return setRequestMeta(request, meta);\n}\n\n//# sourceMappingURL=request-meta.js.map","import { getRequestMeta } from '../../../request-meta';\nimport { fromNodeOutgoingHttpHeaders } from '../../utils';\nimport { NextRequest } from '../request';\nimport { isNodeNextRequest, isWebNextRequest } from '../../../base-http/helpers';\nexport const ResponseAbortedName = 'ResponseAborted';\nexport class ResponseAborted extends Error {\n    constructor(...args){\n        super(...args), this.name = ResponseAbortedName;\n    }\n}\n/**\n * Creates an AbortController tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * If the `close` event is fired before the `finish` event, then we'll send the\n * `abort` signal.\n */ export function createAbortController(response) {\n    const controller = new AbortController();\n    // If `finish` fires first, then `res.end()` has been called and the close is\n    // just us finishing the stream on our side. If `close` fires first, then we\n    // know the client disconnected before we finished.\n    response.once('close', ()=>{\n        if (response.writableFinished) return;\n        controller.abort(new ResponseAborted());\n    });\n    return controller;\n}\n/**\n * Creates an AbortSignal tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * This cannot be done with the request (IncomingMessage or Readable) because\n * the `abort` event will not fire if to data has been fully read (because that\n * will \"close\" the readable stream and nothing fires after that).\n */ export function signalFromNodeResponse(response) {\n    const { errored, destroyed } = response;\n    if (errored || destroyed) {\n        return AbortSignal.abort(errored ?? new ResponseAborted());\n    }\n    const { signal } = createAbortController(response);\n    return signal;\n}\nexport class NextRequestAdapter {\n    static fromBaseNextRequest(request, signal) {\n        if (// The type check here ensures that `req` is correctly typed, and the\n        // environment variable check provides dead code elimination.\n        process.env.NEXT_RUNTIME === 'edge' && isWebNextRequest(request)) {\n            return NextRequestAdapter.fromWebNextRequest(request);\n        } else if (// The type check here ensures that `req` is correctly typed, and the\n        // environment variable check provides dead code elimination.\n        process.env.NEXT_RUNTIME !== 'edge' && isNodeNextRequest(request)) {\n            return NextRequestAdapter.fromNodeNextRequest(request, signal);\n        } else {\n            throw Object.defineProperty(new Error('Invariant: Unsupported NextRequest type'), \"__NEXT_ERROR_CODE\", {\n                value: \"E345\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n    }\n    static fromNodeNextRequest(request, signal) {\n        // HEAD and GET requests can not have a body.\n        let body = null;\n        if (request.method !== 'GET' && request.method !== 'HEAD' && request.body) {\n            // @ts-expect-error - this is handled by undici, when streams/web land use it instead\n            body = request.body;\n        }\n        let url;\n        if (request.url.startsWith('http')) {\n            url = new URL(request.url);\n        } else {\n            // Grab the full URL from the request metadata.\n            const base = getRequestMeta(request, 'initURL');\n            if (!base || !base.startsWith('http')) {\n                // Because the URL construction relies on the fact that the URL provided\n                // is absolute, we need to provide a base URL. We can't use the request\n                // URL because it's relative, so we use a dummy URL instead.\n                url = new URL(request.url, 'http://n');\n            } else {\n                url = new URL(request.url, base);\n            }\n        }\n        return new NextRequest(url, {\n            method: request.method,\n            headers: fromNodeOutgoingHttpHeaders(request.headers),\n            duplex: 'half',\n            signal,\n            // geo\n            // ip\n            // nextConfig\n            // body can not be passed if request was aborted\n            // or we get a Request body was disturbed error\n            ...signal.aborted ? {} : {\n                body\n            }\n        });\n    }\n    static fromWebNextRequest(request) {\n        // HEAD and GET requests can not have a body.\n        let body = null;\n        if (request.method !== 'GET' && request.method !== 'HEAD') {\n            body = request.body;\n        }\n        return new NextRequest(request.url, {\n            method: request.method,\n            headers: fromNodeOutgoingHttpHeaders(request.headers),\n            duplex: 'half',\n            signal: request.request.signal,\n            // geo\n            // ip\n            // nextConfig\n            // body can not be passed if request was aborted\n            // or we get a Request body was disturbed error\n            ...request.request.signal.aborted ? {} : {\n                body\n            }\n        });\n    }\n}\n\n//# sourceMappingURL=next-request.js.map","import { ResponseAbortedName, createAbortController } from './web/spec-extension/adapters/next-request';\nimport { DetachedPromise } from '../lib/detached-promise';\nimport { getTracer } from './lib/trace/tracer';\nimport { NextNodeServerSpan } from './lib/trace/constants';\nimport { getClientComponentLoaderMetrics } from './client-component-renderer-logger';\nexport function isAbortError(e) {\n    return (e == null ? void 0 : e.name) === 'AbortError' || (e == null ? void 0 : e.name) === ResponseAbortedName;\n}\nfunction createWriterFromResponse(res, waitUntilForEnd) {\n    let started = false;\n    // Create a promise that will resolve once the response has drained. See\n    // https://nodejs.org/api/stream.html#stream_event_drain\n    let drained = new DetachedPromise();\n    function onDrain() {\n        drained.resolve();\n    }\n    res.on('drain', onDrain);\n    // If the finish event fires, it means we shouldn't block and wait for the\n    // drain event.\n    res.once('close', ()=>{\n        res.off('drain', onDrain);\n        drained.resolve();\n    });\n    // Create a promise that will resolve once the response has finished. See\n    // https://nodejs.org/api/http.html#event-finish_1\n    const finished = new DetachedPromise();\n    res.once('finish', ()=>{\n        finished.resolve();\n    });\n    // Create a writable stream that will write to the response.\n    return new WritableStream({\n        write: async (chunk)=>{\n            // You'd think we'd want to use `start` instead of placing this in `write`\n            // but this ensures that we don't actually flush the headers until we've\n            // started writing chunks.\n            if (!started) {\n                started = true;\n                if ('performance' in globalThis && process.env.NEXT_OTEL_PERFORMANCE_PREFIX) {\n                    const metrics = getClientComponentLoaderMetrics();\n                    if (metrics) {\n                        performance.measure(`${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-client-component-loading`, {\n                            start: metrics.clientComponentLoadStart,\n                            end: metrics.clientComponentLoadStart + metrics.clientComponentLoadTimes\n                        });\n                    }\n                }\n                res.flushHeaders();\n                getTracer().trace(NextNodeServerSpan.startResponse, {\n                    spanName: 'start response'\n                }, ()=>undefined);\n            }\n            try {\n                const ok = res.write(chunk);\n                // Added by the `compression` middleware, this is a function that will\n                // flush the partially-compressed response to the client.\n                if ('flush' in res && typeof res.flush === 'function') {\n                    res.flush();\n                }\n                // If the write returns false, it means there's some backpressure, so\n                // wait until it's streamed before continuing.\n                if (!ok) {\n                    await drained.promise;\n                    // Reset the drained promise so that we can wait for the next drain event.\n                    drained = new DetachedPromise();\n                }\n            } catch (err) {\n                res.end();\n                throw Object.defineProperty(new Error('failed to write chunk to response', {\n                    cause: err\n                }), \"__NEXT_ERROR_CODE\", {\n                    value: \"E321\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n        },\n        abort: (err)=>{\n            if (res.writableFinished) return;\n            res.destroy(err);\n        },\n        close: async ()=>{\n            // if a waitUntil promise was passed, wait for it to resolve before\n            // ending the response.\n            if (waitUntilForEnd) {\n                await waitUntilForEnd;\n            }\n            if (res.writableFinished) return;\n            res.end();\n            return finished.promise;\n        }\n    });\n}\nexport async function pipeToNodeResponse(readable, res, waitUntilForEnd) {\n    try {\n        // If the response has already errored, then just return now.\n        const { errored, destroyed } = res;\n        if (errored || destroyed) return;\n        // Create a new AbortController so that we can abort the readable if the\n        // client disconnects.\n        const controller = createAbortController(res);\n        const writer = createWriterFromResponse(res, waitUntilForEnd);\n        await readable.pipeTo(writer, {\n            signal: controller.signal\n        });\n    } catch (err) {\n        // If this isn't related to an abort error, re-throw it.\n        if (isAbortError(err)) return;\n        throw Object.defineProperty(new Error('failed to pipe response', {\n            cause: err\n        }), \"__NEXT_ERROR_CODE\", {\n            value: \"E180\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n}\n\n//# sourceMappingURL=pipe-readable.js.map","(()=>{\"use strict\";var e={328:e=>{function hash(e){var r=5381,_=e.length;while(_){r=r*33^e.charCodeAt(--_)}return r>>>0}e.exports=hash}};var r={};function __nccwpck_require__(_){var a=r[_];if(a!==undefined){return a.exports}var t=r[_]={exports:{}};var i=true;try{e[_](t,t.exports,__nccwpck_require__);i=false}finally{if(i)delete r[_]}return t.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var _=__nccwpck_require__(328);module.exports=_})();","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  createBrowserSupabaseClient: () => createBrowserSupabaseClient,\n  createClientComponentClient: () => createClientComponentClient,\n  createMiddlewareClient: () => createMiddlewareClient,\n  createMiddlewareSupabaseClient: () => createMiddlewareSupabaseClient,\n  createPagesBrowserClient: () => createPagesBrowserClient,\n  createPagesServerClient: () => createPagesServerClient,\n  createRouteHandlerClient: () => createRouteHandlerClient,\n  createServerActionClient: () => createServerActionClient,\n  createServerComponentClient: () => createServerComponentClient,\n  createServerSupabaseClient: () => createServerSupabaseClient\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/clientComponentClient.ts\nvar import_auth_helpers_shared = require(\"@supabase/auth-helpers-shared\");\nvar supabase;\nfunction createClientComponentClient({\n  supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL,\n  supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY,\n  options,\n  cookieOptions,\n  isSingleton = true\n} = {}) {\n  if (!supabaseUrl || !supabaseKey) {\n    throw new Error(\n      \"either NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY env variables or supabaseUrl and supabaseKey are required!\"\n    );\n  }\n  const createNewClient = () => {\n    var _a;\n    return (0, import_auth_helpers_shared.createSupabaseClient)(supabaseUrl, supabaseKey, {\n      ...options,\n      global: {\n        ...options == null ? void 0 : options.global,\n        headers: {\n          ...(_a = options == null ? void 0 : options.global) == null ? void 0 : _a.headers,\n          \"X-Client-Info\": `${\"@supabase/auth-helpers-nextjs\"}@${\"0.10.0\"}`\n        }\n      },\n      auth: {\n        storage: new import_auth_helpers_shared.BrowserCookieAuthStorageAdapter(cookieOptions)\n      }\n    });\n  };\n  if (isSingleton) {\n    const _supabase = supabase ?? createNewClient();\n    if (typeof window === \"undefined\")\n      return _supabase;\n    if (!supabase)\n      supabase = _supabase;\n    return supabase;\n  }\n  return createNewClient();\n}\n\n// src/pagesBrowserClient.ts\nvar createPagesBrowserClient = createClientComponentClient;\n\n// src/pagesServerClient.ts\nvar import_auth_helpers_shared2 = require(\"@supabase/auth-helpers-shared\");\nvar import_set_cookie_parser = require(\"set-cookie-parser\");\nvar NextServerAuthStorageAdapter = class extends import_auth_helpers_shared2.CookieAuthStorageAdapter {\n  constructor(context, cookieOptions) {\n    super(cookieOptions);\n    this.context = context;\n  }\n  getCookie(name) {\n    var _a, _b, _c;\n    const setCookie = (0, import_set_cookie_parser.splitCookiesString)(\n      ((_b = (_a = this.context.res) == null ? void 0 : _a.getHeader(\"set-cookie\")) == null ? void 0 : _b.toString()) ?? \"\"\n    ).map((c) => (0, import_auth_helpers_shared2.parseCookies)(c)[name]).find((c) => !!c);\n    const value = setCookie ?? ((_c = this.context.req) == null ? void 0 : _c.cookies[name]);\n    return value;\n  }\n  setCookie(name, value) {\n    this._setCookie(name, value);\n  }\n  deleteCookie(name) {\n    this._setCookie(name, \"\", {\n      maxAge: 0\n    });\n  }\n  _setCookie(name, value, options) {\n    var _a;\n    const setCookies = (0, import_set_cookie_parser.splitCookiesString)(\n      ((_a = this.context.res.getHeader(\"set-cookie\")) == null ? void 0 : _a.toString()) ?? \"\"\n    ).filter((c) => !(name in (0, import_auth_helpers_shared2.parseCookies)(c)));\n    const cookieStr = (0, import_auth_helpers_shared2.serializeCookie)(name, value, {\n      ...this.cookieOptions,\n      ...options,\n      // Allow supabase-js on the client to read the cookie as well\n      httpOnly: false\n    });\n    this.context.res.setHeader(\"set-cookie\", [...setCookies, cookieStr]);\n  }\n};\nfunction createPagesServerClient(context, {\n  supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL,\n  supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY,\n  options,\n  cookieOptions\n} = {}) {\n  var _a;\n  if (!supabaseUrl || !supabaseKey) {\n    throw new Error(\n      \"either NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY env variables or supabaseUrl and supabaseKey are required!\"\n    );\n  }\n  return (0, import_auth_helpers_shared2.createSupabaseClient)(supabaseUrl, supabaseKey, {\n    ...options,\n    global: {\n      ...options == null ? void 0 : options.global,\n      headers: {\n        ...(_a = options == null ? void 0 : options.global) == null ? void 0 : _a.headers,\n        \"X-Client-Info\": `${\"@supabase/auth-helpers-nextjs\"}@${\"0.10.0\"}`\n      }\n    },\n    auth: {\n      storage: new NextServerAuthStorageAdapter(context, cookieOptions)\n    }\n  });\n}\n\n// src/middlewareClient.ts\nvar import_auth_helpers_shared3 = require(\"@supabase/auth-helpers-shared\");\nvar import_set_cookie_parser2 = require(\"set-cookie-parser\");\nvar NextMiddlewareAuthStorageAdapter = class extends import_auth_helpers_shared3.CookieAuthStorageAdapter {\n  constructor(context, cookieOptions) {\n    super(cookieOptions);\n    this.context = context;\n  }\n  getCookie(name) {\n    var _a;\n    const setCookie = (0, import_set_cookie_parser2.splitCookiesString)(\n      ((_a = this.context.res.headers.get(\"set-cookie\")) == null ? void 0 : _a.toString()) ?? \"\"\n    ).map((c) => (0, import_auth_helpers_shared3.parseCookies)(c)[name]).find((c) => !!c);\n    if (setCookie) {\n      return setCookie;\n    }\n    const cookies = (0, import_auth_helpers_shared3.parseCookies)(this.context.req.headers.get(\"cookie\") ?? \"\");\n    return cookies[name];\n  }\n  setCookie(name, value) {\n    this._setCookie(name, value);\n  }\n  deleteCookie(name) {\n    this._setCookie(name, \"\", {\n      maxAge: 0\n    });\n  }\n  _setCookie(name, value, options) {\n    const newSessionStr = (0, import_auth_helpers_shared3.serializeCookie)(name, value, {\n      ...this.cookieOptions,\n      ...options,\n      // Allow supabase-js on the client to read the cookie as well\n      httpOnly: false\n    });\n    if (this.context.res.headers) {\n      this.context.res.headers.append(\"set-cookie\", newSessionStr);\n    }\n  }\n};\nfunction createMiddlewareClient(context, {\n  supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL,\n  supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY,\n  options,\n  cookieOptions\n} = {}) {\n  var _a;\n  if (!supabaseUrl || !supabaseKey) {\n    throw new Error(\n      \"either NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY env variables or supabaseUrl and supabaseKey are required!\"\n    );\n  }\n  return (0, import_auth_helpers_shared3.createSupabaseClient)(supabaseUrl, supabaseKey, {\n    ...options,\n    global: {\n      ...options == null ? void 0 : options.global,\n      headers: {\n        ...(_a = options == null ? void 0 : options.global) == null ? void 0 : _a.headers,\n        \"X-Client-Info\": `${\"@supabase/auth-helpers-nextjs\"}@${\"0.10.0\"}`\n      }\n    },\n    auth: {\n      storage: new NextMiddlewareAuthStorageAdapter(context, cookieOptions)\n    }\n  });\n}\n\n// src/serverComponentClient.ts\nvar import_auth_helpers_shared4 = require(\"@supabase/auth-helpers-shared\");\nvar NextServerComponentAuthStorageAdapter = class extends import_auth_helpers_shared4.CookieAuthStorageAdapter {\n  constructor(context, cookieOptions) {\n    super(cookieOptions);\n    this.context = context;\n    this.isServer = true;\n  }\n  getCookie(name) {\n    var _a;\n    const nextCookies = this.context.cookies();\n    return (_a = nextCookies.get(name)) == null ? void 0 : _a.value;\n  }\n  setCookie(name, value) {\n  }\n  deleteCookie(name) {\n  }\n};\nfunction createServerComponentClient(context, {\n  supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL,\n  supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY,\n  options,\n  cookieOptions\n} = {}) {\n  var _a;\n  if (!supabaseUrl || !supabaseKey) {\n    throw new Error(\n      \"either NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY env variables or supabaseUrl and supabaseKey are required!\"\n    );\n  }\n  return (0, import_auth_helpers_shared4.createSupabaseClient)(supabaseUrl, supabaseKey, {\n    ...options,\n    global: {\n      ...options == null ? void 0 : options.global,\n      headers: {\n        ...(_a = options == null ? void 0 : options.global) == null ? void 0 : _a.headers,\n        \"X-Client-Info\": `${\"@supabase/auth-helpers-nextjs\"}@${\"0.10.0\"}`\n      }\n    },\n    auth: {\n      storage: new NextServerComponentAuthStorageAdapter(context, cookieOptions)\n    }\n  });\n}\n\n// src/routeHandlerClient.ts\nvar import_auth_helpers_shared5 = require(\"@supabase/auth-helpers-shared\");\nvar NextRouteHandlerAuthStorageAdapter = class extends import_auth_helpers_shared5.CookieAuthStorageAdapter {\n  constructor(context, cookieOptions) {\n    super(cookieOptions);\n    this.context = context;\n  }\n  getCookie(name) {\n    var _a;\n    const nextCookies = this.context.cookies();\n    return (_a = nextCookies.get(name)) == null ? void 0 : _a.value;\n  }\n  setCookie(name, value) {\n    const nextCookies = this.context.cookies();\n    nextCookies.set(name, value, this.cookieOptions);\n  }\n  deleteCookie(name) {\n    const nextCookies = this.context.cookies();\n    nextCookies.set(name, \"\", {\n      ...this.cookieOptions,\n      maxAge: 0\n    });\n  }\n};\nfunction createRouteHandlerClient(context, {\n  supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL,\n  supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY,\n  options,\n  cookieOptions\n} = {}) {\n  var _a;\n  if (!supabaseUrl || !supabaseKey) {\n    throw new Error(\n      \"either NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY env variables or supabaseUrl and supabaseKey are required!\"\n    );\n  }\n  return (0, import_auth_helpers_shared5.createSupabaseClient)(supabaseUrl, supabaseKey, {\n    ...options,\n    global: {\n      ...options == null ? void 0 : options.global,\n      headers: {\n        ...(_a = options == null ? void 0 : options.global) == null ? void 0 : _a.headers,\n        \"X-Client-Info\": `${\"@supabase/auth-helpers-nextjs\"}@${\"0.10.0\"}`\n      }\n    },\n    auth: {\n      storage: new NextRouteHandlerAuthStorageAdapter(context, cookieOptions)\n    }\n  });\n}\n\n// src/serverActionClient.ts\nvar createServerActionClient = createRouteHandlerClient;\n\n// src/deprecated.ts\nfunction createBrowserSupabaseClient({\n  supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL,\n  supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY,\n  options,\n  cookieOptions\n} = {}) {\n  console.warn(\n    \"Please utilize the `createPagesBrowserClient` function instead of the deprecated `createBrowserSupabaseClient` function. Learn more: https://supabase.com/docs/guides/auth/auth-helpers/nextjs-pages\"\n  );\n  return createPagesBrowserClient({\n    supabaseUrl,\n    supabaseKey,\n    options,\n    cookieOptions\n  });\n}\nfunction createServerSupabaseClient(context, {\n  supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL,\n  supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY,\n  options,\n  cookieOptions\n} = {}) {\n  console.warn(\n    \"Please utilize the `createPagesServerClient` function instead of the deprecated `createServerSupabaseClient` function. Learn more: https://supabase.com/docs/guides/auth/auth-helpers/nextjs-pages\"\n  );\n  return createPagesServerClient(context, {\n    supabaseUrl,\n    supabaseKey,\n    options,\n    cookieOptions\n  });\n}\nfunction createMiddlewareSupabaseClient(context, {\n  supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL,\n  supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY,\n  options,\n  cookieOptions\n} = {}) {\n  console.warn(\n    \"Please utilize the `createMiddlewareClient` function instead of the deprecated `createMiddlewareSupabaseClient` function. Learn more: https://supabase.com/docs/guides/auth/auth-helpers/nextjs#middleware\"\n  );\n  return createMiddlewareClient(context, {\n    supabaseUrl,\n    supabaseKey,\n    options,\n    cookieOptions\n  });\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  createBrowserSupabaseClient,\n  createClientComponentClient,\n  createMiddlewareClient,\n  createMiddlewareSupabaseClient,\n  createPagesBrowserClient,\n  createPagesServerClient,\n  createRouteHandlerClient,\n  createServerActionClient,\n  createServerComponentClient,\n  createServerSupabaseClient\n});\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    handleFetch: null,\n    interceptFetch: null,\n    reader: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    handleFetch: function() {\n        return handleFetch;\n    },\n    interceptFetch: function() {\n        return interceptFetch;\n    },\n    reader: function() {\n        return reader;\n    }\n});\nconst _context = require(\"./context\");\nconst reader = {\n    url (req) {\n        return req.url;\n    },\n    header (req, name) {\n        return req.headers.get(name);\n    }\n};\nfunction getTestStack() {\n    let stack = (new Error().stack ?? '').split('\\n');\n    // Skip the first line and find first non-empty line.\n    for(let i = 1; i < stack.length; i++){\n        if (stack[i].length > 0) {\n            stack = stack.slice(i);\n            break;\n        }\n    }\n    // Filter out franmework lines.\n    stack = stack.filter((f)=>!f.includes('/next/dist/'));\n    // At most 5 lines.\n    stack = stack.slice(0, 5);\n    // Cleanup some internal info and trim.\n    stack = stack.map((s)=>s.replace('webpack-internal:///(rsc)/', '').trim());\n    return stack.join('    ');\n}\nasync function buildProxyRequest(testData, request) {\n    const { url, method, headers, body, cache, credentials, integrity, mode, redirect, referrer, referrerPolicy } = request;\n    return {\n        testData,\n        api: 'fetch',\n        request: {\n            url,\n            method,\n            headers: [\n                ...Array.from(headers),\n                [\n                    'next-test-stack',\n                    getTestStack()\n                ]\n            ],\n            body: body ? Buffer.from(await request.arrayBuffer()).toString('base64') : null,\n            cache,\n            credentials,\n            integrity,\n            mode,\n            redirect,\n            referrer,\n            referrerPolicy\n        }\n    };\n}\nfunction buildResponse(proxyResponse) {\n    const { status, headers, body } = proxyResponse.response;\n    return new Response(body ? Buffer.from(body, 'base64') : null, {\n        status,\n        headers: new Headers(headers)\n    });\n}\nasync function handleFetch(originalFetch, request) {\n    const testInfo = (0, _context.getTestReqInfo)(request, reader);\n    if (!testInfo) {\n        // Passthrough non-test requests.\n        return originalFetch(request);\n    }\n    const { testData, proxyPort } = testInfo;\n    const proxyRequest = await buildProxyRequest(testData, request);\n    const resp = await originalFetch(`http://localhost:${proxyPort}`, {\n        method: 'POST',\n        body: JSON.stringify(proxyRequest),\n        next: {\n            // @ts-ignore\n            internal: true\n        }\n    });\n    if (!resp.ok) {\n        throw Object.defineProperty(new Error(`Proxy request failed: ${resp.status}`), \"__NEXT_ERROR_CODE\", {\n            value: \"E146\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    const proxyResponse = await resp.json();\n    const { api } = proxyResponse;\n    switch(api){\n        case 'continue':\n            return originalFetch(request);\n        case 'abort':\n        case 'unhandled':\n            throw Object.defineProperty(new Error(`Proxy request aborted [${request.method} ${request.url}]`), \"__NEXT_ERROR_CODE\", {\n                value: \"E145\",\n                enumerable: false,\n                configurable: true\n            });\n        default:\n            break;\n    }\n    return buildResponse(proxyResponse);\n}\nfunction interceptFetch(originalFetch) {\n    global.fetch = function testFetch(input, init) {\n        var _init_next;\n        // Passthrough internal requests.\n        // @ts-ignore\n        if (init == null ? void 0 : (_init_next = init.next) == null ? void 0 : _init_next.internal) {\n            return originalFetch(input, init);\n        }\n        return handleFetch(originalFetch, new Request(input, init));\n    };\n    return ()=>{\n        global.fetch = originalFetch;\n    };\n}\n\n//# sourceMappingURL=fetch.js.map","const NEXT_STATIC_GEN_BAILOUT = 'NEXT_STATIC_GEN_BAILOUT'\n\nexport class StaticGenBailoutError extends Error {\n  public readonly code = NEXT_STATIC_GEN_BAILOUT\n}\n\nexport function isStaticGenBailoutError(\n  error: unknown\n): error is StaticGenBailoutError {\n  if (typeof error !== 'object' || error === null || !('code' in error)) {\n    return false\n  }\n\n  return error.code === NEXT_STATIC_GEN_BAILOUT\n}\n","/**\n * @license React\n * react-server-dom-webpack-server.edge.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar ReactDOM = require(\"react-dom\"),\n  React = require(\"react\"),\n  REACT_LEGACY_ELEMENT_TYPE = Symbol.for(\"react.element\"),\n  REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  REACT_MEMO_CACHE_SENTINEL = Symbol.for(\"react.memo_cache_sentinel\");\nSymbol.for(\"react.postpone\");\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar ASYNC_ITERATOR = Symbol.asyncIterator;\nfunction handleErrorInNextTick(error) {\n  setTimeoutOrImmediate(function () {\n    throw error;\n  });\n}\nvar LocalPromise = Promise,\n  scheduleMicrotask =\n    \"function\" === typeof queueMicrotask\n      ? queueMicrotask\n      : function (callback) {\n          LocalPromise.resolve(null)\n            .then(callback)\n            .catch(handleErrorInNextTick);\n        },\n  currentView = null,\n  writtenBytes = 0;\nfunction writeChunkAndReturn(destination, chunk) {\n  if (0 !== chunk.byteLength)\n    if (2048 < chunk.byteLength)\n      0 < writtenBytes &&\n        (destination.enqueue(\n          new Uint8Array(currentView.buffer, 0, writtenBytes)\n        ),\n        (currentView = new Uint8Array(2048)),\n        (writtenBytes = 0)),\n        destination.enqueue(chunk);\n    else {\n      var allowableBytes = currentView.length - writtenBytes;\n      allowableBytes < chunk.byteLength &&\n        (0 === allowableBytes\n          ? destination.enqueue(currentView)\n          : (currentView.set(chunk.subarray(0, allowableBytes), writtenBytes),\n            destination.enqueue(currentView),\n            (chunk = chunk.subarray(allowableBytes))),\n        (currentView = new Uint8Array(2048)),\n        (writtenBytes = 0));\n      currentView.set(chunk, writtenBytes);\n      writtenBytes += chunk.byteLength;\n    }\n  return !0;\n}\nvar textEncoder = new TextEncoder();\nfunction stringToChunk(content) {\n  return textEncoder.encode(content);\n}\nfunction byteLengthOfChunk(chunk) {\n  return chunk.byteLength;\n}\nfunction closeWithError(destination, error) {\n  \"function\" === typeof destination.error\n    ? destination.error(error)\n    : destination.close();\n}\nvar CLIENT_REFERENCE_TAG$1 = Symbol.for(\"react.client.reference\"),\n  SERVER_REFERENCE_TAG = Symbol.for(\"react.server.reference\");\nfunction registerClientReferenceImpl(proxyImplementation, id, async) {\n  return Object.defineProperties(proxyImplementation, {\n    $$typeof: { value: CLIENT_REFERENCE_TAG$1 },\n    $$id: { value: id },\n    $$async: { value: async }\n  });\n}\nvar FunctionBind = Function.prototype.bind,\n  ArraySlice = Array.prototype.slice;\nfunction bind() {\n  var newFn = FunctionBind.apply(this, arguments);\n  if (this.$$typeof === SERVER_REFERENCE_TAG) {\n    var args = ArraySlice.call(arguments, 1),\n      $$typeof = { value: SERVER_REFERENCE_TAG },\n      $$id = { value: this.$$id };\n    args = { value: this.$$bound ? this.$$bound.concat(args) : args };\n    return Object.defineProperties(newFn, {\n      $$typeof: $$typeof,\n      $$id: $$id,\n      $$bound: args,\n      bind: { value: bind, configurable: !0 }\n    });\n  }\n  return newFn;\n}\nvar PROMISE_PROTOTYPE = Promise.prototype,\n  deepProxyHandlers = {\n    get: function (target, name) {\n      switch (name) {\n        case \"$$typeof\":\n          return target.$$typeof;\n        case \"$$id\":\n          return target.$$id;\n        case \"$$async\":\n          return target.$$async;\n        case \"name\":\n          return target.name;\n        case \"displayName\":\n          return;\n        case \"defaultProps\":\n          return;\n        case \"toJSON\":\n          return;\n        case Symbol.toPrimitive:\n          return Object.prototype[Symbol.toPrimitive];\n        case Symbol.toStringTag:\n          return Object.prototype[Symbol.toStringTag];\n        case \"Provider\":\n          throw Error(\n            \"Cannot render a Client Context Provider on the Server. Instead, you can export a Client Component wrapper that itself renders a Client Context Provider.\"\n          );\n        case \"then\":\n          throw Error(\n            \"Cannot await or return from a thenable. You cannot await a client module from a server component.\"\n          );\n      }\n      throw Error(\n        \"Cannot access \" +\n          (String(target.name) + \".\" + String(name)) +\n          \" on the server. You cannot dot into a client module from a server component. You can only pass the imported name through.\"\n      );\n    },\n    set: function () {\n      throw Error(\"Cannot assign to a client module from a server module.\");\n    }\n  };\nfunction getReference(target, name) {\n  switch (name) {\n    case \"$$typeof\":\n      return target.$$typeof;\n    case \"$$id\":\n      return target.$$id;\n    case \"$$async\":\n      return target.$$async;\n    case \"name\":\n      return target.name;\n    case \"defaultProps\":\n      return;\n    case \"toJSON\":\n      return;\n    case Symbol.toPrimitive:\n      return Object.prototype[Symbol.toPrimitive];\n    case Symbol.toStringTag:\n      return Object.prototype[Symbol.toStringTag];\n    case \"__esModule\":\n      var moduleId = target.$$id;\n      target.default = registerClientReferenceImpl(\n        function () {\n          throw Error(\n            \"Attempted to call the default export of \" +\n              moduleId +\n              \" from the server but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"\n          );\n        },\n        target.$$id + \"#\",\n        target.$$async\n      );\n      return !0;\n    case \"then\":\n      if (target.then) return target.then;\n      if (target.$$async) return;\n      var clientReference = registerClientReferenceImpl({}, target.$$id, !0),\n        proxy = new Proxy(clientReference, proxyHandlers$1);\n      target.status = \"fulfilled\";\n      target.value = proxy;\n      return (target.then = registerClientReferenceImpl(\n        function (resolve) {\n          return Promise.resolve(resolve(proxy));\n        },\n        target.$$id + \"#then\",\n        !1\n      ));\n  }\n  if (\"symbol\" === typeof name)\n    throw Error(\n      \"Cannot read Symbol exports. Only named exports are supported on a client module imported on the server.\"\n    );\n  clientReference = target[name];\n  clientReference ||\n    ((clientReference = registerClientReferenceImpl(\n      function () {\n        throw Error(\n          \"Attempted to call \" +\n            String(name) +\n            \"() from the server but \" +\n            String(name) +\n            \" is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"\n        );\n      },\n      target.$$id + \"#\" + name,\n      target.$$async\n    )),\n    Object.defineProperty(clientReference, \"name\", { value: name }),\n    (clientReference = target[name] =\n      new Proxy(clientReference, deepProxyHandlers)));\n  return clientReference;\n}\nvar proxyHandlers$1 = {\n    get: function (target, name) {\n      return getReference(target, name);\n    },\n    getOwnPropertyDescriptor: function (target, name) {\n      var descriptor = Object.getOwnPropertyDescriptor(target, name);\n      descriptor ||\n        ((descriptor = {\n          value: getReference(target, name),\n          writable: !1,\n          configurable: !1,\n          enumerable: !1\n        }),\n        Object.defineProperty(target, name, descriptor));\n      return descriptor;\n    },\n    getPrototypeOf: function () {\n      return PROMISE_PROTOTYPE;\n    },\n    set: function () {\n      throw Error(\"Cannot assign to a client module from a server module.\");\n    }\n  },\n  ReactDOMSharedInternals =\n    ReactDOM.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n  previousDispatcher = ReactDOMSharedInternals.d;\nReactDOMSharedInternals.d = {\n  f: previousDispatcher.f,\n  r: previousDispatcher.r,\n  D: prefetchDNS,\n  C: preconnect,\n  L: preload,\n  m: preloadModule$1,\n  X: preinitScript,\n  S: preinitStyle,\n  M: preinitModuleScript\n};\nfunction prefetchDNS(href) {\n  if (\"string\" === typeof href && href) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"D|\" + href;\n      hints.has(key) || (hints.add(key), emitHint(request, \"D\", href));\n    } else previousDispatcher.D(href);\n  }\n}\nfunction preconnect(href, crossOrigin) {\n  if (\"string\" === typeof href) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"C|\" + (null == crossOrigin ? \"null\" : crossOrigin) + \"|\" + href;\n      hints.has(key) ||\n        (hints.add(key),\n        \"string\" === typeof crossOrigin\n          ? emitHint(request, \"C\", [href, crossOrigin])\n          : emitHint(request, \"C\", href));\n    } else previousDispatcher.C(href, crossOrigin);\n  }\n}\nfunction preload(href, as, options) {\n  if (\"string\" === typeof href) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"L\";\n      if (\"image\" === as && options) {\n        var imageSrcSet = options.imageSrcSet,\n          imageSizes = options.imageSizes,\n          uniquePart = \"\";\n        \"string\" === typeof imageSrcSet && \"\" !== imageSrcSet\n          ? ((uniquePart += \"[\" + imageSrcSet + \"]\"),\n            \"string\" === typeof imageSizes &&\n              (uniquePart += \"[\" + imageSizes + \"]\"))\n          : (uniquePart += \"[][]\" + href);\n        key += \"[image]\" + uniquePart;\n      } else key += \"[\" + as + \"]\" + href;\n      hints.has(key) ||\n        (hints.add(key),\n        (options = trimOptions(options))\n          ? emitHint(request, \"L\", [href, as, options])\n          : emitHint(request, \"L\", [href, as]));\n    } else previousDispatcher.L(href, as, options);\n  }\n}\nfunction preloadModule$1(href, options) {\n  if (\"string\" === typeof href) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"m|\" + href;\n      if (hints.has(key)) return;\n      hints.add(key);\n      return (options = trimOptions(options))\n        ? emitHint(request, \"m\", [href, options])\n        : emitHint(request, \"m\", href);\n    }\n    previousDispatcher.m(href, options);\n  }\n}\nfunction preinitStyle(href, precedence, options) {\n  if (\"string\" === typeof href) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"S|\" + href;\n      if (hints.has(key)) return;\n      hints.add(key);\n      return (options = trimOptions(options))\n        ? emitHint(request, \"S\", [\n            href,\n            \"string\" === typeof precedence ? precedence : 0,\n            options\n          ])\n        : \"string\" === typeof precedence\n          ? emitHint(request, \"S\", [href, precedence])\n          : emitHint(request, \"S\", href);\n    }\n    previousDispatcher.S(href, precedence, options);\n  }\n}\nfunction preinitScript(src, options) {\n  if (\"string\" === typeof src) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"X|\" + src;\n      if (hints.has(key)) return;\n      hints.add(key);\n      return (options = trimOptions(options))\n        ? emitHint(request, \"X\", [src, options])\n        : emitHint(request, \"X\", src);\n    }\n    previousDispatcher.X(src, options);\n  }\n}\nfunction preinitModuleScript(src, options) {\n  if (\"string\" === typeof src) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"M|\" + src;\n      if (hints.has(key)) return;\n      hints.add(key);\n      return (options = trimOptions(options))\n        ? emitHint(request, \"M\", [src, options])\n        : emitHint(request, \"M\", src);\n    }\n    previousDispatcher.M(src, options);\n  }\n}\nfunction trimOptions(options) {\n  if (null == options) return null;\n  var hasProperties = !1,\n    trimmed = {},\n    key;\n  for (key in options)\n    null != options[key] &&\n      ((hasProperties = !0), (trimmed[key] = options[key]));\n  return hasProperties ? trimmed : null;\n}\nvar supportsRequestStorage = \"function\" === typeof AsyncLocalStorage,\n  requestStorage = supportsRequestStorage ? new AsyncLocalStorage() : null;\n\"object\" === typeof async_hooks\n  ? async_hooks.createHook\n  : function () {\n      return { enable: function () {}, disable: function () {} };\n    };\n\"object\" === typeof async_hooks ? async_hooks.executionAsyncId : null;\nvar TEMPORARY_REFERENCE_TAG = Symbol.for(\"react.temporary.reference\"),\n  proxyHandlers = {\n    get: function (target, name) {\n      switch (name) {\n        case \"$$typeof\":\n          return target.$$typeof;\n        case \"name\":\n          return;\n        case \"displayName\":\n          return;\n        case \"defaultProps\":\n          return;\n        case \"toJSON\":\n          return;\n        case Symbol.toPrimitive:\n          return Object.prototype[Symbol.toPrimitive];\n        case Symbol.toStringTag:\n          return Object.prototype[Symbol.toStringTag];\n        case \"Provider\":\n          throw Error(\n            \"Cannot render a Client Context Provider on the Server. Instead, you can export a Client Component wrapper that itself renders a Client Context Provider.\"\n          );\n      }\n      throw Error(\n        \"Cannot access \" +\n          String(name) +\n          \" on the server. You cannot dot into a temporary client reference from a server component. You can only pass the value through to the client.\"\n      );\n    },\n    set: function () {\n      throw Error(\n        \"Cannot assign to a temporary client reference from a server module.\"\n      );\n    }\n  };\nfunction createTemporaryReference(temporaryReferences, id) {\n  var reference = Object.defineProperties(\n    function () {\n      throw Error(\n        \"Attempted to call a temporary Client Reference from the server but it is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"\n      );\n    },\n    { $$typeof: { value: TEMPORARY_REFERENCE_TAG } }\n  );\n  reference = new Proxy(reference, proxyHandlers);\n  temporaryReferences.set(reference, id);\n  return reference;\n}\nvar SuspenseException = Error(\n  \"Suspense Exception: This is not a real error! It's an implementation detail of `use` to interrupt the current render. You must either rethrow it immediately, or move the `use` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\\n\\nTo handle async errors, wrap your component in an error boundary, or call the promise's `.catch` method and pass the result to `use`.\"\n);\nfunction noop$1() {}\nfunction trackUsedThenable(thenableState, thenable, index) {\n  index = thenableState[index];\n  void 0 === index\n    ? thenableState.push(thenable)\n    : index !== thenable && (thenable.then(noop$1, noop$1), (thenable = index));\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw thenable.reason;\n    default:\n      \"string\" === typeof thenable.status\n        ? thenable.then(noop$1, noop$1)\n        : ((thenableState = thenable),\n          (thenableState.status = \"pending\"),\n          thenableState.then(\n            function (fulfilledValue) {\n              if (\"pending\" === thenable.status) {\n                var fulfilledThenable = thenable;\n                fulfilledThenable.status = \"fulfilled\";\n                fulfilledThenable.value = fulfilledValue;\n              }\n            },\n            function (error) {\n              if (\"pending\" === thenable.status) {\n                var rejectedThenable = thenable;\n                rejectedThenable.status = \"rejected\";\n                rejectedThenable.reason = error;\n              }\n            }\n          ));\n      switch (thenable.status) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw thenable.reason;\n      }\n      suspendedThenable = thenable;\n      throw SuspenseException;\n  }\n}\nvar suspendedThenable = null;\nfunction getSuspendedThenable() {\n  if (null === suspendedThenable)\n    throw Error(\n      \"Expected a suspended thenable. This is a bug in React. Please file an issue.\"\n    );\n  var thenable = suspendedThenable;\n  suspendedThenable = null;\n  return thenable;\n}\nvar currentRequest$1 = null,\n  thenableIndexCounter = 0,\n  thenableState = null;\nfunction getThenableStateAfterSuspending() {\n  var state = thenableState || [];\n  thenableState = null;\n  return state;\n}\nvar HooksDispatcher = {\n  readContext: unsupportedContext,\n  use: use,\n  useCallback: function (callback) {\n    return callback;\n  },\n  useContext: unsupportedContext,\n  useEffect: unsupportedHook,\n  useImperativeHandle: unsupportedHook,\n  useLayoutEffect: unsupportedHook,\n  useInsertionEffect: unsupportedHook,\n  useMemo: function (nextCreate) {\n    return nextCreate();\n  },\n  useReducer: unsupportedHook,\n  useRef: unsupportedHook,\n  useState: unsupportedHook,\n  useDebugValue: function () {},\n  useDeferredValue: unsupportedHook,\n  useTransition: unsupportedHook,\n  useSyncExternalStore: unsupportedHook,\n  useId: useId,\n  useHostTransitionStatus: unsupportedHook,\n  useFormState: unsupportedHook,\n  useActionState: unsupportedHook,\n  useOptimistic: unsupportedHook,\n  useMemoCache: function (size) {\n    for (var data = Array(size), i = 0; i < size; i++)\n      data[i] = REACT_MEMO_CACHE_SENTINEL;\n    return data;\n  },\n  useCacheRefresh: function () {\n    return unsupportedRefresh;\n  }\n};\nfunction unsupportedHook() {\n  throw Error(\"This Hook is not supported in Server Components.\");\n}\nfunction unsupportedRefresh() {\n  throw Error(\"Refreshing the cache is not supported in Server Components.\");\n}\nfunction unsupportedContext() {\n  throw Error(\"Cannot read a Client Context from a Server Component.\");\n}\nfunction useId() {\n  if (null === currentRequest$1)\n    throw Error(\"useId can only be used while React is rendering\");\n  var id = currentRequest$1.identifierCount++;\n  return \":\" + currentRequest$1.identifierPrefix + \"S\" + id.toString(32) + \":\";\n}\nfunction use(usable) {\n  if (\n    (null !== usable && \"object\" === typeof usable) ||\n    \"function\" === typeof usable\n  ) {\n    if (\"function\" === typeof usable.then) {\n      var index = thenableIndexCounter;\n      thenableIndexCounter += 1;\n      null === thenableState && (thenableState = []);\n      return trackUsedThenable(thenableState, usable, index);\n    }\n    usable.$$typeof === REACT_CONTEXT_TYPE && unsupportedContext();\n  }\n  if (usable.$$typeof === CLIENT_REFERENCE_TAG$1) {\n    if (null != usable.value && usable.value.$$typeof === REACT_CONTEXT_TYPE)\n      throw Error(\"Cannot read a Client Context from a Server Component.\");\n    throw Error(\"Cannot use() an already resolved Client Reference.\");\n  }\n  throw Error(\"An unsupported type was passed to use(): \" + String(usable));\n}\nvar DefaultAsyncDispatcher = {\n    getCacheForType: function (resourceType) {\n      var JSCompiler_inline_result = (JSCompiler_inline_result =\n        resolveRequest())\n        ? JSCompiler_inline_result.cache\n        : new Map();\n      var entry = JSCompiler_inline_result.get(resourceType);\n      void 0 === entry &&\n        ((entry = resourceType()),\n        JSCompiler_inline_result.set(resourceType, entry));\n      return entry;\n    }\n  },\n  ReactSharedInternalsServer =\n    React.__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\nif (!ReactSharedInternalsServer)\n  throw Error(\n    'The \"react\" package in this environment is not configured correctly. The \"react-server\" condition must be enabled in any environment that runs React Server Components.'\n  );\nvar isArrayImpl = Array.isArray,\n  getPrototypeOf = Object.getPrototypeOf;\nfunction objectName(object) {\n  return Object.prototype.toString\n    .call(object)\n    .replace(/^\\[object (.*)\\]$/, function (m, p0) {\n      return p0;\n    });\n}\nfunction describeValueForErrorMessage(value) {\n  switch (typeof value) {\n    case \"string\":\n      return JSON.stringify(\n        10 >= value.length ? value : value.slice(0, 10) + \"...\"\n      );\n    case \"object\":\n      if (isArrayImpl(value)) return \"[...]\";\n      if (null !== value && value.$$typeof === CLIENT_REFERENCE_TAG)\n        return \"client\";\n      value = objectName(value);\n      return \"Object\" === value ? \"{...}\" : value;\n    case \"function\":\n      return value.$$typeof === CLIENT_REFERENCE_TAG\n        ? \"client\"\n        : (value = value.displayName || value.name)\n          ? \"function \" + value\n          : \"function\";\n    default:\n      return String(value);\n  }\n}\nfunction describeElementType(type) {\n  if (\"string\" === typeof type) return type;\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return \"Suspense\";\n    case REACT_SUSPENSE_LIST_TYPE:\n      return \"SuspenseList\";\n  }\n  if (\"object\" === typeof type)\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeElementType(type.render);\n      case REACT_MEMO_TYPE:\n        return describeElementType(type.type);\n      case REACT_LAZY_TYPE:\n        var payload = type._payload;\n        type = type._init;\n        try {\n          return describeElementType(type(payload));\n        } catch (x) {}\n    }\n  return \"\";\n}\nvar CLIENT_REFERENCE_TAG = Symbol.for(\"react.client.reference\");\nfunction describeObjectForErrorMessage(objectOrArray, expandedName) {\n  var objKind = objectName(objectOrArray);\n  if (\"Object\" !== objKind && \"Array\" !== objKind) return objKind;\n  objKind = -1;\n  var length = 0;\n  if (isArrayImpl(objectOrArray)) {\n    var str = \"[\";\n    for (var i = 0; i < objectOrArray.length; i++) {\n      0 < i && (str += \", \");\n      var value = objectOrArray[i];\n      value =\n        \"object\" === typeof value && null !== value\n          ? describeObjectForErrorMessage(value)\n          : describeValueForErrorMessage(value);\n      \"\" + i === expandedName\n        ? ((objKind = str.length), (length = value.length), (str += value))\n        : (str =\n            10 > value.length && 40 > str.length + value.length\n              ? str + value\n              : str + \"...\");\n    }\n    str += \"]\";\n  } else if (objectOrArray.$$typeof === REACT_ELEMENT_TYPE)\n    str = \"<\" + describeElementType(objectOrArray.type) + \"/>\";\n  else {\n    if (objectOrArray.$$typeof === CLIENT_REFERENCE_TAG) return \"client\";\n    str = \"{\";\n    i = Object.keys(objectOrArray);\n    for (value = 0; value < i.length; value++) {\n      0 < value && (str += \", \");\n      var name = i[value],\n        encodedKey = JSON.stringify(name);\n      str += ('\"' + name + '\"' === encodedKey ? name : encodedKey) + \": \";\n      encodedKey = objectOrArray[name];\n      encodedKey =\n        \"object\" === typeof encodedKey && null !== encodedKey\n          ? describeObjectForErrorMessage(encodedKey)\n          : describeValueForErrorMessage(encodedKey);\n      name === expandedName\n        ? ((objKind = str.length),\n          (length = encodedKey.length),\n          (str += encodedKey))\n        : (str =\n            10 > encodedKey.length && 40 > str.length + encodedKey.length\n              ? str + encodedKey\n              : str + \"...\");\n    }\n    str += \"}\";\n  }\n  return void 0 === expandedName\n    ? str\n    : -1 < objKind && 0 < length\n      ? ((objectOrArray = \" \".repeat(objKind) + \"^\".repeat(length)),\n        \"\\n  \" + str + \"\\n  \" + objectOrArray)\n      : \"\\n  \" + str;\n}\nvar ObjectPrototype = Object.prototype,\n  stringify = JSON.stringify;\nfunction defaultErrorHandler(error) {\n  console.error(error);\n}\nfunction defaultPostponeHandler() {}\nfunction RequestInstance(\n  type,\n  model,\n  bundlerConfig,\n  onError,\n  identifierPrefix,\n  onPostpone,\n  temporaryReferences,\n  environmentName,\n  filterStackFrame,\n  onAllReady,\n  onFatalError\n) {\n  if (\n    null !== ReactSharedInternalsServer.A &&\n    ReactSharedInternalsServer.A !== DefaultAsyncDispatcher\n  )\n    throw Error(\"Currently React only supports one RSC renderer at a time.\");\n  ReactSharedInternalsServer.A = DefaultAsyncDispatcher;\n  filterStackFrame = new Set();\n  environmentName = [];\n  var hints = new Set();\n  this.type = type;\n  this.status = 10;\n  this.flushScheduled = !1;\n  this.destination = this.fatalError = null;\n  this.bundlerConfig = bundlerConfig;\n  this.cache = new Map();\n  this.pendingChunks = this.nextChunkId = 0;\n  this.hints = hints;\n  this.abortListeners = new Set();\n  this.abortableTasks = filterStackFrame;\n  this.pingedTasks = environmentName;\n  this.completedImportChunks = [];\n  this.completedHintChunks = [];\n  this.completedRegularChunks = [];\n  this.completedErrorChunks = [];\n  this.writtenSymbols = new Map();\n  this.writtenClientReferences = new Map();\n  this.writtenServerReferences = new Map();\n  this.writtenObjects = new WeakMap();\n  this.temporaryReferences = temporaryReferences;\n  this.identifierPrefix = identifierPrefix || \"\";\n  this.identifierCount = 1;\n  this.taintCleanupQueue = [];\n  this.onError = void 0 === onError ? defaultErrorHandler : onError;\n  this.onPostpone = void 0 === onPostpone ? defaultPostponeHandler : onPostpone;\n  this.onAllReady = onAllReady;\n  this.onFatalError = onFatalError;\n  type = createTask(this, model, null, !1, filterStackFrame);\n  environmentName.push(type);\n}\nfunction noop() {}\nvar currentRequest = null;\nfunction resolveRequest() {\n  if (currentRequest) return currentRequest;\n  if (supportsRequestStorage) {\n    var store = requestStorage.getStore();\n    if (store) return store;\n  }\n  return null;\n}\nfunction serializeThenable(request, task, thenable) {\n  var newTask = createTask(\n    request,\n    null,\n    task.keyPath,\n    task.implicitSlot,\n    request.abortableTasks\n  );\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return (\n        (newTask.model = thenable.value), pingTask(request, newTask), newTask.id\n      );\n    case \"rejected\":\n      return erroredTask(request, newTask, thenable.reason), newTask.id;\n    default:\n      if (12 === request.status)\n        return (\n          request.abortableTasks.delete(newTask),\n          (newTask.status = 3),\n          (task = stringify(serializeByValueID(request.fatalError))),\n          emitModelChunk(request, newTask.id, task),\n          newTask.id\n        );\n      \"string\" !== typeof thenable.status &&\n        ((thenable.status = \"pending\"),\n        thenable.then(\n          function (fulfilledValue) {\n            \"pending\" === thenable.status &&\n              ((thenable.status = \"fulfilled\"),\n              (thenable.value = fulfilledValue));\n          },\n          function (error) {\n            \"pending\" === thenable.status &&\n              ((thenable.status = \"rejected\"), (thenable.reason = error));\n          }\n        ));\n  }\n  thenable.then(\n    function (value) {\n      newTask.model = value;\n      pingTask(request, newTask);\n    },\n    function (reason) {\n      0 === newTask.status &&\n        (erroredTask(request, newTask, reason), enqueueFlush(request));\n    }\n  );\n  return newTask.id;\n}\nfunction serializeReadableStream(request, task, stream) {\n  function progress(entry) {\n    if (!aborted)\n      if (entry.done)\n        request.abortListeners.delete(abortStream),\n          (entry = streamTask.id.toString(16) + \":C\\n\"),\n          request.completedRegularChunks.push(stringToChunk(entry)),\n          enqueueFlush(request),\n          (aborted = !0);\n      else\n        try {\n          (streamTask.model = entry.value),\n            request.pendingChunks++,\n            emitChunk(request, streamTask, streamTask.model),\n            enqueueFlush(request),\n            reader.read().then(progress, error);\n        } catch (x$7) {\n          error(x$7);\n        }\n  }\n  function error(reason) {\n    aborted ||\n      ((aborted = !0),\n      request.abortListeners.delete(abortStream),\n      erroredTask(request, streamTask, reason),\n      enqueueFlush(request),\n      reader.cancel(reason).then(error, error));\n  }\n  function abortStream(reason) {\n    aborted ||\n      ((aborted = !0),\n      request.abortListeners.delete(abortStream),\n      erroredTask(request, streamTask, reason),\n      enqueueFlush(request),\n      reader.cancel(reason).then(error, error));\n  }\n  var supportsBYOB = stream.supportsBYOB;\n  if (void 0 === supportsBYOB)\n    try {\n      stream.getReader({ mode: \"byob\" }).releaseLock(), (supportsBYOB = !0);\n    } catch (x) {\n      supportsBYOB = !1;\n    }\n  var reader = stream.getReader(),\n    streamTask = createTask(\n      request,\n      task.model,\n      task.keyPath,\n      task.implicitSlot,\n      request.abortableTasks\n    );\n  request.abortableTasks.delete(streamTask);\n  request.pendingChunks++;\n  task = streamTask.id.toString(16) + \":\" + (supportsBYOB ? \"r\" : \"R\") + \"\\n\";\n  request.completedRegularChunks.push(stringToChunk(task));\n  var aborted = !1;\n  request.abortListeners.add(abortStream);\n  reader.read().then(progress, error);\n  return serializeByValueID(streamTask.id);\n}\nfunction serializeAsyncIterable(request, task, iterable, iterator) {\n  function progress(entry) {\n    if (!aborted)\n      if (entry.done) {\n        request.abortListeners.delete(abortIterable);\n        if (void 0 === entry.value)\n          var endStreamRow = streamTask.id.toString(16) + \":C\\n\";\n        else\n          try {\n            var chunkId = outlineModel(request, entry.value);\n            endStreamRow =\n              streamTask.id.toString(16) +\n              \":C\" +\n              stringify(serializeByValueID(chunkId)) +\n              \"\\n\";\n          } catch (x) {\n            error(x);\n            return;\n          }\n        request.completedRegularChunks.push(stringToChunk(endStreamRow));\n        enqueueFlush(request);\n        aborted = !0;\n      } else\n        try {\n          (streamTask.model = entry.value),\n            request.pendingChunks++,\n            emitChunk(request, streamTask, streamTask.model),\n            enqueueFlush(request),\n            iterator.next().then(progress, error);\n        } catch (x$8) {\n          error(x$8);\n        }\n  }\n  function error(reason) {\n    aborted ||\n      ((aborted = !0),\n      request.abortListeners.delete(abortIterable),\n      erroredTask(request, streamTask, reason),\n      enqueueFlush(request),\n      \"function\" === typeof iterator.throw &&\n        iterator.throw(reason).then(error, error));\n  }\n  function abortIterable(reason) {\n    aborted ||\n      ((aborted = !0),\n      request.abortListeners.delete(abortIterable),\n      erroredTask(request, streamTask, reason),\n      enqueueFlush(request),\n      \"function\" === typeof iterator.throw &&\n        iterator.throw(reason).then(error, error));\n  }\n  iterable = iterable === iterator;\n  var streamTask = createTask(\n    request,\n    task.model,\n    task.keyPath,\n    task.implicitSlot,\n    request.abortableTasks\n  );\n  request.abortableTasks.delete(streamTask);\n  request.pendingChunks++;\n  task = streamTask.id.toString(16) + \":\" + (iterable ? \"x\" : \"X\") + \"\\n\";\n  request.completedRegularChunks.push(stringToChunk(task));\n  var aborted = !1;\n  request.abortListeners.add(abortIterable);\n  iterator.next().then(progress, error);\n  return serializeByValueID(streamTask.id);\n}\nfunction emitHint(request, code, model) {\n  model = stringify(model);\n  code = stringToChunk(\":H\" + code + model + \"\\n\");\n  request.completedHintChunks.push(code);\n  enqueueFlush(request);\n}\nfunction readThenable(thenable) {\n  if (\"fulfilled\" === thenable.status) return thenable.value;\n  if (\"rejected\" === thenable.status) throw thenable.reason;\n  throw thenable;\n}\nfunction createLazyWrapperAroundWakeable(wakeable) {\n  switch (wakeable.status) {\n    case \"fulfilled\":\n    case \"rejected\":\n      break;\n    default:\n      \"string\" !== typeof wakeable.status &&\n        ((wakeable.status = \"pending\"),\n        wakeable.then(\n          function (fulfilledValue) {\n            \"pending\" === wakeable.status &&\n              ((wakeable.status = \"fulfilled\"),\n              (wakeable.value = fulfilledValue));\n          },\n          function (error) {\n            \"pending\" === wakeable.status &&\n              ((wakeable.status = \"rejected\"), (wakeable.reason = error));\n          }\n        ));\n  }\n  return { $$typeof: REACT_LAZY_TYPE, _payload: wakeable, _init: readThenable };\n}\nfunction voidHandler() {}\nfunction processServerComponentReturnValue(request, task, Component, result) {\n  if (\n    \"object\" !== typeof result ||\n    null === result ||\n    result.$$typeof === CLIENT_REFERENCE_TAG$1\n  )\n    return result;\n  if (\"function\" === typeof result.then)\n    return \"fulfilled\" === result.status\n      ? result.value\n      : createLazyWrapperAroundWakeable(result);\n  var iteratorFn = getIteratorFn(result);\n  return iteratorFn\n    ? ((request = {}),\n      (request[Symbol.iterator] = function () {\n        return iteratorFn.call(result);\n      }),\n      request)\n    : \"function\" !== typeof result[ASYNC_ITERATOR] ||\n        (\"function\" === typeof ReadableStream &&\n          result instanceof ReadableStream)\n      ? result\n      : ((request = {}),\n        (request[ASYNC_ITERATOR] = function () {\n          return result[ASYNC_ITERATOR]();\n        }),\n        request);\n}\nfunction renderFunctionComponent(request, task, key, Component, props) {\n  var prevThenableState = task.thenableState;\n  task.thenableState = null;\n  thenableIndexCounter = 0;\n  thenableState = prevThenableState;\n  props = Component(props, void 0);\n  if (12 === request.status)\n    throw (\n      (\"object\" === typeof props &&\n        null !== props &&\n        \"function\" === typeof props.then &&\n        props.$$typeof !== CLIENT_REFERENCE_TAG$1 &&\n        props.then(voidHandler, voidHandler),\n      null)\n    );\n  props = processServerComponentReturnValue(request, task, Component, props);\n  Component = task.keyPath;\n  prevThenableState = task.implicitSlot;\n  null !== key\n    ? (task.keyPath = null === Component ? key : Component + \",\" + key)\n    : null === Component && (task.implicitSlot = !0);\n  request = renderModelDestructive(request, task, emptyRoot, \"\", props);\n  task.keyPath = Component;\n  task.implicitSlot = prevThenableState;\n  return request;\n}\nfunction renderFragment(request, task, children) {\n  return null !== task.keyPath\n    ? ((request = [\n        REACT_ELEMENT_TYPE,\n        REACT_FRAGMENT_TYPE,\n        task.keyPath,\n        { children: children }\n      ]),\n      task.implicitSlot ? [request] : request)\n    : children;\n}\nfunction renderElement(request, task, type, key, ref, props) {\n  if (null !== ref && void 0 !== ref)\n    throw Error(\n      \"Refs cannot be used in Server Components, nor passed to Client Components.\"\n    );\n  if (\n    \"function\" === typeof type &&\n    type.$$typeof !== CLIENT_REFERENCE_TAG$1 &&\n    type.$$typeof !== TEMPORARY_REFERENCE_TAG\n  )\n    return renderFunctionComponent(request, task, key, type, props);\n  if (type === REACT_FRAGMENT_TYPE && null === key)\n    return (\n      (type = task.implicitSlot),\n      null === task.keyPath && (task.implicitSlot = !0),\n      (props = renderModelDestructive(\n        request,\n        task,\n        emptyRoot,\n        \"\",\n        props.children\n      )),\n      (task.implicitSlot = type),\n      props\n    );\n  if (\n    null != type &&\n    \"object\" === typeof type &&\n    type.$$typeof !== CLIENT_REFERENCE_TAG$1\n  )\n    switch (type.$$typeof) {\n      case REACT_LAZY_TYPE:\n        var init = type._init;\n        type = init(type._payload);\n        if (12 === request.status) throw null;\n        return renderElement(request, task, type, key, ref, props);\n      case REACT_FORWARD_REF_TYPE:\n        return renderFunctionComponent(request, task, key, type.render, props);\n      case REACT_MEMO_TYPE:\n        return renderElement(request, task, type.type, key, ref, props);\n    }\n  request = key;\n  key = task.keyPath;\n  null === request\n    ? (request = key)\n    : null !== key && (request = key + \",\" + request);\n  props = [REACT_ELEMENT_TYPE, type, request, props];\n  task = task.implicitSlot && null !== request ? [props] : props;\n  return task;\n}\nfunction pingTask(request, task) {\n  var pingedTasks = request.pingedTasks;\n  pingedTasks.push(task);\n  1 === pingedTasks.length &&\n    ((request.flushScheduled = null !== request.destination),\n    21 === request.type || 10 === request.status\n      ? scheduleMicrotask(function () {\n          return performWork(request);\n        })\n      : setTimeoutOrImmediate(function () {\n          return performWork(request);\n        }, 0));\n}\nfunction createTask(request, model, keyPath, implicitSlot, abortSet) {\n  request.pendingChunks++;\n  var id = request.nextChunkId++;\n  \"object\" !== typeof model ||\n    null === model ||\n    null !== keyPath ||\n    implicitSlot ||\n    request.writtenObjects.set(model, serializeByValueID(id));\n  var task = {\n    id: id,\n    status: 0,\n    model: model,\n    keyPath: keyPath,\n    implicitSlot: implicitSlot,\n    ping: function () {\n      return pingTask(request, task);\n    },\n    toJSON: function (parentPropertyName, value) {\n      var prevKeyPath = task.keyPath,\n        prevImplicitSlot = task.implicitSlot;\n      try {\n        var JSCompiler_inline_result = renderModelDestructive(\n          request,\n          task,\n          this,\n          parentPropertyName,\n          value\n        );\n      } catch (thrownValue) {\n        if (\n          ((parentPropertyName = task.model),\n          (parentPropertyName =\n            \"object\" === typeof parentPropertyName &&\n            null !== parentPropertyName &&\n            (parentPropertyName.$$typeof === REACT_ELEMENT_TYPE ||\n              parentPropertyName.$$typeof === REACT_LAZY_TYPE)),\n          12 === request.status)\n        )\n          (task.status = 3),\n            (prevKeyPath = request.fatalError),\n            (JSCompiler_inline_result = parentPropertyName\n              ? \"$L\" + prevKeyPath.toString(16)\n              : serializeByValueID(prevKeyPath));\n        else if (\n          ((value =\n            thrownValue === SuspenseException\n              ? getSuspendedThenable()\n              : thrownValue),\n          \"object\" === typeof value &&\n            null !== value &&\n            \"function\" === typeof value.then)\n        ) {\n          JSCompiler_inline_result = createTask(\n            request,\n            task.model,\n            task.keyPath,\n            task.implicitSlot,\n            request.abortableTasks\n          );\n          var ping = JSCompiler_inline_result.ping;\n          value.then(ping, ping);\n          JSCompiler_inline_result.thenableState =\n            getThenableStateAfterSuspending();\n          task.keyPath = prevKeyPath;\n          task.implicitSlot = prevImplicitSlot;\n          JSCompiler_inline_result = parentPropertyName\n            ? \"$L\" + JSCompiler_inline_result.id.toString(16)\n            : serializeByValueID(JSCompiler_inline_result.id);\n        } else\n          (task.keyPath = prevKeyPath),\n            (task.implicitSlot = prevImplicitSlot),\n            request.pendingChunks++,\n            (prevKeyPath = request.nextChunkId++),\n            (prevImplicitSlot = logRecoverableError(request, value, task)),\n            emitErrorChunk(request, prevKeyPath, prevImplicitSlot),\n            (JSCompiler_inline_result = parentPropertyName\n              ? \"$L\" + prevKeyPath.toString(16)\n              : serializeByValueID(prevKeyPath));\n      }\n      return JSCompiler_inline_result;\n    },\n    thenableState: null\n  };\n  abortSet.add(task);\n  return task;\n}\nfunction serializeByValueID(id) {\n  return \"$\" + id.toString(16);\n}\nfunction encodeReferenceChunk(request, id, reference) {\n  request = stringify(reference);\n  id = id.toString(16) + \":\" + request + \"\\n\";\n  return stringToChunk(id);\n}\nfunction serializeClientReference(\n  request,\n  parent,\n  parentPropertyName,\n  clientReference\n) {\n  var clientReferenceKey = clientReference.$$async\n      ? clientReference.$$id + \"#async\"\n      : clientReference.$$id,\n    writtenClientReferences = request.writtenClientReferences,\n    existingId = writtenClientReferences.get(clientReferenceKey);\n  if (void 0 !== existingId)\n    return parent[0] === REACT_ELEMENT_TYPE && \"1\" === parentPropertyName\n      ? \"$L\" + existingId.toString(16)\n      : serializeByValueID(existingId);\n  try {\n    var config = request.bundlerConfig,\n      modulePath = clientReference.$$id;\n    existingId = \"\";\n    var resolvedModuleData = config[modulePath];\n    if (resolvedModuleData) existingId = resolvedModuleData.name;\n    else {\n      var idx = modulePath.lastIndexOf(\"#\");\n      -1 !== idx &&\n        ((existingId = modulePath.slice(idx + 1)),\n        (resolvedModuleData = config[modulePath.slice(0, idx)]));\n      if (!resolvedModuleData)\n        throw Error(\n          'Could not find the module \"' +\n            modulePath +\n            '\" in the React Client Manifest. This is probably a bug in the React Server Components bundler.'\n        );\n    }\n    if (!0 === resolvedModuleData.async && !0 === clientReference.$$async)\n      throw Error(\n        'The module \"' +\n          modulePath +\n          '\" is marked as an async ESM module but was loaded as a CJS proxy. This is probably a bug in the React Server Components bundler.'\n      );\n    var JSCompiler_inline_result =\n      !0 === resolvedModuleData.async || !0 === clientReference.$$async\n        ? [resolvedModuleData.id, resolvedModuleData.chunks, existingId, 1]\n        : [resolvedModuleData.id, resolvedModuleData.chunks, existingId];\n    request.pendingChunks++;\n    var importId = request.nextChunkId++,\n      json = stringify(JSCompiler_inline_result),\n      row = importId.toString(16) + \":I\" + json + \"\\n\",\n      processedChunk = stringToChunk(row);\n    request.completedImportChunks.push(processedChunk);\n    writtenClientReferences.set(clientReferenceKey, importId);\n    return parent[0] === REACT_ELEMENT_TYPE && \"1\" === parentPropertyName\n      ? \"$L\" + importId.toString(16)\n      : serializeByValueID(importId);\n  } catch (x) {\n    return (\n      request.pendingChunks++,\n      (parent = request.nextChunkId++),\n      (parentPropertyName = logRecoverableError(request, x, null)),\n      emitErrorChunk(request, parent, parentPropertyName),\n      serializeByValueID(parent)\n    );\n  }\n}\nfunction outlineModel(request, value) {\n  value = createTask(request, value, null, !1, request.abortableTasks);\n  retryTask(request, value);\n  return value.id;\n}\nfunction serializeTypedArray(request, tag, typedArray) {\n  request.pendingChunks++;\n  var bufferId = request.nextChunkId++;\n  emitTypedArrayChunk(request, bufferId, tag, typedArray);\n  return serializeByValueID(bufferId);\n}\nfunction serializeBlob(request, blob) {\n  function progress(entry) {\n    if (!aborted)\n      if (entry.done)\n        request.abortListeners.delete(abortBlob),\n          (aborted = !0),\n          pingTask(request, newTask);\n      else\n        return (\n          model.push(entry.value), reader.read().then(progress).catch(error)\n        );\n  }\n  function error(reason) {\n    aborted ||\n      ((aborted = !0),\n      request.abortListeners.delete(abortBlob),\n      erroredTask(request, newTask, reason),\n      enqueueFlush(request),\n      reader.cancel(reason).then(error, error));\n  }\n  function abortBlob(reason) {\n    aborted ||\n      ((aborted = !0),\n      request.abortListeners.delete(abortBlob),\n      erroredTask(request, newTask, reason),\n      enqueueFlush(request),\n      reader.cancel(reason).then(error, error));\n  }\n  var model = [blob.type],\n    newTask = createTask(request, model, null, !1, request.abortableTasks),\n    reader = blob.stream().getReader(),\n    aborted = !1;\n  request.abortListeners.add(abortBlob);\n  reader.read().then(progress).catch(error);\n  return \"$B\" + newTask.id.toString(16);\n}\nvar modelRoot = !1;\nfunction renderModelDestructive(\n  request,\n  task,\n  parent,\n  parentPropertyName,\n  value\n) {\n  task.model = value;\n  if (value === REACT_ELEMENT_TYPE) return \"$\";\n  if (null === value) return null;\n  if (\"object\" === typeof value) {\n    switch (value.$$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var elementReference = null,\n          writtenObjects = request.writtenObjects;\n        if (null === task.keyPath && !task.implicitSlot) {\n          var existingReference = writtenObjects.get(value);\n          if (void 0 !== existingReference)\n            if (modelRoot === value) modelRoot = null;\n            else return existingReference;\n          else\n            -1 === parentPropertyName.indexOf(\":\") &&\n              ((parent = writtenObjects.get(parent)),\n              void 0 !== parent &&\n                ((elementReference = parent + \":\" + parentPropertyName),\n                writtenObjects.set(value, elementReference)));\n        }\n        parentPropertyName = value.props;\n        parent = parentPropertyName.ref;\n        request = renderElement(\n          request,\n          task,\n          value.type,\n          value.key,\n          void 0 !== parent ? parent : null,\n          parentPropertyName\n        );\n        \"object\" === typeof request &&\n          null !== request &&\n          null !== elementReference &&\n          (writtenObjects.has(request) ||\n            writtenObjects.set(request, elementReference));\n        return request;\n      case REACT_LAZY_TYPE:\n        task.thenableState = null;\n        parentPropertyName = value._init;\n        value = parentPropertyName(value._payload);\n        if (12 === request.status) throw null;\n        return renderModelDestructive(request, task, emptyRoot, \"\", value);\n      case REACT_LEGACY_ELEMENT_TYPE:\n        throw Error(\n          'A React Element from an older version of React was rendered. This is not supported. It can happen if:\\n- Multiple copies of the \"react\" package is used.\\n- A library pre-bundled an old copy of \"react\" or \"react/jsx-runtime\".\\n- A compiler tries to \"inline\" JSX instead of using the runtime.'\n        );\n    }\n    if (value.$$typeof === CLIENT_REFERENCE_TAG$1)\n      return serializeClientReference(\n        request,\n        parent,\n        parentPropertyName,\n        value\n      );\n    if (\n      void 0 !== request.temporaryReferences &&\n      ((elementReference = request.temporaryReferences.get(value)),\n      void 0 !== elementReference)\n    )\n      return \"$T\" + elementReference;\n    elementReference = request.writtenObjects;\n    writtenObjects = elementReference.get(value);\n    if (\"function\" === typeof value.then) {\n      if (void 0 !== writtenObjects) {\n        if (null !== task.keyPath || task.implicitSlot)\n          return \"$@\" + serializeThenable(request, task, value).toString(16);\n        if (modelRoot === value) modelRoot = null;\n        else return writtenObjects;\n      }\n      request = \"$@\" + serializeThenable(request, task, value).toString(16);\n      elementReference.set(value, request);\n      return request;\n    }\n    if (void 0 !== writtenObjects)\n      if (modelRoot === value) modelRoot = null;\n      else return writtenObjects;\n    else if (\n      -1 === parentPropertyName.indexOf(\":\") &&\n      ((writtenObjects = elementReference.get(parent)),\n      void 0 !== writtenObjects)\n    ) {\n      existingReference = parentPropertyName;\n      if (isArrayImpl(parent) && parent[0] === REACT_ELEMENT_TYPE)\n        switch (parentPropertyName) {\n          case \"1\":\n            existingReference = \"type\";\n            break;\n          case \"2\":\n            existingReference = \"key\";\n            break;\n          case \"3\":\n            existingReference = \"props\";\n            break;\n          case \"4\":\n            existingReference = \"_owner\";\n        }\n      elementReference.set(value, writtenObjects + \":\" + existingReference);\n    }\n    if (isArrayImpl(value)) return renderFragment(request, task, value);\n    if (value instanceof Map)\n      return (\n        (value = Array.from(value)),\n        \"$Q\" + outlineModel(request, value).toString(16)\n      );\n    if (value instanceof Set)\n      return (\n        (value = Array.from(value)),\n        \"$W\" + outlineModel(request, value).toString(16)\n      );\n    if (\"function\" === typeof FormData && value instanceof FormData)\n      return (\n        (value = Array.from(value.entries())),\n        \"$K\" + outlineModel(request, value).toString(16)\n      );\n    if (value instanceof Error) return \"$Z\";\n    if (value instanceof ArrayBuffer)\n      return serializeTypedArray(request, \"A\", new Uint8Array(value));\n    if (value instanceof Int8Array)\n      return serializeTypedArray(request, \"O\", value);\n    if (value instanceof Uint8Array)\n      return serializeTypedArray(request, \"o\", value);\n    if (value instanceof Uint8ClampedArray)\n      return serializeTypedArray(request, \"U\", value);\n    if (value instanceof Int16Array)\n      return serializeTypedArray(request, \"S\", value);\n    if (value instanceof Uint16Array)\n      return serializeTypedArray(request, \"s\", value);\n    if (value instanceof Int32Array)\n      return serializeTypedArray(request, \"L\", value);\n    if (value instanceof Uint32Array)\n      return serializeTypedArray(request, \"l\", value);\n    if (value instanceof Float32Array)\n      return serializeTypedArray(request, \"G\", value);\n    if (value instanceof Float64Array)\n      return serializeTypedArray(request, \"g\", value);\n    if (value instanceof BigInt64Array)\n      return serializeTypedArray(request, \"M\", value);\n    if (value instanceof BigUint64Array)\n      return serializeTypedArray(request, \"m\", value);\n    if (value instanceof DataView)\n      return serializeTypedArray(request, \"V\", value);\n    if (\"function\" === typeof Blob && value instanceof Blob)\n      return serializeBlob(request, value);\n    if ((elementReference = getIteratorFn(value)))\n      return (\n        (parentPropertyName = elementReference.call(value)),\n        parentPropertyName === value\n          ? \"$i\" +\n            outlineModel(request, Array.from(parentPropertyName)).toString(16)\n          : renderFragment(request, task, Array.from(parentPropertyName))\n      );\n    if (\"function\" === typeof ReadableStream && value instanceof ReadableStream)\n      return serializeReadableStream(request, task, value);\n    elementReference = value[ASYNC_ITERATOR];\n    if (\"function\" === typeof elementReference)\n      return (\n        null !== task.keyPath\n          ? ((request = [\n              REACT_ELEMENT_TYPE,\n              REACT_FRAGMENT_TYPE,\n              task.keyPath,\n              { children: value }\n            ]),\n            (request = task.implicitSlot ? [request] : request))\n          : ((parentPropertyName = elementReference.call(value)),\n            (request = serializeAsyncIterable(\n              request,\n              task,\n              value,\n              parentPropertyName\n            ))),\n        request\n      );\n    if (value instanceof Date) return \"$D\" + value.toJSON();\n    request = getPrototypeOf(value);\n    if (\n      request !== ObjectPrototype &&\n      (null === request || null !== getPrototypeOf(request))\n    )\n      throw Error(\n        \"Only plain objects, and a few built-ins, can be passed to Client Components from Server Components. Classes or null prototypes are not supported.\" +\n          describeObjectForErrorMessage(parent, parentPropertyName)\n      );\n    return value;\n  }\n  if (\"string\" === typeof value) {\n    if (\n      \"Z\" === value[value.length - 1] &&\n      parent[parentPropertyName] instanceof Date\n    )\n      return \"$D\" + value;\n    if (1024 <= value.length && null !== byteLengthOfChunk)\n      return (\n        request.pendingChunks++,\n        (task = request.nextChunkId++),\n        emitTextChunk(request, task, value),\n        serializeByValueID(task)\n      );\n    request = \"$\" === value[0] ? \"$\" + value : value;\n    return request;\n  }\n  if (\"boolean\" === typeof value) return value;\n  if (\"number\" === typeof value)\n    return Number.isFinite(value)\n      ? 0 === value && -Infinity === 1 / value\n        ? \"$-0\"\n        : value\n      : Infinity === value\n        ? \"$Infinity\"\n        : -Infinity === value\n          ? \"$-Infinity\"\n          : \"$NaN\";\n  if (\"undefined\" === typeof value) return \"$undefined\";\n  if (\"function\" === typeof value) {\n    if (value.$$typeof === CLIENT_REFERENCE_TAG$1)\n      return serializeClientReference(\n        request,\n        parent,\n        parentPropertyName,\n        value\n      );\n    if (value.$$typeof === SERVER_REFERENCE_TAG)\n      return (\n        (task = request.writtenServerReferences),\n        (parentPropertyName = task.get(value)),\n        void 0 !== parentPropertyName\n          ? (request = \"$F\" + parentPropertyName.toString(16))\n          : ((parentPropertyName = value.$$bound),\n            (parentPropertyName =\n              null === parentPropertyName\n                ? null\n                : Promise.resolve(parentPropertyName)),\n            (request = outlineModel(request, {\n              id: value.$$id,\n              bound: parentPropertyName\n            })),\n            task.set(value, request),\n            (request = \"$F\" + request.toString(16))),\n        request\n      );\n    if (\n      void 0 !== request.temporaryReferences &&\n      ((request = request.temporaryReferences.get(value)), void 0 !== request)\n    )\n      return \"$T\" + request;\n    if (value.$$typeof === TEMPORARY_REFERENCE_TAG)\n      throw Error(\n        \"Could not reference an opaque temporary reference. This is likely due to misconfiguring the temporaryReferences options on the server.\"\n      );\n    if (/^on[A-Z]/.test(parentPropertyName))\n      throw Error(\n        \"Event handlers cannot be passed to Client Component props.\" +\n          describeObjectForErrorMessage(parent, parentPropertyName) +\n          \"\\nIf you need interactivity, consider converting part of this to a Client Component.\"\n      );\n    throw Error(\n      'Functions cannot be passed directly to Client Components unless you explicitly expose it by marking it with \"use server\". Or maybe you meant to call this function rather than return it.' +\n        describeObjectForErrorMessage(parent, parentPropertyName)\n    );\n  }\n  if (\"symbol\" === typeof value) {\n    task = request.writtenSymbols;\n    elementReference = task.get(value);\n    if (void 0 !== elementReference)\n      return serializeByValueID(elementReference);\n    elementReference = value.description;\n    if (Symbol.for(elementReference) !== value)\n      throw Error(\n        \"Only global symbols received from Symbol.for(...) can be passed to Client Components. The symbol Symbol.for(\" +\n          (value.description + \") cannot be found among global symbols.\") +\n          describeObjectForErrorMessage(parent, parentPropertyName)\n      );\n    request.pendingChunks++;\n    parentPropertyName = request.nextChunkId++;\n    parent = encodeReferenceChunk(\n      request,\n      parentPropertyName,\n      \"$S\" + elementReference\n    );\n    request.completedImportChunks.push(parent);\n    task.set(value, parentPropertyName);\n    return serializeByValueID(parentPropertyName);\n  }\n  if (\"bigint\" === typeof value) return \"$n\" + value.toString(10);\n  throw Error(\n    \"Type \" +\n      typeof value +\n      \" is not supported in Client Component props.\" +\n      describeObjectForErrorMessage(parent, parentPropertyName)\n  );\n}\nfunction logRecoverableError(request, error) {\n  var prevRequest = currentRequest;\n  currentRequest = null;\n  try {\n    var onError = request.onError;\n    var errorDigest = supportsRequestStorage\n      ? requestStorage.run(void 0, onError, error)\n      : onError(error);\n  } finally {\n    currentRequest = prevRequest;\n  }\n  if (null != errorDigest && \"string\" !== typeof errorDigest)\n    throw Error(\n      'onError returned something with a type other than \"string\". onError should return a string and may return null or undefined but must not return anything else. It received something of type \"' +\n        typeof errorDigest +\n        '\" instead'\n    );\n  return errorDigest || \"\";\n}\nfunction fatalError(request, error) {\n  var onFatalError = request.onFatalError;\n  onFatalError(error);\n  null !== request.destination\n    ? ((request.status = 14), closeWithError(request.destination, error))\n    : ((request.status = 13), (request.fatalError = error));\n}\nfunction emitErrorChunk(request, id, digest) {\n  digest = { digest: digest };\n  id = id.toString(16) + \":E\" + stringify(digest) + \"\\n\";\n  id = stringToChunk(id);\n  request.completedErrorChunks.push(id);\n}\nfunction emitModelChunk(request, id, json) {\n  id = id.toString(16) + \":\" + json + \"\\n\";\n  id = stringToChunk(id);\n  request.completedRegularChunks.push(id);\n}\nfunction emitTypedArrayChunk(request, id, tag, typedArray) {\n  request.pendingChunks++;\n  var buffer = new Uint8Array(\n    typedArray.buffer,\n    typedArray.byteOffset,\n    typedArray.byteLength\n  );\n  typedArray = 2048 < typedArray.byteLength ? buffer.slice() : buffer;\n  buffer = typedArray.byteLength;\n  id = id.toString(16) + \":\" + tag + buffer.toString(16) + \",\";\n  id = stringToChunk(id);\n  request.completedRegularChunks.push(id, typedArray);\n}\nfunction emitTextChunk(request, id, text) {\n  if (null === byteLengthOfChunk)\n    throw Error(\n      \"Existence of byteLengthOfChunk should have already been checked. This is a bug in React.\"\n    );\n  request.pendingChunks++;\n  text = stringToChunk(text);\n  var binaryLength = text.byteLength;\n  id = id.toString(16) + \":T\" + binaryLength.toString(16) + \",\";\n  id = stringToChunk(id);\n  request.completedRegularChunks.push(id, text);\n}\nfunction emitChunk(request, task, value) {\n  var id = task.id;\n  \"string\" === typeof value && null !== byteLengthOfChunk\n    ? emitTextChunk(request, id, value)\n    : value instanceof ArrayBuffer\n      ? emitTypedArrayChunk(request, id, \"A\", new Uint8Array(value))\n      : value instanceof Int8Array\n        ? emitTypedArrayChunk(request, id, \"O\", value)\n        : value instanceof Uint8Array\n          ? emitTypedArrayChunk(request, id, \"o\", value)\n          : value instanceof Uint8ClampedArray\n            ? emitTypedArrayChunk(request, id, \"U\", value)\n            : value instanceof Int16Array\n              ? emitTypedArrayChunk(request, id, \"S\", value)\n              : value instanceof Uint16Array\n                ? emitTypedArrayChunk(request, id, \"s\", value)\n                : value instanceof Int32Array\n                  ? emitTypedArrayChunk(request, id, \"L\", value)\n                  : value instanceof Uint32Array\n                    ? emitTypedArrayChunk(request, id, \"l\", value)\n                    : value instanceof Float32Array\n                      ? emitTypedArrayChunk(request, id, \"G\", value)\n                      : value instanceof Float64Array\n                        ? emitTypedArrayChunk(request, id, \"g\", value)\n                        : value instanceof BigInt64Array\n                          ? emitTypedArrayChunk(request, id, \"M\", value)\n                          : value instanceof BigUint64Array\n                            ? emitTypedArrayChunk(request, id, \"m\", value)\n                            : value instanceof DataView\n                              ? emitTypedArrayChunk(request, id, \"V\", value)\n                              : ((value = stringify(value, task.toJSON)),\n                                emitModelChunk(request, task.id, value));\n}\nfunction erroredTask(request, task, error) {\n  request.abortableTasks.delete(task);\n  task.status = 4;\n  error = logRecoverableError(request, error, task);\n  emitErrorChunk(request, task.id, error);\n}\nvar emptyRoot = {};\nfunction retryTask(request, task) {\n  if (0 === task.status) {\n    task.status = 5;\n    try {\n      modelRoot = task.model;\n      var resolvedModel = renderModelDestructive(\n        request,\n        task,\n        emptyRoot,\n        \"\",\n        task.model\n      );\n      modelRoot = resolvedModel;\n      task.keyPath = null;\n      task.implicitSlot = !1;\n      if (\"object\" === typeof resolvedModel && null !== resolvedModel)\n        request.writtenObjects.set(resolvedModel, serializeByValueID(task.id)),\n          emitChunk(request, task, resolvedModel);\n      else {\n        var json = stringify(resolvedModel);\n        emitModelChunk(request, task.id, json);\n      }\n      request.abortableTasks.delete(task);\n      task.status = 1;\n    } catch (thrownValue) {\n      if (12 === request.status) {\n        request.abortableTasks.delete(task);\n        task.status = 3;\n        var model = stringify(serializeByValueID(request.fatalError));\n        emitModelChunk(request, task.id, model);\n      } else {\n        var x =\n          thrownValue === SuspenseException\n            ? getSuspendedThenable()\n            : thrownValue;\n        if (\n          \"object\" === typeof x &&\n          null !== x &&\n          \"function\" === typeof x.then\n        ) {\n          task.status = 0;\n          task.thenableState = getThenableStateAfterSuspending();\n          var ping = task.ping;\n          x.then(ping, ping);\n        } else erroredTask(request, task, x);\n      }\n    } finally {\n    }\n  }\n}\nfunction performWork(request) {\n  var prevDispatcher = ReactSharedInternalsServer.H;\n  ReactSharedInternalsServer.H = HooksDispatcher;\n  var prevRequest = currentRequest;\n  currentRequest$1 = currentRequest = request;\n  var hadAbortableTasks = 0 < request.abortableTasks.size;\n  try {\n    var pingedTasks = request.pingedTasks;\n    request.pingedTasks = [];\n    for (var i = 0; i < pingedTasks.length; i++)\n      retryTask(request, pingedTasks[i]);\n    null !== request.destination &&\n      flushCompletedChunks(request, request.destination);\n    if (hadAbortableTasks && 0 === request.abortableTasks.size) {\n      var onAllReady = request.onAllReady;\n      onAllReady();\n    }\n  } catch (error) {\n    logRecoverableError(request, error, null), fatalError(request, error);\n  } finally {\n    (ReactSharedInternalsServer.H = prevDispatcher),\n      (currentRequest$1 = null),\n      (currentRequest = prevRequest);\n  }\n}\nfunction flushCompletedChunks(request, destination) {\n  currentView = new Uint8Array(2048);\n  writtenBytes = 0;\n  try {\n    for (\n      var importsChunks = request.completedImportChunks, i = 0;\n      i < importsChunks.length;\n      i++\n    )\n      request.pendingChunks--,\n        writeChunkAndReturn(destination, importsChunks[i]);\n    importsChunks.splice(0, i);\n    var hintChunks = request.completedHintChunks;\n    for (i = 0; i < hintChunks.length; i++)\n      writeChunkAndReturn(destination, hintChunks[i]);\n    hintChunks.splice(0, i);\n    var regularChunks = request.completedRegularChunks;\n    for (i = 0; i < regularChunks.length; i++)\n      request.pendingChunks--,\n        writeChunkAndReturn(destination, regularChunks[i]);\n    regularChunks.splice(0, i);\n    var errorChunks = request.completedErrorChunks;\n    for (i = 0; i < errorChunks.length; i++)\n      request.pendingChunks--, writeChunkAndReturn(destination, errorChunks[i]);\n    errorChunks.splice(0, i);\n  } finally {\n    (request.flushScheduled = !1),\n      currentView &&\n        0 < writtenBytes &&\n        (destination.enqueue(\n          new Uint8Array(currentView.buffer, 0, writtenBytes)\n        ),\n        (currentView = null),\n        (writtenBytes = 0));\n  }\n  0 === request.pendingChunks &&\n    ((request.status = 14), destination.close(), (request.destination = null));\n}\nfunction startWork(request) {\n  request.flushScheduled = null !== request.destination;\n  supportsRequestStorage\n    ? scheduleMicrotask(function () {\n        requestStorage.run(request, performWork, request);\n      })\n    : scheduleMicrotask(function () {\n        return performWork(request);\n      });\n  setTimeoutOrImmediate(function () {\n    10 === request.status && (request.status = 11);\n  }, 0);\n}\nfunction enqueueFlush(request) {\n  !1 === request.flushScheduled &&\n    0 === request.pingedTasks.length &&\n    null !== request.destination &&\n    ((request.flushScheduled = !0),\n    setTimeoutOrImmediate(function () {\n      request.flushScheduled = !1;\n      var destination = request.destination;\n      destination && flushCompletedChunks(request, destination);\n    }, 0));\n}\nfunction startFlowing(request, destination) {\n  if (13 === request.status)\n    (request.status = 14), closeWithError(destination, request.fatalError);\n  else if (14 !== request.status && null === request.destination) {\n    request.destination = destination;\n    try {\n      flushCompletedChunks(request, destination);\n    } catch (error) {\n      logRecoverableError(request, error, null), fatalError(request, error);\n    }\n  }\n}\nfunction abort(request, reason) {\n  try {\n    11 >= request.status && (request.status = 12);\n    var abortableTasks = request.abortableTasks;\n    if (0 < abortableTasks.size) {\n      var error =\n          void 0 === reason\n            ? Error(\"The render was aborted by the server without a reason.\")\n            : \"object\" === typeof reason &&\n                null !== reason &&\n                \"function\" === typeof reason.then\n              ? Error(\"The render was aborted by the server with a promise.\")\n              : reason,\n        digest = logRecoverableError(request, error, null),\n        errorId = request.nextChunkId++;\n      request.fatalError = errorId;\n      request.pendingChunks++;\n      emitErrorChunk(request, errorId, digest, error);\n      abortableTasks.forEach(function (task) {\n        if (5 !== task.status) {\n          task.status = 3;\n          var ref = serializeByValueID(errorId);\n          task = encodeReferenceChunk(request, task.id, ref);\n          request.completedErrorChunks.push(task);\n        }\n      });\n      abortableTasks.clear();\n      var onAllReady = request.onAllReady;\n      onAllReady();\n    }\n    var abortListeners = request.abortListeners;\n    if (0 < abortListeners.size) {\n      var error$22 =\n        void 0 === reason\n          ? Error(\"The render was aborted by the server without a reason.\")\n          : \"object\" === typeof reason &&\n              null !== reason &&\n              \"function\" === typeof reason.then\n            ? Error(\"The render was aborted by the server with a promise.\")\n            : reason;\n      abortListeners.forEach(function (callback) {\n        return callback(error$22);\n      });\n      abortListeners.clear();\n    }\n    null !== request.destination &&\n      flushCompletedChunks(request, request.destination);\n  } catch (error$23) {\n    logRecoverableError(request, error$23, null), fatalError(request, error$23);\n  }\n}\nfunction resolveServerReference(bundlerConfig, id) {\n  var name = \"\",\n    resolvedModuleData = bundlerConfig[id];\n  if (resolvedModuleData) name = resolvedModuleData.name;\n  else {\n    var idx = id.lastIndexOf(\"#\");\n    -1 !== idx &&\n      ((name = id.slice(idx + 1)),\n      (resolvedModuleData = bundlerConfig[id.slice(0, idx)]));\n    if (!resolvedModuleData)\n      throw Error(\n        'Could not find the module \"' +\n          id +\n          '\" in the React Server Manifest. This is probably a bug in the React Server Components bundler.'\n      );\n  }\n  return resolvedModuleData.async\n    ? [resolvedModuleData.id, resolvedModuleData.chunks, name, 1]\n    : [resolvedModuleData.id, resolvedModuleData.chunks, name];\n}\nvar chunkCache = new Map();\nfunction requireAsyncModule(id) {\n  var promise = globalThis.__next_require__(id);\n  if (\"function\" !== typeof promise.then || \"fulfilled\" === promise.status)\n    return null;\n  promise.then(\n    function (value) {\n      promise.status = \"fulfilled\";\n      promise.value = value;\n    },\n    function (reason) {\n      promise.status = \"rejected\";\n      promise.reason = reason;\n    }\n  );\n  return promise;\n}\nfunction ignoreReject() {}\nfunction preloadModule(metadata) {\n  for (var chunks = metadata[1], promises = [], i = 0; i < chunks.length; ) {\n    var chunkId = chunks[i++];\n    chunks[i++];\n    var entry = chunkCache.get(chunkId);\n    if (void 0 === entry) {\n      entry = __webpack_chunk_load__(chunkId);\n      promises.push(entry);\n      var resolve = chunkCache.set.bind(chunkCache, chunkId, null);\n      entry.then(resolve, ignoreReject);\n      chunkCache.set(chunkId, entry);\n    } else null !== entry && promises.push(entry);\n  }\n  return 4 === metadata.length\n    ? 0 === promises.length\n      ? requireAsyncModule(metadata[0])\n      : Promise.all(promises).then(function () {\n          return requireAsyncModule(metadata[0]);\n        })\n    : 0 < promises.length\n      ? Promise.all(promises)\n      : null;\n}\nfunction requireModule(metadata) {\n  var moduleExports = globalThis.__next_require__(metadata[0]);\n  if (4 === metadata.length && \"function\" === typeof moduleExports.then)\n    if (\"fulfilled\" === moduleExports.status)\n      moduleExports = moduleExports.value;\n    else throw moduleExports.reason;\n  return \"*\" === metadata[2]\n    ? moduleExports\n    : \"\" === metadata[2]\n      ? moduleExports.__esModule\n        ? moduleExports.default\n        : moduleExports\n      : moduleExports[metadata[2]];\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction Chunk(status, value, reason, response) {\n  this.status = status;\n  this.value = value;\n  this.reason = reason;\n  this._response = response;\n}\nChunk.prototype = Object.create(Promise.prototype);\nChunk.prototype.then = function (resolve, reject) {\n  switch (this.status) {\n    case \"resolved_model\":\n      initializeModelChunk(this);\n  }\n  switch (this.status) {\n    case \"fulfilled\":\n      resolve(this.value);\n      break;\n    case \"pending\":\n    case \"blocked\":\n    case \"cyclic\":\n      resolve &&\n        (null === this.value && (this.value = []), this.value.push(resolve));\n      reject &&\n        (null === this.reason && (this.reason = []), this.reason.push(reject));\n      break;\n    default:\n      reject(this.reason);\n  }\n};\nfunction createPendingChunk(response) {\n  return new Chunk(\"pending\", null, null, response);\n}\nfunction wakeChunk(listeners, value) {\n  for (var i = 0; i < listeners.length; i++) (0, listeners[i])(value);\n}\nfunction triggerErrorOnChunk(chunk, error) {\n  if (\"pending\" !== chunk.status && \"blocked\" !== chunk.status)\n    chunk.reason.error(error);\n  else {\n    var listeners = chunk.reason;\n    chunk.status = \"rejected\";\n    chunk.reason = error;\n    null !== listeners && wakeChunk(listeners, error);\n  }\n}\nfunction resolveModelChunk(chunk, value, id) {\n  if (\"pending\" !== chunk.status)\n    (chunk = chunk.reason),\n      \"C\" === value[0]\n        ? chunk.close(\"C\" === value ? '\"$undefined\"' : value.slice(1))\n        : chunk.enqueueModel(value);\n  else {\n    var resolveListeners = chunk.value,\n      rejectListeners = chunk.reason;\n    chunk.status = \"resolved_model\";\n    chunk.value = value;\n    chunk.reason = id;\n    if (null !== resolveListeners)\n      switch ((initializeModelChunk(chunk), chunk.status)) {\n        case \"fulfilled\":\n          wakeChunk(resolveListeners, chunk.value);\n          break;\n        case \"pending\":\n        case \"blocked\":\n        case \"cyclic\":\n          if (chunk.value)\n            for (value = 0; value < resolveListeners.length; value++)\n              chunk.value.push(resolveListeners[value]);\n          else chunk.value = resolveListeners;\n          if (chunk.reason) {\n            if (rejectListeners)\n              for (value = 0; value < rejectListeners.length; value++)\n                chunk.reason.push(rejectListeners[value]);\n          } else chunk.reason = rejectListeners;\n          break;\n        case \"rejected\":\n          rejectListeners && wakeChunk(rejectListeners, chunk.reason);\n      }\n  }\n}\nfunction createResolvedIteratorResultChunk(response, value, done) {\n  return new Chunk(\n    \"resolved_model\",\n    (done ? '{\"done\":true,\"value\":' : '{\"done\":false,\"value\":') + value + \"}\",\n    -1,\n    response\n  );\n}\nfunction resolveIteratorResultChunk(chunk, value, done) {\n  resolveModelChunk(\n    chunk,\n    (done ? '{\"done\":true,\"value\":' : '{\"done\":false,\"value\":') + value + \"}\",\n    -1\n  );\n}\nfunction loadServerReference$1(\n  response,\n  id,\n  bound,\n  parentChunk,\n  parentObject,\n  key\n) {\n  var serverReference = resolveServerReference(response._bundlerConfig, id);\n  id = preloadModule(serverReference);\n  if (bound)\n    bound = Promise.all([bound, id]).then(function (_ref) {\n      _ref = _ref[0];\n      var fn = requireModule(serverReference);\n      return fn.bind.apply(fn, [null].concat(_ref));\n    });\n  else if (id)\n    bound = Promise.resolve(id).then(function () {\n      return requireModule(serverReference);\n    });\n  else return requireModule(serverReference);\n  bound.then(\n    createModelResolver(\n      parentChunk,\n      parentObject,\n      key,\n      !1,\n      response,\n      createModel,\n      []\n    ),\n    createModelReject(parentChunk)\n  );\n  return null;\n}\nfunction reviveModel(response, parentObj, parentKey, value, reference) {\n  if (\"string\" === typeof value)\n    return parseModelString(response, parentObj, parentKey, value, reference);\n  if (\"object\" === typeof value && null !== value)\n    if (\n      (void 0 !== reference &&\n        void 0 !== response._temporaryReferences &&\n        response._temporaryReferences.set(value, reference),\n      Array.isArray(value))\n    )\n      for (var i = 0; i < value.length; i++)\n        value[i] = reviveModel(\n          response,\n          value,\n          \"\" + i,\n          value[i],\n          void 0 !== reference ? reference + \":\" + i : void 0\n        );\n    else\n      for (i in value)\n        hasOwnProperty.call(value, i) &&\n          ((parentObj =\n            void 0 !== reference && -1 === i.indexOf(\":\")\n              ? reference + \":\" + i\n              : void 0),\n          (parentObj = reviveModel(response, value, i, value[i], parentObj)),\n          void 0 !== parentObj ? (value[i] = parentObj) : delete value[i]);\n  return value;\n}\nvar initializingChunk = null,\n  initializingChunkBlockedModel = null;\nfunction initializeModelChunk(chunk) {\n  var prevChunk = initializingChunk,\n    prevBlocked = initializingChunkBlockedModel;\n  initializingChunk = chunk;\n  initializingChunkBlockedModel = null;\n  var rootReference = -1 === chunk.reason ? void 0 : chunk.reason.toString(16),\n    resolvedModel = chunk.value;\n  chunk.status = \"cyclic\";\n  chunk.value = null;\n  chunk.reason = null;\n  try {\n    var rawModel = JSON.parse(resolvedModel),\n      value = reviveModel(\n        chunk._response,\n        { \"\": rawModel },\n        \"\",\n        rawModel,\n        rootReference\n      );\n    if (\n      null !== initializingChunkBlockedModel &&\n      0 < initializingChunkBlockedModel.deps\n    )\n      (initializingChunkBlockedModel.value = value), (chunk.status = \"blocked\");\n    else {\n      var resolveListeners = chunk.value;\n      chunk.status = \"fulfilled\";\n      chunk.value = value;\n      null !== resolveListeners && wakeChunk(resolveListeners, value);\n    }\n  } catch (error) {\n    (chunk.status = \"rejected\"), (chunk.reason = error);\n  } finally {\n    (initializingChunk = prevChunk),\n      (initializingChunkBlockedModel = prevBlocked);\n  }\n}\nfunction reportGlobalError(response, error) {\n  response._closed = !0;\n  response._closedReason = error;\n  response._chunks.forEach(function (chunk) {\n    \"pending\" === chunk.status && triggerErrorOnChunk(chunk, error);\n  });\n}\nfunction getChunk(response, id) {\n  var chunks = response._chunks,\n    chunk = chunks.get(id);\n  chunk ||\n    ((chunk = response._formData.get(response._prefix + id)),\n    (chunk =\n      null != chunk\n        ? new Chunk(\"resolved_model\", chunk, id, response)\n        : response._closed\n          ? new Chunk(\"rejected\", null, response._closedReason, response)\n          : createPendingChunk(response)),\n    chunks.set(id, chunk));\n  return chunk;\n}\nfunction createModelResolver(\n  chunk,\n  parentObject,\n  key,\n  cyclic,\n  response,\n  map,\n  path\n) {\n  if (initializingChunkBlockedModel) {\n    var blocked = initializingChunkBlockedModel;\n    cyclic || blocked.deps++;\n  } else\n    blocked = initializingChunkBlockedModel = {\n      deps: cyclic ? 0 : 1,\n      value: null\n    };\n  return function (value) {\n    for (var i = 1; i < path.length; i++) value = value[path[i]];\n    parentObject[key] = map(response, value);\n    \"\" === key && null === blocked.value && (blocked.value = parentObject[key]);\n    blocked.deps--;\n    0 === blocked.deps &&\n      \"blocked\" === chunk.status &&\n      ((value = chunk.value),\n      (chunk.status = \"fulfilled\"),\n      (chunk.value = blocked.value),\n      null !== value && wakeChunk(value, blocked.value));\n  };\n}\nfunction createModelReject(chunk) {\n  return function (error) {\n    return triggerErrorOnChunk(chunk, error);\n  };\n}\nfunction getOutlinedModel(response, reference, parentObject, key, map) {\n  reference = reference.split(\":\");\n  var id = parseInt(reference[0], 16);\n  id = getChunk(response, id);\n  switch (id.status) {\n    case \"resolved_model\":\n      initializeModelChunk(id);\n  }\n  switch (id.status) {\n    case \"fulfilled\":\n      parentObject = id.value;\n      for (key = 1; key < reference.length; key++)\n        parentObject = parentObject[reference[key]];\n      return map(response, parentObject);\n    case \"pending\":\n    case \"blocked\":\n    case \"cyclic\":\n      var parentChunk = initializingChunk;\n      id.then(\n        createModelResolver(\n          parentChunk,\n          parentObject,\n          key,\n          \"cyclic\" === id.status,\n          response,\n          map,\n          reference\n        ),\n        createModelReject(parentChunk)\n      );\n      return null;\n    default:\n      throw id.reason;\n  }\n}\nfunction createMap(response, model) {\n  return new Map(model);\n}\nfunction createSet(response, model) {\n  return new Set(model);\n}\nfunction extractIterator(response, model) {\n  return model[Symbol.iterator]();\n}\nfunction createModel(response, model) {\n  return model;\n}\nfunction parseTypedArray(\n  response,\n  reference,\n  constructor,\n  bytesPerElement,\n  parentObject,\n  parentKey\n) {\n  reference = parseInt(reference.slice(2), 16);\n  reference = response._formData.get(response._prefix + reference);\n  reference =\n    constructor === ArrayBuffer\n      ? reference.arrayBuffer()\n      : reference.arrayBuffer().then(function (buffer) {\n          return new constructor(buffer);\n        });\n  bytesPerElement = initializingChunk;\n  reference.then(\n    createModelResolver(\n      bytesPerElement,\n      parentObject,\n      parentKey,\n      !1,\n      response,\n      createModel,\n      []\n    ),\n    createModelReject(bytesPerElement)\n  );\n  return null;\n}\nfunction resolveStream(response, id, stream, controller) {\n  var chunks = response._chunks;\n  stream = new Chunk(\"fulfilled\", stream, controller, response);\n  chunks.set(id, stream);\n  response = response._formData.getAll(response._prefix + id);\n  for (id = 0; id < response.length; id++)\n    (chunks = response[id]),\n      \"C\" === chunks[0]\n        ? controller.close(\"C\" === chunks ? '\"$undefined\"' : chunks.slice(1))\n        : controller.enqueueModel(chunks);\n}\nfunction parseReadableStream(response, reference, type) {\n  reference = parseInt(reference.slice(2), 16);\n  var controller = null;\n  type = new ReadableStream({\n    type: type,\n    start: function (c) {\n      controller = c;\n    }\n  });\n  var previousBlockedChunk = null;\n  resolveStream(response, reference, type, {\n    enqueueModel: function (json) {\n      if (null === previousBlockedChunk) {\n        var chunk = new Chunk(\"resolved_model\", json, -1, response);\n        initializeModelChunk(chunk);\n        \"fulfilled\" === chunk.status\n          ? controller.enqueue(chunk.value)\n          : (chunk.then(\n              function (v) {\n                return controller.enqueue(v);\n              },\n              function (e) {\n                return controller.error(e);\n              }\n            ),\n            (previousBlockedChunk = chunk));\n      } else {\n        chunk = previousBlockedChunk;\n        var chunk$26 = createPendingChunk(response);\n        chunk$26.then(\n          function (v) {\n            return controller.enqueue(v);\n          },\n          function (e) {\n            return controller.error(e);\n          }\n        );\n        previousBlockedChunk = chunk$26;\n        chunk.then(function () {\n          previousBlockedChunk === chunk$26 && (previousBlockedChunk = null);\n          resolveModelChunk(chunk$26, json, -1);\n        });\n      }\n    },\n    close: function () {\n      if (null === previousBlockedChunk) controller.close();\n      else {\n        var blockedChunk = previousBlockedChunk;\n        previousBlockedChunk = null;\n        blockedChunk.then(function () {\n          return controller.close();\n        });\n      }\n    },\n    error: function (error) {\n      if (null === previousBlockedChunk) controller.error(error);\n      else {\n        var blockedChunk = previousBlockedChunk;\n        previousBlockedChunk = null;\n        blockedChunk.then(function () {\n          return controller.error(error);\n        });\n      }\n    }\n  });\n  return type;\n}\nfunction asyncIterator() {\n  return this;\n}\nfunction createIterator(next) {\n  next = { next: next };\n  next[ASYNC_ITERATOR] = asyncIterator;\n  return next;\n}\nfunction parseAsyncIterable(response, reference, iterator) {\n  reference = parseInt(reference.slice(2), 16);\n  var buffer = [],\n    closed = !1,\n    nextWriteIndex = 0,\n    $jscomp$compprop2 = {};\n  $jscomp$compprop2 =\n    (($jscomp$compprop2[ASYNC_ITERATOR] = function () {\n      var nextReadIndex = 0;\n      return createIterator(function (arg) {\n        if (void 0 !== arg)\n          throw Error(\n            \"Values cannot be passed to next() of AsyncIterables passed to Client Components.\"\n          );\n        if (nextReadIndex === buffer.length) {\n          if (closed)\n            return new Chunk(\n              \"fulfilled\",\n              { done: !0, value: void 0 },\n              null,\n              response\n            );\n          buffer[nextReadIndex] = createPendingChunk(response);\n        }\n        return buffer[nextReadIndex++];\n      });\n    }),\n    $jscomp$compprop2);\n  iterator = iterator ? $jscomp$compprop2[ASYNC_ITERATOR]() : $jscomp$compprop2;\n  resolveStream(response, reference, iterator, {\n    enqueueModel: function (value) {\n      nextWriteIndex === buffer.length\n        ? (buffer[nextWriteIndex] = createResolvedIteratorResultChunk(\n            response,\n            value,\n            !1\n          ))\n        : resolveIteratorResultChunk(buffer[nextWriteIndex], value, !1);\n      nextWriteIndex++;\n    },\n    close: function (value) {\n      closed = !0;\n      nextWriteIndex === buffer.length\n        ? (buffer[nextWriteIndex] = createResolvedIteratorResultChunk(\n            response,\n            value,\n            !0\n          ))\n        : resolveIteratorResultChunk(buffer[nextWriteIndex], value, !0);\n      for (nextWriteIndex++; nextWriteIndex < buffer.length; )\n        resolveIteratorResultChunk(\n          buffer[nextWriteIndex++],\n          '\"$undefined\"',\n          !0\n        );\n    },\n    error: function (error) {\n      closed = !0;\n      for (\n        nextWriteIndex === buffer.length &&\n        (buffer[nextWriteIndex] = createPendingChunk(response));\n        nextWriteIndex < buffer.length;\n\n      )\n        triggerErrorOnChunk(buffer[nextWriteIndex++], error);\n    }\n  });\n  return iterator;\n}\nfunction parseModelString(response, obj, key, value, reference) {\n  if (\"$\" === value[0]) {\n    switch (value[1]) {\n      case \"$\":\n        return value.slice(1);\n      case \"@\":\n        return (obj = parseInt(value.slice(2), 16)), getChunk(response, obj);\n      case \"F\":\n        return (\n          (value = value.slice(2)),\n          (value = getOutlinedModel(response, value, obj, key, createModel)),\n          loadServerReference$1(\n            response,\n            value.id,\n            value.bound,\n            initializingChunk,\n            obj,\n            key\n          )\n        );\n      case \"T\":\n        if (void 0 === reference || void 0 === response._temporaryReferences)\n          throw Error(\n            \"Could not reference an opaque temporary reference. This is likely due to misconfiguring the temporaryReferences options on the server.\"\n          );\n        return createTemporaryReference(\n          response._temporaryReferences,\n          reference\n        );\n      case \"Q\":\n        return (\n          (value = value.slice(2)),\n          getOutlinedModel(response, value, obj, key, createMap)\n        );\n      case \"W\":\n        return (\n          (value = value.slice(2)),\n          getOutlinedModel(response, value, obj, key, createSet)\n        );\n      case \"K\":\n        obj = value.slice(2);\n        var formPrefix = response._prefix + obj + \"_\",\n          data = new FormData();\n        response._formData.forEach(function (entry, entryKey) {\n          entryKey.startsWith(formPrefix) &&\n            data.append(entryKey.slice(formPrefix.length), entry);\n        });\n        return data;\n      case \"i\":\n        return (\n          (value = value.slice(2)),\n          getOutlinedModel(response, value, obj, key, extractIterator)\n        );\n      case \"I\":\n        return Infinity;\n      case \"-\":\n        return \"$-0\" === value ? -0 : -Infinity;\n      case \"N\":\n        return NaN;\n      case \"u\":\n        return;\n      case \"D\":\n        return new Date(Date.parse(value.slice(2)));\n      case \"n\":\n        return BigInt(value.slice(2));\n    }\n    switch (value[1]) {\n      case \"A\":\n        return parseTypedArray(response, value, ArrayBuffer, 1, obj, key);\n      case \"O\":\n        return parseTypedArray(response, value, Int8Array, 1, obj, key);\n      case \"o\":\n        return parseTypedArray(response, value, Uint8Array, 1, obj, key);\n      case \"U\":\n        return parseTypedArray(response, value, Uint8ClampedArray, 1, obj, key);\n      case \"S\":\n        return parseTypedArray(response, value, Int16Array, 2, obj, key);\n      case \"s\":\n        return parseTypedArray(response, value, Uint16Array, 2, obj, key);\n      case \"L\":\n        return parseTypedArray(response, value, Int32Array, 4, obj, key);\n      case \"l\":\n        return parseTypedArray(response, value, Uint32Array, 4, obj, key);\n      case \"G\":\n        return parseTypedArray(response, value, Float32Array, 4, obj, key);\n      case \"g\":\n        return parseTypedArray(response, value, Float64Array, 8, obj, key);\n      case \"M\":\n        return parseTypedArray(response, value, BigInt64Array, 8, obj, key);\n      case \"m\":\n        return parseTypedArray(response, value, BigUint64Array, 8, obj, key);\n      case \"V\":\n        return parseTypedArray(response, value, DataView, 1, obj, key);\n      case \"B\":\n        return (\n          (obj = parseInt(value.slice(2), 16)),\n          response._formData.get(response._prefix + obj)\n        );\n    }\n    switch (value[1]) {\n      case \"R\":\n        return parseReadableStream(response, value, void 0);\n      case \"r\":\n        return parseReadableStream(response, value, \"bytes\");\n      case \"X\":\n        return parseAsyncIterable(response, value, !1);\n      case \"x\":\n        return parseAsyncIterable(response, value, !0);\n    }\n    value = value.slice(1);\n    return getOutlinedModel(response, value, obj, key, createModel);\n  }\n  return value;\n}\nfunction createResponse(bundlerConfig, formFieldPrefix, temporaryReferences) {\n  var backingFormData =\n      3 < arguments.length && void 0 !== arguments[3]\n        ? arguments[3]\n        : new FormData(),\n    chunks = new Map();\n  return {\n    _bundlerConfig: bundlerConfig,\n    _prefix: formFieldPrefix,\n    _formData: backingFormData,\n    _chunks: chunks,\n    _closed: !1,\n    _closedReason: null,\n    _temporaryReferences: temporaryReferences\n  };\n}\nfunction close(response) {\n  reportGlobalError(response, Error(\"Connection closed.\"));\n}\nfunction loadServerReference(bundlerConfig, id, bound) {\n  var serverReference = resolveServerReference(bundlerConfig, id);\n  bundlerConfig = preloadModule(serverReference);\n  return bound\n    ? Promise.all([bound, bundlerConfig]).then(function (_ref) {\n        _ref = _ref[0];\n        var fn = requireModule(serverReference);\n        return fn.bind.apply(fn, [null].concat(_ref));\n      })\n    : bundlerConfig\n      ? Promise.resolve(bundlerConfig).then(function () {\n          return requireModule(serverReference);\n        })\n      : Promise.resolve(requireModule(serverReference));\n}\nfunction decodeBoundActionMetaData(body, serverManifest, formFieldPrefix) {\n  body = createResponse(serverManifest, formFieldPrefix, void 0, body);\n  close(body);\n  body = getChunk(body, 0);\n  body.then(function () {});\n  if (\"fulfilled\" !== body.status) throw body.reason;\n  return body.value;\n}\nexports.createClientModuleProxy = function (moduleId) {\n  moduleId = registerClientReferenceImpl({}, moduleId, !1);\n  return new Proxy(moduleId, proxyHandlers$1);\n};\nexports.createTemporaryReferenceSet = function () {\n  return new WeakMap();\n};\nexports.decodeAction = function (body, serverManifest) {\n  var formData = new FormData(),\n    action = null;\n  body.forEach(function (value, key) {\n    key.startsWith(\"$ACTION_\")\n      ? key.startsWith(\"$ACTION_REF_\")\n        ? ((value = \"$ACTION_\" + key.slice(12) + \":\"),\n          (value = decodeBoundActionMetaData(body, serverManifest, value)),\n          (action = loadServerReference(serverManifest, value.id, value.bound)))\n        : key.startsWith(\"$ACTION_ID_\") &&\n          ((value = key.slice(11)),\n          (action = loadServerReference(serverManifest, value, null)))\n      : formData.append(key, value);\n  });\n  return null === action\n    ? null\n    : action.then(function (fn) {\n        return fn.bind(null, formData);\n      });\n};\nexports.decodeFormState = function (actionResult, body, serverManifest) {\n  var keyPath = body.get(\"$ACTION_KEY\");\n  if (\"string\" !== typeof keyPath) return Promise.resolve(null);\n  var metaData = null;\n  body.forEach(function (value, key) {\n    key.startsWith(\"$ACTION_REF_\") &&\n      ((value = \"$ACTION_\" + key.slice(12) + \":\"),\n      (metaData = decodeBoundActionMetaData(body, serverManifest, value)));\n  });\n  if (null === metaData) return Promise.resolve(null);\n  var referenceId = metaData.id;\n  return Promise.resolve(metaData.bound).then(function (bound) {\n    return null === bound\n      ? null\n      : [actionResult, keyPath, referenceId, bound.length - 1];\n  });\n};\nexports.decodeReply = function (body, webpackMap, options) {\n  if (\"string\" === typeof body) {\n    var form = new FormData();\n    form.append(\"0\", body);\n    body = form;\n  }\n  body = createResponse(\n    webpackMap,\n    \"\",\n    options ? options.temporaryReferences : void 0,\n    body\n  );\n  webpackMap = getChunk(body, 0);\n  close(body);\n  return webpackMap;\n};\nexports.decodeReplyFromAsyncIterable = function (\n  iterable,\n  webpackMap,\n  options\n) {\n  function progress(entry) {\n    if (entry.done) close(response);\n    else {\n      entry = entry.value;\n      var name = entry[0];\n      entry = entry[1];\n      if (\"string\" === typeof entry) {\n        response._formData.append(name, entry);\n        var prefix = response._prefix;\n        if (name.startsWith(prefix)) {\n          var chunks = response._chunks;\n          name = +name.slice(prefix.length);\n          (chunks = chunks.get(name)) && resolveModelChunk(chunks, entry, name);\n        }\n      } else response._formData.append(name, entry);\n      iterator.next().then(progress, error);\n    }\n  }\n  function error(reason) {\n    reportGlobalError(response, reason);\n    \"function\" === typeof iterator.throw &&\n      iterator.throw(reason).then(error, error);\n  }\n  var iterator = iterable[ASYNC_ITERATOR](),\n    response = createResponse(\n      webpackMap,\n      \"\",\n      options ? options.temporaryReferences : void 0\n    );\n  iterator.next().then(progress, error);\n  return getChunk(response, 0);\n};\nexports.registerClientReference = function (\n  proxyImplementation,\n  id,\n  exportName\n) {\n  return registerClientReferenceImpl(\n    proxyImplementation,\n    id + \"#\" + exportName,\n    !1\n  );\n};\nexports.registerServerReference = function (reference, id, exportName) {\n  return Object.defineProperties(reference, {\n    $$typeof: { value: SERVER_REFERENCE_TAG },\n    $$id: {\n      value: null === exportName ? id : id + \"#\" + exportName,\n      configurable: !0\n    },\n    $$bound: { value: null, configurable: !0 },\n    bind: { value: bind, configurable: !0 }\n  });\n};\n\n// This is a patch added by Next.js\nconst setTimeoutOrImmediate =\n  typeof globalThis['set' + 'Immediate'] === 'function' &&\n  // edge runtime sandbox defines a stub for setImmediate\n  // (see 'addStub' in packages/next/src/server/web/sandbox/context.ts)\n  // but it's made non-enumerable, so we can detect it\n  globalThis.propertyIsEnumerable('setImmediate')\n    ? globalThis['set' + 'Immediate']\n    : setTimeout;\n\nexports.renderToReadableStream = function (model, webpackMap, options) {\n  var request = new RequestInstance(\n    20,\n    model,\n    webpackMap,\n    options ? options.onError : void 0,\n    options ? options.identifierPrefix : void 0,\n    options ? options.onPostpone : void 0,\n    options ? options.temporaryReferences : void 0,\n    void 0,\n    void 0,\n    noop,\n    noop\n  );\n  if (options && options.signal) {\n    var signal = options.signal;\n    if (signal.aborted) abort(request, signal.reason);\n    else {\n      var listener = function () {\n        abort(request, signal.reason);\n        signal.removeEventListener(\"abort\", listener);\n      };\n      signal.addEventListener(\"abort\", listener);\n    }\n  }\n  return new ReadableStream(\n    {\n      type: \"bytes\",\n      start: function () {\n        startWork(request);\n      },\n      pull: function (controller) {\n        startFlowing(request, controller);\n      },\n      cancel: function (reason) {\n        request.destination = null;\n        abort(request, reason);\n      }\n    },\n    { highWaterMark: 0 }\n  );\n};\nexports.unstable_prerender = function (model, webpackMap, options) {\n  return new Promise(function (resolve, reject) {\n    var request = new RequestInstance(\n      21,\n      model,\n      webpackMap,\n      options ? options.onError : void 0,\n      options ? options.identifierPrefix : void 0,\n      options ? options.onPostpone : void 0,\n      options ? options.temporaryReferences : void 0,\n      void 0,\n      void 0,\n      function () {\n        var stream = new ReadableStream(\n          {\n            type: \"bytes\",\n            start: function () {\n              startWork(request);\n            },\n            pull: function (controller) {\n              startFlowing(request, controller);\n            },\n            cancel: function (reason) {\n              request.destination = null;\n              abort(request, reason);\n            }\n          },\n          { highWaterMark: 0 }\n        );\n        resolve({ prelude: stream });\n      },\n      reject\n    );\n    if (options && options.signal) {\n      var signal = options.signal;\n      if (signal.aborted) abort(request, signal.reason);\n      else {\n        var listener = function () {\n          abort(request, signal.reason);\n          signal.removeEventListener(\"abort\", listener);\n        };\n        signal.addEventListener(\"abort\", listener);\n      }\n    }\n    startWork(request);\n  });\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst PostgrestQueryBuilder_1 = __importDefault(require(\"./PostgrestQueryBuilder\"));\nconst PostgrestFilterBuilder_1 = __importDefault(require(\"./PostgrestFilterBuilder\"));\nconst constants_1 = require(\"./constants\");\n/**\n * PostgREST client.\n *\n * @typeParam Database - Types for the schema from the [type\n * generator](https://supabase.com/docs/reference/javascript/next/typescript-support)\n *\n * @typeParam SchemaName - Postgres schema to switch to. Must be a string\n * literal, the same one passed to the constructor. If the schema is not\n * `\"public\"`, this must be supplied manually.\n */\nclass PostgrestClient {\n    // TODO: Add back shouldThrowOnError once we figure out the typings\n    /**\n     * Creates a PostgREST client.\n     *\n     * @param url - URL of the PostgREST endpoint\n     * @param options - Named parameters\n     * @param options.headers - Custom headers\n     * @param options.schema - Postgres schema to switch to\n     * @param options.fetch - Custom fetch\n     */\n    constructor(url, { headers = {}, schema, fetch, } = {}) {\n        this.url = url;\n        this.headers = Object.assign(Object.assign({}, constants_1.DEFAULT_HEADERS), headers);\n        this.schemaName = schema;\n        this.fetch = fetch;\n    }\n    /**\n     * Perform a query on a table or a view.\n     *\n     * @param relation - The table or view name to query\n     */\n    from(relation) {\n        const url = new URL(`${this.url}/${relation}`);\n        return new PostgrestQueryBuilder_1.default(url, {\n            headers: Object.assign({}, this.headers),\n            schema: this.schemaName,\n            fetch: this.fetch,\n        });\n    }\n    /**\n     * Select a schema to query or perform an function (rpc) call.\n     *\n     * The schema needs to be on the list of exposed schemas inside Supabase.\n     *\n     * @param schema - The schema to query\n     */\n    schema(schema) {\n        return new PostgrestClient(this.url, {\n            headers: this.headers,\n            schema,\n            fetch: this.fetch,\n        });\n    }\n    /**\n     * Perform a function call.\n     *\n     * @param fn - The function name to call\n     * @param args - The arguments to pass to the function call\n     * @param options - Named parameters\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     * @param options.get - When set to `true`, the function will be called with\n     * read-only access mode.\n     * @param options.count - Count algorithm to use to count rows returned by the\n     * function. Only applicable for [set-returning\n     * functions](https://www.postgresql.org/docs/current/functions-srf.html).\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    rpc(fn, args = {}, { head = false, get = false, count, } = {}) {\n        let method;\n        const url = new URL(`${this.url}/rpc/${fn}`);\n        let body;\n        if (head || get) {\n            method = head ? 'HEAD' : 'GET';\n            Object.entries(args)\n                // params with undefined value needs to be filtered out, otherwise it'll\n                // show up as `?param=undefined`\n                .filter(([_, value]) => value !== undefined)\n                // array values need special syntax\n                .map(([name, value]) => [name, Array.isArray(value) ? `{${value.join(',')}}` : `${value}`])\n                .forEach(([name, value]) => {\n                url.searchParams.append(name, value);\n            });\n        }\n        else {\n            method = 'POST';\n            body = args;\n        }\n        const headers = Object.assign({}, this.headers);\n        if (count) {\n            headers['Prefer'] = `count=${count}`;\n        }\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url,\n            headers,\n            schema: this.schemaName,\n            body,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n}\nexports.default = PostgrestClient;\n//# sourceMappingURL=PostgrestClient.js.map","export const METADATA_BOUNDARY_NAME = '__next_metadata_boundary__';\nexport const VIEWPORT_BOUNDARY_NAME = '__next_viewport_boundary__';\nexport const OUTLET_BOUNDARY_NAME = '__next_outlet_boundary__';\n\n//# sourceMappingURL=metadata-constants.js.map","/**\n * The functions provided by this module are used to communicate certain properties\n * about the currently running code so that Next.js can make decisions on how to handle\n * the current execution in different rendering modes such as pre-rendering, resuming, and SSR.\n *\n * Today Next.js treats all code as potentially static. Certain APIs may only make sense when dynamically rendering.\n * Traditionally this meant deopting the entire render to dynamic however with PPR we can now deopt parts\n * of a React tree as dynamic while still keeping other parts static. There are really two different kinds of\n * Dynamic indications.\n *\n * The first is simply an intention to be dynamic. unstable_noStore is an example of this where\n * the currently executing code simply declares that the current scope is dynamic but if you use it\n * inside unstable_cache it can still be cached. This type of indication can be removed if we ever\n * make the default dynamic to begin with because the only way you would ever be static is inside\n * a cache scope which this indication does not affect.\n *\n * The second is an indication that a dynamic data source was read. This is a stronger form of dynamic\n * because it means that it is inappropriate to cache this at all. using a dynamic data source inside\n * unstable_cache should error. If you want to use some dynamic data inside unstable_cache you should\n * read that data outside the cache and pass it in as an argument to the cached function.\n */ // Once postpone is in stable we should switch to importing the postpone export directly\nimport React from 'react';\nimport { DynamicServerError } from '../../client/components/hooks-server-context';\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout';\nimport { workUnitAsyncStorage } from './work-unit-async-storage.external';\nimport { workAsyncStorage } from '../app-render/work-async-storage.external';\nimport { makeHangingPromise } from '../dynamic-rendering-utils';\nimport { METADATA_BOUNDARY_NAME, VIEWPORT_BOUNDARY_NAME, OUTLET_BOUNDARY_NAME } from '../../lib/metadata/metadata-constants';\nimport { scheduleOnNextTick } from '../../lib/scheduler';\nconst hasPostpone = typeof React.unstable_postpone === 'function';\nexport function createDynamicTrackingState(isDebugDynamicAccesses) {\n    return {\n        isDebugDynamicAccesses,\n        dynamicAccesses: [],\n        syncDynamicExpression: undefined,\n        syncDynamicErrorWithStack: null\n    };\n}\nexport function createDynamicValidationState() {\n    return {\n        hasSuspendedDynamic: false,\n        hasDynamicMetadata: false,\n        hasDynamicViewport: false,\n        hasSyncDynamicErrors: false,\n        dynamicErrors: []\n    };\n}\nexport function getFirstDynamicReason(trackingState) {\n    var _trackingState_dynamicAccesses_;\n    return (_trackingState_dynamicAccesses_ = trackingState.dynamicAccesses[0]) == null ? void 0 : _trackingState_dynamicAccesses_.expression;\n}\n/**\n * This function communicates that the current scope should be treated as dynamic.\n *\n * In most cases this function is a no-op but if called during\n * a PPR prerender it will postpone the current sub-tree and calling\n * it during a normal prerender will cause the entire prerender to abort\n */ export function markCurrentScopeAsDynamic(store, workUnitStore, expression) {\n    if (workUnitStore) {\n        if (workUnitStore.type === 'cache' || workUnitStore.type === 'unstable-cache') {\n            // inside cache scopes marking a scope as dynamic has no effect because the outer cache scope\n            // creates a cache boundary. This is subtly different from reading a dynamic data source which is\n            // forbidden inside a cache scope.\n            return;\n        }\n    }\n    // If we're forcing dynamic rendering or we're forcing static rendering, we\n    // don't need to do anything here because the entire page is already dynamic\n    // or it's static and it should not throw or postpone here.\n    if (store.forceDynamic || store.forceStatic) return;\n    if (store.dynamicShouldError) {\n        throw Object.defineProperty(new StaticGenBailoutError(`Route ${store.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`), \"__NEXT_ERROR_CODE\", {\n            value: \"E553\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    if (workUnitStore) {\n        if (workUnitStore.type === 'prerender-ppr') {\n            postponeWithTracking(store.route, expression, workUnitStore.dynamicTracking);\n        } else if (workUnitStore.type === 'prerender-legacy') {\n            workUnitStore.revalidate = 0;\n            // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n            const err = Object.defineProperty(new DynamicServerError(`Route ${store.route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`), \"__NEXT_ERROR_CODE\", {\n                value: \"E550\",\n                enumerable: false,\n                configurable: true\n            });\n            store.dynamicUsageDescription = expression;\n            store.dynamicUsageStack = err.stack;\n            throw err;\n        } else if (process.env.NODE_ENV === 'development' && workUnitStore && workUnitStore.type === 'request') {\n            workUnitStore.usedDynamic = true;\n        }\n    }\n}\n/**\n * This function communicates that some dynamic path parameter was read. This\n * differs from the more general `trackDynamicDataAccessed` in that it is will\n * not error when `dynamic = \"error\"` is set.\n *\n * @param store The static generation store\n * @param expression The expression that was accessed dynamically\n */ export function trackFallbackParamAccessed(store, expression) {\n    const prerenderStore = workUnitAsyncStorage.getStore();\n    if (!prerenderStore || prerenderStore.type !== 'prerender-ppr') return;\n    postponeWithTracking(store.route, expression, prerenderStore.dynamicTracking);\n}\n/**\n * This function is meant to be used when prerendering without dynamicIO or PPR.\n * When called during a build it will cause Next.js to consider the route as dynamic.\n *\n * @internal\n */ export function throwToInterruptStaticGeneration(expression, store, prerenderStore) {\n    // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n    const err = Object.defineProperty(new DynamicServerError(`Route ${store.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`), \"__NEXT_ERROR_CODE\", {\n        value: \"E558\",\n        enumerable: false,\n        configurable: true\n    });\n    prerenderStore.revalidate = 0;\n    store.dynamicUsageDescription = expression;\n    store.dynamicUsageStack = err.stack;\n    throw err;\n}\n/**\n * This function should be used to track whether something dynamic happened even when\n * we are in a dynamic render. This is useful for Dev where all renders are dynamic but\n * we still track whether dynamic APIs were accessed for helpful messaging\n *\n * @internal\n */ export function trackDynamicDataInDynamicRender(_store, workUnitStore) {\n    if (workUnitStore) {\n        if (workUnitStore.type === 'cache' || workUnitStore.type === 'unstable-cache') {\n            // inside cache scopes marking a scope as dynamic has no effect because the outer cache scope\n            // creates a cache boundary. This is subtly different from reading a dynamic data source which is\n            // forbidden inside a cache scope.\n            return;\n        }\n        if (workUnitStore.type === 'prerender' || workUnitStore.type === 'prerender-legacy') {\n            workUnitStore.revalidate = 0;\n        }\n        if (process.env.NODE_ENV === 'development' && workUnitStore.type === 'request') {\n            workUnitStore.usedDynamic = true;\n        }\n    }\n}\n// Despite it's name we don't actually abort unless we have a controller to call abort on\n// There are times when we let a prerender run long to discover caches where we want the semantics\n// of tracking dynamic access without terminating the prerender early\nfunction abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore) {\n    const reason = `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`;\n    const error = createPrerenderInterruptedError(reason);\n    prerenderStore.controller.abort(error);\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    if (dynamicTracking) {\n        dynamicTracking.dynamicAccesses.push({\n            // When we aren't debugging, we don't need to create another error for the\n            // stack trace.\n            stack: dynamicTracking.isDebugDynamicAccesses ? new Error().stack : undefined,\n            expression\n        });\n    }\n}\nexport function abortOnSynchronousPlatformIOAccess(route, expression, errorWithStack, prerenderStore) {\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    if (dynamicTracking) {\n        if (dynamicTracking.syncDynamicErrorWithStack === null) {\n            dynamicTracking.syncDynamicExpression = expression;\n            dynamicTracking.syncDynamicErrorWithStack = errorWithStack;\n        }\n    }\n    abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore);\n}\nexport function trackSynchronousPlatformIOAccessInDev(requestStore) {\n    // We don't actually have a controller to abort but we do the semantic equivalent by\n    // advancing the request store out of prerender mode\n    requestStore.prerenderPhase = false;\n}\n/**\n * use this function when prerendering with dynamicIO. If we are doing a\n * prospective prerender we don't actually abort because we want to discover\n * all caches for the shell. If this is the actual prerender we do abort.\n *\n * This function accepts a prerenderStore but the caller should ensure we're\n * actually running in dynamicIO mode.\n *\n * @internal\n */ export function abortAndThrowOnSynchronousRequestDataAccess(route, expression, errorWithStack, prerenderStore) {\n    const prerenderSignal = prerenderStore.controller.signal;\n    if (prerenderSignal.aborted === false) {\n        // TODO it would be better to move this aborted check into the callsite so we can avoid making\n        // the error object when it isn't relevant to the aborting of the prerender however\n        // since we need the throw semantics regardless of whether we abort it is easier to land\n        // this way. See how this was handled with `abortOnSynchronousPlatformIOAccess` for a closer\n        // to ideal implementation\n        const dynamicTracking = prerenderStore.dynamicTracking;\n        if (dynamicTracking) {\n            if (dynamicTracking.syncDynamicErrorWithStack === null) {\n                dynamicTracking.syncDynamicExpression = expression;\n                dynamicTracking.syncDynamicErrorWithStack = errorWithStack;\n                if (prerenderStore.validating === true) {\n                    // We always log Request Access in dev at the point of calling the function\n                    // So we mark the dynamic validation as not requiring it to be printed\n                    dynamicTracking.syncDynamicLogged = true;\n                }\n            }\n        }\n        abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore);\n    }\n    throw createPrerenderInterruptedError(`Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`);\n}\n// For now these implementations are the same so we just reexport\nexport const trackSynchronousRequestDataAccessInDev = trackSynchronousPlatformIOAccessInDev;\nexport function Postpone({ reason, route }) {\n    const prerenderStore = workUnitAsyncStorage.getStore();\n    const dynamicTracking = prerenderStore && prerenderStore.type === 'prerender-ppr' ? prerenderStore.dynamicTracking : null;\n    postponeWithTracking(route, reason, dynamicTracking);\n}\nexport function postponeWithTracking(route, expression, dynamicTracking) {\n    assertPostpone();\n    if (dynamicTracking) {\n        dynamicTracking.dynamicAccesses.push({\n            // When we aren't debugging, we don't need to create another error for the\n            // stack trace.\n            stack: dynamicTracking.isDebugDynamicAccesses ? new Error().stack : undefined,\n            expression\n        });\n    }\n    React.unstable_postpone(createPostponeReason(route, expression));\n}\nfunction createPostponeReason(route, expression) {\n    return `Route ${route} needs to bail out of prerendering at this point because it used ${expression}. ` + `React throws this special object to indicate where. It should not be caught by ` + `your own try/catch. Learn more: https://nextjs.org/docs/messages/ppr-caught-error`;\n}\nexport function isDynamicPostpone(err) {\n    if (typeof err === 'object' && err !== null && typeof err.message === 'string') {\n        return isDynamicPostponeReason(err.message);\n    }\n    return false;\n}\nfunction isDynamicPostponeReason(reason) {\n    return reason.includes('needs to bail out of prerendering at this point because it used') && reason.includes('Learn more: https://nextjs.org/docs/messages/ppr-caught-error');\n}\nif (isDynamicPostponeReason(createPostponeReason('%%%', '^^^')) === false) {\n    throw Object.defineProperty(new Error('Invariant: isDynamicPostpone misidentified a postpone reason. This is a bug in Next.js'), \"__NEXT_ERROR_CODE\", {\n        value: \"E296\",\n        enumerable: false,\n        configurable: true\n    });\n}\nconst NEXT_PRERENDER_INTERRUPTED = 'NEXT_PRERENDER_INTERRUPTED';\nfunction createPrerenderInterruptedError(message) {\n    const error = Object.defineProperty(new Error(message), \"__NEXT_ERROR_CODE\", {\n        value: \"E394\",\n        enumerable: false,\n        configurable: true\n    });\n    error.digest = NEXT_PRERENDER_INTERRUPTED;\n    return error;\n}\nexport function isPrerenderInterruptedError(error) {\n    return typeof error === 'object' && error !== null && error.digest === NEXT_PRERENDER_INTERRUPTED && 'name' in error && 'message' in error && error instanceof Error;\n}\nexport function accessedDynamicData(dynamicAccesses) {\n    return dynamicAccesses.length > 0;\n}\nexport function consumeDynamicAccess(serverDynamic, clientDynamic) {\n    // We mutate because we only call this once we are no longer writing\n    // to the dynamicTrackingState and it's more efficient than creating a new\n    // array.\n    serverDynamic.dynamicAccesses.push(...clientDynamic.dynamicAccesses);\n    return serverDynamic.dynamicAccesses;\n}\nexport function formatDynamicAPIAccesses(dynamicAccesses) {\n    return dynamicAccesses.filter((access)=>typeof access.stack === 'string' && access.stack.length > 0).map(({ expression, stack })=>{\n        stack = stack.split('\\n')// Remove the \"Error: \" prefix from the first line of the stack trace as\n        // well as the first 4 lines of the stack trace which is the distance\n        // from the user code and the `new Error().stack` call.\n        .slice(4).filter((line)=>{\n            // Exclude Next.js internals from the stack trace.\n            if (line.includes('node_modules/next/')) {\n                return false;\n            }\n            // Exclude anonymous functions from the stack trace.\n            if (line.includes(' (<anonymous>)')) {\n                return false;\n            }\n            // Exclude Node.js internals from the stack trace.\n            if (line.includes(' (node:')) {\n                return false;\n            }\n            return true;\n        }).join('\\n');\n        return `Dynamic API Usage Debug - ${expression}:\\n${stack}`;\n    });\n}\nfunction assertPostpone() {\n    if (!hasPostpone) {\n        throw Object.defineProperty(new Error(`Invariant: React.unstable_postpone is not defined. This suggests the wrong version of React was loaded. This is a bug in Next.js`), \"__NEXT_ERROR_CODE\", {\n            value: \"E224\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n}\n/**\n * This is a bit of a hack to allow us to abort a render using a Postpone instance instead of an Error which changes React's\n * abort semantics slightly.\n */ export function createPostponedAbortSignal(reason) {\n    assertPostpone();\n    const controller = new AbortController();\n    // We get our hands on a postpone instance by calling postpone and catching the throw\n    try {\n        React.unstable_postpone(reason);\n    } catch (x) {\n        controller.abort(x);\n    }\n    return controller.signal;\n}\n/**\n * In a prerender, we may end up with hanging Promises as inputs due them\n * stalling on connection() or because they're loading dynamic data. In that\n * case we need to abort the encoding of arguments since they'll never complete.\n */ export function createHangingInputAbortSignal(workUnitStore) {\n    const controller = new AbortController();\n    if (workUnitStore.cacheSignal) {\n        // If we have a cacheSignal it means we're in a prospective render. If the input\n        // we're waiting on is coming from another cache, we do want to wait for it so that\n        // we can resolve this cache entry too.\n        workUnitStore.cacheSignal.inputReady().then(()=>{\n            controller.abort();\n        });\n    } else {\n        // Otherwise we're in the final render and we should already have all our caches\n        // filled. We might still be waiting on some microtasks so we wait one tick before\n        // giving up. When we give up, we still want to render the content of this cache\n        // as deeply as we can so that we can suspend as deeply as possible in the tree\n        // or not at all if we don't end up waiting for the input.\n        scheduleOnNextTick(()=>controller.abort());\n    }\n    return controller.signal;\n}\nexport function annotateDynamicAccess(expression, prerenderStore) {\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    if (dynamicTracking) {\n        dynamicTracking.dynamicAccesses.push({\n            stack: dynamicTracking.isDebugDynamicAccesses ? new Error().stack : undefined,\n            expression\n        });\n    }\n}\nexport function useDynamicRouteParams(expression) {\n    const workStore = workAsyncStorage.getStore();\n    if (workStore && workStore.isStaticGeneration && workStore.fallbackRouteParams && workStore.fallbackRouteParams.size > 0) {\n        // There are fallback route params, we should track these as dynamic\n        // accesses.\n        const workUnitStore = workUnitAsyncStorage.getStore();\n        if (workUnitStore) {\n            // We're prerendering with dynamicIO or PPR or both\n            if (workUnitStore.type === 'prerender') {\n                // We are in a prerender with dynamicIO semantics\n                // We are going to hang here and never resolve. This will cause the currently\n                // rendering component to effectively be a dynamic hole\n                React.use(makeHangingPromise(workUnitStore.renderSignal, expression));\n            } else if (workUnitStore.type === 'prerender-ppr') {\n                // We're prerendering with PPR\n                postponeWithTracking(workStore.route, expression, workUnitStore.dynamicTracking);\n            } else if (workUnitStore.type === 'prerender-legacy') {\n                throwToInterruptStaticGeneration(expression, workStore, workUnitStore);\n            }\n        }\n    }\n}\nconst hasSuspenseRegex = /\\n\\s+at Suspense \\(<anonymous>\\)/;\nconst hasMetadataRegex = new RegExp(`\\\\n\\\\s+at ${METADATA_BOUNDARY_NAME}[\\\\n\\\\s]`);\nconst hasViewportRegex = new RegExp(`\\\\n\\\\s+at ${VIEWPORT_BOUNDARY_NAME}[\\\\n\\\\s]`);\nconst hasOutletRegex = new RegExp(`\\\\n\\\\s+at ${OUTLET_BOUNDARY_NAME}[\\\\n\\\\s]`);\nexport function trackAllowedDynamicAccess(route, componentStack, dynamicValidation, serverDynamic, clientDynamic) {\n    if (hasOutletRegex.test(componentStack)) {\n        // We don't need to track that this is dynamic. It is only so when something else is also dynamic.\n        return;\n    } else if (hasMetadataRegex.test(componentStack)) {\n        dynamicValidation.hasDynamicMetadata = true;\n        return;\n    } else if (hasViewportRegex.test(componentStack)) {\n        dynamicValidation.hasDynamicViewport = true;\n        return;\n    } else if (hasSuspenseRegex.test(componentStack)) {\n        dynamicValidation.hasSuspendedDynamic = true;\n        return;\n    } else if (serverDynamic.syncDynamicErrorWithStack || clientDynamic.syncDynamicErrorWithStack) {\n        dynamicValidation.hasSyncDynamicErrors = true;\n        return;\n    } else {\n        const message = `Route \"${route}\": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a \"use cache\" above it. We don't have the exact line number added to error messages yet but you can see which component in the stack below. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense`;\n        const error = createErrorWithComponentStack(message, componentStack);\n        dynamicValidation.dynamicErrors.push(error);\n        return;\n    }\n}\nfunction createErrorWithComponentStack(message, componentStack) {\n    const error = Object.defineProperty(new Error(message), \"__NEXT_ERROR_CODE\", {\n        value: \"E394\",\n        enumerable: false,\n        configurable: true\n    });\n    error.stack = 'Error: ' + message + componentStack;\n    return error;\n}\nexport function throwIfDisallowedDynamic(route, dynamicValidation, serverDynamic, clientDynamic) {\n    let syncError;\n    let syncExpression;\n    let syncLogged;\n    if (serverDynamic.syncDynamicErrorWithStack) {\n        syncError = serverDynamic.syncDynamicErrorWithStack;\n        syncExpression = serverDynamic.syncDynamicExpression;\n        syncLogged = serverDynamic.syncDynamicLogged === true;\n    } else if (clientDynamic.syncDynamicErrorWithStack) {\n        syncError = clientDynamic.syncDynamicErrorWithStack;\n        syncExpression = clientDynamic.syncDynamicExpression;\n        syncLogged = clientDynamic.syncDynamicLogged === true;\n    } else {\n        syncError = null;\n        syncExpression = undefined;\n        syncLogged = false;\n    }\n    if (dynamicValidation.hasSyncDynamicErrors && syncError) {\n        if (!syncLogged) {\n            // In dev we already log errors about sync dynamic access. But during builds we need to ensure\n            // the offending sync error is logged before we exit the build\n            console.error(syncError);\n        }\n        // The actual error should have been logged when the sync access ocurred\n        throw new StaticGenBailoutError();\n    }\n    const dynamicErrors = dynamicValidation.dynamicErrors;\n    if (dynamicErrors.length) {\n        for(let i = 0; i < dynamicErrors.length; i++){\n            console.error(dynamicErrors[i]);\n        }\n        throw new StaticGenBailoutError();\n    }\n    if (!dynamicValidation.hasSuspendedDynamic) {\n        if (dynamicValidation.hasDynamicMetadata) {\n            if (syncError) {\n                console.error(syncError);\n                throw Object.defineProperty(new StaticGenBailoutError(`Route \"${route}\" has a \\`generateMetadata\\` that could not finish rendering before ${syncExpression} was used. Follow the instructions in the error for this expression to resolve.`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E608\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            throw Object.defineProperty(new StaticGenBailoutError(`Route \"${route}\" has a \\`generateMetadata\\` that depends on Request data (\\`cookies()\\`, etc...) or external data (\\`fetch(...)\\`, etc...) but the rest of the route was static or only used cached data (\\`\"use cache\"\\`). If you expected this route to be prerenderable update your \\`generateMetadata\\` to not use Request data and only use cached external data. Otherwise, add \\`await connection()\\` somewhere within this route to indicate explicitly it should not be prerendered.`), \"__NEXT_ERROR_CODE\", {\n                value: \"E534\",\n                enumerable: false,\n                configurable: true\n            });\n        } else if (dynamicValidation.hasDynamicViewport) {\n            if (syncError) {\n                console.error(syncError);\n                throw Object.defineProperty(new StaticGenBailoutError(`Route \"${route}\" has a \\`generateViewport\\` that could not finish rendering before ${syncExpression} was used. Follow the instructions in the error for this expression to resolve.`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E573\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            throw Object.defineProperty(new StaticGenBailoutError(`Route \"${route}\" has a \\`generateViewport\\` that depends on Request data (\\`cookies()\\`, etc...) or external data (\\`fetch(...)\\`, etc...) but the rest of the route was static or only used cached data (\\`\"use cache\"\\`). If you expected this route to be prerenderable update your \\`generateViewport\\` to not use Request data and only use cached external data. Otherwise, add \\`await connection()\\` somewhere within this route to indicate explicitly it should not be prerendered.`), \"__NEXT_ERROR_CODE\", {\n                value: \"E590\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n    }\n}\n\n//# sourceMappingURL=dynamic-rendering.js.map","import { getCacheHandlers } from './use-cache/handlers';\n/** Run a callback, and execute any *new* revalidations added during its runtime. */ export async function withExecuteRevalidates(store, callback) {\n    if (!store) {\n        return callback();\n    }\n    // If we executed any revalidates during the request, then we don't want to execute them again.\n    // save the state so we can check if anything changed after we're done running callbacks.\n    const savedRevalidationState = cloneRevalidationState(store);\n    try {\n        return await callback();\n    } finally{\n        // Check if we have any new revalidates, and if so, wait until they are all resolved.\n        const newRevalidates = diffRevalidationState(savedRevalidationState, cloneRevalidationState(store));\n        await executeRevalidates(store, newRevalidates);\n    }\n}\nfunction cloneRevalidationState(store) {\n    return {\n        pendingRevalidatedTags: store.pendingRevalidatedTags ? [\n            ...store.pendingRevalidatedTags\n        ] : [],\n        pendingRevalidates: {\n            ...store.pendingRevalidates\n        },\n        pendingRevalidateWrites: store.pendingRevalidateWrites ? [\n            ...store.pendingRevalidateWrites\n        ] : []\n    };\n}\nfunction diffRevalidationState(prev, curr) {\n    const prevTags = new Set(prev.pendingRevalidatedTags);\n    const prevRevalidateWrites = new Set(prev.pendingRevalidateWrites);\n    return {\n        pendingRevalidatedTags: curr.pendingRevalidatedTags.filter((tag)=>!prevTags.has(tag)),\n        pendingRevalidates: Object.fromEntries(Object.entries(curr.pendingRevalidates).filter(([key])=>!(key in prev.pendingRevalidates))),\n        pendingRevalidateWrites: curr.pendingRevalidateWrites.filter((promise)=>!prevRevalidateWrites.has(promise))\n    };\n}\nasync function revalidateTags(tags, incrementalCache) {\n    if (tags.length === 0) {\n        return;\n    }\n    const promises = [];\n    if (incrementalCache) {\n        promises.push(incrementalCache.revalidateTag(tags));\n    }\n    const handlers = getCacheHandlers();\n    if (handlers) {\n        for (const handler of handlers){\n            promises.push(handler.expireTags(...tags));\n        }\n    }\n    await Promise.all(promises);\n}\nexport async function executeRevalidates(workStore, state) {\n    const pendingRevalidatedTags = (state == null ? void 0 : state.pendingRevalidatedTags) ?? workStore.pendingRevalidatedTags ?? [];\n    const pendingRevalidates = (state == null ? void 0 : state.pendingRevalidates) ?? workStore.pendingRevalidates ?? {};\n    const pendingRevalidateWrites = (state == null ? void 0 : state.pendingRevalidateWrites) ?? workStore.pendingRevalidateWrites ?? [];\n    return Promise.all([\n        revalidateTags(pendingRevalidatedTags, workStore.incrementalCache),\n        ...Object.values(pendingRevalidates),\n        ...pendingRevalidateWrites\n    ]);\n}\n\n//# sourceMappingURL=revalidation-utils.js.map","export interface PathLocale {\n  detectedLocale?: string\n  pathname: string\n}\n\n/**\n * A cache of lowercased locales for each list of locales. This is stored as a\n * WeakMap so if the locales are garbage collected, the cache entry will be\n * removed as well.\n */\nconst cache = new WeakMap<readonly string[], readonly string[]>()\n\n/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */\nexport function normalizeLocalePath(\n  pathname: string,\n  locales?: readonly string[]\n): PathLocale {\n  // If locales is undefined, return the pathname as is.\n  if (!locales) return { pathname }\n\n  // Get the cached lowercased locales or create a new cache entry.\n  let lowercasedLocales = cache.get(locales)\n  if (!lowercasedLocales) {\n    lowercasedLocales = locales.map((locale) => locale.toLowerCase())\n    cache.set(locales, lowercasedLocales)\n  }\n\n  let detectedLocale: string | undefined\n\n  // The first segment will be empty, because it has a leading `/`. If\n  // there is no further segment, there is no locale (or it's the default).\n  const segments = pathname.split('/', 2)\n\n  // If there's no second segment (ie, the pathname is just `/`), there's no\n  // locale.\n  if (!segments[1]) return { pathname }\n\n  // The second segment will contain the locale part if any.\n  const segment = segments[1].toLowerCase()\n\n  // See if the segment matches one of the locales. If it doesn't, there is\n  // no locale (or it's the default).\n  const index = lowercasedLocales.indexOf(segment)\n  if (index < 0) return { pathname }\n\n  // Return the case-sensitive locale.\n  detectedLocale = locales[index]\n\n  // Remove the `/${locale}` part of the pathname.\n  pathname = pathname.slice(detectedLocale.length + 1) || '/'\n\n  return { pathname, detectedLocale }\n}\n","import type { Segment } from '../../server/app-render/types'\n\nexport function isGroupSegment(segment: string) {\n  // Use array[0] for performant purpose\n  return segment[0] === '(' && segment.endsWith(')')\n}\n\nexport function isParallelRouteSegment(segment: string) {\n  return segment.startsWith('@') && segment !== '@children'\n}\n\nexport function addSearchParamsIfPageSegment(\n  segment: Segment,\n  searchParams: Record<string, string | string[] | undefined>\n) {\n  const isPageSegment = segment.includes(PAGE_SEGMENT_KEY)\n\n  if (isPageSegment) {\n    const stringifiedQuery = JSON.stringify(searchParams)\n    return stringifiedQuery !== '{}'\n      ? PAGE_SEGMENT_KEY + '?' + stringifiedQuery\n      : PAGE_SEGMENT_KEY\n  }\n\n  return segment\n}\n\nexport const PAGE_SEGMENT_KEY = '__PAGE__'\nexport const DEFAULT_SEGMENT_KEY = '__DEFAULT__'\n","import { ensureLeadingSlash } from '../../page-path/ensure-leading-slash'\nimport { isGroupSegment } from '../../segment'\n\n/**\n * Normalizes an app route so it represents the actual request path. Essentially\n * performing the following transformations:\n *\n * - `/(dashboard)/user/[id]/page` to `/user/[id]`\n * - `/(dashboard)/account/page` to `/account`\n * - `/user/[id]/page` to `/user/[id]`\n * - `/account/page` to `/account`\n * - `/page` to `/`\n * - `/(dashboard)/user/[id]/route` to `/user/[id]`\n * - `/(dashboard)/account/route` to `/account`\n * - `/user/[id]/route` to `/user/[id]`\n * - `/account/route` to `/account`\n * - `/route` to `/`\n * - `/` to `/`\n *\n * @param route the app route to normalize\n * @returns the normalized pathname\n */\nexport function normalizeAppPath(route: string) {\n  return ensureLeadingSlash(\n    route.split('/').reduce((pathname, segment, index, segments) => {\n      // Empty segments are ignored.\n      if (!segment) {\n        return pathname\n      }\n\n      // Groups are ignored.\n      if (isGroupSegment(segment)) {\n        return pathname\n      }\n\n      // Parallel segments are ignored.\n      if (segment[0] === '@') {\n        return pathname\n      }\n\n      // The last segment (if it's a leaf) should be ignored.\n      if (\n        (segment === 'page' || segment === 'route') &&\n        index === segments.length - 1\n      ) {\n        return pathname\n      }\n\n      return `${pathname}/${segment}`\n    }, '')\n  )\n}\n\n/**\n * Strips the `.rsc` extension if it's in the pathname.\n * Since this function is used on full urls it checks `?` for searchParams handling.\n */\nexport function normalizeRscURL(url: string) {\n  return url.replace(\n    /\\.rsc($|\\?)/,\n    // $1 ensures `?` is preserved\n    '$1'\n  )\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst PostgrestTransformBuilder_1 = __importDefault(require(\"./PostgrestTransformBuilder\"));\nclass PostgrestFilterBuilder extends PostgrestTransformBuilder_1.default {\n    /**\n     * Match only rows where `column` is equal to `value`.\n     *\n     * To check if the value of `column` is NULL, you should use `.is()` instead.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    eq(column, value) {\n        this.url.searchParams.append(column, `eq.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is not equal to `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    neq(column, value) {\n        this.url.searchParams.append(column, `neq.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is greater than `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    gt(column, value) {\n        this.url.searchParams.append(column, `gt.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is greater than or equal to `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    gte(column, value) {\n        this.url.searchParams.append(column, `gte.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is less than `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    lt(column, value) {\n        this.url.searchParams.append(column, `lt.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is less than or equal to `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    lte(column, value) {\n        this.url.searchParams.append(column, `lte.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches `pattern` case-sensitively.\n     *\n     * @param column - The column to filter on\n     * @param pattern - The pattern to match with\n     */\n    like(column, pattern) {\n        this.url.searchParams.append(column, `like.${pattern}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches all of `patterns` case-sensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */\n    likeAllOf(column, patterns) {\n        this.url.searchParams.append(column, `like(all).{${patterns.join(',')}}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches any of `patterns` case-sensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */\n    likeAnyOf(column, patterns) {\n        this.url.searchParams.append(column, `like(any).{${patterns.join(',')}}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches `pattern` case-insensitively.\n     *\n     * @param column - The column to filter on\n     * @param pattern - The pattern to match with\n     */\n    ilike(column, pattern) {\n        this.url.searchParams.append(column, `ilike.${pattern}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches all of `patterns` case-insensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */\n    ilikeAllOf(column, patterns) {\n        this.url.searchParams.append(column, `ilike(all).{${patterns.join(',')}}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches any of `patterns` case-insensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */\n    ilikeAnyOf(column, patterns) {\n        this.url.searchParams.append(column, `ilike(any).{${patterns.join(',')}}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` IS `value`.\n     *\n     * For non-boolean columns, this is only relevant for checking if the value of\n     * `column` is NULL by setting `value` to `null`.\n     *\n     * For boolean columns, you can also set `value` to `true` or `false` and it\n     * will behave the same way as `.eq()`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    is(column, value) {\n        this.url.searchParams.append(column, `is.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is included in the `values` array.\n     *\n     * @param column - The column to filter on\n     * @param values - The values array to filter with\n     */\n    in(column, values) {\n        const cleanedValues = Array.from(new Set(values))\n            .map((s) => {\n            // handle postgrest reserved characters\n            // https://postgrest.org/en/v7.0.0/api.html#reserved-characters\n            if (typeof s === 'string' && new RegExp('[,()]').test(s))\n                return `\"${s}\"`;\n            else\n                return `${s}`;\n        })\n            .join(',');\n        this.url.searchParams.append(column, `in.(${cleanedValues})`);\n        return this;\n    }\n    /**\n     * Only relevant for jsonb, array, and range columns. Match only rows where\n     * `column` contains every element appearing in `value`.\n     *\n     * @param column - The jsonb, array, or range column to filter on\n     * @param value - The jsonb, array, or range value to filter with\n     */\n    contains(column, value) {\n        if (typeof value === 'string') {\n            // range types can be inclusive '[', ']' or exclusive '(', ')' so just\n            // keep it simple and accept a string\n            this.url.searchParams.append(column, `cs.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(column, `cs.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(column, `cs.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Only relevant for jsonb, array, and range columns. Match only rows where\n     * every element appearing in `column` is contained by `value`.\n     *\n     * @param column - The jsonb, array, or range column to filter on\n     * @param value - The jsonb, array, or range value to filter with\n     */\n    containedBy(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(column, `cd.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(column, `cd.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(column, `cd.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is greater than any element in `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeGt(column, range) {\n        this.url.searchParams.append(column, `sr.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is either contained in `range` or greater than any element in\n     * `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeGte(column, range) {\n        this.url.searchParams.append(column, `nxl.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is less than any element in `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeLt(column, range) {\n        this.url.searchParams.append(column, `sl.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is either contained in `range` or less than any element in\n     * `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeLte(column, range) {\n        this.url.searchParams.append(column, `nxr.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where `column` is\n     * mutually exclusive to `range` and there can be no element between the two\n     * ranges.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeAdjacent(column, range) {\n        this.url.searchParams.append(column, `adj.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for array and range columns. Match only rows where\n     * `column` and `value` have an element in common.\n     *\n     * @param column - The array or range column to filter on\n     * @param value - The array or range value to filter with\n     */\n    overlaps(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(column, `ov.${value}`);\n        }\n        else {\n            // array\n            this.url.searchParams.append(column, `ov.{${value.join(',')}}`);\n        }\n        return this;\n    }\n    /**\n     * Only relevant for text and tsvector columns. Match only rows where\n     * `column` matches the query string in `query`.\n     *\n     * @param column - The text or tsvector column to filter on\n     * @param query - The query text to match with\n     * @param options - Named parameters\n     * @param options.config - The text search configuration to use\n     * @param options.type - Change how the `query` text is interpreted\n     */\n    textSearch(column, query, { config, type } = {}) {\n        let typePart = '';\n        if (type === 'plain') {\n            typePart = 'pl';\n        }\n        else if (type === 'phrase') {\n            typePart = 'ph';\n        }\n        else if (type === 'websearch') {\n            typePart = 'w';\n        }\n        const configPart = config === undefined ? '' : `(${config})`;\n        this.url.searchParams.append(column, `${typePart}fts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Match only rows where each column in `query` keys is equal to its\n     * associated value. Shorthand for multiple `.eq()`s.\n     *\n     * @param query - The object to filter with, with column names as keys mapped\n     * to their filter values\n     */\n    match(query) {\n        Object.entries(query).forEach(([column, value]) => {\n            this.url.searchParams.append(column, `eq.${value}`);\n        });\n        return this;\n    }\n    /**\n     * Match only rows which doesn't satisfy the filter.\n     *\n     * Unlike most filters, `opearator` and `value` are used as-is and need to\n     * follow [PostgREST\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n     * to make sure they are properly sanitized.\n     *\n     * @param column - The column to filter on\n     * @param operator - The operator to be negated to filter with, following\n     * PostgREST syntax\n     * @param value - The value to filter with, following PostgREST syntax\n     */\n    not(column, operator, value) {\n        this.url.searchParams.append(column, `not.${operator}.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows which satisfy at least one of the filters.\n     *\n     * Unlike most filters, `filters` is used as-is and needs to follow [PostgREST\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n     * to make sure it's properly sanitized.\n     *\n     * It's currently not possible to do an `.or()` filter across multiple tables.\n     *\n     * @param filters - The filters to use, following PostgREST syntax\n     * @param options - Named parameters\n     * @param options.referencedTable - Set this to filter on referenced tables\n     * instead of the parent table\n     * @param options.foreignTable - Deprecated, use `referencedTable` instead\n     */\n    or(filters, { foreignTable, referencedTable = foreignTable, } = {}) {\n        const key = referencedTable ? `${referencedTable}.or` : 'or';\n        this.url.searchParams.append(key, `(${filters})`);\n        return this;\n    }\n    /**\n     * Match only rows which satisfy the filter. This is an escape hatch - you\n     * should use the specific filter methods wherever possible.\n     *\n     * Unlike most filters, `opearator` and `value` are used as-is and need to\n     * follow [PostgREST\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n     * to make sure they are properly sanitized.\n     *\n     * @param column - The column to filter on\n     * @param operator - The operator to filter with, following PostgREST syntax\n     * @param value - The value to filter with, following PostgREST syntax\n     */\n    filter(column, operator, value) {\n        this.url.searchParams.append(column, `${operator}.${value}`);\n        return this;\n    }\n}\nexports.default = PostgrestFilterBuilder;\n//# sourceMappingURL=PostgrestFilterBuilder.js.map","// Share the instance module in the next-shared layer\nimport { workUnitAsyncStorageInstance } from './work-unit-async-storage-instance' with {\n    'turbopack-transition': 'next-shared'\n};\nimport { NEXT_HMR_REFRESH_HASH_COOKIE } from '../../client/components/app-router-headers';\nexport { workUnitAsyncStorageInstance as workUnitAsyncStorage };\nexport function getExpectedRequestStore(callingExpression) {\n    const workUnitStore = workUnitAsyncStorageInstance.getStore();\n    if (!workUnitStore) {\n        throwForMissingRequestStore(callingExpression);\n    }\n    switch(workUnitStore.type){\n        case 'request':\n            return workUnitStore;\n        case 'prerender':\n        case 'prerender-ppr':\n        case 'prerender-legacy':\n            // This should not happen because we should have checked it already.\n            throw Object.defineProperty(new Error(`\\`${callingExpression}\\` cannot be called inside a prerender. This is a bug in Next.js.`), \"__NEXT_ERROR_CODE\", {\n                value: \"E401\",\n                enumerable: false,\n                configurable: true\n            });\n        case 'cache':\n            throw Object.defineProperty(new Error(`\\`${callingExpression}\\` cannot be called inside \"use cache\". Call it outside and pass an argument instead. Read more: https://nextjs.org/docs/messages/next-request-in-use-cache`), \"__NEXT_ERROR_CODE\", {\n                value: \"E37\",\n                enumerable: false,\n                configurable: true\n            });\n        case 'unstable-cache':\n            throw Object.defineProperty(new Error(`\\`${callingExpression}\\` cannot be called inside unstable_cache. Call it outside and pass an argument instead. Read more: https://nextjs.org/docs/app/api-reference/functions/unstable_cache`), \"__NEXT_ERROR_CODE\", {\n                value: \"E69\",\n                enumerable: false,\n                configurable: true\n            });\n        default:\n            const _exhaustiveCheck = workUnitStore;\n            return _exhaustiveCheck;\n    }\n}\nexport function throwForMissingRequestStore(callingExpression) {\n    throw Object.defineProperty(new Error(`\\`${callingExpression}\\` was called outside a request scope. Read more: https://nextjs.org/docs/messages/next-dynamic-api-wrong-context`), \"__NEXT_ERROR_CODE\", {\n        value: \"E251\",\n        enumerable: false,\n        configurable: true\n    });\n}\nexport function getPrerenderResumeDataCache(workUnitStore) {\n    if (workUnitStore.type === 'prerender' || workUnitStore.type === 'prerender-ppr') {\n        return workUnitStore.prerenderResumeDataCache;\n    }\n    return null;\n}\nexport function getRenderResumeDataCache(workUnitStore) {\n    if (workUnitStore.type !== 'prerender-legacy' && workUnitStore.type !== 'cache' && workUnitStore.type !== 'unstable-cache') {\n        if (workUnitStore.type === 'request') {\n            return workUnitStore.renderResumeDataCache;\n        }\n        // We return the mutable resume data cache here as an immutable version of\n        // the cache as it can also be used for reading.\n        return workUnitStore.prerenderResumeDataCache;\n    }\n    return null;\n}\nexport function getHmrRefreshHash(workStore, workUnitStore) {\n    var _workUnitStore_cookies_get;\n    if (!workStore.dev) {\n        return undefined;\n    }\n    return workUnitStore.type === 'cache' || workUnitStore.type === 'prerender' ? workUnitStore.hmrRefreshHash : workUnitStore.type === 'request' ? (_workUnitStore_cookies_get = workUnitStore.cookies.get(NEXT_HMR_REFRESH_HASH_COOKIE)) == null ? void 0 : _workUnitStore_cookies_get.value : undefined;\n}\n/**\n * Returns a draft mode provider only if draft mode is enabled.\n */ export function getDraftModeProviderForCacheScope(workStore, workUnitStore) {\n    if (workStore.isDraftMode) {\n        switch(workUnitStore.type){\n            case 'cache':\n            case 'unstable-cache':\n            case 'request':\n                return workUnitStore.draftMode;\n            default:\n                return undefined;\n        }\n    }\n    return undefined;\n}\n\n//# sourceMappingURL=work-unit-async-storage.external.js.map","import type { DomainLocale } from '../../../server/config-shared'\n\nexport function detectDomainLocale(\n  domainItems?: readonly DomainLocale[],\n  hostname?: string,\n  detectedLocale?: string\n) {\n  if (!domainItems) return\n\n  if (detectedLocale) {\n    detectedLocale = detectedLocale.toLowerCase()\n  }\n\n  for (const item of domainItems) {\n    // remove port if present\n    const domainHostname = item.domain?.split(':', 1)[0].toLowerCase()\n    if (\n      hostname === domainHostname ||\n      detectedLocale === item.defaultLocale.toLowerCase() ||\n      item.locales?.some((locale) => locale.toLowerCase() === detectedLocale)\n    ) {\n      return item\n    }\n  }\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */\nexport function addPathPrefix(path: string, prefix?: string) {\n  if (!path.startsWith('/') || !prefix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${prefix}${pathname}${query}${hash}`\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\n * provided path. It also works only for paths ensuring the argument starts\n * with a slash.\n */\nexport function addPathSuffix(path: string, suffix?: string) {\n  if (!path.startsWith('/') || !suffix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${pathname}${suffix}${query}${hash}`\n}\n","import { addPathPrefix } from './add-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\n\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */\nexport function addLocale(\n  path: string,\n  locale?: string | false,\n  defaultLocale?: string,\n  ignorePrefix?: boolean\n) {\n  // If no locale was given or the locale is the default locale, we don't need\n  // to prefix the path.\n  if (!locale || locale === defaultLocale) return path\n\n  const lower = path.toLowerCase()\n\n  // If the path is an API path or the path already has the locale prefix, we\n  // don't need to prefix the path.\n  if (!ignorePrefix) {\n    if (pathHasPrefix(lower, '/api')) return path\n    if (pathHasPrefix(lower, `/${locale.toLowerCase()}`)) return path\n  }\n\n  // Add the locale prefix to the path.\n  return addPathPrefix(path, `/${locale}`)\n}\n","import type { NextPathnameInfo } from './get-next-pathname-info'\nimport { removeTrailingSlash } from './remove-trailing-slash'\nimport { addPathPrefix } from './add-path-prefix'\nimport { addPathSuffix } from './add-path-suffix'\nimport { addLocale } from './add-locale'\n\ninterface ExtendedInfo extends NextPathnameInfo {\n  defaultLocale?: string\n  ignorePrefix?: boolean\n}\n\nexport function formatNextPathnameInfo(info: ExtendedInfo) {\n  let pathname = addLocale(\n    info.pathname,\n    info.locale,\n    info.buildId ? undefined : info.defaultLocale,\n    info.ignorePrefix\n  )\n\n  if (info.buildId || !info.trailingSlash) {\n    pathname = removeTrailingSlash(pathname)\n  }\n\n  if (info.buildId) {\n    pathname = addPathSuffix(\n      addPathPrefix(pathname, `/_next/data/${info.buildId}`),\n      info.pathname === '/' ? 'index.json' : '.json'\n    )\n  }\n\n  pathname = addPathPrefix(pathname, info.basePath)\n  return !info.buildId && info.trailingSlash\n    ? !pathname.endsWith('/')\n      ? addPathSuffix(pathname, '/')\n      : pathname\n    : removeTrailingSlash(pathname)\n}\n","import type { OutgoingHttpHeaders } from 'http'\n\n/**\n * Takes an object with a hostname property (like a parsed URL) and some\n * headers that may contain Host and returns the preferred hostname.\n * @param parsed An object containing a hostname property.\n * @param headers A dictionary with headers containing a `host`.\n */\nexport function getHostname(\n  parsed: { hostname?: string | null },\n  headers?: OutgoingHttpHeaders\n): string | undefined {\n  // Get the hostname from the headers if it exists, otherwise use the parsed\n  // hostname.\n  let hostname: string\n  if (headers?.host && !Array.isArray(headers.host)) {\n    hostname = headers.host.toString().split(':', 1)[0]\n  } else if (parsed.hostname) {\n    hostname = parsed.hostname\n  } else return\n\n  return hostname.toLowerCase()\n}\n","import { pathHasPrefix } from './path-has-prefix'\n\n/**\n * Given a path and a prefix it will remove the prefix when it exists in the\n * given path. It ensures it matches exactly without containing extra chars\n * and if the prefix is not there it will be noop.\n *\n * @param path The path to remove the prefix from.\n * @param prefix The prefix to be removed.\n */\nexport function removePathPrefix(path: string, prefix: string): string {\n  // If the path doesn't start with the prefix we can return it as is. This\n  // protects us from situations where the prefix is a substring of the path\n  // prefix such as:\n  //\n  // For prefix: /blog\n  //\n  //   /blog -> true\n  //   /blog/ -> true\n  //   /blog/1 -> true\n  //   /blogging -> false\n  //   /blogging/ -> false\n  //   /blogging/1 -> false\n  if (!pathHasPrefix(path, prefix)) {\n    return path\n  }\n\n  // Remove the prefix from the path via slicing.\n  const withoutPrefix = path.slice(prefix.length)\n\n  // If the path without the prefix starts with a `/` we can return it as is.\n  if (withoutPrefix.startsWith('/')) {\n    return withoutPrefix\n  }\n\n  // If the path without the prefix doesn't start with a `/` we need to add it\n  // back to the path to make sure it's a valid path.\n  return `/${withoutPrefix}`\n}\n","import { normalizeLocalePath } from '../../i18n/normalize-locale-path'\nimport { removePathPrefix } from './remove-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\nimport type { I18NProvider } from '../../../../server/lib/i18n-provider'\n\nexport interface NextPathnameInfo {\n  /**\n   * The base path in case the pathname included it.\n   */\n  basePath?: string\n  /**\n   * The buildId for when the parsed URL is a data URL. Parsing it can be\n   * disabled with the `parseData` option.\n   */\n  buildId?: string\n  /**\n   * If there was a locale in the pathname, this will hold its value.\n   */\n  locale?: string\n  /**\n   * The processed pathname without a base path, locale, or data URL elements\n   * when parsing it is enabled.\n   */\n  pathname: string\n  /**\n   * A boolean telling if the pathname had a trailingSlash. This can be only\n   * true if trailingSlash is enabled.\n   */\n  trailingSlash?: boolean\n}\n\ninterface Options {\n  /**\n   * When passed to true, this function will also parse Nextjs data URLs.\n   */\n  parseData?: boolean\n  /**\n   * A partial of the Next.js configuration to parse the URL.\n   */\n  nextConfig?: {\n    basePath?: string\n    i18n?: { locales?: readonly string[] } | null\n    trailingSlash?: boolean\n  }\n\n  /**\n   * If provided, this normalizer will be used to detect the locale instead of\n   * the default locale detection.\n   */\n  i18nProvider?: I18NProvider\n}\n\nexport function getNextPathnameInfo(\n  pathname: string,\n  options: Options\n): NextPathnameInfo {\n  const { basePath, i18n, trailingSlash } = options.nextConfig ?? {}\n  const info: NextPathnameInfo = {\n    pathname,\n    trailingSlash: pathname !== '/' ? pathname.endsWith('/') : trailingSlash,\n  }\n\n  if (basePath && pathHasPrefix(info.pathname, basePath)) {\n    info.pathname = removePathPrefix(info.pathname, basePath)\n    info.basePath = basePath\n  }\n  let pathnameNoDataPrefix = info.pathname\n\n  if (\n    info.pathname.startsWith('/_next/data/') &&\n    info.pathname.endsWith('.json')\n  ) {\n    const paths = info.pathname\n      .replace(/^\\/_next\\/data\\//, '')\n      .replace(/\\.json$/, '')\n      .split('/')\n\n    const buildId = paths[0]\n    info.buildId = buildId\n    pathnameNoDataPrefix =\n      paths[1] !== 'index' ? `/${paths.slice(1).join('/')}` : '/'\n\n    // update pathname with normalized if enabled although\n    // we use normalized to populate locale info still\n    if (options.parseData === true) {\n      info.pathname = pathnameNoDataPrefix\n    }\n  }\n\n  // If provided, use the locale route normalizer to detect the locale instead\n  // of the function below.\n  if (i18n) {\n    let result = options.i18nProvider\n      ? options.i18nProvider.analyze(info.pathname)\n      : normalizeLocalePath(info.pathname, i18n.locales)\n\n    info.locale = result.detectedLocale\n    info.pathname = result.pathname ?? info.pathname\n\n    if (!result.detectedLocale && info.buildId) {\n      result = options.i18nProvider\n        ? options.i18nProvider.analyze(pathnameNoDataPrefix)\n        : normalizeLocalePath(pathnameNoDataPrefix, i18n.locales)\n\n      if (result.detectedLocale) {\n        info.locale = result.detectedLocale\n      }\n    }\n  }\n  return info\n}\n","import { detectDomainLocale } from '../../shared/lib/i18n/detect-domain-locale';\nimport { formatNextPathnameInfo } from '../../shared/lib/router/utils/format-next-pathname-info';\nimport { getHostname } from '../../shared/lib/get-hostname';\nimport { getNextPathnameInfo } from '../../shared/lib/router/utils/get-next-pathname-info';\nconst REGEX_LOCALHOST_HOSTNAME = /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|\\[::1\\]|localhost)/;\nfunction parseURL(url, base) {\n    return new URL(String(url).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost'), base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost'));\n}\nconst Internal = Symbol('NextURLInternal');\nexport class NextURL {\n    constructor(input, baseOrOpts, opts){\n        let base;\n        let options;\n        if (typeof baseOrOpts === 'object' && 'pathname' in baseOrOpts || typeof baseOrOpts === 'string') {\n            base = baseOrOpts;\n            options = opts || {};\n        } else {\n            options = opts || baseOrOpts || {};\n        }\n        this[Internal] = {\n            url: parseURL(input, base ?? options.base),\n            options: options,\n            basePath: ''\n        };\n        this.analyze();\n    }\n    analyze() {\n        var _this_Internal_options_nextConfig_i18n, _this_Internal_options_nextConfig, _this_Internal_domainLocale, _this_Internal_options_nextConfig_i18n1, _this_Internal_options_nextConfig1;\n        const info = getNextPathnameInfo(this[Internal].url.pathname, {\n            nextConfig: this[Internal].options.nextConfig,\n            parseData: !process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE,\n            i18nProvider: this[Internal].options.i18nProvider\n        });\n        const hostname = getHostname(this[Internal].url, this[Internal].options.headers);\n        this[Internal].domainLocale = this[Internal].options.i18nProvider ? this[Internal].options.i18nProvider.detectDomainLocale(hostname) : detectDomainLocale((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.domains, hostname);\n        const defaultLocale = ((_this_Internal_domainLocale = this[Internal].domainLocale) == null ? void 0 : _this_Internal_domainLocale.defaultLocale) || ((_this_Internal_options_nextConfig1 = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n1 = _this_Internal_options_nextConfig1.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n1.defaultLocale);\n        this[Internal].url.pathname = info.pathname;\n        this[Internal].defaultLocale = defaultLocale;\n        this[Internal].basePath = info.basePath ?? '';\n        this[Internal].buildId = info.buildId;\n        this[Internal].locale = info.locale ?? defaultLocale;\n        this[Internal].trailingSlash = info.trailingSlash;\n    }\n    formatPathname() {\n        return formatNextPathnameInfo({\n            basePath: this[Internal].basePath,\n            buildId: this[Internal].buildId,\n            defaultLocale: !this[Internal].options.forceLocale ? this[Internal].defaultLocale : undefined,\n            locale: this[Internal].locale,\n            pathname: this[Internal].url.pathname,\n            trailingSlash: this[Internal].trailingSlash\n        });\n    }\n    formatSearch() {\n        return this[Internal].url.search;\n    }\n    get buildId() {\n        return this[Internal].buildId;\n    }\n    set buildId(buildId) {\n        this[Internal].buildId = buildId;\n    }\n    get locale() {\n        return this[Internal].locale ?? '';\n    }\n    set locale(locale) {\n        var _this_Internal_options_nextConfig_i18n, _this_Internal_options_nextConfig;\n        if (!this[Internal].locale || !((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.locales.includes(locale))) {\n            throw Object.defineProperty(new TypeError(`The NextURL configuration includes no locale \"${locale}\"`), \"__NEXT_ERROR_CODE\", {\n                value: \"E597\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        this[Internal].locale = locale;\n    }\n    get defaultLocale() {\n        return this[Internal].defaultLocale;\n    }\n    get domainLocale() {\n        return this[Internal].domainLocale;\n    }\n    get searchParams() {\n        return this[Internal].url.searchParams;\n    }\n    get host() {\n        return this[Internal].url.host;\n    }\n    set host(value) {\n        this[Internal].url.host = value;\n    }\n    get hostname() {\n        return this[Internal].url.hostname;\n    }\n    set hostname(value) {\n        this[Internal].url.hostname = value;\n    }\n    get port() {\n        return this[Internal].url.port;\n    }\n    set port(value) {\n        this[Internal].url.port = value;\n    }\n    get protocol() {\n        return this[Internal].url.protocol;\n    }\n    set protocol(value) {\n        this[Internal].url.protocol = value;\n    }\n    get href() {\n        const pathname = this.formatPathname();\n        const search = this.formatSearch();\n        return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`;\n    }\n    set href(url) {\n        this[Internal].url = parseURL(url);\n        this.analyze();\n    }\n    get origin() {\n        return this[Internal].url.origin;\n    }\n    get pathname() {\n        return this[Internal].url.pathname;\n    }\n    set pathname(value) {\n        this[Internal].url.pathname = value;\n    }\n    get hash() {\n        return this[Internal].url.hash;\n    }\n    set hash(value) {\n        this[Internal].url.hash = value;\n    }\n    get search() {\n        return this[Internal].url.search;\n    }\n    set search(value) {\n        this[Internal].url.search = value;\n    }\n    get password() {\n        return this[Internal].url.password;\n    }\n    set password(value) {\n        this[Internal].url.password = value;\n    }\n    get username() {\n        return this[Internal].url.username;\n    }\n    set username(value) {\n        this[Internal].url.username = value;\n    }\n    get basePath() {\n        return this[Internal].basePath;\n    }\n    set basePath(value) {\n        this[Internal].basePath = value.startsWith('/') ? value : `/${value}`;\n    }\n    toString() {\n        return this.href;\n    }\n    toJSON() {\n        return this.href;\n    }\n    [Symbol.for('edge-runtime.inspect.custom')]() {\n        return {\n            href: this.href,\n            origin: this.origin,\n            protocol: this.protocol,\n            username: this.username,\n            password: this.password,\n            host: this.host,\n            hostname: this.hostname,\n            port: this.port,\n            pathname: this.pathname,\n            search: this.search,\n            searchParams: this.searchParams,\n            hash: this.hash\n        };\n    }\n    clone() {\n        return new NextURL(String(this), this[Internal].options);\n    }\n}\n\n//# sourceMappingURL=next-url.js.map","import PromiseQueue from 'next/dist/compiled/p-queue';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nimport { isThenable } from '../../shared/lib/is-thenable';\nimport { workAsyncStorage } from '../app-render/work-async-storage.external';\nimport { withExecuteRevalidates } from '../revalidation-utils';\nimport { bindSnapshot } from '../app-render/async-local-storage';\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external';\nimport { afterTaskAsyncStorage } from '../app-render/after-task-async-storage.external';\nexport class AfterContext {\n    constructor({ waitUntil, onClose, onTaskError }){\n        this.workUnitStores = new Set();\n        this.waitUntil = waitUntil;\n        this.onClose = onClose;\n        this.onTaskError = onTaskError;\n        this.callbackQueue = new PromiseQueue();\n        this.callbackQueue.pause();\n    }\n    after(task) {\n        if (isThenable(task)) {\n            if (!this.waitUntil) {\n                errorWaitUntilNotAvailable();\n            }\n            this.waitUntil(task.catch((error)=>this.reportTaskError('promise', error)));\n        } else if (typeof task === 'function') {\n            // TODO(after): implement tracing\n            this.addCallback(task);\n        } else {\n            throw Object.defineProperty(new Error('`after()`: Argument must be a promise or a function'), \"__NEXT_ERROR_CODE\", {\n                value: \"E50\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n    }\n    addCallback(callback) {\n        // if something is wrong, throw synchronously, bubbling up to the `after` callsite.\n        if (!this.waitUntil) {\n            errorWaitUntilNotAvailable();\n        }\n        const workUnitStore = workUnitAsyncStorage.getStore();\n        if (workUnitStore) {\n            this.workUnitStores.add(workUnitStore);\n        }\n        const afterTaskStore = afterTaskAsyncStorage.getStore();\n        // This is used for checking if request APIs can be called inside `after`.\n        // Note that we need to check the phase in which the *topmost* `after` was called (which should be \"action\"),\n        // not the current phase (which might be \"after\" if we're in a nested after).\n        // Otherwise, we might allow `after(() => headers())`, but not `after(() => after(() => headers()))`.\n        const rootTaskSpawnPhase = afterTaskStore ? afterTaskStore.rootTaskSpawnPhase // nested after\n         : workUnitStore == null ? void 0 : workUnitStore.phase // topmost after\n        ;\n        // this should only happen once.\n        if (!this.runCallbacksOnClosePromise) {\n            this.runCallbacksOnClosePromise = this.runCallbacksOnClose();\n            this.waitUntil(this.runCallbacksOnClosePromise);\n        }\n        // Bind the callback to the current execution context (i.e. preserve all currently available ALS-es).\n        // We do this because we want all of these to be equivalent in every regard except timing:\n        //   after(() => x())\n        //   after(x())\n        //   await x()\n        const wrappedCallback = bindSnapshot(async ()=>{\n            try {\n                await afterTaskAsyncStorage.run({\n                    rootTaskSpawnPhase\n                }, ()=>callback());\n            } catch (error) {\n                this.reportTaskError('function', error);\n            }\n        });\n        this.callbackQueue.add(wrappedCallback);\n    }\n    async runCallbacksOnClose() {\n        await new Promise((resolve)=>this.onClose(resolve));\n        return this.runCallbacks();\n    }\n    async runCallbacks() {\n        if (this.callbackQueue.size === 0) return;\n        for (const workUnitStore of this.workUnitStores){\n            workUnitStore.phase = 'after';\n        }\n        const workStore = workAsyncStorage.getStore();\n        if (!workStore) {\n            throw Object.defineProperty(new InvariantError('Missing workStore in AfterContext.runCallbacks'), \"__NEXT_ERROR_CODE\", {\n                value: \"E547\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        return withExecuteRevalidates(workStore, ()=>{\n            this.callbackQueue.start();\n            return this.callbackQueue.onIdle();\n        });\n    }\n    reportTaskError(taskKind, error) {\n        // TODO(after): this is fine for now, but will need better intergration with our error reporting.\n        // TODO(after): should we log this if we have a onTaskError callback?\n        console.error(taskKind === 'promise' ? `A promise passed to \\`after()\\` rejected:` : `An error occurred in a function passed to \\`after()\\`:`, error);\n        if (this.onTaskError) {\n            // this is very defensive, but we really don't want anything to blow up in an error handler\n            try {\n                this.onTaskError == null ? void 0 : this.onTaskError.call(this, error);\n            } catch (handlerError) {\n                console.error(Object.defineProperty(new InvariantError('`onTaskError` threw while handling an error thrown from an `after` task', {\n                    cause: handlerError\n                }), \"__NEXT_ERROR_CODE\", {\n                    value: \"E569\",\n                    enumerable: false,\n                    configurable: true\n                }));\n            }\n        }\n    }\n}\nfunction errorWaitUntilNotAvailable() {\n    throw Object.defineProperty(new Error('`after()` will not work correctly, because `waitUntil` is not available in the current environment.'), \"__NEXT_ERROR_CODE\", {\n        value: \"E91\",\n        enumerable: false,\n        configurable: true\n    });\n}\n\n//# sourceMappingURL=after-context.js.map","import { AfterContext } from '../after/after-context';\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths';\nimport { createLazyResult } from '../lib/lazy-result';\nimport { getCacheHandlerEntries } from '../use-cache/handlers';\nexport function createWorkStore({ page, fallbackRouteParams, renderOpts, requestEndedState, isPrefetchRequest, buildId, previouslyRevalidatedTags }) {\n    /**\n   * Rules of Static & Dynamic HTML:\n   *\n   *    1.) We must generate static HTML unless the caller explicitly opts\n   *        in to dynamic HTML support.\n   *\n   *    2.) If dynamic HTML support is requested, we must honor that request\n   *        or throw an error. It is the sole responsibility of the caller to\n   *        ensure they aren't e.g. requesting dynamic HTML for an AMP page.\n   *\n   *    3.) If the request is in draft mode, we must generate dynamic HTML.\n   *\n   *    4.) If the request is a server action, we must generate dynamic HTML.\n   *\n   * These rules help ensure that other existing features like request caching,\n   * coalescing, and ISR continue working as intended.\n   */ const isStaticGeneration = !renderOpts.shouldWaitOnAllReady && !renderOpts.supportsDynamicResponse && !renderOpts.isDraftMode && !renderOpts.isPossibleServerAction;\n    const store = {\n        isStaticGeneration,\n        page,\n        fallbackRouteParams,\n        route: normalizeAppPath(page),\n        incrementalCache: // we fallback to a global incremental cache for edge-runtime locally\n        // so that it can access the fs cache without mocks\n        renderOpts.incrementalCache || globalThis.__incrementalCache,\n        cacheLifeProfiles: renderOpts.cacheLifeProfiles,\n        isRevalidate: renderOpts.isRevalidate,\n        isPrerendering: renderOpts.nextExport,\n        fetchCache: renderOpts.fetchCache,\n        isOnDemandRevalidate: renderOpts.isOnDemandRevalidate,\n        isDraftMode: renderOpts.isDraftMode,\n        requestEndedState,\n        isPrefetchRequest,\n        buildId,\n        reactLoadableManifest: (renderOpts == null ? void 0 : renderOpts.reactLoadableManifest) || {},\n        assetPrefix: (renderOpts == null ? void 0 : renderOpts.assetPrefix) || '',\n        afterContext: createAfterContext(renderOpts),\n        dynamicIOEnabled: renderOpts.experimental.dynamicIO,\n        dev: renderOpts.dev ?? false,\n        previouslyRevalidatedTags,\n        refreshTagsByCacheKind: createRefreshTagsByCacheKind()\n    };\n    // TODO: remove this when we resolve accessing the store outside the execution context\n    renderOpts.store = store;\n    return store;\n}\nfunction createAfterContext(renderOpts) {\n    const { waitUntil, onClose, onAfterTaskError } = renderOpts;\n    return new AfterContext({\n        waitUntil,\n        onClose,\n        onTaskError: onAfterTaskError\n    });\n}\n/**\n * Creates a map with lazy results that refresh tags for the respective cache\n * kind when they're awaited for the first time.\n */ function createRefreshTagsByCacheKind() {\n    const refreshTagsByCacheKind = new Map();\n    const cacheHandlers = getCacheHandlerEntries();\n    if (cacheHandlers) {\n        for (const [kind, cacheHandler] of cacheHandlers){\n            if ('refreshTags' in cacheHandler) {\n                refreshTagsByCacheKind.set(kind, createLazyResult(async ()=>cacheHandler.refreshTags()));\n            }\n        }\n    }\n    return refreshTagsByCacheKind;\n}\n\n//# sourceMappingURL=work-store.js.map","export class InvariantError extends Error {\n  constructor(message: string, options?: ErrorOptions) {\n    super(\n      `Invariant: ${message.endsWith('.') ? message : message + '.'} This is a bug in Next.js.`,\n      options\n    )\n    this.name = 'InvariantError'\n  }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PostgrestError = exports.PostgrestBuilder = exports.PostgrestTransformBuilder = exports.PostgrestFilterBuilder = exports.PostgrestQueryBuilder = exports.PostgrestClient = void 0;\n// Always update wrapper.mjs when updating this file.\nconst PostgrestClient_1 = __importDefault(require(\"./PostgrestClient\"));\nexports.PostgrestClient = PostgrestClient_1.default;\nconst PostgrestQueryBuilder_1 = __importDefault(require(\"./PostgrestQueryBuilder\"));\nexports.PostgrestQueryBuilder = PostgrestQueryBuilder_1.default;\nconst PostgrestFilterBuilder_1 = __importDefault(require(\"./PostgrestFilterBuilder\"));\nexports.PostgrestFilterBuilder = PostgrestFilterBuilder_1.default;\nconst PostgrestTransformBuilder_1 = __importDefault(require(\"./PostgrestTransformBuilder\"));\nexports.PostgrestTransformBuilder = PostgrestTransformBuilder_1.default;\nconst PostgrestBuilder_1 = __importDefault(require(\"./PostgrestBuilder\"));\nexports.PostgrestBuilder = PostgrestBuilder_1.default;\nconst PostgrestError_1 = __importDefault(require(\"./PostgrestError\"));\nexports.PostgrestError = PostgrestError_1.default;\nexports.default = {\n    PostgrestClient: PostgrestClient_1.default,\n    PostgrestQueryBuilder: PostgrestQueryBuilder_1.default,\n    PostgrestFilterBuilder: PostgrestFilterBuilder_1.default,\n    PostgrestTransformBuilder: PostgrestTransformBuilder_1.default,\n    PostgrestBuilder: PostgrestBuilder_1.default,\n    PostgrestError: PostgrestError_1.default,\n};\n//# sourceMappingURL=index.js.map","/**\n * Check to see if a value is Thenable.\n *\n * @param promise the maybe-thenable value\n * @returns true if the value is thenable\n */\nexport function isThenable<T = unknown>(\n  promise: Promise<T> | T\n): promise is Promise<T> {\n  return (\n    promise !== null &&\n    typeof promise === 'object' &&\n    'then' in promise &&\n    typeof promise.then === 'function'\n  )\n}\n","import { normalizeAppPath } from '../../shared/lib/router/utils/app-paths';\nimport { pathHasPrefix } from '../../shared/lib/router/utils/path-has-prefix';\nimport { removePathPrefix } from '../../shared/lib/router/utils/remove-path-prefix';\nimport { workAsyncStorage } from './work-async-storage.external';\n// This function creates a Flight-acceptable server module map proxy from our\n// Server Reference Manifest similar to our client module map.\n// This is because our manifest contains a lot of internal Next.js data that\n// are relevant to the runtime, workers, etc. that React doesn't need to know.\nexport function createServerModuleMap({ serverActionsManifest }) {\n    return new Proxy({}, {\n        get: (_, id)=>{\n            var _serverActionsManifest__id, _serverActionsManifest_;\n            const workers = (_serverActionsManifest_ = serverActionsManifest[process.env.NEXT_RUNTIME === 'edge' ? 'edge' : 'node']) == null ? void 0 : (_serverActionsManifest__id = _serverActionsManifest_[id]) == null ? void 0 : _serverActionsManifest__id.workers;\n            if (!workers) {\n                return undefined;\n            }\n            const workStore = workAsyncStorage.getStore();\n            let workerEntry;\n            if (workStore) {\n                workerEntry = workers[normalizeWorkerPageName(workStore.page)];\n            } else {\n                // If there's no work store defined, we can assume that a server\n                // module map is needed during module evaluation, e.g. to create a\n                // server action using a higher-order function. Therefore it should be\n                // safe to return any entry from the manifest that matches the action\n                // ID. They all refer to the same module ID, which must also exist in\n                // the current page bundle. TODO: This is currently not guaranteed in\n                // Turbopack, and needs to be fixed.\n                workerEntry = Object.values(workers).at(0);\n            }\n            if (!workerEntry) {\n                return undefined;\n            }\n            const { moduleId, async } = workerEntry;\n            return {\n                id: moduleId,\n                name: id,\n                chunks: [],\n                async\n            };\n        }\n    });\n}\n/**\n * Checks if the requested action has a worker for the current page.\n * If not, it returns the first worker that has a handler for the action.\n */ export function selectWorkerForForwarding(actionId, pageName, serverActionsManifest) {\n    var _serverActionsManifest__actionId;\n    const workers = (_serverActionsManifest__actionId = serverActionsManifest[process.env.NEXT_RUNTIME === 'edge' ? 'edge' : 'node'][actionId]) == null ? void 0 : _serverActionsManifest__actionId.workers;\n    const workerName = normalizeWorkerPageName(pageName);\n    // no workers, nothing to forward to\n    if (!workers) return;\n    // if there is a worker for this page, no need to forward it.\n    if (workers[workerName]) {\n        return;\n    }\n    // otherwise, grab the first worker that has a handler for this action id\n    return denormalizeWorkerPageName(Object.keys(workers)[0]);\n}\n/**\n * The flight entry loader keys actions by bundlePath.\n * bundlePath corresponds with the relative path (including 'app') to the page entrypoint.\n */ function normalizeWorkerPageName(pageName) {\n    if (pathHasPrefix(pageName, 'app')) {\n        return pageName;\n    }\n    return 'app' + pageName;\n}\n/**\n * Converts a bundlePath (relative path to the entrypoint) to a routable page name\n */ function denormalizeWorkerPageName(bundlePath) {\n    return normalizeAppPath(removePathPrefix(bundlePath, 'app'));\n}\n\n//# sourceMappingURL=action-utils.js.map","import type { ActionManifest } from '../../build/webpack/plugins/flight-client-entry-plugin'\nimport type {\n  ClientReferenceManifest,\n  ClientReferenceManifestForRsc,\n} from '../../build/webpack/plugins/flight-manifest-plugin'\nimport type { DeepReadonly } from '../../shared/lib/deep-readonly'\nimport { InvariantError } from '../../shared/lib/invariant-error'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\nimport { workAsyncStorage } from './work-async-storage.external'\n\nlet __next_loaded_action_key: CryptoKey\n\nexport function arrayBufferToString(\n  buffer: ArrayBuffer | Uint8Array<ArrayBufferLike>\n) {\n  const bytes = new Uint8Array(buffer)\n  const len = bytes.byteLength\n\n  // @anonrig: V8 has a limit of 65535 arguments in a function.\n  // For len < 65535, this is faster.\n  // https://github.com/vercel/next.js/pull/56377#pullrequestreview-1656181623\n  if (len < 65535) {\n    return String.fromCharCode.apply(null, bytes as unknown as number[])\n  }\n\n  let binary = ''\n  for (let i = 0; i < len; i++) {\n    binary += String.fromCharCode(bytes[i])\n  }\n  return binary\n}\n\nexport function stringToUint8Array(binary: string) {\n  const len = binary.length\n  const arr = new Uint8Array(len)\n\n  for (let i = 0; i < len; i++) {\n    arr[i] = binary.charCodeAt(i)\n  }\n\n  return arr\n}\n\nexport function encrypt(key: CryptoKey, iv: Uint8Array, data: Uint8Array) {\n  return crypto.subtle.encrypt(\n    {\n      name: 'AES-GCM',\n      iv,\n    },\n    key,\n    data\n  )\n}\n\nexport function decrypt(key: CryptoKey, iv: Uint8Array, data: Uint8Array) {\n  return crypto.subtle.decrypt(\n    {\n      name: 'AES-GCM',\n      iv,\n    },\n    key,\n    data\n  )\n}\n\n// This is a global singleton that is used to encode/decode the action bound args from\n// the closure. This can't be using a AsyncLocalStorage as it might happen on the module\n// level. Since the client reference manifest won't be mutated, let's use a global singleton\n// to keep it.\nconst SERVER_ACTION_MANIFESTS_SINGLETON = Symbol.for(\n  'next.server.action-manifests'\n)\n\nexport function setReferenceManifestsSingleton({\n  page,\n  clientReferenceManifest,\n  serverActionsManifest,\n  serverModuleMap,\n}: {\n  page: string\n  clientReferenceManifest: DeepReadonly<ClientReferenceManifest>\n  serverActionsManifest: DeepReadonly<ActionManifest>\n  serverModuleMap: {\n    [id: string]: {\n      id: string\n      chunks: string[]\n      name: string\n    }\n  }\n}) {\n  // @ts-expect-error\n  const clientReferenceManifestsPerPage = globalThis[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ]?.clientReferenceManifestsPerPage as\n    | undefined\n    | DeepReadonly<Record<string, ClientReferenceManifest>>\n\n  // @ts-expect-error\n  globalThis[SERVER_ACTION_MANIFESTS_SINGLETON] = {\n    clientReferenceManifestsPerPage: {\n      ...clientReferenceManifestsPerPage,\n      [normalizeAppPath(page)]: clientReferenceManifest,\n    },\n    serverActionsManifest,\n    serverModuleMap,\n  }\n}\n\nexport function getServerModuleMap() {\n  const serverActionsManifestSingleton = (globalThis as any)[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ] as {\n    serverModuleMap: {\n      [id: string]: {\n        id: string\n        chunks: string[]\n        name: string\n      }\n    }\n  }\n\n  if (!serverActionsManifestSingleton) {\n    throw new InvariantError('Missing manifest for Server Actions.')\n  }\n\n  return serverActionsManifestSingleton.serverModuleMap\n}\n\nexport function getClientReferenceManifestForRsc(): DeepReadonly<ClientReferenceManifestForRsc> {\n  const serverActionsManifestSingleton = (globalThis as any)[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ] as {\n    clientReferenceManifestsPerPage: DeepReadonly<\n      Record<string, ClientReferenceManifest>\n    >\n  }\n\n  if (!serverActionsManifestSingleton) {\n    throw new InvariantError('Missing manifest for Server Actions.')\n  }\n\n  const { clientReferenceManifestsPerPage } = serverActionsManifestSingleton\n  const workStore = workAsyncStorage.getStore()\n\n  if (!workStore) {\n    // If there's no work store defined, we can assume that a client reference\n    // manifest is needed during module evaluation, e.g. to create a server\n    // action using a higher-order function. This might also use client\n    // components which need to be serialized by Flight, and therefore client\n    // references need to be resolvable. To make this work, we're returning a\n    // merged manifest across all pages. This is fine as long as the module IDs\n    // are not page specific, which they are not for Webpack. TODO: Fix this in\n    // Turbopack.\n    return mergeClientReferenceManifests(clientReferenceManifestsPerPage)\n  }\n\n  const clientReferenceManifest =\n    clientReferenceManifestsPerPage[workStore.route]\n\n  if (!clientReferenceManifest) {\n    throw new InvariantError(\n      `Missing Client Reference Manifest for ${workStore.route}.`\n    )\n  }\n\n  return clientReferenceManifest\n}\n\nexport async function getActionEncryptionKey() {\n  if (__next_loaded_action_key) {\n    return __next_loaded_action_key\n  }\n\n  const serverActionsManifestSingleton = (globalThis as any)[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ] as {\n    serverActionsManifest: DeepReadonly<ActionManifest>\n  }\n\n  if (!serverActionsManifestSingleton) {\n    throw new InvariantError('Missing manifest for Server Actions.')\n  }\n\n  const rawKey =\n    process.env.NEXT_SERVER_ACTIONS_ENCRYPTION_KEY ||\n    serverActionsManifestSingleton.serverActionsManifest.encryptionKey\n\n  if (rawKey === undefined) {\n    throw new InvariantError('Missing encryption key for Server Actions')\n  }\n\n  __next_loaded_action_key = await crypto.subtle.importKey(\n    'raw',\n    stringToUint8Array(atob(rawKey)),\n    'AES-GCM',\n    true,\n    ['encrypt', 'decrypt']\n  )\n\n  return __next_loaded_action_key\n}\n\nfunction mergeClientReferenceManifests(\n  clientReferenceManifestsPerPage: DeepReadonly<\n    Record<string, ClientReferenceManifest>\n  >\n): ClientReferenceManifestForRsc {\n  const clientReferenceManifests = Object.values(\n    clientReferenceManifestsPerPage as Record<string, ClientReferenceManifest>\n  )\n\n  const mergedClientReferenceManifest: ClientReferenceManifestForRsc = {\n    clientModules: {},\n    edgeRscModuleMapping: {},\n    rscModuleMapping: {},\n  }\n\n  for (const clientReferenceManifest of clientReferenceManifests) {\n    mergedClientReferenceManifest.clientModules = {\n      ...mergedClientReferenceManifest.clientModules,\n      ...clientReferenceManifest.clientModules,\n    }\n    mergedClientReferenceManifest.edgeRscModuleMapping = {\n      ...mergedClientReferenceManifest.edgeRscModuleMapping,\n      ...clientReferenceManifest.edgeRscModuleMapping,\n    }\n    mergedClientReferenceManifest.rscModuleMapping = {\n      ...mergedClientReferenceManifest.rscModuleMapping,\n      ...clientReferenceManifest.rscModuleMapping,\n    }\n  }\n\n  return mergedClientReferenceManifest\n}\n","export async function getEdgeInstrumentationModule() {\n    const instrumentation = '_ENTRIES' in globalThis && _ENTRIES.middleware_instrumentation && await _ENTRIES.middleware_instrumentation;\n    return instrumentation;\n}\nlet instrumentationModulePromise = null;\nasync function registerInstrumentation() {\n    // Ensure registerInstrumentation is not called in production build\n    if (process.env.NEXT_PHASE === 'phase-production-build') return;\n    if (!instrumentationModulePromise) {\n        instrumentationModulePromise = getEdgeInstrumentationModule();\n    }\n    const instrumentation = await instrumentationModulePromise;\n    if (instrumentation == null ? void 0 : instrumentation.register) {\n        try {\n            await instrumentation.register();\n        } catch (err) {\n            err.message = `An error occurred while loading instrumentation hook: ${err.message}`;\n            throw err;\n        }\n    }\n}\nexport async function edgeInstrumentationOnRequestError(...args) {\n    const instrumentation = await getEdgeInstrumentationModule();\n    try {\n        var _instrumentation_onRequestError;\n        await (instrumentation == null ? void 0 : (_instrumentation_onRequestError = instrumentation.onRequestError) == null ? void 0 : _instrumentation_onRequestError.call(instrumentation, ...args));\n    } catch (err) {\n        // Log the soft error and continue, since the original error has already been thrown\n        console.error('Error in instrumentation.onRequestError:', err);\n    }\n}\nlet registerInstrumentationPromise = null;\nexport function ensureInstrumentationRegistered() {\n    if (!registerInstrumentationPromise) {\n        registerInstrumentationPromise = registerInstrumentation();\n    }\n    return registerInstrumentationPromise;\n}\nfunction getUnsupportedModuleErrorMessage(module) {\n    // warning: if you change these messages, you must adjust how react-dev-overlay's middleware detects modules not found\n    return `The edge runtime does not support Node.js '${module}' module.\nLearn More: https://nextjs.org/docs/messages/node-module-in-edge-runtime`;\n}\nfunction __import_unsupported(moduleName) {\n    const proxy = new Proxy(function() {}, {\n        get (_obj, prop) {\n            if (prop === 'then') {\n                return {};\n            }\n            throw Object.defineProperty(new Error(getUnsupportedModuleErrorMessage(moduleName)), \"__NEXT_ERROR_CODE\", {\n                value: \"E394\",\n                enumerable: false,\n                configurable: true\n            });\n        },\n        construct () {\n            throw Object.defineProperty(new Error(getUnsupportedModuleErrorMessage(moduleName)), \"__NEXT_ERROR_CODE\", {\n                value: \"E394\",\n                enumerable: false,\n                configurable: true\n            });\n        },\n        apply (_target, _this, args) {\n            if (typeof args[0] === 'function') {\n                return args[0](proxy);\n            }\n            throw Object.defineProperty(new Error(getUnsupportedModuleErrorMessage(moduleName)), \"__NEXT_ERROR_CODE\", {\n                value: \"E394\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n    });\n    return new Proxy({}, {\n        get: ()=>proxy\n    });\n}\nfunction enhanceGlobals() {\n    if (process.env.NEXT_RUNTIME !== 'edge') {\n        return;\n    }\n    // The condition is true when the \"process\" module is provided\n    if (process !== global.process) {\n        // prefer local process but global.process has correct \"env\"\n        process.env = global.process.env;\n        global.process = process;\n    }\n    // to allow building code that import but does not use node.js modules,\n    // webpack will expect this function to exist in global scope\n    Object.defineProperty(globalThis, '__import_unsupported', {\n        value: __import_unsupported,\n        enumerable: false,\n        configurable: false\n    });\n    // Eagerly fire instrumentation hook to make the startup faster.\n    void ensureInstrumentationRegistered();\n}\nenhanceGlobals();\n\n//# sourceMappingURL=globals.js.map","import { PageSignatureError } from '../error';\nconst responseSymbol = Symbol('response');\nconst passThroughSymbol = Symbol('passThrough');\nconst waitUntilSymbol = Symbol('waitUntil');\nclass FetchEvent {\n    constructor(_request, waitUntil){\n        this[passThroughSymbol] = false;\n        this[waitUntilSymbol] = waitUntil ? {\n            kind: 'external',\n            function: waitUntil\n        } : {\n            kind: 'internal',\n            promises: []\n        };\n    }\n    // TODO: is this dead code? NextFetchEvent never lets this get called\n    respondWith(response) {\n        if (!this[responseSymbol]) {\n            this[responseSymbol] = Promise.resolve(response);\n        }\n    }\n    // TODO: is this dead code? passThroughSymbol is unused\n    passThroughOnException() {\n        this[passThroughSymbol] = true;\n    }\n    waitUntil(promise) {\n        if (this[waitUntilSymbol].kind === 'external') {\n            // if we received an external waitUntil, we delegate to it\n            // TODO(after): this will make us not go through `getServerError(error, 'edge-server')` in `sandbox`\n            const waitUntil = this[waitUntilSymbol].function;\n            return waitUntil(promise);\n        } else {\n            // if we didn't receive an external waitUntil, we make it work on our own\n            // (and expect the caller to do something with the promises)\n            this[waitUntilSymbol].promises.push(promise);\n        }\n    }\n}\nexport function getWaitUntilPromiseFromEvent(event) {\n    return event[waitUntilSymbol].kind === 'internal' ? Promise.all(event[waitUntilSymbol].promises).then(()=>{}) : undefined;\n}\nexport class NextFetchEvent extends FetchEvent {\n    constructor(params){\n        var _params_context;\n        super(params.request, (_params_context = params.context) == null ? void 0 : _params_context.waitUntil);\n        this.sourcePage = params.page;\n    }\n    /**\n   * @deprecated The `request` is now the first parameter and the API is now async.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ get request() {\n        throw Object.defineProperty(new PageSignatureError({\n            page: this.sourcePage\n        }), \"__NEXT_ERROR_CODE\", {\n            value: \"E394\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    /**\n   * @deprecated Using `respondWith` is no longer needed.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ respondWith() {\n        throw Object.defineProperty(new PageSignatureError({\n            page: this.sourcePage\n        }), \"__NEXT_ERROR_CODE\", {\n            value: \"E394\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n}\n\n//# sourceMappingURL=fetch-event.js.map","import { stringifyCookie } from '../../web/spec-extension/cookies';\nimport { NextURL } from '../next-url';\nimport { toNodeOutgoingHttpHeaders, validateURL } from '../utils';\nimport { ReflectAdapter } from './adapters/reflect';\nimport { ResponseCookies } from './cookies';\nconst INTERNALS = Symbol('internal response');\nconst REDIRECTS = new Set([\n    301,\n    302,\n    303,\n    307,\n    308\n]);\nfunction handleMiddlewareField(init, headers) {\n    var _init_request;\n    if (init == null ? void 0 : (_init_request = init.request) == null ? void 0 : _init_request.headers) {\n        if (!(init.request.headers instanceof Headers)) {\n            throw Object.defineProperty(new Error('request.headers must be an instance of Headers'), \"__NEXT_ERROR_CODE\", {\n                value: \"E119\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        const keys = [];\n        for (const [key, value] of init.request.headers){\n            headers.set('x-middleware-request-' + key, value);\n            keys.push(key);\n        }\n        headers.set('x-middleware-override-headers', keys.join(','));\n    }\n}\n/**\n * This class extends the [Web `Response` API](https://developer.mozilla.org/docs/Web/API/Response) with additional convenience methods.\n *\n * Read more: [Next.js Docs: `NextResponse`](https://nextjs.org/docs/app/api-reference/functions/next-response)\n */ export class NextResponse extends Response {\n    constructor(body, init = {}){\n        super(body, init);\n        const headers = this.headers;\n        const cookies = new ResponseCookies(headers);\n        const cookiesProxy = new Proxy(cookies, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case 'delete':\n                    case 'set':\n                        {\n                            return (...args)=>{\n                                const result = Reflect.apply(target[prop], target, args);\n                                const newHeaders = new Headers(headers);\n                                if (result instanceof ResponseCookies) {\n                                    headers.set('x-middleware-set-cookie', result.getAll().map((cookie)=>stringifyCookie(cookie)).join(','));\n                                }\n                                handleMiddlewareField(init, newHeaders);\n                                return result;\n                            };\n                        }\n                    default:\n                        return ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n        this[INTERNALS] = {\n            cookies: cookiesProxy,\n            url: init.url ? new NextURL(init.url, {\n                headers: toNodeOutgoingHttpHeaders(headers),\n                nextConfig: init.nextConfig\n            }) : undefined\n        };\n    }\n    [Symbol.for('edge-runtime.inspect.custom')]() {\n        return {\n            cookies: this.cookies,\n            url: this.url,\n            // rest of props come from Response\n            body: this.body,\n            bodyUsed: this.bodyUsed,\n            headers: Object.fromEntries(this.headers),\n            ok: this.ok,\n            redirected: this.redirected,\n            status: this.status,\n            statusText: this.statusText,\n            type: this.type\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    static json(body, init) {\n        const response = Response.json(body, init);\n        return new NextResponse(response.body, response);\n    }\n    static redirect(url, init) {\n        const status = typeof init === 'number' ? init : (init == null ? void 0 : init.status) ?? 307;\n        if (!REDIRECTS.has(status)) {\n            throw Object.defineProperty(new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code'), \"__NEXT_ERROR_CODE\", {\n                value: \"E529\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        const initObj = typeof init === 'object' ? init : {};\n        const headers = new Headers(initObj == null ? void 0 : initObj.headers);\n        headers.set('Location', validateURL(url));\n        return new NextResponse(null, {\n            ...initObj,\n            headers,\n            status\n        });\n    }\n    static rewrite(destination, init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set('x-middleware-rewrite', validateURL(destination));\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n    static next(init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set('x-middleware-next', '1');\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n}\n\n//# sourceMappingURL=response.js.map","/**\n * The result of parsing a URL relative to a base URL.\n */\nexport type RelativeURL = {\n  /**\n   * The relative URL. Either a URL including the origin or a relative URL.\n   */\n  url: string\n\n  /**\n   * Whether the URL is relative to the base URL.\n   */\n  isRelative: boolean\n}\n\nexport function parseRelativeURL(\n  url: string | URL,\n  base: string | URL\n): RelativeURL {\n  const baseURL = typeof base === 'string' ? new URL(base) : base\n  const relative = new URL(url, base)\n\n  // The URL is relative if the origin is the same as the base URL.\n  const isRelative = relative.origin === baseURL.origin\n\n  return {\n    url: isRelative\n      ? relative.toString().slice(baseURL.origin.length)\n      : relative.toString(),\n    isRelative,\n  }\n}\n\n/**\n * Given a URL as a string and a base URL it will make the URL relative\n * if the parsed protocol and host is the same as the one in the base\n * URL. Otherwise it returns the same URL string.\n */\nexport function getRelativeURL(url: string | URL, base: string | URL): string {\n  const relative = parseRelativeURL(url, base)\n  return relative.url\n}\n","import { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers';\nconst INTERNAL_QUERY_NAMES = [\n    NEXT_RSC_UNION_QUERY\n];\nexport function stripInternalQueries(query) {\n    for (const name of INTERNAL_QUERY_NAMES){\n        delete query[name];\n    }\n}\nexport function stripInternalSearchParams(url) {\n    const isStringUrl = typeof url === 'string';\n    const instance = isStringUrl ? new URL(url) : url;\n    instance.searchParams.delete(NEXT_RSC_UNION_QUERY);\n    return isStringUrl ? instance.toString() : instance;\n}\n\n//# sourceMappingURL=internal-utils.js.map","/** Monitor when the consumer finishes reading the response body.\nthat's as close as we can get to `res.on('close')` using web APIs.\n*/ export function trackBodyConsumed(body, onEnd) {\n    if (typeof body === 'string') {\n        const generator = async function* generate() {\n            const encoder = new TextEncoder();\n            yield encoder.encode(body);\n            onEnd();\n        };\n        // @ts-expect-error BodyInit typings doesn't seem to include AsyncIterables even though it's supported in practice\n        return generator();\n    } else {\n        return trackStreamConsumed(body, onEnd);\n    }\n}\nexport function trackStreamConsumed(stream, onEnd) {\n    // NOTE: This function must handle `stream` being aborted or cancelled,\n    // so it can't just be this:\n    //\n    //   return stream.pipeThrough(new TransformStream({ flush() { onEnd() } }))\n    //\n    // because that doesn't handle cancellations.\n    // (and cancellation handling via `Transformer.cancel` is only available in node >20)\n    const dest = new TransformStream();\n    const runOnEnd = ()=>onEnd();\n    stream.pipeTo(dest.writable).then(runOnEnd, runOnEnd);\n    return dest.readable;\n}\nexport class CloseController {\n    onClose(callback) {\n        if (this.isClosed) {\n            throw Object.defineProperty(new Error('Cannot subscribe to a closed CloseController'), \"__NEXT_ERROR_CODE\", {\n                value: \"E365\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        this.target.addEventListener('close', callback);\n        this.listeners++;\n    }\n    dispatchClose() {\n        if (this.isClosed) {\n            throw Object.defineProperty(new Error('Cannot close a CloseController multiple times'), \"__NEXT_ERROR_CODE\", {\n                value: \"E229\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (this.listeners > 0) {\n            this.target.dispatchEvent(new Event('close'));\n        }\n        this.isClosed = true;\n    }\n    constructor(){\n        this.target = new EventTarget();\n        this.listeners = 0;\n        this.isClosed = false;\n    }\n}\n\n//# sourceMappingURL=web-on-close.js.map","/**\n * In edge runtime, these props directly accessed from environment variables.\n *   - local: env vars will be injected through edge-runtime as runtime env vars\n *   - deployment: env vars will be replaced by edge build pipeline\n */ export function getEdgePreviewProps() {\n    return {\n        previewModeId: process.env.NODE_ENV === 'production' ? process.env.__NEXT_PREVIEW_MODE_ID : 'development-id',\n        previewModeSigningKey: process.env.__NEXT_PREVIEW_MODE_SIGNING_KEY || '',\n        previewModeEncryptionKey: process.env.__NEXT_PREVIEW_MODE_ENCRYPTION_KEY || ''\n    };\n}\n\n//# sourceMappingURL=get-edge-preview-props.js.map","import { createAsyncLocalStorage } from '../app-render/async-local-storage';\nexport function getBuiltinRequestContext() {\n    const _globalThis = globalThis;\n    const ctx = _globalThis[NEXT_REQUEST_CONTEXT_SYMBOL];\n    return ctx == null ? void 0 : ctx.get();\n}\nconst NEXT_REQUEST_CONTEXT_SYMBOL = Symbol.for('@next/request-context');\n/** \"@next/request-context\" has a different signature from AsyncLocalStorage,\n * matching [AsyncContext.Variable](https://github.com/tc39/proposal-async-context).\n * We don't need a full AsyncContext adapter here, just having `.get()` is enough\n */ export function createLocalRequestContext() {\n    const storage = createAsyncLocalStorage();\n    return {\n        get: ()=>storage.getStore(),\n        run: (value, callback)=>storage.run(value, callback)\n    };\n}\n\n//# sourceMappingURL=builtin-request-context.js.map","import { PageSignatureError } from './error';\nimport { fromNodeOutgoingHttpHeaders, normalizeNextQueryParam } from './utils';\nimport { NextFetchEvent, getWaitUntilPromiseFromEvent } from './spec-extension/fetch-event';\nimport { NextRequest } from './spec-extension/request';\nimport { NextResponse } from './spec-extension/response';\nimport { parseRelativeURL, getRelativeURL } from '../../shared/lib/router/utils/relativize-url';\nimport { NextURL } from './next-url';\nimport { stripInternalSearchParams } from '../internal-utils';\nimport { normalizeRscURL } from '../../shared/lib/router/utils/app-paths';\nimport { FLIGHT_HEADERS, NEXT_REWRITTEN_PATH_HEADER, NEXT_REWRITTEN_QUERY_HEADER, RSC_HEADER } from '../../client/components/app-router-headers';\nimport { ensureInstrumentationRegistered } from './globals';\nimport { createRequestStoreForAPI } from '../async-storage/request-store';\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external';\nimport { createWorkStore } from '../async-storage/work-store';\nimport { workAsyncStorage } from '../app-render/work-async-storage.external';\nimport { NEXT_ROUTER_PREFETCH_HEADER } from '../../client/components/app-router-headers';\nimport { getTracer } from '../lib/trace/tracer';\nimport { MiddlewareSpan } from '../lib/trace/constants';\nimport { CloseController } from './web-on-close';\nimport { getEdgePreviewProps } from './get-edge-preview-props';\nimport { getBuiltinRequestContext } from '../after/builtin-request-context';\nimport { getImplicitTags } from '../lib/implicit-tags';\nexport class NextRequestHint extends NextRequest {\n    constructor(params){\n        super(params.input, params.init);\n        this.sourcePage = params.page;\n    }\n    get request() {\n        throw Object.defineProperty(new PageSignatureError({\n            page: this.sourcePage\n        }), \"__NEXT_ERROR_CODE\", {\n            value: \"E394\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    respondWith() {\n        throw Object.defineProperty(new PageSignatureError({\n            page: this.sourcePage\n        }), \"__NEXT_ERROR_CODE\", {\n            value: \"E394\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    waitUntil() {\n        throw Object.defineProperty(new PageSignatureError({\n            page: this.sourcePage\n        }), \"__NEXT_ERROR_CODE\", {\n            value: \"E394\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n}\nconst headersGetter = {\n    keys: (headers)=>Array.from(headers.keys()),\n    get: (headers, key)=>headers.get(key) ?? undefined\n};\nlet propagator = (request, fn)=>{\n    const tracer = getTracer();\n    return tracer.withPropagatedContext(request.headers, fn, headersGetter);\n};\nlet testApisIntercepted = false;\nfunction ensureTestApisIntercepted() {\n    if (!testApisIntercepted) {\n        testApisIntercepted = true;\n        if (process.env.NEXT_PRIVATE_TEST_PROXY === 'true') {\n            const { interceptTestApis, wrapRequestHandler } = require('next/dist/experimental/testmode/server-edge');\n            interceptTestApis();\n            propagator = wrapRequestHandler(propagator);\n        }\n    }\n}\nexport async function adapter(params) {\n    var _getBuiltinRequestContext;\n    ensureTestApisIntercepted();\n    await ensureInstrumentationRegistered();\n    // TODO-APP: use explicit marker for this\n    const isEdgeRendering = typeof globalThis.__BUILD_MANIFEST !== 'undefined';\n    params.request.url = normalizeRscURL(params.request.url);\n    const requestURL = new NextURL(params.request.url, {\n        headers: params.request.headers,\n        nextConfig: params.request.nextConfig\n    });\n    // Iterator uses an index to keep track of the current iteration. Because of deleting and appending below we can't just use the iterator.\n    // Instead we use the keys before iteration.\n    const keys = [\n        ...requestURL.searchParams.keys()\n    ];\n    for (const key of keys){\n        const value = requestURL.searchParams.getAll(key);\n        const normalizedKey = normalizeNextQueryParam(key);\n        if (normalizedKey) {\n            requestURL.searchParams.delete(normalizedKey);\n            for (const val of value){\n                requestURL.searchParams.append(normalizedKey, val);\n            }\n            requestURL.searchParams.delete(key);\n        }\n    }\n    // Ensure users only see page requests, never data requests.\n    const buildId = requestURL.buildId;\n    requestURL.buildId = '';\n    const requestHeaders = fromNodeOutgoingHttpHeaders(params.request.headers);\n    const isNextDataRequest = requestHeaders.has('x-nextjs-data');\n    const isRSCRequest = requestHeaders.get(RSC_HEADER) === '1';\n    if (isNextDataRequest && requestURL.pathname === '/index') {\n        requestURL.pathname = '/';\n    }\n    const flightHeaders = new Map();\n    // Headers should only be stripped for middleware\n    if (!isEdgeRendering) {\n        for (const header of FLIGHT_HEADERS){\n            const key = header.toLowerCase();\n            const value = requestHeaders.get(key);\n            if (value !== null) {\n                flightHeaders.set(key, value);\n                requestHeaders.delete(key);\n            }\n        }\n    }\n    const normalizeURL = process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE ? new URL(params.request.url) : requestURL;\n    const request = new NextRequestHint({\n        page: params.page,\n        // Strip internal query parameters off the request.\n        input: stripInternalSearchParams(normalizeURL).toString(),\n        init: {\n            body: params.request.body,\n            headers: requestHeaders,\n            method: params.request.method,\n            nextConfig: params.request.nextConfig,\n            signal: params.request.signal\n        }\n    });\n    /**\n   * This allows to identify the request as a data request. The user doesn't\n   * need to know about this property neither use it. We add it for testing\n   * purposes.\n   */ if (isNextDataRequest) {\n        Object.defineProperty(request, '__isData', {\n            enumerable: false,\n            value: true\n        });\n    }\n    if (!globalThis.__incrementalCache && params.IncrementalCache) {\n        ;\n        globalThis.__incrementalCache = new params.IncrementalCache({\n            appDir: true,\n            fetchCache: true,\n            minimalMode: process.env.NODE_ENV !== 'development',\n            fetchCacheKeyPrefix: process.env.__NEXT_FETCH_CACHE_KEY_PREFIX,\n            dev: process.env.NODE_ENV === 'development',\n            requestHeaders: params.request.headers,\n            requestProtocol: 'https',\n            getPrerenderManifest: ()=>{\n                return {\n                    version: -1,\n                    routes: {},\n                    dynamicRoutes: {},\n                    notFoundRoutes: [],\n                    preview: getEdgePreviewProps()\n                };\n            }\n        });\n    }\n    // if we're in an edge runtime sandbox, we should use the waitUntil\n    // that we receive from the enclosing NextServer\n    const outerWaitUntil = params.request.waitUntil ?? ((_getBuiltinRequestContext = getBuiltinRequestContext()) == null ? void 0 : _getBuiltinRequestContext.waitUntil);\n    const event = new NextFetchEvent({\n        request,\n        page: params.page,\n        context: outerWaitUntil ? {\n            waitUntil: outerWaitUntil\n        } : undefined\n    });\n    let response;\n    let cookiesFromResponse;\n    response = await propagator(request, ()=>{\n        // we only care to make async storage available for middleware\n        const isMiddleware = params.page === '/middleware' || params.page === '/src/middleware';\n        if (isMiddleware) {\n            // if we're in an edge function, we only get a subset of `nextConfig` (no `experimental`),\n            // so we have to inject it via DefinePlugin.\n            // in `next start` this will be passed normally (see `NextNodeServer.runMiddleware`).\n            const waitUntil = event.waitUntil.bind(event);\n            const closeController = new CloseController();\n            return getTracer().trace(MiddlewareSpan.execute, {\n                spanName: `middleware ${request.method} ${request.nextUrl.pathname}`,\n                attributes: {\n                    'http.target': request.nextUrl.pathname,\n                    'http.method': request.method\n                }\n            }, async ()=>{\n                try {\n                    var _params_request_nextConfig_experimental, _params_request_nextConfig, _params_request_nextConfig_experimental1, _params_request_nextConfig1;\n                    const onUpdateCookies = (cookies)=>{\n                        cookiesFromResponse = cookies;\n                    };\n                    const previewProps = getEdgePreviewProps();\n                    const page = '/' // Fake Work\n                    ;\n                    const fallbackRouteParams = null;\n                    const implicitTags = await getImplicitTags(page, request.nextUrl, fallbackRouteParams);\n                    const requestStore = createRequestStoreForAPI(request, request.nextUrl, implicitTags, onUpdateCookies, previewProps);\n                    const workStore = createWorkStore({\n                        page,\n                        fallbackRouteParams,\n                        renderOpts: {\n                            cacheLifeProfiles: (_params_request_nextConfig = params.request.nextConfig) == null ? void 0 : (_params_request_nextConfig_experimental = _params_request_nextConfig.experimental) == null ? void 0 : _params_request_nextConfig_experimental.cacheLife,\n                            experimental: {\n                                isRoutePPREnabled: false,\n                                dynamicIO: false,\n                                authInterrupts: !!((_params_request_nextConfig1 = params.request.nextConfig) == null ? void 0 : (_params_request_nextConfig_experimental1 = _params_request_nextConfig1.experimental) == null ? void 0 : _params_request_nextConfig_experimental1.authInterrupts)\n                            },\n                            supportsDynamicResponse: true,\n                            waitUntil,\n                            onClose: closeController.onClose.bind(closeController),\n                            onAfterTaskError: undefined\n                        },\n                        requestEndedState: {\n                            ended: false\n                        },\n                        isPrefetchRequest: request.headers.has(NEXT_ROUTER_PREFETCH_HEADER),\n                        buildId: buildId ?? '',\n                        previouslyRevalidatedTags: []\n                    });\n                    return await workAsyncStorage.run(workStore, ()=>workUnitAsyncStorage.run(requestStore, params.handler, request, event));\n                } finally{\n                    // middleware cannot stream, so we can consider the response closed\n                    // as soon as the handler returns.\n                    // we can delay running it until a bit later --\n                    // if it's needed, we'll have a `waitUntil` lock anyway.\n                    setTimeout(()=>{\n                        closeController.dispatchClose();\n                    }, 0);\n                }\n            });\n        }\n        return params.handler(request, event);\n    });\n    // check if response is a Response object\n    if (response && !(response instanceof Response)) {\n        throw Object.defineProperty(new TypeError('Expected an instance of Response to be returned'), \"__NEXT_ERROR_CODE\", {\n            value: \"E567\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    if (response && cookiesFromResponse) {\n        response.headers.set('set-cookie', cookiesFromResponse);\n    }\n    /**\n   * For rewrites we must always include the locale in the final pathname\n   * so we re-create the NextURL forcing it to include it when the it is\n   * an internal rewrite. Also we make sure the outgoing rewrite URL is\n   * a data URL if the request was a data request.\n   */ const rewrite = response == null ? void 0 : response.headers.get('x-middleware-rewrite');\n    if (response && rewrite && (isRSCRequest || !isEdgeRendering)) {\n        const destination = new NextURL(rewrite, {\n            forceLocale: true,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE && !isEdgeRendering) {\n            if (destination.host === request.nextUrl.host) {\n                destination.buildId = buildId || destination.buildId;\n                response.headers.set('x-middleware-rewrite', String(destination));\n            }\n        }\n        /**\n     * When the request is a data request we must show if there was a rewrite\n     * with an internal header so the client knows which component to load\n     * from the data request.\n     */ const { url: relativeDestination, isRelative } = parseRelativeURL(destination.toString(), requestURL.toString());\n        if (!isEdgeRendering && isNextDataRequest && // if the rewrite is external and external rewrite\n        // resolving config is enabled don't add this header\n        // so the upstream app can set it instead\n        !(process.env.__NEXT_EXTERNAL_MIDDLEWARE_REWRITE_RESOLVE && relativeDestination.match(/http(s)?:\\/\\//))) {\n            response.headers.set('x-nextjs-rewrite', relativeDestination);\n        }\n        // If this is an RSC request, and the pathname or search has changed, and\n        // this isn't an external rewrite, we need to set the rewritten pathname and\n        // query headers.\n        if (isRSCRequest && isRelative) {\n            if (requestURL.pathname !== destination.pathname) {\n                response.headers.set(NEXT_REWRITTEN_PATH_HEADER, destination.pathname);\n            }\n            if (requestURL.search !== destination.search) {\n                response.headers.set(NEXT_REWRITTEN_QUERY_HEADER, // remove the leading ? from the search string\n                destination.search.slice(1));\n            }\n        }\n    }\n    /**\n   * For redirects we will not include the locale in case when it is the\n   * default and we must also make sure the outgoing URL is a data one if\n   * the incoming request was a data request.\n   */ const redirect = response == null ? void 0 : response.headers.get('Location');\n    if (response && redirect && !isEdgeRendering) {\n        const redirectURL = new NextURL(redirect, {\n            forceLocale: false,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        /**\n     * Responses created from redirects have immutable headers so we have\n     * to clone the response to be able to modify it.\n     */ response = new Response(response.body, response);\n        if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE) {\n            if (redirectURL.host === requestURL.host) {\n                redirectURL.buildId = buildId || redirectURL.buildId;\n                response.headers.set('Location', redirectURL.toString());\n            }\n        }\n        /**\n     * When the request is a data request we can't use the location header as\n     * it may end up with CORS error. Instead we map to an internal header so\n     * the client knows the destination.\n     */ if (isNextDataRequest) {\n            response.headers.delete('Location');\n            response.headers.set('x-nextjs-redirect', getRelativeURL(redirectURL.toString(), requestURL.toString()));\n        }\n    }\n    const finalResponse = response ? response : NextResponse.next();\n    // Flight headers are not overridable / removable so they are applied at the end.\n    const middlewareOverrideHeaders = finalResponse.headers.get('x-middleware-override-headers');\n    const overwrittenHeaders = [];\n    if (middlewareOverrideHeaders) {\n        for (const [key, value] of flightHeaders){\n            finalResponse.headers.set(`x-middleware-request-${key}`, value);\n            overwrittenHeaders.push(key);\n        }\n        if (overwrittenHeaders.length > 0) {\n            finalResponse.headers.set('x-middleware-override-headers', middlewareOverrideHeaders + ',' + overwrittenHeaders.join(','));\n        }\n    }\n    return {\n        response: finalResponse,\n        waitUntil: getWaitUntilPromiseFromEvent(event) ?? Promise.resolve(),\n        fetchMetrics: request.fetchMetrics\n    };\n}\n\n//# sourceMappingURL=adapter.js.map","import path from '../shared/lib/isomorphic/path';\n/**\n * MultiFileWriter is a utility for writing multiple files in parallel that\n * guarantees that all files will be written after their containing directory\n * is created, and that the directory will only be created once.\n */ export class MultiFileWriter {\n    constructor(/**\n     * The file system methods to use.\n     */ fs){\n        this.fs = fs;\n        this.tasks = [];\n    }\n    /**\n   * Finds or creates a task for a directory.\n   *\n   * @param directory - The directory to find or create a task for.\n   * @returns The task for the directory.\n   */ findOrCreateTask(directory) {\n        // See if this directory already has a task to create it.\n        for (const task of this.tasks){\n            if (task[0] === directory) {\n                return task;\n            }\n        }\n        const promise = this.fs.mkdir(directory);\n        // Attach a catch handler so that it doesn't throw an unhandled promise\n        // rejection warning.\n        promise.catch(()=>{});\n        // Otherwise, create a new task for this directory.\n        const task = [\n            directory,\n            promise,\n            []\n        ];\n        this.tasks.push(task);\n        return task;\n    }\n    /**\n   * Appends a file to the writer to be written after its containing directory\n   * is created. The file writer should be awaited after all the files have been\n   * appended. Any async operation that occurs between appending and awaiting\n   * may cause an unhandled promise rejection warning and potentially crash the\n   * process.\n   *\n   * @param filePath - The path to the file to write.\n   * @param data - The data to write to the file.\n   */ append(filePath, data) {\n        // Find or create a task for the directory that contains the file.\n        const task = this.findOrCreateTask(path.dirname(filePath));\n        const promise = task[1].then(()=>this.fs.writeFile(filePath, data));\n        // Attach a catch handler so that it doesn't throw an unhandled promise\n        // rejection warning.\n        promise.catch(()=>{});\n        // Add the file write to the task AFTER the directory promise has resolved.\n        task[2].push(promise);\n    }\n    /**\n   * Returns a promise that resolves when all the files have been written.\n   */ wait() {\n        return Promise.all(this.tasks.flatMap((task)=>task[2]));\n    }\n}\n\n//# sourceMappingURL=multi-file-writer.js.map","import { CachedRouteKind, IncrementalCacheKind } from '../../response-cache';\nimport { LRUCache } from '../lru-cache';\nimport path from '../../../shared/lib/isomorphic/path';\nimport { NEXT_CACHE_TAGS_HEADER, NEXT_DATA_SUFFIX, NEXT_META_SUFFIX, RSC_PREFETCH_SUFFIX, RSC_SEGMENT_SUFFIX, RSC_SEGMENTS_DIR_SUFFIX, RSC_SUFFIX } from '../../../lib/constants';\nimport { isStale, tagsManifest } from './tags-manifest.external';\nimport { MultiFileWriter } from '../../../lib/multi-file-writer';\nlet memoryCache;\nexport default class FileSystemCache {\n    constructor(ctx){\n        this.fs = ctx.fs;\n        this.flushToDisk = ctx.flushToDisk;\n        this.serverDistDir = ctx.serverDistDir;\n        this.revalidatedTags = ctx.revalidatedTags;\n        this.debug = !!process.env.NEXT_PRIVATE_DEBUG_CACHE;\n        if (ctx.maxMemoryCacheSize) {\n            if (!memoryCache) {\n                if (this.debug) {\n                    console.log('using memory store for fetch cache');\n                }\n                memoryCache = new LRUCache(ctx.maxMemoryCacheSize, function length({ value }) {\n                    var _JSON_stringify;\n                    if (!value) {\n                        return 25;\n                    } else if (value.kind === CachedRouteKind.REDIRECT) {\n                        return JSON.stringify(value.props).length;\n                    } else if (value.kind === CachedRouteKind.IMAGE) {\n                        throw Object.defineProperty(new Error('invariant image should not be incremental-cache'), \"__NEXT_ERROR_CODE\", {\n                            value: \"E501\",\n                            enumerable: false,\n                            configurable: true\n                        });\n                    } else if (value.kind === CachedRouteKind.FETCH) {\n                        return JSON.stringify(value.data || '').length;\n                    } else if (value.kind === CachedRouteKind.APP_ROUTE) {\n                        return value.body.length;\n                    }\n                    // rough estimate of size of cache value\n                    return value.html.length + (((_JSON_stringify = JSON.stringify(value.kind === CachedRouteKind.APP_PAGE ? value.rscData : value.pageData)) == null ? void 0 : _JSON_stringify.length) || 0);\n                });\n            }\n        } else if (this.debug) {\n            console.log('not using memory store for fetch cache');\n        }\n    }\n    resetRequestCache() {}\n    async revalidateTag(...args) {\n        let [tags] = args;\n        tags = typeof tags === 'string' ? [\n            tags\n        ] : tags;\n        if (this.debug) {\n            console.log('revalidateTag', tags);\n        }\n        if (tags.length === 0) {\n            return;\n        }\n        for (const tag of tags){\n            if (!tagsManifest.has(tag)) {\n                tagsManifest.set(tag, Date.now());\n            }\n        }\n    }\n    async get(...args) {\n        var _data_value, _data_value1, _data_value2;\n        const [key, ctx] = args;\n        const { kind } = ctx;\n        let data = memoryCache == null ? void 0 : memoryCache.get(key);\n        if (this.debug) {\n            if (kind === IncrementalCacheKind.FETCH) {\n                console.log('get', key, ctx.tags, kind, !!data);\n            } else {\n                console.log('get', key, kind, !!data);\n            }\n        }\n        // let's check the disk for seed data\n        if (!data && process.env.NEXT_RUNTIME !== 'edge') {\n            if (kind === IncrementalCacheKind.APP_ROUTE) {\n                try {\n                    const filePath = this.getFilePath(`${key}.body`, IncrementalCacheKind.APP_ROUTE);\n                    const fileData = await this.fs.readFile(filePath);\n                    const { mtime } = await this.fs.stat(filePath);\n                    const meta = JSON.parse(await this.fs.readFile(filePath.replace(/\\.body$/, NEXT_META_SUFFIX), 'utf8'));\n                    const cacheEntry = {\n                        lastModified: mtime.getTime(),\n                        value: {\n                            kind: CachedRouteKind.APP_ROUTE,\n                            body: fileData,\n                            headers: meta.headers,\n                            status: meta.status\n                        }\n                    };\n                    return cacheEntry;\n                } catch  {\n                    return null;\n                }\n            }\n            try {\n                const filePath = this.getFilePath(kind === IncrementalCacheKind.FETCH ? key : `${key}.html`, kind);\n                const fileData = await this.fs.readFile(filePath, 'utf8');\n                const { mtime } = await this.fs.stat(filePath);\n                if (kind === IncrementalCacheKind.FETCH) {\n                    var _data_value3;\n                    const { tags, fetchIdx, fetchUrl } = ctx;\n                    if (!this.flushToDisk) return null;\n                    const lastModified = mtime.getTime();\n                    const parsedData = JSON.parse(fileData);\n                    data = {\n                        lastModified,\n                        value: parsedData\n                    };\n                    if (((_data_value3 = data.value) == null ? void 0 : _data_value3.kind) === CachedRouteKind.FETCH) {\n                        var _data_value4;\n                        const storedTags = (_data_value4 = data.value) == null ? void 0 : _data_value4.tags;\n                        // update stored tags if a new one is being added\n                        // TODO: remove this when we can send the tags\n                        // via header on GET same as SET\n                        if (!(tags == null ? void 0 : tags.every((tag)=>storedTags == null ? void 0 : storedTags.includes(tag)))) {\n                            if (this.debug) {\n                                console.log('tags vs storedTags mismatch', tags, storedTags);\n                            }\n                            await this.set(key, data.value, {\n                                fetchCache: true,\n                                tags,\n                                fetchIdx,\n                                fetchUrl\n                            });\n                        }\n                    }\n                } else if (kind === IncrementalCacheKind.APP_PAGE) {\n                    // We try to load the metadata file, but if it fails, we don't\n                    // error. We also don't load it if this is a fallback.\n                    let meta;\n                    try {\n                        meta = JSON.parse(await this.fs.readFile(filePath.replace(/\\.html$/, NEXT_META_SUFFIX), 'utf8'));\n                    } catch  {}\n                    let maybeSegmentData;\n                    if (meta == null ? void 0 : meta.segmentPaths) {\n                        // Collect all the segment data for this page.\n                        // TODO: To optimize file system reads, we should consider creating\n                        // separate cache entries for each segment, rather than storing them\n                        // all on the page's entry. Though the behavior is\n                        // identical regardless.\n                        const segmentData = new Map();\n                        maybeSegmentData = segmentData;\n                        const segmentsDir = key + RSC_SEGMENTS_DIR_SUFFIX;\n                        await Promise.all(meta.segmentPaths.map(async (segmentPath)=>{\n                            const segmentDataFilePath = this.getFilePath(segmentsDir + segmentPath + RSC_SEGMENT_SUFFIX, IncrementalCacheKind.APP_PAGE);\n                            try {\n                                segmentData.set(segmentPath, await this.fs.readFile(segmentDataFilePath));\n                            } catch  {\n                            // This shouldn't happen, but if for some reason we fail to\n                            // load a segment from the filesystem, treat it the same as if\n                            // the segment is dynamic and does not have a prefetch.\n                            }\n                        }));\n                    }\n                    let rscData;\n                    if (!ctx.isFallback) {\n                        rscData = await this.fs.readFile(this.getFilePath(`${key}${ctx.isRoutePPREnabled ? RSC_PREFETCH_SUFFIX : RSC_SUFFIX}`, IncrementalCacheKind.APP_PAGE));\n                    }\n                    data = {\n                        lastModified: mtime.getTime(),\n                        value: {\n                            kind: CachedRouteKind.APP_PAGE,\n                            html: fileData,\n                            rscData,\n                            postponed: meta == null ? void 0 : meta.postponed,\n                            headers: meta == null ? void 0 : meta.headers,\n                            status: meta == null ? void 0 : meta.status,\n                            segmentData: maybeSegmentData\n                        }\n                    };\n                } else if (kind === IncrementalCacheKind.PAGES) {\n                    let meta;\n                    let pageData = {};\n                    if (!ctx.isFallback) {\n                        pageData = JSON.parse(await this.fs.readFile(this.getFilePath(`${key}${NEXT_DATA_SUFFIX}`, IncrementalCacheKind.PAGES), 'utf8'));\n                    }\n                    data = {\n                        lastModified: mtime.getTime(),\n                        value: {\n                            kind: CachedRouteKind.PAGES,\n                            html: fileData,\n                            pageData,\n                            headers: meta == null ? void 0 : meta.headers,\n                            status: meta == null ? void 0 : meta.status\n                        }\n                    };\n                } else {\n                    throw Object.defineProperty(new Error(`Invariant: Unexpected route kind ${kind} in file system cache.`), \"__NEXT_ERROR_CODE\", {\n                        value: \"E445\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                if (data) {\n                    memoryCache == null ? void 0 : memoryCache.set(key, data);\n                }\n            } catch  {\n                return null;\n            }\n        }\n        if ((data == null ? void 0 : (_data_value = data.value) == null ? void 0 : _data_value.kind) === CachedRouteKind.APP_PAGE || (data == null ? void 0 : (_data_value1 = data.value) == null ? void 0 : _data_value1.kind) === CachedRouteKind.PAGES) {\n            var _data_value_headers;\n            let cacheTags;\n            const tagsHeader = (_data_value_headers = data.value.headers) == null ? void 0 : _data_value_headers[NEXT_CACHE_TAGS_HEADER];\n            if (typeof tagsHeader === 'string') {\n                cacheTags = tagsHeader.split(',');\n            }\n            if (cacheTags == null ? void 0 : cacheTags.length) {\n                // we trigger a blocking validation if an ISR page\n                // had a tag revalidated, if we want to be a background\n                // revalidation instead we return data.lastModified = -1\n                if (isStale(cacheTags, (data == null ? void 0 : data.lastModified) || Date.now())) {\n                    return null;\n                }\n            }\n        } else if ((data == null ? void 0 : (_data_value2 = data.value) == null ? void 0 : _data_value2.kind) === CachedRouteKind.FETCH) {\n            const combinedTags = ctx.kind === IncrementalCacheKind.FETCH ? [\n                ...ctx.tags || [],\n                ...ctx.softTags || []\n            ] : [];\n            const wasRevalidated = combinedTags.some((tag)=>{\n                if (this.revalidatedTags.includes(tag)) {\n                    return true;\n                }\n                return isStale([\n                    tag\n                ], (data == null ? void 0 : data.lastModified) || Date.now());\n            });\n            // When revalidate tag is called we don't return\n            // stale data so it's updated right away\n            if (wasRevalidated) {\n                data = undefined;\n            }\n        }\n        return data ?? null;\n    }\n    async set(key, data, ctx) {\n        memoryCache == null ? void 0 : memoryCache.set(key, {\n            value: data,\n            lastModified: Date.now()\n        });\n        if (this.debug) {\n            console.log('set', key);\n        }\n        if (!this.flushToDisk || !data) return;\n        // Create a new writer that will prepare to write all the files to disk\n        // after their containing directory is created.\n        const writer = new MultiFileWriter(this.fs);\n        if (data.kind === CachedRouteKind.APP_ROUTE) {\n            const filePath = this.getFilePath(`${key}.body`, IncrementalCacheKind.APP_ROUTE);\n            writer.append(filePath, data.body);\n            const meta = {\n                headers: data.headers,\n                status: data.status,\n                postponed: undefined,\n                segmentPaths: undefined\n            };\n            writer.append(filePath.replace(/\\.body$/, NEXT_META_SUFFIX), JSON.stringify(meta, null, 2));\n        } else if (data.kind === CachedRouteKind.PAGES || data.kind === CachedRouteKind.APP_PAGE) {\n            const isAppPath = data.kind === CachedRouteKind.APP_PAGE;\n            const htmlPath = this.getFilePath(`${key}.html`, isAppPath ? IncrementalCacheKind.APP_PAGE : IncrementalCacheKind.PAGES);\n            writer.append(htmlPath, data.html);\n            // Fallbacks don't generate a data file.\n            if (!ctx.fetchCache && !ctx.isFallback) {\n                writer.append(this.getFilePath(`${key}${isAppPath ? ctx.isRoutePPREnabled ? RSC_PREFETCH_SUFFIX : RSC_SUFFIX : NEXT_DATA_SUFFIX}`, isAppPath ? IncrementalCacheKind.APP_PAGE : IncrementalCacheKind.PAGES), isAppPath ? data.rscData : JSON.stringify(data.pageData));\n            }\n            if ((data == null ? void 0 : data.kind) === CachedRouteKind.APP_PAGE) {\n                let segmentPaths;\n                if (data.segmentData) {\n                    segmentPaths = [];\n                    const segmentsDir = htmlPath.replace(/\\.html$/, RSC_SEGMENTS_DIR_SUFFIX);\n                    for (const [segmentPath, buffer] of data.segmentData){\n                        segmentPaths.push(segmentPath);\n                        const segmentDataFilePath = segmentsDir + segmentPath + RSC_SEGMENT_SUFFIX;\n                        writer.append(segmentDataFilePath, buffer);\n                    }\n                }\n                const meta = {\n                    headers: data.headers,\n                    status: data.status,\n                    postponed: data.postponed,\n                    segmentPaths\n                };\n                writer.append(htmlPath.replace(/\\.html$/, NEXT_META_SUFFIX), JSON.stringify(meta));\n            }\n        } else if (data.kind === CachedRouteKind.FETCH) {\n            const filePath = this.getFilePath(key, IncrementalCacheKind.FETCH);\n            writer.append(filePath, JSON.stringify({\n                ...data,\n                tags: ctx.fetchCache ? ctx.tags : []\n            }));\n        }\n        // Wait for all FS operations to complete.\n        await writer.wait();\n    }\n    getFilePath(pathname, kind) {\n        switch(kind){\n            case IncrementalCacheKind.FETCH:\n                // we store in .next/cache/fetch-cache so it can be persisted\n                // across deploys\n                return path.join(this.serverDistDir, '..', 'cache', 'fetch-cache', pathname);\n            case IncrementalCacheKind.PAGES:\n                return path.join(this.serverDistDir, 'pages', pathname);\n            case IncrementalCacheKind.IMAGE:\n            case IncrementalCacheKind.APP_PAGE:\n            case IncrementalCacheKind.APP_ROUTE:\n                return path.join(this.serverDistDir, 'app', pathname);\n            default:\n                throw Object.defineProperty(new Error(`Unexpected file path kind: ${kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E479\",\n                    enumerable: false,\n                    configurable: true\n                });\n        }\n    }\n}\n\n//# sourceMappingURL=file-system-cache.js.map","import { normalizeAppPath } from './app-paths'\n\n// order matters here, the first match will be used\nexport const INTERCEPTION_ROUTE_MARKERS = [\n  '(..)(..)',\n  '(.)',\n  '(..)',\n  '(...)',\n] as const\n\nexport function isInterceptionRouteAppPath(path: string): boolean {\n  // TODO-APP: add more serious validation\n  return (\n    path\n      .split('/')\n      .find((segment) =>\n        INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m))\n      ) !== undefined\n  )\n}\n\nexport function extractInterceptionRouteInformation(path: string) {\n  let interceptingRoute: string | undefined,\n    marker: (typeof INTERCEPTION_ROUTE_MARKERS)[number] | undefined,\n    interceptedRoute: string | undefined\n\n  for (const segment of path.split('/')) {\n    marker = INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m))\n    if (marker) {\n      ;[interceptingRoute, interceptedRoute] = path.split(marker, 2)\n      break\n    }\n  }\n\n  if (!interceptingRoute || !marker || !interceptedRoute) {\n    throw new Error(\n      `Invalid interception route: ${path}. Must be in the format /<intercepting route>/(..|...|..)(..)/<intercepted route>`\n    )\n  }\n\n  interceptingRoute = normalizeAppPath(interceptingRoute) // normalize the path, e.g. /(blog)/feed -> /feed\n\n  switch (marker) {\n    case '(.)':\n      // (.) indicates that we should match with sibling routes, so we just need to append the intercepted route to the intercepting route\n      if (interceptingRoute === '/') {\n        interceptedRoute = `/${interceptedRoute}`\n      } else {\n        interceptedRoute = interceptingRoute + '/' + interceptedRoute\n      }\n      break\n    case '(..)':\n      // (..) indicates that we should match at one level up, so we need to remove the last segment of the intercepting route\n      if (interceptingRoute === '/') {\n        throw new Error(\n          `Invalid interception route: ${path}. Cannot use (..) marker at the root level, use (.) instead.`\n        )\n      }\n      interceptedRoute = interceptingRoute\n        .split('/')\n        .slice(0, -1)\n        .concat(interceptedRoute)\n        .join('/')\n      break\n    case '(...)':\n      // (...) will match the route segment in the root directory, so we need to use the root directory to prepend the intercepted route\n      interceptedRoute = '/' + interceptedRoute\n      break\n    case '(..)(..)':\n      // (..)(..) indicates that we should match at two levels up, so we need to remove the last two segments of the intercepting route\n\n      const splitInterceptingRoute = interceptingRoute.split('/')\n      if (splitInterceptingRoute.length <= 2) {\n        throw new Error(\n          `Invalid interception route: ${path}. Cannot use (..)(..) marker at the root level or one level up.`\n        )\n      }\n\n      interceptedRoute = splitInterceptingRoute\n        .slice(0, -2)\n        .concat(interceptedRoute)\n        .join('/')\n      break\n    default:\n      throw new Error('Invariant: unexpected marker')\n  }\n\n  return { interceptingRoute, interceptedRoute }\n}\n","import {\n  extractInterceptionRouteInformation,\n  isInterceptionRouteAppPath,\n} from './interception-routes'\n\n// Identify /.*[param].*/ in route string\nconst TEST_ROUTE = /\\/[^/]*\\[[^/]+\\][^/]*(?=\\/|$)/\n\n// Identify /[param]/ in route string\nconst TEST_STRICT_ROUTE = /\\/\\[[^/]+\\](?=\\/|$)/\n\n/**\n * Check if a route is dynamic.\n *\n * @param route - The route to check.\n * @param strict - Whether to use strict mode which prohibits segments with prefixes/suffixes (default: true).\n * @returns Whether the route is dynamic.\n */\nexport function isDynamicRoute(route: string, strict: boolean = true): boolean {\n  if (isInterceptionRouteAppPath(route)) {\n    route = extractInterceptionRouteInformation(route).interceptedRoute\n  }\n\n  if (strict) {\n    return TEST_STRICT_ROUTE.test(route)\n  }\n\n  return TEST_ROUTE.test(route)\n}\n","import type { HtmlProps } from './html-context.shared-runtime'\nimport type { ComponentType, JSX } from 'react'\nimport type { DomainLocale } from '../../server/config'\nimport type { Env } from '@next/env'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { NextRouter } from './router/router'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { PreviewData } from '../../types'\nimport type { COMPILER_NAMES } from './constants'\nimport type fs from 'fs'\n\nexport type NextComponentType<\n  Context extends BaseContext = NextPageContext,\n  InitialProps = {},\n  Props = {},\n> = ComponentType<Props> & {\n  /**\n   * Used for initial page load data population. Data returned from `getInitialProps` is serialized when server rendered.\n   * Make sure to return plain `Object` without using `Date`, `Map`, `Set`.\n   * @param context Context of `page`\n   */\n  getInitialProps?(context: Context): InitialProps | Promise<InitialProps>\n}\n\nexport type DocumentType = NextComponentType<\n  DocumentContext,\n  DocumentInitialProps,\n  DocumentProps\n>\n\nexport type AppType<P = {}> = NextComponentType<\n  AppContextType,\n  P,\n  AppPropsType<any, P>\n>\n\nexport type AppTreeType = ComponentType<\n  AppInitialProps & { [name: string]: any }\n>\n\n/**\n * Web vitals provided to _app.reportWebVitals by Core Web Vitals plugin developed by Google Chrome team.\n * https://nextjs.org/blog/next-9-4#integrated-web-vitals-reporting\n */\nexport const WEB_VITALS = ['CLS', 'FCP', 'FID', 'INP', 'LCP', 'TTFB'] as const\nexport type NextWebVitalsMetric = {\n  id: string\n  startTime: number\n  value: number\n  attribution?: { [key: string]: unknown }\n} & (\n  | {\n      label: 'web-vital'\n      name: (typeof WEB_VITALS)[number]\n    }\n  | {\n      label: 'custom'\n      name:\n        | 'Next.js-hydration'\n        | 'Next.js-route-change-to-render'\n        | 'Next.js-render'\n    }\n)\n\nexport type Enhancer<C> = (Component: C) => C\n\nexport type ComponentsEnhancer =\n  | {\n      enhanceApp?: Enhancer<AppType>\n      enhanceComponent?: Enhancer<NextComponentType>\n    }\n  | Enhancer<NextComponentType>\n\nexport type RenderPageResult = {\n  html: string\n  head?: Array<JSX.Element | null>\n}\n\nexport type RenderPage = (\n  options?: ComponentsEnhancer\n) => DocumentInitialProps | Promise<DocumentInitialProps>\n\nexport type BaseContext = {\n  res?: ServerResponse\n  [k: string]: any\n}\n\nexport type NEXT_DATA = {\n  props: Record<string, any>\n  page: string\n  query: ParsedUrlQuery\n  buildId: string\n  assetPrefix?: string\n  runtimeConfig?: { [key: string]: any }\n  nextExport?: boolean\n  autoExport?: boolean\n  isFallback?: boolean\n  isExperimentalCompile?: boolean\n  dynamicIds?: (string | number)[]\n  err?: Error & {\n    statusCode?: number\n    source?: typeof COMPILER_NAMES.server | typeof COMPILER_NAMES.edgeServer\n  }\n  gsp?: boolean\n  gssp?: boolean\n  customServer?: boolean\n  gip?: boolean\n  appGip?: boolean\n  locale?: string\n  locales?: readonly string[]\n  defaultLocale?: string\n  domainLocales?: readonly DomainLocale[]\n  scriptLoader?: any[]\n  isPreview?: boolean\n  notFoundSrcPage?: string\n}\n\n/**\n * `Next` context\n */\nexport interface NextPageContext {\n  /**\n   * Error object if encountered during rendering\n   */\n  err?: (Error & { statusCode?: number }) | null\n  /**\n   * `HTTP` request object.\n   */\n  req?: IncomingMessage\n  /**\n   * `HTTP` response object.\n   */\n  res?: ServerResponse\n  /**\n   * Path section of `URL`.\n   */\n  pathname: string\n  /**\n   * Query string section of `URL` parsed as an object.\n   */\n  query: ParsedUrlQuery\n  /**\n   * `String` of the actual path including query.\n   */\n  asPath?: string\n  /**\n   * The currently active locale\n   */\n  locale?: string\n  /**\n   * All configured locales\n   */\n  locales?: readonly string[]\n  /**\n   * The configured default locale\n   */\n  defaultLocale?: string\n  /**\n   * `Component` the tree of the App to use if needing to render separately\n   */\n  AppTree: AppTreeType\n}\n\nexport type AppContextType<Router extends NextRouter = NextRouter> = {\n  Component: NextComponentType<NextPageContext>\n  AppTree: AppTreeType\n  ctx: NextPageContext\n  router: Router\n}\n\nexport type AppInitialProps<PageProps = any> = {\n  pageProps: PageProps\n}\n\nexport type AppPropsType<\n  Router extends NextRouter = NextRouter,\n  PageProps = {},\n> = AppInitialProps<PageProps> & {\n  Component: NextComponentType<NextPageContext, any, any>\n  router: Router\n  __N_SSG?: boolean\n  __N_SSP?: boolean\n}\n\nexport type DocumentContext = NextPageContext & {\n  renderPage: RenderPage\n  defaultGetInitialProps(\n    ctx: DocumentContext,\n    options?: { nonce?: string }\n  ): Promise<DocumentInitialProps>\n}\n\nexport type DocumentInitialProps = RenderPageResult & {\n  styles?: React.ReactElement[] | Iterable<React.ReactNode> | JSX.Element\n}\n\nexport type DocumentProps = DocumentInitialProps & HtmlProps\n\n/**\n * Next `API` route request\n */\nexport interface NextApiRequest extends IncomingMessage {\n  /**\n   * Object of `query` values from url\n   */\n  query: Partial<{\n    [key: string]: string | string[]\n  }>\n  /**\n   * Object of `cookies` from header\n   */\n  cookies: Partial<{\n    [key: string]: string\n  }>\n\n  body: any\n\n  env: Env\n\n  draftMode?: boolean\n\n  preview?: boolean\n  /**\n   * Preview data set on the request, if any\n   * */\n  previewData?: PreviewData\n}\n\n/**\n * Send body of response\n */\ntype Send<T> = (body: T) => void\n\n/**\n * Next `API` route response\n */\nexport type NextApiResponse<Data = any> = ServerResponse & {\n  /**\n   * Send data `any` data in response\n   */\n  send: Send<Data>\n  /**\n   * Send data `json` data in response\n   */\n  json: Send<Data>\n  status: (statusCode: number) => NextApiResponse<Data>\n  redirect(url: string): NextApiResponse<Data>\n  redirect(status: number, url: string): NextApiResponse<Data>\n\n  /**\n   * Set draft mode\n   */\n  setDraftMode: (options: { enable: boolean }) => NextApiResponse<Data>\n\n  /**\n   * Set preview data for Next.js' prerender mode\n   */\n  setPreviewData: (\n    data: object | string,\n    options?: {\n      /**\n       * Specifies the number (in seconds) for the preview session to last for.\n       * The given number will be converted to an integer by rounding down.\n       * By default, no maximum age is set and the preview session finishes\n       * when the client shuts down (browser is closed).\n       */\n      maxAge?: number\n      /**\n       * Specifies the path for the preview session to work under. By default,\n       * the path is considered the \"default path\", i.e., any pages under \"/\".\n       */\n      path?: string\n    }\n  ) => NextApiResponse<Data>\n\n  /**\n   * Clear preview data for Next.js' prerender mode\n   */\n  clearPreviewData: (options?: { path?: string }) => NextApiResponse<Data>\n\n  /**\n   * Revalidate a specific page and regenerate it using On-Demand Incremental\n   * Static Regeneration.\n   * The path should be an actual path, not a rewritten path. E.g. for\n   * \"/blog/[slug]\" this should be \"/blog/post-1\".\n   * @link https://nextjs.org/docs/app/building-your-application/data-fetching/incremental-static-regeneration#on-demand-revalidation-with-revalidatepath\n   */\n  revalidate: (\n    urlPath: string,\n    opts?: {\n      unstable_onlyGenerated?: boolean\n    }\n  ) => Promise<void>\n}\n\n/**\n * Next `API` route handler\n */\nexport type NextApiHandler<T = any> = (\n  req: NextApiRequest,\n  res: NextApiResponse<T>\n) => unknown | Promise<unknown>\n\n/**\n * Utils\n */\nexport function execOnce<T extends (...args: any[]) => ReturnType<T>>(\n  fn: T\n): T {\n  let used = false\n  let result: ReturnType<T>\n\n  return ((...args: any[]) => {\n    if (!used) {\n      used = true\n      result = fn(...args)\n    }\n    return result\n  }) as T\n}\n\n// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/\nexport const isAbsoluteUrl = (url: string) => ABSOLUTE_URL_REGEX.test(url)\n\nexport function getLocationOrigin() {\n  const { protocol, hostname, port } = window.location\n  return `${protocol}//${hostname}${port ? ':' + port : ''}`\n}\n\nexport function getURL() {\n  const { href } = window.location\n  const origin = getLocationOrigin()\n  return href.substring(origin.length)\n}\n\nexport function getDisplayName<P>(Component: ComponentType<P>) {\n  return typeof Component === 'string'\n    ? Component\n    : Component.displayName || Component.name || 'Unknown'\n}\n\nexport function isResSent(res: ServerResponse) {\n  return res.finished || res.headersSent\n}\n\nexport function normalizeRepeatedSlashes(url: string) {\n  const urlParts = url.split('?')\n  const urlNoQuery = urlParts[0]\n\n  return (\n    urlNoQuery\n      // first we replace any non-encoded backslashes with forward\n      // then normalize repeated forward slashes\n      .replace(/\\\\/g, '/')\n      .replace(/\\/\\/+/g, '/') +\n    (urlParts[1] ? `?${urlParts.slice(1).join('?')}` : '')\n  )\n}\n\nexport async function loadGetInitialProps<\n  C extends BaseContext,\n  IP = {},\n  P = {},\n>(App: NextComponentType<C, IP, P>, ctx: C): Promise<IP> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (App.prototype?.getInitialProps) {\n      const message = `\"${getDisplayName(\n        App\n      )}.getInitialProps()\" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.`\n      throw new Error(message)\n    }\n  }\n  // when called from _app `ctx` is nested in `ctx`\n  const res = ctx.res || (ctx.ctx && ctx.ctx.res)\n\n  if (!App.getInitialProps) {\n    if (ctx.ctx && ctx.Component) {\n      // @ts-ignore pageProps default\n      return {\n        pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx),\n      }\n    }\n    return {} as IP\n  }\n\n  const props = await App.getInitialProps(ctx)\n\n  if (res && isResSent(res)) {\n    return props\n  }\n\n  if (!props) {\n    const message = `\"${getDisplayName(\n      App\n    )}.getInitialProps()\" should resolve to an object. But found \"${props}\" instead.`\n    throw new Error(message)\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.keys(props).length === 0 && !ctx.ctx) {\n      console.warn(\n        `${getDisplayName(\n          App\n        )} returned an empty object from \\`getInitialProps\\`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps`\n      )\n    }\n  }\n\n  return props\n}\n\nexport const SP = typeof performance !== 'undefined'\nexport const ST =\n  SP &&\n  (['mark', 'measure', 'getEntriesByName'] as const).every(\n    (method) => typeof performance[method] === 'function'\n  )\n\nexport class DecodeError extends Error {}\nexport class NormalizeError extends Error {}\nexport class PageNotFoundError extends Error {\n  code: string\n\n  constructor(page: string) {\n    super()\n    this.code = 'ENOENT'\n    this.name = 'PageNotFoundError'\n    this.message = `Cannot find module for page: ${page}`\n  }\n}\n\nexport class MissingStaticPage extends Error {\n  constructor(page: string, message: string) {\n    super()\n    this.message = `Failed to load static file for page: ${page} ${message}`\n  }\n}\n\nexport class MiddlewareNotFoundError extends Error {\n  code: string\n  constructor() {\n    super()\n    this.code = 'ENOENT'\n    this.message = `Cannot find the middleware module`\n  }\n}\n\nexport interface CacheFs {\n  existsSync: typeof fs.existsSync\n  readFile: typeof fs.promises.readFile\n  readFileSync: typeof fs.readFileSync\n  writeFile(f: string, d: any): Promise<void>\n  mkdir(dir: string): Promise<void | string>\n  stat(f: string): Promise<{ mtime: Date }>\n}\n\nexport function stringifyError(error: Error) {\n  return JSON.stringify({ message: error.message, stack: error.stack })\n}\n","import { ensureLeadingSlash } from './ensure-leading-slash'\nimport { isDynamicRoute } from '../router/utils'\nimport { NormalizeError } from '../utils'\n\n/**\n * Takes a page and transforms it into its file counterpart ensuring that the\n * output is normalized. Note this function is not idempotent because a page\n * `/index` can be referencing `/index/index.js` and `/index/index` could be\n * referencing `/index/index/index.js`. Examples:\n *  - `/` -> `/index`\n *  - `/index/foo` -> `/index/index/foo`\n *  - `/index` -> `/index/index`\n */\nexport function normalizePagePath(page: string): string {\n  const normalized =\n    /^\\/index(\\/|$)/.test(page) && !isDynamicRoute(page)\n      ? `/index${page}`\n      : page === '/'\n        ? '/index'\n        : ensureLeadingSlash(page)\n\n  if (process.env.NEXT_RUNTIME !== 'edge') {\n    const { posix } = require('path')\n    const resolvedPage = posix.normalize(normalized)\n    if (resolvedPage !== normalized) {\n      throw new NormalizeError(\n        `Requested and resolved page mismatch: ${normalized} ${resolvedPage}`\n      )\n    }\n  }\n\n  return normalized\n}\n","/**\n * This transforms a URL pathname into a route. It removes any trailing slashes\n * and the `/index` suffix.\n *\n * @param {string} pathname - The URL path that needs to be optimized.\n * @returns {string} - The route\n *\n * @example\n * // returns '/example'\n * toRoute('/example/index/');\n *\n * @example\n * // returns '/example'\n * toRoute('/example/');\n *\n * @example\n * // returns '/'\n * toRoute('/index/');\n *\n * @example\n * // returns '/'\n * toRoute('/');\n */ export function toRoute(pathname) {\n    return pathname.replace(/(?:\\/index)?\\/?$/, '') || '/';\n}\n\n//# sourceMappingURL=to-route.js.map","/**\n * A shared cache of cache controls for routes. This cache is used so we don't\n * have to modify the prerender manifest when we want to update the cache\n * control for a route.\n */ export class SharedCacheControls {\n    static #_ = /**\n   * The in-memory cache of cache lives for routes. This cache is populated when\n   * the cache is updated with new cache lives.\n   */ this.cacheControls = new Map();\n    constructor(/**\n     * The prerender manifest that contains the initial cache controls for\n     * routes.\n     */ prerenderManifest){\n        this.prerenderManifest = prerenderManifest;\n    }\n    /**\n   * Try to get the cache control value for a route. This will first try to get\n   * the value from the in-memory cache. If the value is not present in the\n   * in-memory cache, it will be sourced from the prerender manifest.\n   *\n   * @param route the route to get the cache control for\n   * @returns the cache control for the route, or undefined if the values\n   *          are not present in the in-memory cache or the prerender manifest\n   */ get(route) {\n        // This is a copy on write cache that is updated when the cache is updated.\n        // If the cache is never written to, then the values will be sourced from\n        // the prerender manifest.\n        let cacheControl = SharedCacheControls.cacheControls.get(route);\n        if (cacheControl) return cacheControl;\n        let prerenderData = this.prerenderManifest.routes[route];\n        if (prerenderData) {\n            const { initialRevalidateSeconds, initialExpireSeconds } = prerenderData;\n            if (typeof initialRevalidateSeconds !== 'undefined') {\n                return {\n                    revalidate: initialRevalidateSeconds,\n                    expire: initialExpireSeconds\n                };\n            }\n        }\n        const dynamicPrerenderData = this.prerenderManifest.dynamicRoutes[route];\n        if (dynamicPrerenderData) {\n            const { fallbackRevalidate, fallbackExpire } = dynamicPrerenderData;\n            if (typeof fallbackRevalidate !== 'undefined') {\n                return {\n                    revalidate: fallbackRevalidate,\n                    expire: fallbackExpire\n                };\n            }\n        }\n        return undefined;\n    }\n    /**\n   * Set the cache control for a route.\n   *\n   * @param route the route to set the cache control for\n   * @param cacheControl the cache control for the route\n   */ set(route, cacheControl) {\n        SharedCacheControls.cacheControls.set(route, cacheControl);\n    }\n    /**\n   * Clear the in-memory cache of cache controls for routes.\n   */ clear() {\n        SharedCacheControls.cacheControls.clear();\n    }\n}\n\n//# sourceMappingURL=shared-cache-controls.js.map","import type { Key } from 'next/dist/compiled/path-to-regexp'\nimport { pathToRegexp } from 'next/dist/compiled/path-to-regexp'\nimport { regexpToFunction } from 'next/dist/compiled/path-to-regexp'\n\ninterface Options {\n  /**\n   * A transformer function that will be applied to the regexp generated\n   * from the provided path and path-to-regexp.\n   */\n  regexModifier?: (regex: string) => string\n  /**\n   * When true the function will remove all unnamed parameters\n   * from the matched parameters.\n   */\n  removeUnnamedParams?: boolean\n  /**\n   * When true the regexp won't allow an optional trailing delimiter\n   * to match.\n   */\n  strict?: boolean\n\n  /**\n   * When true the matcher will be case-sensitive, defaults to false\n   */\n  sensitive?: boolean\n}\n\nexport type PatchMatcher = (\n  pathname: string,\n  params?: Record<string, any>\n) => Record<string, any> | false\n\n/**\n * Generates a path matcher function for a given path and options based on\n * path-to-regexp. By default the match will be case insensitive, non strict\n * and delimited by `/`.\n */\nexport function getPathMatch(path: string, options?: Options): PatchMatcher {\n  const keys: Key[] = []\n  const regexp = pathToRegexp(path, keys, {\n    delimiter: '/',\n    sensitive:\n      typeof options?.sensitive === 'boolean' ? options.sensitive : false,\n    strict: options?.strict,\n  })\n\n  const matcher = regexpToFunction<Record<string, any>>(\n    options?.regexModifier\n      ? new RegExp(options.regexModifier(regexp.source), regexp.flags)\n      : regexp,\n    keys\n  )\n\n  /**\n   * A matcher function that will check if a given pathname matches the path\n   * given in the builder function. When the path does not match it will return\n   * `false` but if it does it will return an object with the matched params\n   * merged with the params provided in the second argument.\n   */\n  return (pathname, params) => {\n    // If no pathname is provided it's not a match.\n    if (typeof pathname !== 'string') return false\n\n    const match = matcher(pathname)\n\n    // If the path did not match `false` will be returned.\n    if (!match) return false\n\n    /**\n     * If unnamed params are not allowed they must be removed from\n     * the matched parameters. path-to-regexp uses \"string\" for named and\n     * \"number\" for unnamed parameters.\n     */\n    if (options?.removeUnnamedParams) {\n      for (const key of keys) {\n        if (typeof key.name === 'number') {\n          delete match.params[key.name]\n        }\n      }\n    }\n\n    return { ...params, ...match.params }\n  }\n}\n","// regexp is based on https://github.com/sindresorhus/escape-string-regexp\nconst reHasRegExp = /[|\\\\{}()[\\]^$+*?.-]/\nconst reReplaceRegExp = /[|\\\\{}()[\\]^$+*?.-]/g\n\nexport function escapeStringRegexp(str: string) {\n  // see also: https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/escapeRegExp.js#L23\n  if (reHasRegExp.test(str)) {\n    return str.replace(reReplaceRegExp, '\\\\$&')\n  }\n  return str\n}\n","import {\n  NEXT_INTERCEPTION_MARKER_PREFIX,\n  NEXT_QUERY_PARAM_PREFIX,\n} from '../../../../lib/constants'\nimport { INTERCEPTION_ROUTE_MARKERS } from './interception-routes'\nimport { escapeStringRegexp } from '../../escape-regexp'\nimport { removeTrailingSlash } from './remove-trailing-slash'\n\nexport interface Group {\n  pos: number\n  repeat: boolean\n  optional: boolean\n}\n\nexport interface RouteRegex {\n  groups: { [groupName: string]: Group }\n  re: RegExp\n}\n\ntype GetNamedRouteRegexOptions = {\n  /**\n   * Whether to prefix the route keys with the NEXT_INTERCEPTION_MARKER_PREFIX\n   * or NEXT_QUERY_PARAM_PREFIX. This is only relevant when creating the\n   * routes-manifest during the build.\n   */\n  prefixRouteKeys: boolean\n\n  /**\n   * Whether to include the suffix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `.json` part will be included\n   * in the regex, yielding `/(.*).json` as the regex.\n   */\n  includeSuffix?: boolean\n\n  /**\n   * Whether to include the prefix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `/` part will be included\n   * in the regex, yielding `^/(.*).json$` as the regex.\n   *\n   * Note that interception markers will already be included without the need\n   */\n  includePrefix?: boolean\n\n  /**\n   * Whether to exclude the optional trailing slash from the route regex.\n   */\n  excludeOptionalTrailingSlash?: boolean\n\n  /**\n   * Whether to backtrack duplicate keys. This is only relevant when creating\n   * the routes-manifest during the build.\n   */\n  backreferenceDuplicateKeys?: boolean\n}\n\ntype GetRouteRegexOptions = {\n  /**\n   * Whether to include extra parts in the route regex. This means that when you\n   * have something like `/[...slug].json` the `.json` part will be included\n   * in the regex, yielding `/(.*).json` as the regex.\n   */\n  includeSuffix?: boolean\n\n  /**\n   * Whether to include the prefix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `/` part will be included\n   * in the regex, yielding `^/(.*).json$` as the regex.\n   *\n   * Note that interception markers will already be included without the need\n   * of adding this option.\n   */\n  includePrefix?: boolean\n\n  /**\n   * Whether to exclude the optional trailing slash from the route regex.\n   */\n  excludeOptionalTrailingSlash?: boolean\n}\n\n/**\n * Regular expression pattern used to match route parameters.\n * Matches both single parameters and parameter groups.\n * Examples:\n *   - `[[...slug]]` matches parameter group with key 'slug', repeat: true, optional: true\n *   - `[...slug]` matches parameter group with key 'slug', repeat: true, optional: false\n *   - `[[foo]]` matches parameter with key 'foo', repeat: false, optional: true\n *   - `[bar]` matches parameter with key 'bar', repeat: false, optional: false\n */\nconst PARAMETER_PATTERN = /^([^[]*)\\[((?:\\[[^\\]]*\\])|[^\\]]+)\\](.*)$/\n\n/**\n * Parses a given parameter from a route to a data structure that can be used\n * to generate the parametrized route.\n * Examples:\n *   - `[[...slug]]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[[foo]]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `[bar]` -> `{ key: 'bar', repeat: false, optional: false }`\n *   - `fizz` -> `{ key: 'fizz', repeat: false, optional: false }`\n * @param param - The parameter to parse.\n * @returns The parsed parameter as a data structure.\n */\nexport function parseParameter(param: string) {\n  const match = param.match(PARAMETER_PATTERN)\n\n  if (!match) {\n    return parseMatchedParameter(param)\n  }\n\n  return parseMatchedParameter(match[2])\n}\n\n/**\n * Parses a matched parameter from the PARAMETER_PATTERN regex to a data structure that can be used\n * to generate the parametrized route.\n * Examples:\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `...slug` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[foo]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `bar` -> `{ key: 'bar', repeat: false, optional: false }`\n * @param param - The matched parameter to parse.\n * @returns The parsed parameter as a data structure.\n */\nfunction parseMatchedParameter(param: string) {\n  const optional = param.startsWith('[') && param.endsWith(']')\n  if (optional) {\n    param = param.slice(1, -1)\n  }\n  const repeat = param.startsWith('...')\n  if (repeat) {\n    param = param.slice(3)\n  }\n  return { key: param, repeat, optional }\n}\n\nfunction getParametrizedRoute(\n  route: string,\n  includeSuffix: boolean,\n  includePrefix: boolean\n) {\n  const groups: { [groupName: string]: Group } = {}\n  let groupIndex = 1\n\n  const segments: string[] = []\n  for (const segment of removeTrailingSlash(route).slice(1).split('/')) {\n    const markerMatch = INTERCEPTION_ROUTE_MARKERS.find((m) =>\n      segment.startsWith(m)\n    )\n    const paramMatches = segment.match(PARAMETER_PATTERN) // Check for parameters\n\n    if (markerMatch && paramMatches && paramMatches[2]) {\n      const { key, optional, repeat } = parseMatchedParameter(paramMatches[2])\n      groups[key] = { pos: groupIndex++, repeat, optional }\n      segments.push(`/${escapeStringRegexp(markerMatch)}([^/]+?)`)\n    } else if (paramMatches && paramMatches[2]) {\n      const { key, repeat, optional } = parseMatchedParameter(paramMatches[2])\n      groups[key] = { pos: groupIndex++, repeat, optional }\n\n      if (includePrefix && paramMatches[1]) {\n        segments.push(`/${escapeStringRegexp(paramMatches[1])}`)\n      }\n\n      let s = repeat ? (optional ? '(?:/(.+?))?' : '/(.+?)') : '/([^/]+?)'\n\n      // Remove the leading slash if includePrefix already added it.\n      if (includePrefix && paramMatches[1]) {\n        s = s.substring(1)\n      }\n\n      segments.push(s)\n    } else {\n      segments.push(`/${escapeStringRegexp(segment)}`)\n    }\n\n    // If there's a suffix, add it to the segments if it's enabled.\n    if (includeSuffix && paramMatches && paramMatches[3]) {\n      segments.push(escapeStringRegexp(paramMatches[3]))\n    }\n  }\n\n  return {\n    parameterizedRoute: segments.join(''),\n    groups,\n  }\n}\n\n/**\n * From a normalized route this function generates a regular expression and\n * a corresponding groups object intended to be used to store matching groups\n * from the regular expression.\n */\nexport function getRouteRegex(\n  normalizedRoute: string,\n  {\n    includeSuffix = false,\n    includePrefix = false,\n    excludeOptionalTrailingSlash = false,\n  }: GetRouteRegexOptions = {}\n): RouteRegex {\n  const { parameterizedRoute, groups } = getParametrizedRoute(\n    normalizedRoute,\n    includeSuffix,\n    includePrefix\n  )\n\n  let re = parameterizedRoute\n  if (!excludeOptionalTrailingSlash) {\n    re += '(?:/)?'\n  }\n\n  return {\n    re: new RegExp(`^${re}$`),\n    groups: groups,\n  }\n}\n\n/**\n * Builds a function to generate a minimal routeKey using only a-z and minimal\n * number of characters.\n */\nfunction buildGetSafeRouteKey() {\n  let i = 0\n\n  return () => {\n    let routeKey = ''\n    let j = ++i\n    while (j > 0) {\n      routeKey += String.fromCharCode(97 + ((j - 1) % 26))\n      j = Math.floor((j - 1) / 26)\n    }\n    return routeKey\n  }\n}\n\nfunction getSafeKeyFromSegment({\n  interceptionMarker,\n  getSafeRouteKey,\n  segment,\n  routeKeys,\n  keyPrefix,\n  backreferenceDuplicateKeys,\n}: {\n  interceptionMarker?: string\n  getSafeRouteKey: () => string\n  segment: string\n  routeKeys: Record<string, string>\n  keyPrefix?: string\n  backreferenceDuplicateKeys: boolean\n}) {\n  const { key, optional, repeat } = parseMatchedParameter(segment)\n\n  // replace any non-word characters since they can break\n  // the named regex\n  let cleanedKey = key.replace(/\\W/g, '')\n\n  if (keyPrefix) {\n    cleanedKey = `${keyPrefix}${cleanedKey}`\n  }\n  let invalidKey = false\n\n  // check if the key is still invalid and fallback to using a known\n  // safe key\n  if (cleanedKey.length === 0 || cleanedKey.length > 30) {\n    invalidKey = true\n  }\n  if (!isNaN(parseInt(cleanedKey.slice(0, 1)))) {\n    invalidKey = true\n  }\n\n  if (invalidKey) {\n    cleanedKey = getSafeRouteKey()\n  }\n\n  const duplicateKey = cleanedKey in routeKeys\n\n  if (keyPrefix) {\n    routeKeys[cleanedKey] = `${keyPrefix}${key}`\n  } else {\n    routeKeys[cleanedKey] = key\n  }\n\n  // if the segment has an interception marker, make sure that's part of the regex pattern\n  // this is to ensure that the route with the interception marker doesn't incorrectly match\n  // the non-intercepted route (ie /app/(.)[username] should not match /app/[username])\n  const interceptionPrefix = interceptionMarker\n    ? escapeStringRegexp(interceptionMarker)\n    : ''\n\n  let pattern: string\n  if (duplicateKey && backreferenceDuplicateKeys) {\n    // Use a backreference to the key to ensure that the key is the same value\n    // in each of the placeholders.\n    pattern = `\\\\k<${cleanedKey}>`\n  } else if (repeat) {\n    pattern = `(?<${cleanedKey}>.+?)`\n  } else {\n    pattern = `(?<${cleanedKey}>[^/]+?)`\n  }\n\n  return optional\n    ? `(?:/${interceptionPrefix}${pattern})?`\n    : `/${interceptionPrefix}${pattern}`\n}\n\nfunction getNamedParametrizedRoute(\n  route: string,\n  prefixRouteKeys: boolean,\n  includeSuffix: boolean,\n  includePrefix: boolean,\n  backreferenceDuplicateKeys: boolean\n) {\n  const getSafeRouteKey = buildGetSafeRouteKey()\n  const routeKeys: { [named: string]: string } = {}\n\n  const segments: string[] = []\n  for (const segment of removeTrailingSlash(route).slice(1).split('/')) {\n    const hasInterceptionMarker = INTERCEPTION_ROUTE_MARKERS.some((m) =>\n      segment.startsWith(m)\n    )\n\n    const paramMatches = segment.match(PARAMETER_PATTERN) // Check for parameters\n\n    if (hasInterceptionMarker && paramMatches && paramMatches[2]) {\n      // If there's an interception marker, add it to the segments.\n      segments.push(\n        getSafeKeyFromSegment({\n          getSafeRouteKey,\n          interceptionMarker: paramMatches[1],\n          segment: paramMatches[2],\n          routeKeys,\n          keyPrefix: prefixRouteKeys\n            ? NEXT_INTERCEPTION_MARKER_PREFIX\n            : undefined,\n          backreferenceDuplicateKeys,\n        })\n      )\n    } else if (paramMatches && paramMatches[2]) {\n      // If there's a prefix, add it to the segments if it's enabled.\n      if (includePrefix && paramMatches[1]) {\n        segments.push(`/${escapeStringRegexp(paramMatches[1])}`)\n      }\n\n      let s = getSafeKeyFromSegment({\n        getSafeRouteKey,\n        segment: paramMatches[2],\n        routeKeys,\n        keyPrefix: prefixRouteKeys ? NEXT_QUERY_PARAM_PREFIX : undefined,\n        backreferenceDuplicateKeys,\n      })\n\n      // Remove the leading slash if includePrefix already added it.\n      if (includePrefix && paramMatches[1]) {\n        s = s.substring(1)\n      }\n\n      segments.push(s)\n    } else {\n      segments.push(`/${escapeStringRegexp(segment)}`)\n    }\n\n    // If there's a suffix, add it to the segments if it's enabled.\n    if (includeSuffix && paramMatches && paramMatches[3]) {\n      segments.push(escapeStringRegexp(paramMatches[3]))\n    }\n  }\n\n  return {\n    namedParameterizedRoute: segments.join(''),\n    routeKeys,\n  }\n}\n\n/**\n * This function extends `getRouteRegex` generating also a named regexp where\n * each group is named along with a routeKeys object that indexes the assigned\n * named group with its corresponding key. When the routeKeys need to be\n * prefixed to uniquely identify internally the \"prefixRouteKey\" arg should\n * be \"true\" currently this is only the case when creating the routes-manifest\n * during the build\n */\nexport function getNamedRouteRegex(\n  normalizedRoute: string,\n  options: GetNamedRouteRegexOptions\n) {\n  const result = getNamedParametrizedRoute(\n    normalizedRoute,\n    options.prefixRouteKeys,\n    options.includeSuffix ?? false,\n    options.includePrefix ?? false,\n    options.backreferenceDuplicateKeys ?? false\n  )\n\n  let namedRegex = result.namedParameterizedRoute\n  if (!options.excludeOptionalTrailingSlash) {\n    namedRegex += '(?:/)?'\n  }\n\n  return {\n    ...getRouteRegex(normalizedRoute, options),\n    namedRegex: `^${namedRegex}$`,\n    routeKeys: result.routeKeys,\n  }\n}\n\n/**\n * Generates a named regexp.\n * This is intended to be using for build time only.\n */\nexport function getNamedMiddlewareRegex(\n  normalizedRoute: string,\n  options: {\n    catchAll?: boolean\n  }\n) {\n  const { parameterizedRoute } = getParametrizedRoute(\n    normalizedRoute,\n    false,\n    false\n  )\n  const { catchAll = true } = options\n  if (parameterizedRoute === '/') {\n    let catchAllRegex = catchAll ? '.*' : ''\n    return {\n      namedRegex: `^/${catchAllRegex}$`,\n    }\n  }\n\n  const { namedParameterizedRoute } = getNamedParametrizedRoute(\n    normalizedRoute,\n    false,\n    false,\n    false,\n    false\n  )\n  let catchAllGroupedRegex = catchAll ? '(?:(/.*)?)' : ''\n  return {\n    namedRegex: `^${namedParameterizedRoute}${catchAllGroupedRegex}$`,\n  }\n}\n","import type { Group } from './route-regex'\nimport { DecodeError } from '../../utils'\nimport type { Params } from '../../../../server/request/params'\n\nexport interface RouteMatchFn {\n  (pathname: string): false | Params\n}\n\ntype RouteMatcherOptions = {\n  // We only use the exec method of the RegExp object. This helps us avoid using\n  // type assertions that the passed in properties are of the correct type.\n  re: Pick<RegExp, 'exec'>\n  groups: Record<string, Group>\n}\n\nexport function getRouteMatcher({\n  re,\n  groups,\n}: RouteMatcherOptions): RouteMatchFn {\n  return (pathname: string) => {\n    const routeMatch = re.exec(pathname)\n    if (!routeMatch) return false\n\n    const decode = (param: string) => {\n      try {\n        return decodeURIComponent(param)\n      } catch {\n        throw new DecodeError('failed to decode param')\n      }\n    }\n\n    const params: Params = {}\n    for (const [key, group] of Object.entries(groups)) {\n      const match = routeMatch[group.pos]\n      if (match !== undefined) {\n        if (group.repeat) {\n          params[key] = match.split('/').map((entry) => decode(entry))\n        } else {\n          params[key] = decode(match)\n        }\n      }\n    }\n\n    return params\n  }\n}\n","import type { ParsedUrlQuery } from 'querystring'\n\nexport function searchParamsToUrlQuery(\n  searchParams: URLSearchParams\n): ParsedUrlQuery {\n  const query: ParsedUrlQuery = {}\n  for (const [key, value] of searchParams.entries()) {\n    const existing = query[key]\n    if (typeof existing === 'undefined') {\n      query[key] = value\n    } else if (Array.isArray(existing)) {\n      existing.push(value)\n    } else {\n      query[key] = [existing, value]\n    }\n  }\n  return query\n}\n\nfunction stringifyUrlQueryParam(param: unknown): string {\n  if (typeof param === 'string') {\n    return param\n  }\n\n  if (\n    (typeof param === 'number' && !isNaN(param)) ||\n    typeof param === 'boolean'\n  ) {\n    return String(param)\n  } else {\n    return ''\n  }\n}\n\nexport function urlQueryToSearchParams(query: ParsedUrlQuery): URLSearchParams {\n  const searchParams = new URLSearchParams()\n  for (const [key, value] of Object.entries(query)) {\n    if (Array.isArray(value)) {\n      for (const item of value) {\n        searchParams.append(key, stringifyUrlQueryParam(item))\n      }\n    } else {\n      searchParams.set(key, stringifyUrlQueryParam(value))\n    }\n  }\n  return searchParams\n}\n\nexport function assign(\n  target: URLSearchParams,\n  ...searchParamsList: URLSearchParams[]\n): URLSearchParams {\n  for (const searchParams of searchParamsList) {\n    for (const key of searchParams.keys()) {\n      target.delete(key)\n    }\n\n    for (const [key, value] of searchParams.entries()) {\n      target.append(key, value)\n    }\n  }\n\n  return target\n}\n","import type { ParsedUrlQuery } from 'querystring'\nimport { getLocationOrigin } from '../../utils'\nimport { searchParamsToUrlQuery } from './querystring'\n\nexport interface ParsedRelativeUrl {\n  hash: string\n  href: string\n  pathname: string\n  query: ParsedUrlQuery\n  search: string\n}\n\n/**\n * Parses path-relative urls (e.g. `/hello/world?foo=bar`). If url isn't path-relative\n * (e.g. `./hello`) then at least base must be.\n * Absolute urls are rejected with one exception, in the browser, absolute urls that are on\n * the current origin will be parsed as relative\n */\nexport function parseRelativeUrl(\n  url: string,\n  base?: string,\n  parseQuery?: true\n): ParsedRelativeUrl\nexport function parseRelativeUrl(\n  url: string,\n  base: string | undefined,\n  parseQuery: false\n): Omit<ParsedRelativeUrl, 'query'>\nexport function parseRelativeUrl(\n  url: string,\n  base?: string,\n  parseQuery = true\n): ParsedRelativeUrl | Omit<ParsedRelativeUrl, 'query'> {\n  const globalBase = new URL(\n    typeof window === 'undefined' ? 'http://n' : getLocationOrigin()\n  )\n\n  const resolvedBase = base\n    ? new URL(base, globalBase)\n    : url.startsWith('.')\n      ? new URL(\n          typeof window === 'undefined' ? 'http://n' : window.location.href\n        )\n      : globalBase\n\n  const { pathname, searchParams, search, hash, href, origin } = new URL(\n    url,\n    resolvedBase\n  )\n\n  if (origin !== globalBase.origin) {\n    throw new Error(`invariant: invalid relative URL, router received ${url}`)\n  }\n\n  return {\n    pathname,\n    query: parseQuery ? searchParamsToUrlQuery(searchParams) : undefined,\n    search,\n    hash,\n    href: href.slice(origin.length),\n  }\n}\n","import type { ParsedUrlQuery } from 'querystring'\n\nimport { searchParamsToUrlQuery } from './querystring'\nimport { parseRelativeUrl } from './parse-relative-url'\n\nexport interface ParsedUrl {\n  hash: string\n  hostname?: string | null\n  href: string\n  pathname: string\n  port?: string | null\n  protocol?: string | null\n  query: ParsedUrlQuery\n  search: string\n}\n\nexport function parseUrl(url: string): ParsedUrl {\n  if (url.startsWith('/')) {\n    return parseRelativeUrl(url)\n  }\n\n  const parsedURL = new URL(url)\n  return {\n    hash: parsedURL.hash,\n    hostname: parsedURL.hostname,\n    href: parsedURL.href,\n    pathname: parsedURL.pathname,\n    port: parsedURL.port,\n    protocol: parsedURL.protocol,\n    query: searchParamsToUrlQuery(parsedURL.searchParams),\n    search: parsedURL.search,\n  }\n}\n","/**\n * Parse cookies from the `headers` of request\n * @param req request object\n */ export function getCookieParser(headers) {\n    return function parseCookie() {\n        const { cookie } = headers;\n        if (!cookie) {\n            return {};\n        }\n        const { parse: parseCookieFn } = require('next/dist/compiled/cookie');\n        return parseCookieFn(Array.isArray(cookie) ? cookie.join('; ') : cookie);\n    };\n}\n\n//# sourceMappingURL=get-cookie-parser.js.map","import type { IncomingMessage } from 'http'\nimport type { Key } from 'next/dist/compiled/path-to-regexp'\nimport type { NextParsedUrlQuery } from '../../../../server/request-meta'\nimport type { RouteHas } from '../../../../lib/load-custom-routes'\nimport type { BaseNextRequest } from '../../../../server/base-http'\n\nimport { compile, pathToRegexp } from 'next/dist/compiled/path-to-regexp'\nimport { escapeStringRegexp } from '../../escape-regexp'\nimport { parseUrl } from './parse-url'\nimport {\n  INTERCEPTION_ROUTE_MARKERS,\n  isInterceptionRouteAppPath,\n} from './interception-routes'\nimport { getCookieParser } from '../../../../server/api-utils/get-cookie-parser'\nimport type { Params } from '../../../../server/request/params'\n\n/**\n * Ensure only a-zA-Z are used for param names for proper interpolating\n * with path-to-regexp\n */\nfunction getSafeParamName(paramName: string) {\n  let newParamName = ''\n\n  for (let i = 0; i < paramName.length; i++) {\n    const charCode = paramName.charCodeAt(i)\n\n    if (\n      (charCode > 64 && charCode < 91) || // A-Z\n      (charCode > 96 && charCode < 123) // a-z\n    ) {\n      newParamName += paramName[i]\n    }\n  }\n  return newParamName\n}\n\nfunction escapeSegment(str: string, segmentName: string) {\n  return str.replace(\n    new RegExp(`:${escapeStringRegexp(segmentName)}`, 'g'),\n    `__ESC_COLON_${segmentName}`\n  )\n}\n\nfunction unescapeSegments(str: string) {\n  return str.replace(/__ESC_COLON_/gi, ':')\n}\n\nexport function matchHas(\n  req: BaseNextRequest | IncomingMessage,\n  query: Params,\n  has: RouteHas[] = [],\n  missing: RouteHas[] = []\n): false | Params {\n  const params: Params = {}\n\n  const hasMatch = (hasItem: RouteHas) => {\n    let value\n    let key = hasItem.key\n\n    switch (hasItem.type) {\n      case 'header': {\n        key = key!.toLowerCase()\n        value = req.headers[key] as string\n        break\n      }\n      case 'cookie': {\n        if ('cookies' in req) {\n          value = req.cookies[hasItem.key]\n        } else {\n          const cookies = getCookieParser(req.headers)()\n          value = cookies[hasItem.key]\n        }\n\n        break\n      }\n      case 'query': {\n        value = query[key!]\n        break\n      }\n      case 'host': {\n        const { host } = req?.headers || {}\n        // remove port from host if present\n        const hostname = host?.split(':', 1)[0].toLowerCase()\n        value = hostname\n        break\n      }\n      default: {\n        break\n      }\n    }\n\n    if (!hasItem.value && value) {\n      params[getSafeParamName(key!)] = value\n      return true\n    } else if (value) {\n      const matcher = new RegExp(`^${hasItem.value}$`)\n      const matches = Array.isArray(value)\n        ? value.slice(-1)[0].match(matcher)\n        : value.match(matcher)\n\n      if (matches) {\n        if (Array.isArray(matches)) {\n          if (matches.groups) {\n            Object.keys(matches.groups).forEach((groupKey) => {\n              params[groupKey] = matches.groups![groupKey]\n            })\n          } else if (hasItem.type === 'host' && matches[0]) {\n            params.host = matches[0]\n          }\n        }\n        return true\n      }\n    }\n    return false\n  }\n\n  const allMatch =\n    has.every((item) => hasMatch(item)) &&\n    !missing.some((item) => hasMatch(item))\n\n  if (allMatch) {\n    return params\n  }\n  return false\n}\n\nexport function compileNonPath(value: string, params: Params): string {\n  if (!value.includes(':')) {\n    return value\n  }\n\n  for (const key of Object.keys(params)) {\n    if (value.includes(`:${key}`)) {\n      value = value\n        .replace(\n          new RegExp(`:${key}\\\\*`, 'g'),\n          `:${key}--ESCAPED_PARAM_ASTERISKS`\n        )\n        .replace(\n          new RegExp(`:${key}\\\\?`, 'g'),\n          `:${key}--ESCAPED_PARAM_QUESTION`\n        )\n        .replace(new RegExp(`:${key}\\\\+`, 'g'), `:${key}--ESCAPED_PARAM_PLUS`)\n        .replace(\n          new RegExp(`:${key}(?!\\\\w)`, 'g'),\n          `--ESCAPED_PARAM_COLON${key}`\n        )\n    }\n  }\n  value = value\n    .replace(/(:|\\*|\\?|\\+|\\(|\\)|\\{|\\})/g, '\\\\$1')\n    .replace(/--ESCAPED_PARAM_PLUS/g, '+')\n    .replace(/--ESCAPED_PARAM_COLON/g, ':')\n    .replace(/--ESCAPED_PARAM_QUESTION/g, '?')\n    .replace(/--ESCAPED_PARAM_ASTERISKS/g, '*')\n\n  // the value needs to start with a forward-slash to be compiled\n  // correctly\n  return compile(`/${value}`, { validate: false })(params).slice(1)\n}\n\nexport function parseDestination(args: {\n  destination: string\n  params: Readonly<Params>\n  query: Readonly<NextParsedUrlQuery>\n}) {\n  let escaped = args.destination\n  for (const param of Object.keys({ ...args.params, ...args.query })) {\n    if (!param) continue\n\n    escaped = escapeSegment(escaped, param)\n  }\n\n  const parsed = parseUrl(escaped)\n\n  let pathname = parsed.pathname\n  if (pathname) {\n    pathname = unescapeSegments(pathname)\n  }\n\n  let href = parsed.href\n  if (href) {\n    href = unescapeSegments(href)\n  }\n\n  let hostname = parsed.hostname\n  if (hostname) {\n    hostname = unescapeSegments(hostname)\n  }\n\n  let hash = parsed.hash\n  if (hash) {\n    hash = unescapeSegments(hash)\n  }\n\n  return {\n    ...parsed,\n    pathname,\n    hostname,\n    href,\n    hash,\n  }\n}\n\nexport function prepareDestination(args: {\n  appendParamsToQuery: boolean\n  destination: string\n  params: Params\n  query: NextParsedUrlQuery\n}) {\n  const query = Object.assign({}, args.query)\n  const parsedDestination = parseDestination(args)\n\n  const { hostname: destHostname, query: destQuery } = parsedDestination\n\n  // The following code assumes that the pathname here includes the hash if it's\n  // present.\n  let destPath = parsedDestination.pathname\n  if (parsedDestination.hash) {\n    destPath = `${destPath}${parsedDestination.hash}`\n  }\n\n  const destParams: (string | number)[] = []\n\n  const destPathParamKeys: Key[] = []\n  pathToRegexp(destPath, destPathParamKeys)\n  for (const key of destPathParamKeys) {\n    destParams.push(key.name)\n  }\n\n  if (destHostname) {\n    const destHostnameParamKeys: Key[] = []\n    pathToRegexp(destHostname, destHostnameParamKeys)\n    for (const key of destHostnameParamKeys) {\n      destParams.push(key.name)\n    }\n  }\n\n  const destPathCompiler = compile(\n    destPath,\n    // we don't validate while compiling the destination since we should\n    // have already validated before we got to this point and validating\n    // breaks compiling destinations with named pattern params from the source\n    // e.g. /something:hello(.*) -> /another/:hello is broken with validation\n    // since compile validation is meant for reversing and not for inserting\n    // params from a separate path-regex into another\n    { validate: false }\n  )\n\n  let destHostnameCompiler\n  if (destHostname) {\n    destHostnameCompiler = compile(destHostname, { validate: false })\n  }\n\n  // update any params in query values\n  for (const [key, strOrArray] of Object.entries(destQuery)) {\n    // the value needs to start with a forward-slash to be compiled\n    // correctly\n    if (Array.isArray(strOrArray)) {\n      destQuery[key] = strOrArray.map((value) =>\n        compileNonPath(unescapeSegments(value), args.params)\n      )\n    } else if (typeof strOrArray === 'string') {\n      destQuery[key] = compileNonPath(unescapeSegments(strOrArray), args.params)\n    }\n  }\n\n  // add path params to query if it's not a redirect and not\n  // already defined in destination query or path\n  let paramKeys = Object.keys(args.params).filter(\n    (name) => name !== 'nextInternalLocale'\n  )\n\n  if (\n    args.appendParamsToQuery &&\n    !paramKeys.some((key) => destParams.includes(key))\n  ) {\n    for (const key of paramKeys) {\n      if (!(key in destQuery)) {\n        destQuery[key] = args.params[key]\n      }\n    }\n  }\n\n  let newUrl\n\n  // The compiler also that the interception route marker is an unnamed param, hence '0',\n  // so we need to add it to the params object.\n  if (isInterceptionRouteAppPath(destPath)) {\n    for (const segment of destPath.split('/')) {\n      const marker = INTERCEPTION_ROUTE_MARKERS.find((m) =>\n        segment.startsWith(m)\n      )\n      if (marker) {\n        if (marker === '(..)(..)') {\n          args.params['0'] = '(..)'\n          args.params['1'] = '(..)'\n        } else {\n          args.params['0'] = marker\n        }\n        break\n      }\n    }\n  }\n\n  try {\n    newUrl = destPathCompiler(args.params)\n\n    const [pathname, hash] = newUrl.split('#', 2)\n    if (destHostnameCompiler) {\n      parsedDestination.hostname = destHostnameCompiler(args.params)\n    }\n    parsedDestination.pathname = pathname\n    parsedDestination.hash = `${hash ? '#' : ''}${hash || ''}`\n    delete (parsedDestination as any).search\n  } catch (err: any) {\n    if (err.message.match(/Expected .*? to not repeat, but got an array/)) {\n      throw new Error(\n        `To use a multi-match in the destination you must add \\`*\\` at the end of the param name to signify it should repeat. https://nextjs.org/docs/messages/invalid-multi-match`\n      )\n    }\n    throw err\n  }\n\n  // Query merge order lowest priority to highest\n  // 1. initial URL query values\n  // 2. path segment values\n  // 3. destination specified query values\n  parsedDestination.query = {\n    ...query,\n    ...parsedDestination.query,\n  }\n\n  return {\n    newUrl,\n    destQuery,\n    parsedDestination,\n  }\n}\n","import { format as formatUrl, parse as parseUrl } from 'url';\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path';\nimport { getPathMatch } from '../shared/lib/router/utils/path-match';\nimport { getNamedRouteRegex } from '../shared/lib/router/utils/route-regex';\nimport { getRouteMatcher } from '../shared/lib/router/utils/route-matcher';\nimport { matchHas, prepareDestination } from '../shared/lib/router/utils/prepare-destination';\nimport { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash';\nimport { normalizeRscURL } from '../shared/lib/router/utils/app-paths';\nimport { NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER, NEXT_CACHE_REVALIDATED_TAGS_HEADER, NEXT_INTERCEPTION_MARKER_PREFIX, NEXT_QUERY_PARAM_PREFIX } from '../lib/constants';\nimport { normalizeNextQueryParam } from './web/utils';\nexport function normalizeVercelUrl(req, paramKeys, defaultRouteRegex) {\n    // make sure to normalize req.url on Vercel to strip dynamic and rewrite\n    // params from the query which are added during routing\n    const _parsedUrl = parseUrl(req.url, true);\n    delete _parsedUrl.search;\n    for (const key of Object.keys(_parsedUrl.query)){\n        const isNextQueryPrefix = key !== NEXT_QUERY_PARAM_PREFIX && key.startsWith(NEXT_QUERY_PARAM_PREFIX);\n        const isNextInterceptionMarkerPrefix = key !== NEXT_INTERCEPTION_MARKER_PREFIX && key.startsWith(NEXT_INTERCEPTION_MARKER_PREFIX);\n        if (isNextQueryPrefix || isNextInterceptionMarkerPrefix || paramKeys.includes(key) || defaultRouteRegex && Object.keys(defaultRouteRegex.groups).includes(key)) {\n            delete _parsedUrl.query[key];\n        }\n    }\n    req.url = formatUrl(_parsedUrl);\n}\nexport function interpolateDynamicPath(pathname, params, defaultRouteRegex) {\n    if (!defaultRouteRegex) return pathname;\n    for (const param of Object.keys(defaultRouteRegex.groups)){\n        const { optional, repeat } = defaultRouteRegex.groups[param];\n        let builtParam = `[${repeat ? '...' : ''}${param}]`;\n        if (optional) {\n            builtParam = `[${builtParam}]`;\n        }\n        let paramValue;\n        const value = params[param];\n        if (Array.isArray(value)) {\n            paramValue = value.map((v)=>v && encodeURIComponent(v)).join('/');\n        } else if (value) {\n            paramValue = encodeURIComponent(value);\n        } else {\n            paramValue = '';\n        }\n        pathname = pathname.replaceAll(builtParam, paramValue);\n    }\n    return pathname;\n}\nexport function normalizeDynamicRouteParams(query, defaultRouteRegex, defaultRouteMatches, ignoreMissingOptional) {\n    let hasValidParams = true;\n    let params = {};\n    for (const key of Object.keys(defaultRouteRegex.groups)){\n        let value = query[key];\n        if (typeof value === 'string') {\n            value = normalizeRscURL(value);\n        } else if (Array.isArray(value)) {\n            value = value.map(normalizeRscURL);\n        }\n        // if the value matches the default value we can't rely\n        // on the parsed params, this is used to signal if we need\n        // to parse x-now-route-matches or not\n        const defaultValue = defaultRouteMatches[key];\n        const isOptional = defaultRouteRegex.groups[key].optional;\n        const isDefaultValue = Array.isArray(defaultValue) ? defaultValue.some((defaultVal)=>{\n            return Array.isArray(value) ? value.some((val)=>val.includes(defaultVal)) : value == null ? void 0 : value.includes(defaultVal);\n        }) : value == null ? void 0 : value.includes(defaultValue);\n        if (isDefaultValue || typeof value === 'undefined' && !(isOptional && ignoreMissingOptional)) {\n            return {\n                params: {},\n                hasValidParams: false\n            };\n        }\n        // non-provided optional values should be undefined so normalize\n        // them to undefined\n        if (isOptional && (!value || Array.isArray(value) && value.length === 1 && // fallback optional catch-all SSG pages have\n        // [[...paramName]] for the root path on Vercel\n        (value[0] === 'index' || value[0] === `[[...${key}]]`))) {\n            value = undefined;\n            delete query[key];\n        }\n        // query values from the proxy aren't already split into arrays\n        // so make sure to normalize catch-all values\n        if (value && typeof value === 'string' && defaultRouteRegex.groups[key].repeat) {\n            value = value.split('/');\n        }\n        if (value) {\n            params[key] = value;\n        }\n    }\n    return {\n        params,\n        hasValidParams\n    };\n}\nexport function getUtils({ page, i18n, basePath, rewrites, pageIsDynamic, trailingSlash, caseSensitive }) {\n    let defaultRouteRegex;\n    let dynamicRouteMatcher;\n    let defaultRouteMatches;\n    if (pageIsDynamic) {\n        defaultRouteRegex = getNamedRouteRegex(page, {\n            prefixRouteKeys: false\n        });\n        dynamicRouteMatcher = getRouteMatcher(defaultRouteRegex);\n        defaultRouteMatches = dynamicRouteMatcher(page);\n    }\n    function handleRewrites(req, parsedUrl) {\n        const rewriteParams = {};\n        let fsPathname = parsedUrl.pathname;\n        const matchesPage = ()=>{\n            const fsPathnameNoSlash = removeTrailingSlash(fsPathname || '');\n            return fsPathnameNoSlash === removeTrailingSlash(page) || (dynamicRouteMatcher == null ? void 0 : dynamicRouteMatcher(fsPathnameNoSlash));\n        };\n        const checkRewrite = (rewrite)=>{\n            const matcher = getPathMatch(rewrite.source + (trailingSlash ? '(/)?' : ''), {\n                removeUnnamedParams: true,\n                strict: true,\n                sensitive: !!caseSensitive\n            });\n            if (!parsedUrl.pathname) return false;\n            let params = matcher(parsedUrl.pathname);\n            if ((rewrite.has || rewrite.missing) && params) {\n                const hasParams = matchHas(req, parsedUrl.query, rewrite.has, rewrite.missing);\n                if (hasParams) {\n                    Object.assign(params, hasParams);\n                } else {\n                    params = false;\n                }\n            }\n            if (params) {\n                const { parsedDestination, destQuery } = prepareDestination({\n                    appendParamsToQuery: true,\n                    destination: rewrite.destination,\n                    params: params,\n                    query: parsedUrl.query\n                });\n                // if the rewrite destination is external break rewrite chain\n                if (parsedDestination.protocol) {\n                    return true;\n                }\n                Object.assign(rewriteParams, destQuery, params);\n                Object.assign(parsedUrl.query, parsedDestination.query);\n                delete parsedDestination.query;\n                Object.assign(parsedUrl, parsedDestination);\n                fsPathname = parsedUrl.pathname;\n                if (!fsPathname) return false;\n                if (basePath) {\n                    fsPathname = fsPathname.replace(new RegExp(`^${basePath}`), '') || '/';\n                }\n                if (i18n) {\n                    const result = normalizeLocalePath(fsPathname, i18n.locales);\n                    fsPathname = result.pathname;\n                    parsedUrl.query.nextInternalLocale = result.detectedLocale || params.nextInternalLocale;\n                }\n                if (fsPathname === page) {\n                    return true;\n                }\n                if (pageIsDynamic && dynamicRouteMatcher) {\n                    const dynamicParams = dynamicRouteMatcher(fsPathname);\n                    if (dynamicParams) {\n                        parsedUrl.query = {\n                            ...parsedUrl.query,\n                            ...dynamicParams\n                        };\n                        return true;\n                    }\n                }\n            }\n            return false;\n        };\n        for (const rewrite of rewrites.beforeFiles || []){\n            checkRewrite(rewrite);\n        }\n        if (fsPathname !== page) {\n            let finished = false;\n            for (const rewrite of rewrites.afterFiles || []){\n                finished = checkRewrite(rewrite);\n                if (finished) break;\n            }\n            if (!finished && !matchesPage()) {\n                for (const rewrite of rewrites.fallback || []){\n                    finished = checkRewrite(rewrite);\n                    if (finished) break;\n                }\n            }\n        }\n        return rewriteParams;\n    }\n    function getParamsFromRouteMatches(routeMatchesHeader) {\n        // If we don't have a default route regex, we can't get params from route\n        // matches\n        if (!defaultRouteRegex) return null;\n        const { groups, routeKeys } = defaultRouteRegex;\n        const matcher = getRouteMatcher({\n            re: {\n                // Simulate a RegExp match from the \\`req.url\\` input\n                exec: (str)=>{\n                    // Normalize all the prefixed query params.\n                    const obj = Object.fromEntries(new URLSearchParams(str));\n                    for (const [key, value] of Object.entries(obj)){\n                        const normalizedKey = normalizeNextQueryParam(key);\n                        if (!normalizedKey) continue;\n                        obj[normalizedKey] = value;\n                        delete obj[key];\n                    }\n                    // Use all the named route keys.\n                    const result = {};\n                    for (const keyName of Object.keys(routeKeys)){\n                        const paramName = routeKeys[keyName];\n                        // If this param name is not a valid parameter name, then skip it.\n                        if (!paramName) continue;\n                        const group = groups[paramName];\n                        const value = obj[keyName];\n                        // When we're missing a required param, we can't match the route.\n                        if (!group.optional && !value) return null;\n                        result[group.pos] = value;\n                    }\n                    return result;\n                }\n            },\n            groups\n        });\n        const routeMatches = matcher(routeMatchesHeader);\n        if (!routeMatches) return null;\n        return routeMatches;\n    }\n    return {\n        handleRewrites,\n        defaultRouteRegex,\n        dynamicRouteMatcher,\n        defaultRouteMatches,\n        getParamsFromRouteMatches,\n        /**\n     * Normalize dynamic route params.\n     *\n     * @param query - The query params to normalize.\n     * @param ignoreMissingOptional - Whether to ignore missing optional params.\n     * @returns The normalized params and whether they are valid.\n     */ normalizeDynamicRouteParams: (query, ignoreMissingOptional)=>{\n            if (!defaultRouteRegex || !defaultRouteMatches) {\n                return {\n                    params: {},\n                    hasValidParams: false\n                };\n            }\n            return normalizeDynamicRouteParams(query, defaultRouteRegex, defaultRouteMatches, ignoreMissingOptional);\n        },\n        normalizeVercelUrl: (req, paramKeys)=>normalizeVercelUrl(req, paramKeys, defaultRouteRegex),\n        interpolateDynamicPath: (pathname, params)=>interpolateDynamicPath(pathname, params, defaultRouteRegex)\n    };\n}\nexport function getPreviouslyRevalidatedTags(headers, previewModeId) {\n    return typeof headers[NEXT_CACHE_REVALIDATED_TAGS_HEADER] === 'string' && headers[NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER] === previewModeId ? headers[NEXT_CACHE_REVALIDATED_TAGS_HEADER].split(',') : [];\n}\n\n//# sourceMappingURL=server-utils.js.map","import { IncrementalCacheKind, CachedRouteKind } from '../../response-cache';\nimport FileSystemCache from './file-system-cache';\nimport { normalizePagePath } from '../../../shared/lib/page-path/normalize-page-path';\nimport { CACHE_ONE_YEAR, PRERENDER_REVALIDATE_HEADER } from '../../../lib/constants';\nimport { toRoute } from '../to-route';\nimport { SharedCacheControls } from './shared-cache-controls';\nimport { getPrerenderResumeDataCache, getRenderResumeDataCache, workUnitAsyncStorage } from '../../app-render/work-unit-async-storage.external';\nimport { InvariantError } from '../../../shared/lib/invariant-error';\nimport { getPreviouslyRevalidatedTags } from '../../server-utils';\nimport { workAsyncStorage } from '../../app-render/work-async-storage.external';\nexport class CacheHandler {\n    // eslint-disable-next-line\n    constructor(_ctx){}\n    async get(_cacheKey, _ctx) {\n        return {};\n    }\n    async set(_cacheKey, _data, _ctx) {}\n    async revalidateTag(..._args) {}\n    resetRequestCache() {}\n}\nexport class IncrementalCache {\n    constructor({ fs, dev, flushToDisk, minimalMode, serverDistDir, requestHeaders, requestProtocol, maxMemoryCacheSize, getPrerenderManifest, fetchCacheKeyPrefix, CurCacheHandler, allowedRevalidateHeaderKeys }){\n        var _this_prerenderManifest_preview, _this_prerenderManifest;\n        this.locks = new Map();\n        const debug = !!process.env.NEXT_PRIVATE_DEBUG_CACHE;\n        this.hasCustomCacheHandler = Boolean(CurCacheHandler);\n        const cacheHandlersSymbol = Symbol.for('@next/cache-handlers');\n        const _globalThis = globalThis;\n        if (!CurCacheHandler) {\n            // if we have a global cache handler available leverage it\n            const globalCacheHandler = _globalThis[cacheHandlersSymbol];\n            if (globalCacheHandler == null ? void 0 : globalCacheHandler.FetchCache) {\n                CurCacheHandler = globalCacheHandler.FetchCache;\n            } else {\n                if (fs && serverDistDir) {\n                    if (debug) {\n                        console.log('using filesystem cache handler');\n                    }\n                    CurCacheHandler = FileSystemCache;\n                }\n            }\n        } else if (debug) {\n            console.log('using custom cache handler', CurCacheHandler.name);\n        }\n        if (process.env.__NEXT_TEST_MAX_ISR_CACHE) {\n            // Allow cache size to be overridden for testing purposes\n            maxMemoryCacheSize = parseInt(process.env.__NEXT_TEST_MAX_ISR_CACHE, 10);\n        }\n        this.dev = dev;\n        this.disableForTestmode = process.env.NEXT_PRIVATE_TEST_PROXY === 'true';\n        // this is a hack to avoid Webpack knowing this is equal to this.minimalMode\n        // because we replace this.minimalMode to true in production bundles.\n        const minimalModeKey = 'minimalMode';\n        this[minimalModeKey] = minimalMode;\n        this.requestHeaders = requestHeaders;\n        this.requestProtocol = requestProtocol;\n        this.allowedRevalidateHeaderKeys = allowedRevalidateHeaderKeys;\n        this.prerenderManifest = getPrerenderManifest();\n        this.cacheControls = new SharedCacheControls(this.prerenderManifest);\n        this.fetchCacheKeyPrefix = fetchCacheKeyPrefix;\n        let revalidatedTags = [];\n        if (requestHeaders[PRERENDER_REVALIDATE_HEADER] === ((_this_prerenderManifest = this.prerenderManifest) == null ? void 0 : (_this_prerenderManifest_preview = _this_prerenderManifest.preview) == null ? void 0 : _this_prerenderManifest_preview.previewModeId)) {\n            this.isOnDemandRevalidate = true;\n        }\n        if (minimalMode) {\n            var _this_prerenderManifest_preview1, _this_prerenderManifest1;\n            revalidatedTags = getPreviouslyRevalidatedTags(requestHeaders, (_this_prerenderManifest1 = this.prerenderManifest) == null ? void 0 : (_this_prerenderManifest_preview1 = _this_prerenderManifest1.preview) == null ? void 0 : _this_prerenderManifest_preview1.previewModeId);\n        }\n        if (CurCacheHandler) {\n            this.cacheHandler = new CurCacheHandler({\n                dev,\n                fs,\n                flushToDisk,\n                serverDistDir,\n                revalidatedTags,\n                maxMemoryCacheSize,\n                _requestHeaders: requestHeaders,\n                fetchCacheKeyPrefix\n            });\n        }\n    }\n    calculateRevalidate(pathname, fromTime, dev, isFallback) {\n        // in development we don't have a prerender-manifest\n        // and default to always revalidating to allow easier debugging\n        if (dev) return Math.floor(performance.timeOrigin + performance.now() - 1000);\n        const cacheControl = this.cacheControls.get(toRoute(pathname));\n        // if an entry isn't present in routes we fallback to a default\n        // of revalidating after 1 second unless it's a fallback request.\n        const initialRevalidateSeconds = cacheControl ? cacheControl.revalidate : isFallback ? false : 1;\n        const revalidateAfter = typeof initialRevalidateSeconds === 'number' ? initialRevalidateSeconds * 1000 + fromTime : initialRevalidateSeconds;\n        return revalidateAfter;\n    }\n    _getPathname(pathname, fetchCache) {\n        return fetchCache ? pathname : normalizePagePath(pathname);\n    }\n    resetRequestCache() {\n        var _this_cacheHandler_resetRequestCache, _this_cacheHandler;\n        (_this_cacheHandler = this.cacheHandler) == null ? void 0 : (_this_cacheHandler_resetRequestCache = _this_cacheHandler.resetRequestCache) == null ? void 0 : _this_cacheHandler_resetRequestCache.call(_this_cacheHandler);\n    }\n    async lock(cacheKey) {\n        let unlockNext = ()=>Promise.resolve();\n        const existingLock = this.locks.get(cacheKey);\n        if (existingLock) {\n            await existingLock;\n        }\n        const newLock = new Promise((resolve)=>{\n            unlockNext = async ()=>{\n                resolve();\n                this.locks.delete(cacheKey) // Remove the lock upon release\n                ;\n            };\n        });\n        this.locks.set(cacheKey, newLock);\n        return unlockNext;\n    }\n    async revalidateTag(tags) {\n        var _this_cacheHandler;\n        return (_this_cacheHandler = this.cacheHandler) == null ? void 0 : _this_cacheHandler.revalidateTag(tags);\n    }\n    // x-ref: https://github.com/facebook/react/blob/2655c9354d8e1c54ba888444220f63e836925caa/packages/react/src/ReactFetch.js#L23\n    async generateCacheKey(url, init = {}) {\n        // this should be bumped anytime a fix is made to cache entries\n        // that should bust the cache\n        const MAIN_KEY_PREFIX = 'v3';\n        const bodyChunks = [];\n        const encoder = new TextEncoder();\n        const decoder = new TextDecoder();\n        if (init.body) {\n            // handle ReadableStream body\n            if (typeof init.body.getReader === 'function') {\n                const readableBody = init.body;\n                const chunks = [];\n                try {\n                    await readableBody.pipeTo(new WritableStream({\n                        write (chunk) {\n                            if (typeof chunk === 'string') {\n                                chunks.push(encoder.encode(chunk));\n                                bodyChunks.push(chunk);\n                            } else {\n                                chunks.push(chunk);\n                                bodyChunks.push(decoder.decode(chunk, {\n                                    stream: true\n                                }));\n                            }\n                        }\n                    }));\n                    // Flush the decoder.\n                    bodyChunks.push(decoder.decode());\n                    // Create a new buffer with all the chunks.\n                    const length = chunks.reduce((total, arr)=>total + arr.length, 0);\n                    const arrayBuffer = new Uint8Array(length);\n                    // Push each of the chunks into the new array buffer.\n                    let offset = 0;\n                    for (const chunk of chunks){\n                        arrayBuffer.set(chunk, offset);\n                        offset += chunk.length;\n                    }\n                    ;\n                    init._ogBody = arrayBuffer;\n                } catch (err) {\n                    console.error('Problem reading body', err);\n                }\n            } else if (typeof init.body.keys === 'function') {\n                const formData = init.body;\n                init._ogBody = init.body;\n                for (const key of new Set([\n                    ...formData.keys()\n                ])){\n                    const values = formData.getAll(key);\n                    bodyChunks.push(`${key}=${(await Promise.all(values.map(async (val)=>{\n                        if (typeof val === 'string') {\n                            return val;\n                        } else {\n                            return await val.text();\n                        }\n                    }))).join(',')}`);\n                }\n            // handle blob body\n            } else if (typeof init.body.arrayBuffer === 'function') {\n                const blob = init.body;\n                const arrayBuffer = await blob.arrayBuffer();\n                bodyChunks.push(await blob.text());\n                init._ogBody = new Blob([\n                    arrayBuffer\n                ], {\n                    type: blob.type\n                });\n            } else if (typeof init.body === 'string') {\n                bodyChunks.push(init.body);\n                init._ogBody = init.body;\n            }\n        }\n        const headers = typeof (init.headers || {}).keys === 'function' ? Object.fromEntries(init.headers) : Object.assign({}, init.headers);\n        // w3c trace context headers can break request caching and deduplication\n        // so we remove them from the cache key\n        if ('traceparent' in headers) delete headers['traceparent'];\n        if ('tracestate' in headers) delete headers['tracestate'];\n        const cacheString = JSON.stringify([\n            MAIN_KEY_PREFIX,\n            this.fetchCacheKeyPrefix || '',\n            url,\n            init.method,\n            headers,\n            init.mode,\n            init.redirect,\n            init.credentials,\n            init.referrer,\n            init.referrerPolicy,\n            init.integrity,\n            init.cache,\n            bodyChunks\n        ]);\n        if (process.env.NEXT_RUNTIME === 'edge') {\n            function bufferToHex(buffer) {\n                return Array.prototype.map.call(new Uint8Array(buffer), (b)=>b.toString(16).padStart(2, '0')).join('');\n            }\n            const buffer = encoder.encode(cacheString);\n            return bufferToHex(await crypto.subtle.digest('SHA-256', buffer));\n        } else {\n            const crypto1 = require('crypto');\n            return crypto1.createHash('sha256').update(cacheString).digest('hex');\n        }\n    }\n    async get(cacheKey, ctx) {\n        var _this_cacheHandler, _cacheData_value;\n        // Unlike other caches if we have a resume data cache, we use it even if\n        // testmode would normally disable it or if requestHeaders say 'no-cache'.\n        if (ctx.kind === IncrementalCacheKind.FETCH) {\n            const workUnitStore = workUnitAsyncStorage.getStore();\n            const resumeDataCache = workUnitStore ? getRenderResumeDataCache(workUnitStore) : null;\n            if (resumeDataCache) {\n                const memoryCacheData = resumeDataCache.fetch.get(cacheKey);\n                if ((memoryCacheData == null ? void 0 : memoryCacheData.kind) === CachedRouteKind.FETCH) {\n                    return {\n                        isStale: false,\n                        value: memoryCacheData\n                    };\n                }\n            }\n        }\n        // we don't leverage the prerender cache in dev mode\n        // so that getStaticProps is always called for easier debugging\n        if (this.disableForTestmode || this.dev && (ctx.kind !== IncrementalCacheKind.FETCH || this.requestHeaders['cache-control'] === 'no-cache')) {\n            return null;\n        }\n        cacheKey = this._getPathname(cacheKey, ctx.kind === IncrementalCacheKind.FETCH);\n        const cacheData = await ((_this_cacheHandler = this.cacheHandler) == null ? void 0 : _this_cacheHandler.get(cacheKey, ctx));\n        if (ctx.kind === IncrementalCacheKind.FETCH) {\n            var _cacheData_value1;\n            if (!cacheData) {\n                return null;\n            }\n            if (((_cacheData_value1 = cacheData.value) == null ? void 0 : _cacheData_value1.kind) !== CachedRouteKind.FETCH) {\n                var _cacheData_value2;\n                throw Object.defineProperty(new InvariantError(`Expected cached value for cache key ${JSON.stringify(cacheKey)} to be a \"FETCH\" kind, got ${JSON.stringify((_cacheData_value2 = cacheData.value) == null ? void 0 : _cacheData_value2.kind)} instead.`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E653\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            const workStore = workAsyncStorage.getStore();\n            const combinedTags = [\n                ...ctx.tags || [],\n                ...ctx.softTags || []\n            ];\n            // if a tag was revalidated we don't return stale data\n            if (combinedTags.some((tag)=>{\n                var _this_revalidatedTags, _workStore_pendingRevalidatedTags;\n                return ((_this_revalidatedTags = this.revalidatedTags) == null ? void 0 : _this_revalidatedTags.includes(tag)) || (workStore == null ? void 0 : (_workStore_pendingRevalidatedTags = workStore.pendingRevalidatedTags) == null ? void 0 : _workStore_pendingRevalidatedTags.includes(tag));\n            })) {\n                return null;\n            }\n            const revalidate = ctx.revalidate || cacheData.value.revalidate;\n            const age = (performance.timeOrigin + performance.now() - (cacheData.lastModified || 0)) / 1000;\n            const isStale = age > revalidate;\n            const data = cacheData.value.data;\n            return {\n                isStale,\n                value: {\n                    kind: CachedRouteKind.FETCH,\n                    data,\n                    revalidate\n                }\n            };\n        } else if ((cacheData == null ? void 0 : (_cacheData_value = cacheData.value) == null ? void 0 : _cacheData_value.kind) === CachedRouteKind.FETCH) {\n            throw Object.defineProperty(new InvariantError(`Expected cached value for cache key ${JSON.stringify(cacheKey)} not to be a ${JSON.stringify(ctx.kind)} kind, got \"FETCH\" instead.`), \"__NEXT_ERROR_CODE\", {\n                value: \"E652\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        let entry = null;\n        const { isFallback } = ctx;\n        const cacheControl = this.cacheControls.get(toRoute(cacheKey));\n        let isStale;\n        let revalidateAfter;\n        if ((cacheData == null ? void 0 : cacheData.lastModified) === -1) {\n            isStale = -1;\n            revalidateAfter = -1 * CACHE_ONE_YEAR;\n        } else {\n            revalidateAfter = this.calculateRevalidate(cacheKey, (cacheData == null ? void 0 : cacheData.lastModified) || performance.timeOrigin + performance.now(), this.dev ?? false, ctx.isFallback);\n            isStale = revalidateAfter !== false && revalidateAfter < performance.timeOrigin + performance.now() ? true : undefined;\n        }\n        if (cacheData) {\n            entry = {\n                isStale,\n                cacheControl,\n                revalidateAfter,\n                value: cacheData.value,\n                isFallback\n            };\n        }\n        if (!cacheData && this.prerenderManifest.notFoundRoutes.includes(cacheKey)) {\n            // for the first hit after starting the server the cache\n            // may not have a way to save notFound: true so if\n            // the prerender-manifest marks this as notFound then we\n            // return that entry and trigger a cache set to give it a\n            // chance to update in-memory entries\n            entry = {\n                isStale,\n                value: null,\n                cacheControl,\n                revalidateAfter,\n                isFallback\n            };\n            this.set(cacheKey, entry.value, {\n                ...ctx,\n                cacheControl\n            });\n        }\n        return entry;\n    }\n    async set(pathname, data, ctx) {\n        // Even if we otherwise disable caching for testMode or if no fetchCache is\n        // configured we still always stash results in the resume data cache if one\n        // exists. This is because this is a transient in memory cache that\n        // populates caches ahead of a dynamic render in dev mode to allow the RSC\n        // debug info to have the right environment associated to it.\n        if ((data == null ? void 0 : data.kind) === CachedRouteKind.FETCH) {\n            const workUnitStore = workUnitAsyncStorage.getStore();\n            const prerenderResumeDataCache = workUnitStore ? getPrerenderResumeDataCache(workUnitStore) : null;\n            if (prerenderResumeDataCache) {\n                prerenderResumeDataCache.fetch.set(pathname, data);\n            }\n        }\n        if (this.disableForTestmode || this.dev && !ctx.fetchCache) return;\n        pathname = this._getPathname(pathname, ctx.fetchCache);\n        // FetchCache has upper limit of 2MB per-entry currently\n        const itemSize = JSON.stringify(data).length;\n        if (ctx.fetchCache && // we don't show this error/warning when a custom cache handler is being used\n        // as it might not have this limit\n        !this.hasCustomCacheHandler && itemSize > 2 * 1024 * 1024) {\n            if (this.dev) {\n                throw Object.defineProperty(new Error(`Failed to set Next.js data cache, items over 2MB can not be cached (${itemSize} bytes)`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E86\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            return;\n        }\n        try {\n            var _this_cacheHandler;\n            if (!ctx.fetchCache && ctx.cacheControl) {\n                this.cacheControls.set(toRoute(pathname), ctx.cacheControl);\n            }\n            await ((_this_cacheHandler = this.cacheHandler) == null ? void 0 : _this_cacheHandler.set(pathname, data, ctx));\n        } catch (error) {\n            console.warn('Failed to update prerender cache for', pathname, error);\n        }\n    }\n}\n\n//# sourceMappingURL=index.js.map","import { isDynamicRoute } from '../../shared/lib/router/utils';\nimport { getRouteMatcher } from '../../shared/lib/router/utils/route-matcher';\nimport { getRouteRegex } from '../../shared/lib/router/utils/route-regex';\nexport class RouteMatcher {\n    constructor(definition){\n        this.definition = definition;\n        if (isDynamicRoute(definition.pathname)) {\n            this.dynamic = getRouteMatcher(getRouteRegex(definition.pathname));\n        }\n    }\n    /**\n   * Identity returns the identity part of the matcher. This is used to compare\n   * a unique matcher to another. This is also used when sorting dynamic routes,\n   * so it must contain the pathname part.\n   */ get identity() {\n        return this.definition.pathname;\n    }\n    get isDynamic() {\n        return this.dynamic !== undefined;\n    }\n    match(pathname) {\n        const result = this.test(pathname);\n        if (!result) return null;\n        return {\n            definition: this.definition,\n            params: result.params\n        };\n    }\n    test(pathname) {\n        if (this.dynamic) {\n            const params = this.dynamic(pathname);\n            if (!params) return null;\n            return {\n                params\n            };\n        }\n        if (pathname === this.definition.pathname) {\n            return {};\n        }\n        return null;\n    }\n}\n\n//# sourceMappingURL=route-matcher.js.map","// An internal module to expose the \"waitUntil\" API to Edge SSR and Edge Route Handler functions.\n// This is highly experimental and subject to change.\n// We still need a global key to bypass Webpack's layering of modules.\nconst GLOBAL_KEY = Symbol.for('__next_internal_waitUntil__');\nconst state = // @ts-ignore\nglobalThis[GLOBAL_KEY] || // @ts-ignore\n(globalThis[GLOBAL_KEY] = {\n    waitUntilCounter: 0,\n    waitUntilResolve: undefined,\n    waitUntilPromise: null\n});\n// No matter how many concurrent requests are being handled, we want to make sure\n// that the final promise is only resolved once all of the waitUntil promises have\n// settled.\nfunction resolveOnePromise() {\n    state.waitUntilCounter--;\n    if (state.waitUntilCounter === 0) {\n        state.waitUntilResolve();\n        state.waitUntilPromise = null;\n    }\n}\nexport function internal_getCurrentFunctionWaitUntil() {\n    return state.waitUntilPromise;\n}\nexport function internal_runWithWaitUntil(fn) {\n    const result = fn();\n    if (result && typeof result === 'object' && 'then' in result && 'finally' in result && typeof result.then === 'function' && typeof result.finally === 'function') {\n        if (!state.waitUntilCounter) {\n            // Create the promise for the next batch of waitUntil calls.\n            state.waitUntilPromise = new Promise((resolve)=>{\n                state.waitUntilResolve = resolve;\n            });\n        }\n        state.waitUntilCounter++;\n        return result.finally(()=>{\n            resolveOnePromise();\n        });\n    }\n    return result;\n}\n\n//# sourceMappingURL=internal-edge-wait-until.js.map","import './globals';\nimport { adapter } from './adapter';\nimport { IncrementalCache } from '../lib/incremental-cache';\nimport { RouteMatcher } from '../route-matchers/route-matcher';\nimport { internal_getCurrentFunctionWaitUntil } from './internal-edge-wait-until';\nimport { getUtils } from '../server-utils';\nimport { searchParamsToUrlQuery } from '../../shared/lib/router/utils/querystring';\nimport { CloseController, trackStreamConsumed } from './web-on-close';\nimport { getEdgePreviewProps } from './get-edge-preview-props';\n/**\n * EdgeRouteModuleWrapper is a wrapper around a route module.\n *\n * Note that this class should only be used in the edge runtime.\n */ export class EdgeRouteModuleWrapper {\n    /**\n   * The constructor is wrapped with private to ensure that it can only be\n   * constructed by the static wrap method.\n   *\n   * @param routeModule the route module to wrap\n   */ constructor(routeModule, nextConfig){\n        this.routeModule = routeModule;\n        this.nextConfig = nextConfig;\n        // TODO: (wyattjoh) possibly allow the module to define it's own matcher\n        this.matcher = new RouteMatcher(routeModule.definition);\n    }\n    /**\n   * This will wrap a module with the EdgeModuleWrapper and return a function\n   * that can be used as a handler for the edge runtime.\n   *\n   * @param module the module to wrap\n   * @param options any options that should be passed to the adapter and\n   *                override the ones passed from the runtime\n   * @returns a function that can be used as a handler for the edge runtime\n   */ static wrap(routeModule, options) {\n        // Create the module wrapper.\n        const wrapper = new EdgeRouteModuleWrapper(routeModule, options.nextConfig);\n        // Return the wrapping function.\n        return (opts)=>{\n            return adapter({\n                ...opts,\n                IncrementalCache,\n                // Bind the handler method to the wrapper so it still has context.\n                handler: wrapper.handler.bind(wrapper)\n            });\n        };\n    }\n    async handler(request, evt) {\n        const utils = getUtils({\n            pageIsDynamic: this.matcher.isDynamic,\n            page: this.matcher.definition.pathname,\n            basePath: request.nextUrl.basePath,\n            // We don't need the `handleRewrite` util, so can just pass an empty object\n            rewrites: {},\n            // only used for rewrites, so setting an arbitrary default value here\n            caseSensitive: false\n        });\n        const { params } = utils.normalizeDynamicRouteParams(searchParamsToUrlQuery(request.nextUrl.searchParams), false);\n        const waitUntil = evt.waitUntil.bind(evt);\n        const closeController = new CloseController();\n        const previewProps = getEdgePreviewProps();\n        // Create the context for the handler. This contains the params from the\n        // match (if any).\n        const context = {\n            params,\n            prerenderManifest: {\n                version: 4,\n                routes: {},\n                dynamicRoutes: {},\n                preview: previewProps,\n                notFoundRoutes: []\n            },\n            renderOpts: {\n                supportsDynamicResponse: true,\n                waitUntil,\n                onClose: closeController.onClose.bind(closeController),\n                onAfterTaskError: undefined,\n                experimental: {\n                    dynamicIO: !!process.env.__NEXT_DYNAMIC_IO,\n                    authInterrupts: !!process.env.__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS\n                },\n                cacheLifeProfiles: this.nextConfig.experimental.cacheLife\n            },\n            sharedContext: {\n                buildId: ''\n            }\n        };\n        // Get the response from the handler.\n        let res = await this.routeModule.handle(request, context);\n        const waitUntilPromises = [\n            internal_getCurrentFunctionWaitUntil()\n        ];\n        if (context.renderOpts.pendingWaitUntil) {\n            waitUntilPromises.push(context.renderOpts.pendingWaitUntil);\n        }\n        evt.waitUntil(Promise.all(waitUntilPromises));\n        if (!res.body) {\n            // we can delay running it until a bit later --\n            // if it's needed, we'll have a `waitUntil` lock anyway.\n            setTimeout(()=>closeController.dispatchClose(), 0);\n        } else {\n            // NOTE: if this is a streaming response, onClose may be called later,\n            // so we can't rely on `closeController.listeners` -- it might be 0 at this point.\n            const trackedBody = trackStreamConsumed(res.body, ()=>closeController.dispatchClose());\n            res = new Response(trackedBody, {\n                status: res.status,\n                statusText: res.statusText,\n                headers: res.headers\n            });\n        }\n        return res;\n    }\n}\n\n//# sourceMappingURL=edge-route-module-wrapper.js.map","//#region src/unstable-core-do-not-import/rpc/codes.ts\n/**\n* JSON-RPC 2.0 Error codes\n*\n* `-32000` to `-32099` are reserved for implementation-defined server-errors.\n* For tRPC we're copying the last digits of HTTP 4XX errors.\n*/\nconst TRPC_ERROR_CODES_BY_KEY = {\n\tPARSE_ERROR: -32700,\n\tBAD_REQUEST: -32600,\n\tINTERNAL_SERVER_ERROR: -32603,\n\tNOT_IMPLEMENTED: -32603,\n\tBAD_GATEWAY: -32603,\n\tSERVICE_UNAVAILABLE: -32603,\n\tGATEWAY_TIMEOUT: -32603,\n\tUNAUTHORIZED: -32001,\n\tPAYMENT_REQUIRED: -32002,\n\tFORBIDDEN: -32003,\n\tNOT_FOUND: -32004,\n\tMETHOD_NOT_SUPPORTED: -32005,\n\tTIMEOUT: -32008,\n\tCONFLICT: -32009,\n\tPRECONDITION_FAILED: -32012,\n\tPAYLOAD_TOO_LARGE: -32013,\n\tUNSUPPORTED_MEDIA_TYPE: -32015,\n\tUNPROCESSABLE_CONTENT: -32022,\n\tTOO_MANY_REQUESTS: -32029,\n\tCLIENT_CLOSED_REQUEST: -32099\n};\nconst TRPC_ERROR_CODES_BY_NUMBER = {\n\t[-32700]: \"PARSE_ERROR\",\n\t[-32600]: \"BAD_REQUEST\",\n\t[-32603]: \"INTERNAL_SERVER_ERROR\",\n\t[-32001]: \"UNAUTHORIZED\",\n\t[-32002]: \"PAYMENT_REQUIRED\",\n\t[-32003]: \"FORBIDDEN\",\n\t[-32004]: \"NOT_FOUND\",\n\t[-32005]: \"METHOD_NOT_SUPPORTED\",\n\t[-32008]: \"TIMEOUT\",\n\t[-32009]: \"CONFLICT\",\n\t[-32012]: \"PRECONDITION_FAILED\",\n\t[-32013]: \"PAYLOAD_TOO_LARGE\",\n\t[-32015]: \"UNSUPPORTED_MEDIA_TYPE\",\n\t[-32022]: \"UNPROCESSABLE_CONTENT\",\n\t[-32029]: \"TOO_MANY_REQUESTS\",\n\t[-32099]: \"CLIENT_CLOSED_REQUEST\"\n};\n/**\n* tRPC error codes that are considered retryable\n* With out of the box SSE, the client will reconnect when these errors are encountered\n*/\nconst retryableRpcCodes = [\n\tTRPC_ERROR_CODES_BY_KEY.BAD_GATEWAY,\n\tTRPC_ERROR_CODES_BY_KEY.SERVICE_UNAVAILABLE,\n\tTRPC_ERROR_CODES_BY_KEY.GATEWAY_TIMEOUT,\n\tTRPC_ERROR_CODES_BY_KEY.INTERNAL_SERVER_ERROR\n];\n\n//#endregion\n//#region src/unstable-core-do-not-import/utils.ts\n/**\n* Ensures there are no duplicate keys when building a procedure.\n* @internal\n*/\nfunction mergeWithoutOverrides(obj1, ...objs) {\n\tconst newObj = Object.assign(Object.create(null), obj1);\n\tfor (const overrides of objs) for (const key in overrides) {\n\t\tif (key in newObj && newObj[key] !== overrides[key]) throw new Error(`Duplicate key ${key}`);\n\t\tnewObj[key] = overrides[key];\n\t}\n\treturn newObj;\n}\n/**\n* Check that value is object\n* @internal\n*/\nfunction isObject(value) {\n\treturn !!value && !Array.isArray(value) && typeof value === \"object\";\n}\nfunction isFunction(fn) {\n\treturn typeof fn === \"function\";\n}\n/**\n* Create an object without inheriting anything from `Object.prototype`\n* @internal\n*/\nfunction omitPrototype(obj) {\n\treturn Object.assign(Object.create(null), obj);\n}\nconst asyncIteratorsSupported = typeof Symbol === \"function\" && !!Symbol.asyncIterator;\nfunction isAsyncIterable(value) {\n\treturn asyncIteratorsSupported && isObject(value) && Symbol.asyncIterator in value;\n}\n/**\n* Run an IIFE\n*/\nconst run = (fn) => fn();\nfunction noop() {}\nfunction identity(it) {\n\treturn it;\n}\n/**\n* Generic runtime assertion function. Throws, if the condition is not `true`.\n*\n* Can be used as a slightly less dangerous variant of type assertions. Code\n* mistakes would be revealed at runtime then (hopefully during testing).\n*/\nfunction assert(condition, msg = \"no additional info\") {\n\tif (!condition) throw new Error(`AssertionError: ${msg}`);\n}\nfunction sleep(ms = 0) {\n\treturn new Promise((res) => setTimeout(res, ms));\n}\n/**\n* Ponyfill for\n* [`AbortSignal.any`](https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal/any_static).\n*/\nfunction abortSignalsAnyPonyfill(signals) {\n\tif (typeof AbortSignal.any === \"function\") return AbortSignal.any(signals);\n\tconst ac = new AbortController();\n\tfor (const signal of signals) {\n\t\tif (signal.aborted) {\n\t\t\ttrigger();\n\t\t\tbreak;\n\t\t}\n\t\tsignal.addEventListener(\"abort\", trigger, { once: true });\n\t}\n\treturn ac.signal;\n\tfunction trigger() {\n\t\tac.abort();\n\t\tfor (const signal of signals) signal.removeEventListener(\"abort\", trigger);\n\t}\n}\n\n//#endregion\nexport { TRPC_ERROR_CODES_BY_KEY, TRPC_ERROR_CODES_BY_NUMBER, abortSignalsAnyPonyfill, assert, identity, isAsyncIterable, isFunction, isObject, mergeWithoutOverrides, noop, omitPrototype, retryableRpcCodes, run, sleep };\n//# sourceMappingURL=utils-DdbbrDku.mjs.map","import { TRPC_ERROR_CODES_BY_KEY, TRPC_ERROR_CODES_BY_NUMBER, isObject } from \"./utils-DdbbrDku.mjs\";\n\n//#region rolldown:runtime\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __commonJS = (cb, mod) => function() {\n\treturn mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n\tif (from && typeof from === \"object\" || typeof from === \"function\") for (var keys = __getOwnPropNames(from), i = 0, n = keys.length, key; i < n; i++) {\n\t\tkey = keys[i];\n\t\tif (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n\t\t\tget: ((k) => from[k]).bind(null, key),\n\t\t\tenumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n\t\t});\n\t}\n\treturn to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n\tvalue: mod,\n\tenumerable: true\n}) : target, mod));\n\n//#endregion\n//#region src/unstable-core-do-not-import/createProxy.ts\nconst noop = () => {};\nconst freezeIfAvailable = (obj) => {\n\tif (Object.freeze) Object.freeze(obj);\n};\nfunction createInnerProxy(callback, path, memo) {\n\tvar _memo$cacheKey;\n\tconst cacheKey = path.join(\".\");\n\t(_memo$cacheKey = memo[cacheKey]) !== null && _memo$cacheKey !== void 0 || (memo[cacheKey] = new Proxy(noop, {\n\t\tget(_obj, key) {\n\t\t\tif (typeof key !== \"string\" || key === \"then\") return void 0;\n\t\t\treturn createInnerProxy(callback, [...path, key], memo);\n\t\t},\n\t\tapply(_1, _2, args) {\n\t\t\tconst lastOfPath = path[path.length - 1];\n\t\t\tlet opts = {\n\t\t\t\targs,\n\t\t\t\tpath\n\t\t\t};\n\t\t\tif (lastOfPath === \"call\") opts = {\n\t\t\t\targs: args.length >= 2 ? [args[1]] : [],\n\t\t\t\tpath: path.slice(0, -1)\n\t\t\t};\n\t\t\telse if (lastOfPath === \"apply\") opts = {\n\t\t\t\targs: args.length >= 2 ? args[1] : [],\n\t\t\t\tpath: path.slice(0, -1)\n\t\t\t};\n\t\t\tfreezeIfAvailable(opts.args);\n\t\t\tfreezeIfAvailable(opts.path);\n\t\t\treturn callback(opts);\n\t\t}\n\t}));\n\treturn memo[cacheKey];\n}\n/**\n* Creates a proxy that calls the callback with the path and arguments\n*\n* @internal\n*/\nconst createRecursiveProxy = (callback) => createInnerProxy(callback, [], Object.create(null));\n/**\n* Used in place of `new Proxy` where each handler will map 1 level deep to another value.\n*\n* @internal\n*/\nconst createFlatProxy = (callback) => {\n\treturn new Proxy(noop, { get(_obj, name) {\n\t\tif (name === \"then\") return void 0;\n\t\treturn callback(name);\n\t} });\n};\n\n//#endregion\n//#region src/unstable-core-do-not-import/http/getHTTPStatusCode.ts\nconst JSONRPC2_TO_HTTP_CODE = {\n\tPARSE_ERROR: 400,\n\tBAD_REQUEST: 400,\n\tUNAUTHORIZED: 401,\n\tPAYMENT_REQUIRED: 402,\n\tFORBIDDEN: 403,\n\tNOT_FOUND: 404,\n\tMETHOD_NOT_SUPPORTED: 405,\n\tTIMEOUT: 408,\n\tCONFLICT: 409,\n\tPRECONDITION_FAILED: 412,\n\tPAYLOAD_TOO_LARGE: 413,\n\tUNSUPPORTED_MEDIA_TYPE: 415,\n\tUNPROCESSABLE_CONTENT: 422,\n\tTOO_MANY_REQUESTS: 429,\n\tCLIENT_CLOSED_REQUEST: 499,\n\tINTERNAL_SERVER_ERROR: 500,\n\tNOT_IMPLEMENTED: 501,\n\tBAD_GATEWAY: 502,\n\tSERVICE_UNAVAILABLE: 503,\n\tGATEWAY_TIMEOUT: 504\n};\nconst HTTP_CODE_TO_JSONRPC2 = {\n\t400: \"BAD_REQUEST\",\n\t401: \"UNAUTHORIZED\",\n\t402: \"PAYMENT_REQUIRED\",\n\t403: \"FORBIDDEN\",\n\t404: \"NOT_FOUND\",\n\t405: \"METHOD_NOT_SUPPORTED\",\n\t408: \"TIMEOUT\",\n\t409: \"CONFLICT\",\n\t412: \"PRECONDITION_FAILED\",\n\t413: \"PAYLOAD_TOO_LARGE\",\n\t415: \"UNSUPPORTED_MEDIA_TYPE\",\n\t422: \"UNPROCESSABLE_CONTENT\",\n\t429: \"TOO_MANY_REQUESTS\",\n\t499: \"CLIENT_CLOSED_REQUEST\",\n\t500: \"INTERNAL_SERVER_ERROR\",\n\t501: \"NOT_IMPLEMENTED\",\n\t502: \"BAD_GATEWAY\",\n\t503: \"SERVICE_UNAVAILABLE\",\n\t504: \"GATEWAY_TIMEOUT\"\n};\nfunction getStatusCodeFromKey(code) {\n\tvar _JSONRPC2_TO_HTTP_COD;\n\treturn (_JSONRPC2_TO_HTTP_COD = JSONRPC2_TO_HTTP_CODE[code]) !== null && _JSONRPC2_TO_HTTP_COD !== void 0 ? _JSONRPC2_TO_HTTP_COD : 500;\n}\nfunction getStatusKeyFromCode(code) {\n\tvar _HTTP_CODE_TO_JSONRPC;\n\treturn (_HTTP_CODE_TO_JSONRPC = HTTP_CODE_TO_JSONRPC2[code]) !== null && _HTTP_CODE_TO_JSONRPC !== void 0 ? _HTTP_CODE_TO_JSONRPC : \"INTERNAL_SERVER_ERROR\";\n}\nfunction getHTTPStatusCode(json) {\n\tconst arr = Array.isArray(json) ? json : [json];\n\tconst httpStatuses = new Set(arr.map((res) => {\n\t\tif (\"error\" in res && isObject(res.error.data)) {\n\t\t\tvar _res$error$data;\n\t\t\tif (typeof ((_res$error$data = res.error.data) === null || _res$error$data === void 0 ? void 0 : _res$error$data[\"httpStatus\"]) === \"number\") return res.error.data[\"httpStatus\"];\n\t\t\tconst code = TRPC_ERROR_CODES_BY_NUMBER[res.error.code];\n\t\t\treturn getStatusCodeFromKey(code);\n\t\t}\n\t\treturn 200;\n\t}));\n\tif (httpStatuses.size !== 1) return 207;\n\tconst httpStatus = httpStatuses.values().next().value;\n\treturn httpStatus;\n}\nfunction getHTTPStatusCodeFromError(error) {\n\treturn getStatusCodeFromKey(error.code);\n}\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/typeof.js\nvar require_typeof = __commonJS({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/typeof.js\"(exports, module) {\n\tfunction _typeof$2(o) {\n\t\t\"@babel/helpers - typeof\";\n\t\treturn module.exports = _typeof$2 = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o$1) {\n\t\t\treturn typeof o$1;\n\t\t} : function(o$1) {\n\t\t\treturn o$1 && \"function\" == typeof Symbol && o$1.constructor === Symbol && o$1 !== Symbol.prototype ? \"symbol\" : typeof o$1;\n\t\t}, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof$2(o);\n\t}\n\tmodule.exports = _typeof$2, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/toPrimitive.js\nvar require_toPrimitive = __commonJS({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/toPrimitive.js\"(exports, module) {\n\tvar _typeof$1 = require_typeof()[\"default\"];\n\tfunction toPrimitive$1(t, r) {\n\t\tif (\"object\" != _typeof$1(t) || !t) return t;\n\t\tvar e = t[Symbol.toPrimitive];\n\t\tif (void 0 !== e) {\n\t\t\tvar i = e.call(t, r || \"default\");\n\t\t\tif (\"object\" != _typeof$1(i)) return i;\n\t\t\tthrow new TypeError(\"@@toPrimitive must return a primitive value.\");\n\t\t}\n\t\treturn (\"string\" === r ? String : Number)(t);\n\t}\n\tmodule.exports = toPrimitive$1, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/toPropertyKey.js\nvar require_toPropertyKey = __commonJS({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/toPropertyKey.js\"(exports, module) {\n\tvar _typeof = require_typeof()[\"default\"];\n\tvar toPrimitive = require_toPrimitive();\n\tfunction toPropertyKey$1(t) {\n\t\tvar i = toPrimitive(t, \"string\");\n\t\treturn \"symbol\" == _typeof(i) ? i : i + \"\";\n\t}\n\tmodule.exports = toPropertyKey$1, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/defineProperty.js\nvar require_defineProperty = __commonJS({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/defineProperty.js\"(exports, module) {\n\tvar toPropertyKey = require_toPropertyKey();\n\tfunction _defineProperty(e, r, t) {\n\t\treturn (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n\t\t\tvalue: t,\n\t\t\tenumerable: !0,\n\t\t\tconfigurable: !0,\n\t\t\twritable: !0\n\t\t}) : e[r] = t, e;\n\t}\n\tmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/objectSpread2.js\nvar require_objectSpread2 = __commonJS({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/objectSpread2.js\"(exports, module) {\n\tvar defineProperty = require_defineProperty();\n\tfunction ownKeys(e, r) {\n\t\tvar t = Object.keys(e);\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tvar o = Object.getOwnPropertySymbols(e);\n\t\t\tr && (o = o.filter(function(r$1) {\n\t\t\t\treturn Object.getOwnPropertyDescriptor(e, r$1).enumerable;\n\t\t\t})), t.push.apply(t, o);\n\t\t}\n\t\treturn t;\n\t}\n\tfunction _objectSpread2(e) {\n\t\tfor (var r = 1; r < arguments.length; r++) {\n\t\t\tvar t = null != arguments[r] ? arguments[r] : {};\n\t\t\tr % 2 ? ownKeys(Object(t), !0).forEach(function(r$1) {\n\t\t\t\tdefineProperty(e, r$1, t[r$1]);\n\t\t\t}) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r$1) {\n\t\t\t\tObject.defineProperty(e, r$1, Object.getOwnPropertyDescriptor(t, r$1));\n\t\t\t});\n\t\t}\n\t\treturn e;\n\t}\n\tmodule.exports = _objectSpread2, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region src/unstable-core-do-not-import/error/getErrorShape.ts\nvar import_objectSpread2 = __toESM(require_objectSpread2(), 1);\n/**\n* @internal\n*/\nfunction getErrorShape(opts) {\n\tconst { path, error, config } = opts;\n\tconst { code } = opts.error;\n\tconst shape = {\n\t\tmessage: error.message,\n\t\tcode: TRPC_ERROR_CODES_BY_KEY[code],\n\t\tdata: {\n\t\t\tcode,\n\t\t\thttpStatus: getHTTPStatusCodeFromError(error)\n\t\t}\n\t};\n\tif (config.isDev && typeof opts.error.stack === \"string\") shape.data.stack = opts.error.stack;\n\tif (typeof path === \"string\") shape.data.path = path;\n\treturn config.errorFormatter((0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, opts), {}, { shape }));\n}\n\n//#endregion\nexport { HTTP_CODE_TO_JSONRPC2, JSONRPC2_TO_HTTP_CODE, __commonJS, __toESM, createFlatProxy, createRecursiveProxy, getErrorShape, getHTTPStatusCode, getHTTPStatusCodeFromError, getStatusCodeFromKey, getStatusKeyFromCode, require_defineProperty, require_objectSpread2 };\n//# sourceMappingURL=getErrorShape-Uhlrl4Bk.mjs.map","import { __toESM, createRecursiveProxy, require_defineProperty, require_objectSpread2 } from \"./getErrorShape-Uhlrl4Bk.mjs\";\nimport { isFunction, isObject, mergeWithoutOverrides, omitPrototype } from \"./utils-DdbbrDku.mjs\";\n\n//#region src/unstable-core-do-not-import/error/formatter.ts\nconst defaultFormatter = ({ shape }) => {\n\treturn shape;\n};\n\n//#endregion\n//#region src/unstable-core-do-not-import/error/TRPCError.ts\nvar import_defineProperty = __toESM(require_defineProperty(), 1);\nvar UnknownCauseError = class extends Error {};\nfunction getCauseFromUnknown(cause) {\n\tif (cause instanceof Error) return cause;\n\tconst type = typeof cause;\n\tif (type === \"undefined\" || type === \"function\" || cause === null) return void 0;\n\tif (type !== \"object\") return new Error(String(cause));\n\tif (isObject(cause)) return Object.assign(new UnknownCauseError(), cause);\n\treturn void 0;\n}\nfunction getTRPCErrorFromUnknown(cause) {\n\tif (cause instanceof TRPCError) return cause;\n\tif (cause instanceof Error && cause.name === \"TRPCError\") return cause;\n\tconst trpcError = new TRPCError({\n\t\tcode: \"INTERNAL_SERVER_ERROR\",\n\t\tcause\n\t});\n\tif (cause instanceof Error && cause.stack) trpcError.stack = cause.stack;\n\treturn trpcError;\n}\nvar TRPCError = class extends Error {\n\tconstructor(opts) {\n\t\tvar _ref, _opts$message, _this$cause;\n\t\tconst cause = getCauseFromUnknown(opts.cause);\n\t\tconst message = (_ref = (_opts$message = opts.message) !== null && _opts$message !== void 0 ? _opts$message : cause === null || cause === void 0 ? void 0 : cause.message) !== null && _ref !== void 0 ? _ref : opts.code;\n\t\tsuper(message, { cause });\n\t\t(0, import_defineProperty.default)(this, \"cause\", void 0);\n\t\t(0, import_defineProperty.default)(this, \"code\", void 0);\n\t\tthis.code = opts.code;\n\t\tthis.name = \"TRPCError\";\n\t\t(_this$cause = this.cause) !== null && _this$cause !== void 0 || (this.cause = cause);\n\t}\n};\n\n//#endregion\n//#region src/unstable-core-do-not-import/transformer.ts\nvar import_objectSpread2$1 = __toESM(require_objectSpread2(), 1);\n/**\n* @internal\n*/\nfunction getDataTransformer(transformer) {\n\tif (\"input\" in transformer) return transformer;\n\treturn {\n\t\tinput: transformer,\n\t\toutput: transformer\n\t};\n}\n/**\n* @internal\n*/\nconst defaultTransformer = {\n\tinput: {\n\t\tserialize: (obj) => obj,\n\t\tdeserialize: (obj) => obj\n\t},\n\toutput: {\n\t\tserialize: (obj) => obj,\n\t\tdeserialize: (obj) => obj\n\t}\n};\nfunction transformTRPCResponseItem(config, item) {\n\tif (\"error\" in item) return (0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, item), {}, { error: config.transformer.output.serialize(item.error) });\n\tif (\"data\" in item.result) return (0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, item), {}, { result: (0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, item.result), {}, { data: config.transformer.output.serialize(item.result.data) }) });\n\treturn item;\n}\n/**\n* Takes a unserialized `TRPCResponse` and serializes it with the router's transformers\n**/\nfunction transformTRPCResponse(config, itemOrItems) {\n\treturn Array.isArray(itemOrItems) ? itemOrItems.map((item) => transformTRPCResponseItem(config, item)) : transformTRPCResponseItem(config, itemOrItems);\n}\n/** @internal */\nfunction transformResultInner(response, transformer) {\n\tif (\"error\" in response) {\n\t\tconst error = transformer.deserialize(response.error);\n\t\treturn {\n\t\t\tok: false,\n\t\t\terror: (0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, response), {}, { error })\n\t\t};\n\t}\n\tconst result = (0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, response.result), (!response.result.type || response.result.type === \"data\") && {\n\t\ttype: \"data\",\n\t\tdata: transformer.deserialize(response.result.data)\n\t});\n\treturn {\n\t\tok: true,\n\t\tresult\n\t};\n}\nvar TransformResultError = class extends Error {\n\tconstructor() {\n\t\tsuper(\"Unable to transform response from server\");\n\t}\n};\n/**\n* Transforms and validates that the result is a valid TRPCResponse\n* @internal\n*/\nfunction transformResult(response, transformer) {\n\tlet result;\n\ttry {\n\t\tresult = transformResultInner(response, transformer);\n\t} catch (_unused) {\n\t\tthrow new TransformResultError();\n\t}\n\tif (!result.ok && (!isObject(result.error.error) || typeof result.error.error[\"code\"] !== \"number\")) throw new TransformResultError();\n\tif (result.ok && !isObject(result.result)) throw new TransformResultError();\n\treturn result;\n}\n\n//#endregion\n//#region src/unstable-core-do-not-import/router.ts\nvar import_objectSpread2 = __toESM(require_objectSpread2(), 1);\nconst lazySymbol = Symbol(\"lazy\");\nfunction once(fn) {\n\tconst uncalled = Symbol();\n\tlet result = uncalled;\n\treturn () => {\n\t\tif (result === uncalled) result = fn();\n\t\treturn result;\n\t};\n}\n/**\n* Lazy load a router\n* @see https://trpc.io/docs/server/merging-routers#lazy-load\n*/\nfunction lazy(importRouter) {\n\tasync function resolve() {\n\t\tconst mod = await importRouter();\n\t\tif (isRouter(mod)) return mod;\n\t\tconst routers = Object.values(mod);\n\t\tif (routers.length !== 1 || !isRouter(routers[0])) throw new Error(\"Invalid router module - either define exactly 1 export or return the router directly.\\nExample: `lazy(() => import('./slow.js').then((m) => m.slowRouter))`\");\n\t\treturn routers[0];\n\t}\n\tresolve[lazySymbol] = true;\n\treturn resolve;\n}\nfunction isLazy(input) {\n\treturn typeof input === \"function\" && lazySymbol in input;\n}\nfunction isRouter(value) {\n\treturn isObject(value) && isObject(value[\"_def\"]) && \"router\" in value[\"_def\"];\n}\nconst emptyRouter = {\n\t_ctx: null,\n\t_errorShape: null,\n\t_meta: null,\n\tqueries: {},\n\tmutations: {},\n\tsubscriptions: {},\n\terrorFormatter: defaultFormatter,\n\ttransformer: defaultTransformer\n};\n/**\n* Reserved words that can't be used as router or procedure names\n*/\nconst reservedWords = [\n\t\"then\",\n\t\"call\",\n\t\"apply\"\n];\n/**\n* @internal\n*/\nfunction createRouterFactory(config) {\n\tfunction createRouterInner(input) {\n\t\tconst reservedWordsUsed = new Set(Object.keys(input).filter((v) => reservedWords.includes(v)));\n\t\tif (reservedWordsUsed.size > 0) throw new Error(\"Reserved words used in `router({})` call: \" + Array.from(reservedWordsUsed).join(\", \"));\n\t\tconst procedures = omitPrototype({});\n\t\tconst lazy$1 = omitPrototype({});\n\t\tfunction createLazyLoader(opts) {\n\t\t\treturn {\n\t\t\t\tref: opts.ref,\n\t\t\t\tload: once(async () => {\n\t\t\t\t\tconst router$1 = await opts.ref();\n\t\t\t\t\tconst lazyPath = [...opts.path, opts.key];\n\t\t\t\t\tconst lazyKey = lazyPath.join(\".\");\n\t\t\t\t\topts.aggregate[opts.key] = step(router$1._def.record, lazyPath);\n\t\t\t\t\tdelete lazy$1[lazyKey];\n\t\t\t\t\tfor (const [nestedKey, nestedItem] of Object.entries(router$1._def.lazy)) {\n\t\t\t\t\t\tconst nestedRouterKey = [...lazyPath, nestedKey].join(\".\");\n\t\t\t\t\t\tlazy$1[nestedRouterKey] = createLazyLoader({\n\t\t\t\t\t\t\tref: nestedItem.ref,\n\t\t\t\t\t\t\tpath: lazyPath,\n\t\t\t\t\t\t\tkey: nestedKey,\n\t\t\t\t\t\t\taggregate: opts.aggregate[opts.key]\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t};\n\t\t}\n\t\tfunction step(from, path = []) {\n\t\t\tconst aggregate = omitPrototype({});\n\t\t\tfor (const [key, item] of Object.entries(from !== null && from !== void 0 ? from : {})) {\n\t\t\t\tif (isLazy(item)) {\n\t\t\t\t\tlazy$1[[...path, key].join(\".\")] = createLazyLoader({\n\t\t\t\t\t\tpath,\n\t\t\t\t\t\tref: item,\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\taggregate\n\t\t\t\t\t});\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (isRouter(item)) {\n\t\t\t\t\taggregate[key] = step(item._def.record, [...path, key]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (!isProcedure(item)) {\n\t\t\t\t\taggregate[key] = step(item, [...path, key]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst newPath = [...path, key].join(\".\");\n\t\t\t\tif (procedures[newPath]) throw new Error(`Duplicate key: ${newPath}`);\n\t\t\t\tprocedures[newPath] = item;\n\t\t\t\taggregate[key] = item;\n\t\t\t}\n\t\t\treturn aggregate;\n\t\t}\n\t\tconst record = step(input);\n\t\tconst _def = (0, import_objectSpread2.default)((0, import_objectSpread2.default)({\n\t\t\t_config: config,\n\t\t\trouter: true,\n\t\t\tprocedures,\n\t\t\tlazy: lazy$1\n\t\t}, emptyRouter), {}, { record });\n\t\tconst router = (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, record), {}, {\n\t\t\t_def,\n\t\t\tcreateCaller: createCallerFactory()({ _def })\n\t\t});\n\t\treturn router;\n\t}\n\treturn createRouterInner;\n}\nfunction isProcedure(procedureOrRouter) {\n\treturn typeof procedureOrRouter === \"function\";\n}\n/**\n* @internal\n*/\nasync function getProcedureAtPath(router, path) {\n\tconst { _def } = router;\n\tlet procedure = _def.procedures[path];\n\twhile (!procedure) {\n\t\tconst key = Object.keys(_def.lazy).find((key$1) => path.startsWith(key$1));\n\t\tif (!key) return null;\n\t\tconst lazyRouter = _def.lazy[key];\n\t\tawait lazyRouter.load();\n\t\tprocedure = _def.procedures[path];\n\t}\n\treturn procedure;\n}\n/**\n* @internal\n*/\nasync function callProcedure(opts) {\n\tconst { type, path } = opts;\n\tconst proc = await getProcedureAtPath(opts.router, path);\n\tif (!proc || !isProcedure(proc) || proc._def.type !== type && !opts.allowMethodOverride) throw new TRPCError({\n\t\tcode: \"NOT_FOUND\",\n\t\tmessage: `No \"${type}\"-procedure on path \"${path}\"`\n\t});\n\t/* istanbul ignore if -- @preserve */\n\tif (proc._def.type !== type && opts.allowMethodOverride && proc._def.type === \"subscription\") throw new TRPCError({\n\t\tcode: \"METHOD_NOT_SUPPORTED\",\n\t\tmessage: `Method override is not supported for subscriptions`\n\t});\n\treturn proc(opts);\n}\nfunction createCallerFactory() {\n\treturn function createCallerInner(router) {\n\t\tconst { _def } = router;\n\t\treturn function createCaller(ctxOrCallback, opts) {\n\t\t\treturn createRecursiveProxy(async ({ path, args }) => {\n\t\t\t\tconst fullPath = path.join(\".\");\n\t\t\t\tif (path.length === 1 && path[0] === \"_def\") return _def;\n\t\t\t\tconst procedure = await getProcedureAtPath(router, fullPath);\n\t\t\t\tlet ctx = void 0;\n\t\t\t\ttry {\n\t\t\t\t\tif (!procedure) throw new TRPCError({\n\t\t\t\t\t\tcode: \"NOT_FOUND\",\n\t\t\t\t\t\tmessage: `No procedure found on path \"${path}\"`\n\t\t\t\t\t});\n\t\t\t\t\tctx = isFunction(ctxOrCallback) ? await Promise.resolve(ctxOrCallback()) : ctxOrCallback;\n\t\t\t\t\treturn await procedure({\n\t\t\t\t\t\tpath: fullPath,\n\t\t\t\t\t\tgetRawInput: async () => args[0],\n\t\t\t\t\t\tctx,\n\t\t\t\t\t\ttype: procedure._def.type,\n\t\t\t\t\t\tsignal: opts === null || opts === void 0 ? void 0 : opts.signal\n\t\t\t\t\t});\n\t\t\t\t} catch (cause) {\n\t\t\t\t\tvar _opts$onError, _procedure$_def$type;\n\t\t\t\t\topts === null || opts === void 0 || (_opts$onError = opts.onError) === null || _opts$onError === void 0 || _opts$onError.call(opts, {\n\t\t\t\t\t\tctx,\n\t\t\t\t\t\terror: getTRPCErrorFromUnknown(cause),\n\t\t\t\t\t\tinput: args[0],\n\t\t\t\t\t\tpath: fullPath,\n\t\t\t\t\t\ttype: (_procedure$_def$type = procedure === null || procedure === void 0 ? void 0 : procedure._def.type) !== null && _procedure$_def$type !== void 0 ? _procedure$_def$type : \"unknown\"\n\t\t\t\t\t});\n\t\t\t\t\tthrow cause;\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t};\n}\nfunction mergeRouters(...routerList) {\n\tvar _routerList$;\n\tconst record = mergeWithoutOverrides({}, ...routerList.map((r) => r._def.record));\n\tconst errorFormatter = routerList.reduce((currentErrorFormatter, nextRouter) => {\n\t\tif (nextRouter._def._config.errorFormatter && nextRouter._def._config.errorFormatter !== defaultFormatter) {\n\t\t\tif (currentErrorFormatter !== defaultFormatter && currentErrorFormatter !== nextRouter._def._config.errorFormatter) throw new Error(\"You seem to have several error formatters\");\n\t\t\treturn nextRouter._def._config.errorFormatter;\n\t\t}\n\t\treturn currentErrorFormatter;\n\t}, defaultFormatter);\n\tconst transformer = routerList.reduce((prev, current) => {\n\t\tif (current._def._config.transformer && current._def._config.transformer !== defaultTransformer) {\n\t\t\tif (prev !== defaultTransformer && prev !== current._def._config.transformer) throw new Error(\"You seem to have several transformers\");\n\t\t\treturn current._def._config.transformer;\n\t\t}\n\t\treturn prev;\n\t}, defaultTransformer);\n\tconst router = createRouterFactory({\n\t\terrorFormatter,\n\t\ttransformer,\n\t\tisDev: routerList.every((r) => r._def._config.isDev),\n\t\tallowOutsideOfServer: routerList.every((r) => r._def._config.allowOutsideOfServer),\n\t\tisServer: routerList.every((r) => r._def._config.isServer),\n\t\t$types: (_routerList$ = routerList[0]) === null || _routerList$ === void 0 ? void 0 : _routerList$._def._config.$types\n\t})(record);\n\treturn router;\n}\n\n//#endregion\n//#region src/unstable-core-do-not-import/stream/tracked.ts\nconst trackedSymbol = Symbol();\n/**\n* Produce a typed server-sent event message\n* @deprecated use `tracked(id, data)` instead\n*/\nfunction sse(event) {\n\treturn tracked(event.id, event.data);\n}\nfunction isTrackedEnvelope(value) {\n\treturn Array.isArray(value) && value[2] === trackedSymbol;\n}\n/**\n* Automatically track an event so that it can be resumed from a given id if the connection is lost\n*/\nfunction tracked(id, data) {\n\tif (id === \"\") throw new Error(\"`id` must not be an empty string as empty string is the same as not setting the id at all\");\n\treturn [\n\t\tid,\n\t\tdata,\n\t\ttrackedSymbol\n\t];\n}\n\n//#endregion\nexport { TRPCError, callProcedure, createCallerFactory, createRouterFactory, defaultFormatter, defaultTransformer, getCauseFromUnknown, getDataTransformer, getProcedureAtPath, getTRPCErrorFromUnknown, isTrackedEnvelope, lazy, mergeRouters, sse, tracked, transformResult, transformTRPCResponse };\n//# sourceMappingURL=tracked-gU3ttYjg.mjs.map","import { __commonJS, __toESM, require_defineProperty, require_objectSpread2 } from \"./getErrorShape-Uhlrl4Bk.mjs\";\nimport { TRPCError, createCallerFactory, createRouterFactory, defaultFormatter, defaultTransformer, getDataTransformer, getTRPCErrorFromUnknown, mergeRouters } from \"./tracked-gU3ttYjg.mjs\";\nimport { isObject, mergeWithoutOverrides } from \"./utils-DdbbrDku.mjs\";\n\n//#region src/unstable-core-do-not-import/middleware.ts\nvar import_objectSpread2$2 = __toESM(require_objectSpread2(), 1);\n/** @internal */\nconst middlewareMarker = \"middlewareMarker\";\n/**\n* @internal\n*/\nfunction createMiddlewareFactory() {\n\tfunction createMiddlewareInner(middlewares) {\n\t\treturn {\n\t\t\t_middlewares: middlewares,\n\t\t\tunstable_pipe(middlewareBuilderOrFn) {\n\t\t\t\tconst pipedMiddleware = \"_middlewares\" in middlewareBuilderOrFn ? middlewareBuilderOrFn._middlewares : [middlewareBuilderOrFn];\n\t\t\t\treturn createMiddlewareInner([...middlewares, ...pipedMiddleware]);\n\t\t\t}\n\t\t};\n\t}\n\tfunction createMiddleware(fn) {\n\t\treturn createMiddlewareInner([fn]);\n\t}\n\treturn createMiddleware;\n}\n/**\n* Create a standalone middleware\n* @see https://trpc.io/docs/v11/server/middlewares#experimental-standalone-middlewares\n* @deprecated use `.concat()` instead\n*/\nconst experimental_standaloneMiddleware = () => ({ create: createMiddlewareFactory() });\n/**\n* @internal\n* Please note, `trpc-openapi` uses this function.\n*/\nfunction createInputMiddleware(parse) {\n\tconst inputMiddleware = async function inputValidatorMiddleware(opts) {\n\t\tlet parsedInput;\n\t\tconst rawInput = await opts.getRawInput();\n\t\ttry {\n\t\t\tparsedInput = await parse(rawInput);\n\t\t} catch (cause) {\n\t\t\tthrow new TRPCError({\n\t\t\t\tcode: \"BAD_REQUEST\",\n\t\t\t\tcause\n\t\t\t});\n\t\t}\n\t\tconst combinedInput = isObject(opts.input) && isObject(parsedInput) ? (0, import_objectSpread2$2.default)((0, import_objectSpread2$2.default)({}, opts.input), parsedInput) : parsedInput;\n\t\treturn opts.next({ input: combinedInput });\n\t};\n\tinputMiddleware._type = \"input\";\n\treturn inputMiddleware;\n}\n/**\n* @internal\n*/\nfunction createOutputMiddleware(parse) {\n\tconst outputMiddleware = async function outputValidatorMiddleware({ next }) {\n\t\tconst result = await next();\n\t\tif (!result.ok) return result;\n\t\ttry {\n\t\t\tconst data = await parse(result.data);\n\t\t\treturn (0, import_objectSpread2$2.default)((0, import_objectSpread2$2.default)({}, result), {}, { data });\n\t\t} catch (cause) {\n\t\t\tthrow new TRPCError({\n\t\t\t\tmessage: \"Output validation failed\",\n\t\t\t\tcode: \"INTERNAL_SERVER_ERROR\",\n\t\t\t\tcause\n\t\t\t});\n\t\t}\n\t};\n\toutputMiddleware._type = \"output\";\n\treturn outputMiddleware;\n}\n\n//#endregion\n//#region src/vendor/standard-schema-v1/error.ts\nvar import_defineProperty = __toESM(require_defineProperty(), 1);\n/** A schema error with useful information. */\nvar StandardSchemaV1Error = class extends Error {\n\t/**\n\t* Creates a schema error with useful information.\n\t*\n\t* @param issues The schema issues.\n\t*/\n\tconstructor(issues) {\n\t\tvar _issues$;\n\t\tsuper((_issues$ = issues[0]) === null || _issues$ === void 0 ? void 0 : _issues$.message);\n\t\t(0, import_defineProperty.default)(this, \"issues\", void 0);\n\t\tthis.name = \"SchemaError\";\n\t\tthis.issues = issues;\n\t}\n};\n\n//#endregion\n//#region src/unstable-core-do-not-import/parser.ts\nfunction getParseFn(procedureParser) {\n\tconst parser = procedureParser;\n\tconst isStandardSchema = \"~standard\" in parser;\n\tif (typeof parser === \"function\" && typeof parser.assert === \"function\") return parser.assert.bind(parser);\n\tif (typeof parser === \"function\" && !isStandardSchema) return parser;\n\tif (typeof parser.parseAsync === \"function\") return parser.parseAsync.bind(parser);\n\tif (typeof parser.parse === \"function\") return parser.parse.bind(parser);\n\tif (typeof parser.validateSync === \"function\") return parser.validateSync.bind(parser);\n\tif (typeof parser.create === \"function\") return parser.create.bind(parser);\n\tif (typeof parser.assert === \"function\") return (value) => {\n\t\tparser.assert(value);\n\t\treturn value;\n\t};\n\tif (isStandardSchema) return async (value) => {\n\t\tconst result = await parser[\"~standard\"].validate(value);\n\t\tif (result.issues) throw new StandardSchemaV1Error(result.issues);\n\t\treturn result.value;\n\t};\n\tthrow new Error(\"Could not find a validator fn\");\n}\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/objectWithoutPropertiesLoose.js\nvar require_objectWithoutPropertiesLoose = __commonJS({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/objectWithoutPropertiesLoose.js\"(exports, module) {\n\tfunction _objectWithoutPropertiesLoose(r, e) {\n\t\tif (null == r) return {};\n\t\tvar t = {};\n\t\tfor (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n\t\t\tif (e.includes(n)) continue;\n\t\t\tt[n] = r[n];\n\t\t}\n\t\treturn t;\n\t}\n\tmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/objectWithoutProperties.js\nvar require_objectWithoutProperties = __commonJS({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/objectWithoutProperties.js\"(exports, module) {\n\tvar objectWithoutPropertiesLoose = require_objectWithoutPropertiesLoose();\n\tfunction _objectWithoutProperties$1(e, t) {\n\t\tif (null == e) return {};\n\t\tvar o, r, i = objectWithoutPropertiesLoose(e, t);\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tvar s = Object.getOwnPropertySymbols(e);\n\t\t\tfor (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n\t\t}\n\t\treturn i;\n\t}\n\tmodule.exports = _objectWithoutProperties$1, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region src/unstable-core-do-not-import/procedureBuilder.ts\nvar import_objectWithoutProperties = __toESM(require_objectWithoutProperties(), 1);\nvar import_objectSpread2$1 = __toESM(require_objectSpread2(), 1);\nconst _excluded = [\n\t\"middlewares\",\n\t\"inputs\",\n\t\"meta\"\n];\nfunction createNewBuilder(def1, def2) {\n\tconst { middlewares = [], inputs, meta } = def2, rest = (0, import_objectWithoutProperties.default)(def2, _excluded);\n\treturn createBuilder((0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, mergeWithoutOverrides(def1, rest)), {}, {\n\t\tinputs: [...def1.inputs, ...inputs !== null && inputs !== void 0 ? inputs : []],\n\t\tmiddlewares: [...def1.middlewares, ...middlewares],\n\t\tmeta: def1.meta && meta ? (0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, def1.meta), meta) : meta !== null && meta !== void 0 ? meta : def1.meta\n\t}));\n}\nfunction createBuilder(initDef = {}) {\n\tconst _def = (0, import_objectSpread2$1.default)({\n\t\tprocedure: true,\n\t\tinputs: [],\n\t\tmiddlewares: []\n\t}, initDef);\n\tconst builder = {\n\t\t_def,\n\t\tinput(input) {\n\t\t\tconst parser = getParseFn(input);\n\t\t\treturn createNewBuilder(_def, {\n\t\t\t\tinputs: [input],\n\t\t\t\tmiddlewares: [createInputMiddleware(parser)]\n\t\t\t});\n\t\t},\n\t\toutput(output) {\n\t\t\tconst parser = getParseFn(output);\n\t\t\treturn createNewBuilder(_def, {\n\t\t\t\toutput,\n\t\t\t\tmiddlewares: [createOutputMiddleware(parser)]\n\t\t\t});\n\t\t},\n\t\tmeta(meta) {\n\t\t\treturn createNewBuilder(_def, { meta });\n\t\t},\n\t\tuse(middlewareBuilderOrFn) {\n\t\t\tconst middlewares = \"_middlewares\" in middlewareBuilderOrFn ? middlewareBuilderOrFn._middlewares : [middlewareBuilderOrFn];\n\t\t\treturn createNewBuilder(_def, { middlewares });\n\t\t},\n\t\tunstable_concat(builder$1) {\n\t\t\treturn createNewBuilder(_def, builder$1._def);\n\t\t},\n\t\tconcat(builder$1) {\n\t\t\treturn createNewBuilder(_def, builder$1._def);\n\t\t},\n\t\tquery(resolver) {\n\t\t\treturn createResolver((0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, _def), {}, { type: \"query\" }), resolver);\n\t\t},\n\t\tmutation(resolver) {\n\t\t\treturn createResolver((0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, _def), {}, { type: \"mutation\" }), resolver);\n\t\t},\n\t\tsubscription(resolver) {\n\t\t\treturn createResolver((0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, _def), {}, { type: \"subscription\" }), resolver);\n\t\t},\n\t\texperimental_caller(caller) {\n\t\t\treturn createNewBuilder(_def, { caller });\n\t\t}\n\t};\n\treturn builder;\n}\nfunction createResolver(_defIn, resolver) {\n\tconst finalBuilder = createNewBuilder(_defIn, {\n\t\tresolver,\n\t\tmiddlewares: [async function resolveMiddleware(opts) {\n\t\t\tconst data = await resolver(opts);\n\t\t\treturn {\n\t\t\t\tmarker: middlewareMarker,\n\t\t\t\tok: true,\n\t\t\t\tdata,\n\t\t\t\tctx: opts.ctx\n\t\t\t};\n\t\t}]\n\t});\n\tconst _def = (0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, finalBuilder._def), {}, {\n\t\ttype: _defIn.type,\n\t\texperimental_caller: Boolean(finalBuilder._def.caller),\n\t\tmeta: finalBuilder._def.meta,\n\t\t$types: null\n\t});\n\tconst invoke = createProcedureCaller(finalBuilder._def);\n\tconst callerOverride = finalBuilder._def.caller;\n\tif (!callerOverride) return invoke;\n\tconst callerWrapper = async (...args) => {\n\t\treturn await callerOverride({\n\t\t\targs,\n\t\t\tinvoke,\n\t\t\t_def\n\t\t});\n\t};\n\tcallerWrapper._def = _def;\n\treturn callerWrapper;\n}\nconst codeblock = `\nThis is a client-only function.\nIf you want to call this function on the server, see https://trpc.io/docs/v11/server/server-side-calls\n`.trim();\nasync function callRecursive(index, _def, opts) {\n\ttry {\n\t\tconst middleware = _def.middlewares[index];\n\t\tconst result = await middleware((0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, opts), {}, {\n\t\t\tmeta: _def.meta,\n\t\t\tinput: opts.input,\n\t\t\tnext(_nextOpts) {\n\t\t\t\tvar _nextOpts$getRawInput;\n\t\t\t\tconst nextOpts = _nextOpts;\n\t\t\t\treturn callRecursive(index + 1, _def, (0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, opts), {}, {\n\t\t\t\t\tctx: (nextOpts === null || nextOpts === void 0 ? void 0 : nextOpts.ctx) ? (0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, opts.ctx), nextOpts.ctx) : opts.ctx,\n\t\t\t\t\tinput: nextOpts && \"input\" in nextOpts ? nextOpts.input : opts.input,\n\t\t\t\t\tgetRawInput: (_nextOpts$getRawInput = nextOpts === null || nextOpts === void 0 ? void 0 : nextOpts.getRawInput) !== null && _nextOpts$getRawInput !== void 0 ? _nextOpts$getRawInput : opts.getRawInput\n\t\t\t\t}));\n\t\t\t}\n\t\t}));\n\t\treturn result;\n\t} catch (cause) {\n\t\treturn {\n\t\t\tok: false,\n\t\t\terror: getTRPCErrorFromUnknown(cause),\n\t\t\tmarker: middlewareMarker\n\t\t};\n\t}\n}\nfunction createProcedureCaller(_def) {\n\tasync function procedure(opts) {\n\t\tif (!opts || !(\"getRawInput\" in opts)) throw new Error(codeblock);\n\t\tconst result = await callRecursive(0, _def, opts);\n\t\tif (!result) throw new TRPCError({\n\t\t\tcode: \"INTERNAL_SERVER_ERROR\",\n\t\t\tmessage: \"No result from middlewares - did you forget to `return next()`?\"\n\t\t});\n\t\tif (!result.ok) throw result.error;\n\t\treturn result.data;\n\t}\n\tprocedure._def = _def;\n\tprocedure.procedure = true;\n\tprocedure.meta = _def.meta;\n\treturn procedure;\n}\n\n//#endregion\n//#region src/unstable-core-do-not-import/rootConfig.ts\nvar _globalThis$process, _globalThis$process2, _globalThis$process3;\n/**\n* The default check to see if we're in a server\n*/\nconst isServerDefault = typeof window === \"undefined\" || \"Deno\" in window || ((_globalThis$process = globalThis.process) === null || _globalThis$process === void 0 || (_globalThis$process = _globalThis$process.env) === null || _globalThis$process === void 0 ? void 0 : _globalThis$process[\"NODE_ENV\"]) === \"test\" || !!((_globalThis$process2 = globalThis.process) === null || _globalThis$process2 === void 0 || (_globalThis$process2 = _globalThis$process2.env) === null || _globalThis$process2 === void 0 ? void 0 : _globalThis$process2[\"JEST_WORKER_ID\"]) || !!((_globalThis$process3 = globalThis.process) === null || _globalThis$process3 === void 0 || (_globalThis$process3 = _globalThis$process3.env) === null || _globalThis$process3 === void 0 ? void 0 : _globalThis$process3[\"VITEST_WORKER_ID\"]);\n\n//#endregion\n//#region src/unstable-core-do-not-import/initTRPC.ts\nvar import_objectSpread2 = __toESM(require_objectSpread2(), 1);\nvar TRPCBuilder = class TRPCBuilder {\n\t/**\n\t* Add a context shape as a generic to the root object\n\t* @see https://trpc.io/docs/v11/server/context\n\t*/\n\tcontext() {\n\t\treturn new TRPCBuilder();\n\t}\n\t/**\n\t* Add a meta shape as a generic to the root object\n\t* @see https://trpc.io/docs/v11/quickstart\n\t*/\n\tmeta() {\n\t\treturn new TRPCBuilder();\n\t}\n\t/**\n\t* Create the root object\n\t* @see https://trpc.io/docs/v11/server/routers#initialize-trpc\n\t*/\n\tcreate(opts) {\n\t\tvar _opts$transformer, _opts$isDev, _globalThis$process$1, _opts$allowOutsideOfS, _opts$errorFormatter, _opts$isServer;\n\t\tconst config = (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, opts), {}, {\n\t\t\ttransformer: getDataTransformer((_opts$transformer = opts === null || opts === void 0 ? void 0 : opts.transformer) !== null && _opts$transformer !== void 0 ? _opts$transformer : defaultTransformer),\n\t\t\tisDev: (_opts$isDev = opts === null || opts === void 0 ? void 0 : opts.isDev) !== null && _opts$isDev !== void 0 ? _opts$isDev : ((_globalThis$process$1 = globalThis.process) === null || _globalThis$process$1 === void 0 ? void 0 : _globalThis$process$1.env[\"NODE_ENV\"]) !== \"production\",\n\t\t\tallowOutsideOfServer: (_opts$allowOutsideOfS = opts === null || opts === void 0 ? void 0 : opts.allowOutsideOfServer) !== null && _opts$allowOutsideOfS !== void 0 ? _opts$allowOutsideOfS : false,\n\t\t\terrorFormatter: (_opts$errorFormatter = opts === null || opts === void 0 ? void 0 : opts.errorFormatter) !== null && _opts$errorFormatter !== void 0 ? _opts$errorFormatter : defaultFormatter,\n\t\t\tisServer: (_opts$isServer = opts === null || opts === void 0 ? void 0 : opts.isServer) !== null && _opts$isServer !== void 0 ? _opts$isServer : isServerDefault,\n\t\t\t$types: null\n\t\t});\n\t\t{\n\t\t\tvar _opts$isServer2;\n\t\t\tconst isServer = (_opts$isServer2 = opts === null || opts === void 0 ? void 0 : opts.isServer) !== null && _opts$isServer2 !== void 0 ? _opts$isServer2 : isServerDefault;\n\t\t\tif (!isServer && (opts === null || opts === void 0 ? void 0 : opts.allowOutsideOfServer) !== true) throw new Error(`You're trying to use @trpc/server in a non-server environment. This is not supported by default.`);\n\t\t}\n\t\treturn {\n\t\t\t_config: config,\n\t\t\tprocedure: createBuilder({ meta: opts === null || opts === void 0 ? void 0 : opts.defaultMeta }),\n\t\t\tmiddleware: createMiddlewareFactory(),\n\t\t\trouter: createRouterFactory(config),\n\t\t\tmergeRouters,\n\t\t\tcreateCallerFactory: createCallerFactory()\n\t\t};\n\t}\n};\n/**\n* Builder to initialize the tRPC root object - use this exactly once per backend\n* @see https://trpc.io/docs/v11/quickstart\n*/\nconst initTRPC = new TRPCBuilder();\n\n//#endregion\nexport { StandardSchemaV1Error, createBuilder, createInputMiddleware, createMiddlewareFactory, createOutputMiddleware, experimental_standaloneMiddleware, getParseFn, initTRPC, isServerDefault, middlewareMarker };\n//# sourceMappingURL=initTRPC-IT_6ZYJd.mjs.map","import digest from '../runtime/digest.js';\nexport const encoder = new TextEncoder();\nexport const decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nexport function concat(...buffers) {\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    for (const buffer of buffers) {\n        buf.set(buffer, i);\n        i += buffer.length;\n    }\n    return buf;\n}\nexport function p2s(alg, p2sInput) {\n    return concat(encoder.encode(alg), new Uint8Array([0]), p2sInput);\n}\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nexport function uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nexport function uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\nexport function lengthAndInput(input) {\n    return concat(uint32be(input.length), input);\n}\nexport async function concatKdf(secret, bits, value) {\n    const iterations = Math.ceil((bits >> 3) / 32);\n    const res = new Uint8Array(iterations * 32);\n    for (let iter = 0; iter < iterations; iter++) {\n        const buf = new Uint8Array(4 + secret.length + value.length);\n        buf.set(uint32be(iter + 1));\n        buf.set(secret, 4);\n        buf.set(value, 4 + secret.length);\n        res.set(await digest('sha256', buf), iter * 32);\n    }\n    return res.slice(0, bits >> 3);\n}\n","import { encoder, decoder } from '../lib/buffer_utils.js';\nexport const encodeBase64 = (input) => {\n    let unencoded = input;\n    if (typeof unencoded === 'string') {\n        unencoded = encoder.encode(unencoded);\n    }\n    const CHUNK_SIZE = 0x8000;\n    const arr = [];\n    for (let i = 0; i < unencoded.length; i += CHUNK_SIZE) {\n        arr.push(String.fromCharCode.apply(null, unencoded.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join(''));\n};\nexport const encode = (input) => {\n    return encodeBase64(input).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n};\nexport const decodeBase64 = (encoded) => {\n    const binary = atob(encoded);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n};\nexport const decode = (input) => {\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = decoder.decode(encoded);\n    }\n    encoded = encoded.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '');\n    try {\n        return decodeBase64(encoded);\n    }\n    catch {\n        throw new TypeError('The input to be decoded is not correctly encoded.');\n    }\n};\n","export class JOSEError extends Error {\n    static get code() {\n        return 'ERR_JOSE_GENERIC';\n    }\n    constructor(message) {\n        super(message);\n        this.code = 'ERR_JOSE_GENERIC';\n        this.name = this.constructor.name;\n        Error.captureStackTrace?.(this, this.constructor);\n    }\n}\nexport class JWTClaimValidationFailed extends JOSEError {\n    static get code() {\n        return 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n    }\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n        super(message);\n        this.code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n        this.claim = claim;\n        this.reason = reason;\n        this.payload = payload;\n    }\n}\nexport class JWTExpired extends JOSEError {\n    static get code() {\n        return 'ERR_JWT_EXPIRED';\n    }\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n        super(message);\n        this.code = 'ERR_JWT_EXPIRED';\n        this.claim = claim;\n        this.reason = reason;\n        this.payload = payload;\n    }\n}\nexport class JOSEAlgNotAllowed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n    static get code() {\n        return 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n}\nexport class JOSENotSupported extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_NOT_SUPPORTED';\n    }\n    static get code() {\n        return 'ERR_JOSE_NOT_SUPPORTED';\n    }\n}\nexport class JWEDecryptionFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_DECRYPTION_FAILED';\n        this.message = 'decryption operation failed';\n    }\n    static get code() {\n        return 'ERR_JWE_DECRYPTION_FAILED';\n    }\n}\nexport class JWEInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWE_INVALID';\n    }\n}\nexport class JWSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWS_INVALID';\n    }\n}\nexport class JWTInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWT_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWT_INVALID';\n    }\n}\nexport class JWKInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWK_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWK_INVALID';\n    }\n}\nexport class JWKSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWKS_INVALID';\n    }\n}\nexport class JWKSNoMatchingKey extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_NO_MATCHING_KEY';\n        this.message = 'no applicable key found in the JSON Web Key Set';\n    }\n    static get code() {\n        return 'ERR_JWKS_NO_MATCHING_KEY';\n    }\n}\nexport class JWKSMultipleMatchingKeys extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n        this.message = 'multiple matching keys found in the JSON Web Key Set';\n    }\n    static get code() {\n        return 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    }\n}\nSymbol.asyncIterator;\nexport class JWKSTimeout extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_TIMEOUT';\n        this.message = 'request timed out';\n    }\n    static get code() {\n        return 'ERR_JWKS_TIMEOUT';\n    }\n}\nexport class JWSSignatureVerificationFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n        this.message = 'signature verification failed';\n    }\n    static get code() {\n        return 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    }\n}\n","export default crypto;\nexport const isCryptoKey = (key) => key instanceof CryptoKey;\n","import crypto from './webcrypto.js';\nexport default crypto.getRandomValues.bind(crypto);\n","import { JOSENotSupported } from '../util/errors.js';\nimport random from '../runtime/random.js';\nexport function bitLength(alg) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A128GCMKW':\n        case 'A192GCM':\n        case 'A192GCMKW':\n        case 'A256GCM':\n        case 'A256GCMKW':\n            return 96;\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            return 128;\n        default:\n            throw new JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n    }\n}\nexport default (alg) => random(new Uint8Array(bitLength(alg) >> 3));\n","import { JWEInvalid } from '../util/errors.js';\nimport { bitLength } from './iv.js';\nconst checkIvLength = (enc, iv) => {\n    if (iv.length << 3 !== bitLength(enc)) {\n        throw new JWEInvalid('Invalid Initialization Vector length');\n    }\n};\nexport default checkIvLength;\n","import { JWEInvalid } from '../util/errors.js';\nconst checkCekLength = (cek, expected) => {\n    const actual = cek.byteLength << 3;\n    if (actual !== expected) {\n        throw new JWEInvalid(`Invalid Content Encryption Key length. Expected ${expected} bits, got ${actual} bits`);\n    }\n};\nexport default checkCekLength;\n","import { concat, uint64be } from '../lib/buffer_utils.js';\nimport checkIvLength from '../lib/check_iv_length.js';\nimport checkCekLength from './check_cek_length.js';\nimport timingSafeEqual from './timing_safe_equal.js';\nimport { JOSENotSupported, JWEDecryptionFailed, JWEInvalid } from '../util/errors.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nasync function cbcDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    if (!(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, 'Uint8Array'));\n    }\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const encKey = await crypto.subtle.importKey('raw', cek.subarray(keySize >> 3), 'AES-CBC', false, ['decrypt']);\n    const macKey = await crypto.subtle.importKey('raw', cek.subarray(0, keySize >> 3), {\n        hash: `SHA-${keySize << 1}`,\n        name: 'HMAC',\n    }, false, ['sign']);\n    const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\n    const expectedTag = new Uint8Array((await crypto.subtle.sign('HMAC', macKey, macData)).slice(0, keySize >> 3));\n    let macCheckPassed;\n    try {\n        macCheckPassed = timingSafeEqual(tag, expectedTag);\n    }\n    catch {\n    }\n    if (!macCheckPassed) {\n        throw new JWEDecryptionFailed();\n    }\n    let plaintext;\n    try {\n        plaintext = new Uint8Array(await crypto.subtle.decrypt({ iv, name: 'AES-CBC' }, encKey, ciphertext));\n    }\n    catch {\n    }\n    if (!plaintext) {\n        throw new JWEDecryptionFailed();\n    }\n    return plaintext;\n}\nasync function gcmDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    let encKey;\n    if (cek instanceof Uint8Array) {\n        encKey = await crypto.subtle.importKey('raw', cek, 'AES-GCM', false, ['decrypt']);\n    }\n    else {\n        checkEncCryptoKey(cek, enc, 'decrypt');\n        encKey = cek;\n    }\n    try {\n        return new Uint8Array(await crypto.subtle.decrypt({\n            additionalData: aad,\n            iv,\n            name: 'AES-GCM',\n            tagLength: 128,\n        }, encKey, concat(ciphertext, tag)));\n    }\n    catch {\n        throw new JWEDecryptionFailed();\n    }\n}\nconst decrypt = async (enc, cek, ciphertext, iv, tag, aad) => {\n    if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, ...types, 'Uint8Array'));\n    }\n    if (!iv) {\n        throw new JWEInvalid('JWE Initialization Vector missing');\n    }\n    if (!tag) {\n        throw new JWEInvalid('JWE Authentication Tag missing');\n    }\n    checkIvLength(enc, iv);\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(-3), 10));\n            return cbcDecrypt(enc, cek, ciphertext, iv, tag, aad);\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(1, 4), 10));\n            return gcmDecrypt(enc, cek, ciphertext, iv, tag, aad);\n        default:\n            throw new JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n    }\n};\nexport default decrypt;\n","const bogusWebCrypto = [\n    { hash: 'SHA-256', name: 'HMAC' },\n    true,\n    ['sign'],\n];\nexport default bogusWebCrypto;\n","import bogusWebCrypto from './bogus.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nfunction checkKeySize(key, alg) {\n    if (key.algorithm.length !== parseInt(alg.slice(1, 4), 10)) {\n        throw new TypeError(`Invalid key size for alg: ${alg}`);\n    }\n}\nfunction getCryptoKey(key, alg, usage) {\n    if (isCryptoKey(key)) {\n        checkEncCryptoKey(key, alg, usage);\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        return crypto.subtle.importKey('raw', key, 'AES-KW', true, [usage]);\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\nexport const wrap = async (alg, key, cek) => {\n    const cryptoKey = await getCryptoKey(key, alg, 'wrapKey');\n    checkKeySize(cryptoKey, alg);\n    const cryptoKeyCek = await crypto.subtle.importKey('raw', cek, ...bogusWebCrypto);\n    return new Uint8Array(await crypto.subtle.wrapKey('raw', cryptoKeyCek, cryptoKey, 'AES-KW'));\n};\nexport const unwrap = async (alg, key, encryptedKey) => {\n    const cryptoKey = await getCryptoKey(key, alg, 'unwrapKey');\n    checkKeySize(cryptoKey, alg);\n    const cryptoKeyCek = await crypto.subtle.unwrapKey('raw', encryptedKey, cryptoKey, 'AES-KW', ...bogusWebCrypto);\n    return new Uint8Array(await crypto.subtle.exportKey('raw', cryptoKeyCek));\n};\n","import { encoder, concat, uint32be, lengthAndInput, concatKdf } from '../lib/buffer_utils.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport async function deriveKey(publicKey, privateKey, algorithm, keyLength, apu = new Uint8Array(0), apv = new Uint8Array(0)) {\n    if (!isCryptoKey(publicKey)) {\n        throw new TypeError(invalidKeyInput(publicKey, ...types));\n    }\n    checkEncCryptoKey(publicKey, 'ECDH');\n    if (!isCryptoKey(privateKey)) {\n        throw new TypeError(invalidKeyInput(privateKey, ...types));\n    }\n    checkEncCryptoKey(privateKey, 'ECDH', 'deriveBits');\n    const value = concat(lengthAndInput(encoder.encode(algorithm)), lengthAndInput(apu), lengthAndInput(apv), uint32be(keyLength));\n    let length;\n    if (publicKey.algorithm.name === 'X25519') {\n        length = 256;\n    }\n    else if (publicKey.algorithm.name === 'X448') {\n        length = 448;\n    }\n    else {\n        length =\n            Math.ceil(parseInt(publicKey.algorithm.namedCurve.substr(-3), 10) / 8) << 3;\n    }\n    const sharedSecret = new Uint8Array(await crypto.subtle.deriveBits({\n        name: publicKey.algorithm.name,\n        public: publicKey,\n    }, privateKey, length));\n    return concatKdf(sharedSecret, keyLength, value);\n}\nexport async function generateEpk(key) {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    return crypto.subtle.generateKey(key.algorithm, true, ['deriveBits']);\n}\nexport function ecdhAllowed(key) {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    return (['P-256', 'P-384', 'P-521'].includes(key.algorithm.namedCurve) ||\n        key.algorithm.name === 'X25519' ||\n        key.algorithm.name === 'X448');\n}\n","import { JWEInvalid } from '../util/errors.js';\nexport default function checkP2s(p2s) {\n    if (!(p2s instanceof Uint8Array) || p2s.length < 8) {\n        throw new JWEInvalid('PBES2 Salt Input must be 8 or more octets');\n    }\n}\n","import random from './random.js';\nimport { p2s as concatSalt } from '../lib/buffer_utils.js';\nimport { encode as base64url } from './base64url.js';\nimport { wrap, unwrap } from './aeskw.js';\nimport checkP2s from '../lib/check_p2s.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nfunction getCryptoKey(key, alg) {\n    if (key instanceof Uint8Array) {\n        return crypto.subtle.importKey('raw', key, 'PBKDF2', false, ['deriveBits']);\n    }\n    if (isCryptoKey(key)) {\n        checkEncCryptoKey(key, alg, 'deriveBits', 'deriveKey');\n        return key;\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\nasync function deriveKey(p2s, alg, p2c, key) {\n    checkP2s(p2s);\n    const salt = concatSalt(alg, p2s);\n    const keylen = parseInt(alg.slice(13, 16), 10);\n    const subtleAlg = {\n        hash: `SHA-${alg.slice(8, 11)}`,\n        iterations: p2c,\n        name: 'PBKDF2',\n        salt,\n    };\n    const wrapAlg = {\n        length: keylen,\n        name: 'AES-KW',\n    };\n    const cryptoKey = await getCryptoKey(key, alg);\n    if (cryptoKey.usages.includes('deriveBits')) {\n        return new Uint8Array(await crypto.subtle.deriveBits(subtleAlg, cryptoKey, keylen));\n    }\n    if (cryptoKey.usages.includes('deriveKey')) {\n        return crypto.subtle.deriveKey(subtleAlg, cryptoKey, wrapAlg, false, ['wrapKey', 'unwrapKey']);\n    }\n    throw new TypeError('PBKDF2 key \"usages\" must include \"deriveBits\" or \"deriveKey\"');\n}\nexport const encrypt = async (alg, key, cek, p2c = 2048, p2s = random(new Uint8Array(16))) => {\n    const derived = await deriveKey(p2s, alg, p2c, key);\n    const encryptedKey = await wrap(alg.slice(-6), derived, cek);\n    return { encryptedKey, p2c, p2s: base64url(p2s) };\n};\nexport const decrypt = async (alg, key, encryptedKey, p2c, p2s) => {\n    const derived = await deriveKey(p2s, alg, p2c, key);\n    return unwrap(alg.slice(-6), derived, encryptedKey);\n};\n","import { JOSENotSupported } from '../util/errors.js';\nexport default function subtleRsaEs(alg) {\n    switch (alg) {\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            return 'RSA-OAEP';\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n","import subtleAlgorithm from './subtle_rsaes.js';\nimport bogusWebCrypto from './bogus.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport checkKeyLength from './check_key_length.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport const encrypt = async (alg, key, cek) => {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    checkEncCryptoKey(key, alg, 'encrypt', 'wrapKey');\n    checkKeyLength(alg, key);\n    if (key.usages.includes('encrypt')) {\n        return new Uint8Array(await crypto.subtle.encrypt(subtleAlgorithm(alg), key, cek));\n    }\n    if (key.usages.includes('wrapKey')) {\n        const cryptoKeyCek = await crypto.subtle.importKey('raw', cek, ...bogusWebCrypto);\n        return new Uint8Array(await crypto.subtle.wrapKey('raw', cryptoKeyCek, key, subtleAlgorithm(alg)));\n    }\n    throw new TypeError('RSA-OAEP key \"usages\" must include \"encrypt\" or \"wrapKey\" for this operation');\n};\nexport const decrypt = async (alg, key, encryptedKey) => {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    checkEncCryptoKey(key, alg, 'decrypt', 'unwrapKey');\n    checkKeyLength(alg, key);\n    if (key.usages.includes('decrypt')) {\n        return new Uint8Array(await crypto.subtle.decrypt(subtleAlgorithm(alg), key, encryptedKey));\n    }\n    if (key.usages.includes('unwrapKey')) {\n        const cryptoKeyCek = await crypto.subtle.unwrapKey('raw', encryptedKey, key, subtleAlgorithm(alg), ...bogusWebCrypto);\n        return new Uint8Array(await crypto.subtle.exportKey('raw', cryptoKeyCek));\n    }\n    throw new TypeError('RSA-OAEP key \"usages\" must include \"decrypt\" or \"unwrapKey\" for this operation');\n};\n","import crypto from './webcrypto.js';\nimport { JOSENotSupported } from '../util/errors.js';\nfunction subtleMapping(jwk) {\n    let algorithm;\n    let keyUsages;\n    switch (jwk.kty) {\n        case 'RSA': {\n            switch (jwk.alg) {\n                case 'PS256':\n                case 'PS384':\n                case 'PS512':\n                    algorithm = { name: 'RSA-PSS', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RS256':\n                case 'RS384':\n                case 'RS512':\n                    algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RSA-OAEP':\n                case 'RSA-OAEP-256':\n                case 'RSA-OAEP-384':\n                case 'RSA-OAEP-512':\n                    algorithm = {\n                        name: 'RSA-OAEP',\n                        hash: `SHA-${parseInt(jwk.alg.slice(-3), 10) || 1}`,\n                    };\n                    keyUsages = jwk.d ? ['decrypt', 'unwrapKey'] : ['encrypt', 'wrapKey'];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'EC': {\n            switch (jwk.alg) {\n                case 'ES256':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES384':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES512':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: 'ECDH', namedCurve: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'OKP': {\n            switch (jwk.alg) {\n                case 'EdDSA':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"kty\" (Key Type) Parameter value');\n    }\n    return { algorithm, keyUsages };\n}\nconst parse = async (jwk) => {\n    if (!jwk.alg) {\n        throw new TypeError('\"alg\" argument is required when \"jwk.alg\" is not present');\n    }\n    const { algorithm, keyUsages } = subtleMapping(jwk);\n    const rest = [\n        algorithm,\n        jwk.ext ?? false,\n        jwk.key_ops ?? keyUsages,\n    ];\n    const keyData = { ...jwk };\n    delete keyData.alg;\n    delete keyData.use;\n    return crypto.subtle.importKey('jwk', keyData, ...rest);\n};\nexport default parse;\n","import { decode } from './base64url.js';\nimport importJWK from './jwk_to_key.js';\nconst normalizeSecretKey = (k) => decode(k);\nlet privCache;\nlet pubCache;\nconst isKeyObject = (key) => {\n    return key?.[Symbol.toStringTag] === 'KeyObject';\n};\nconst importAndCache = async (cache, key, jwk, alg) => {\n    let cached = cache.get(key);\n    if (cached?.[alg]) {\n        return cached[alg];\n    }\n    const cryptoKey = await importJWK({ ...jwk, alg });\n    if (!cached) {\n        cache.set(key, { [alg]: cryptoKey });\n    }\n    else {\n        cached[alg] = cryptoKey;\n    }\n    return cryptoKey;\n};\nconst normalizePublicKey = (key, alg) => {\n    if (isKeyObject(key)) {\n        let jwk = key.export({ format: 'jwk' });\n        delete jwk.d;\n        delete jwk.dp;\n        delete jwk.dq;\n        delete jwk.p;\n        delete jwk.q;\n        delete jwk.qi;\n        if (jwk.k) {\n            return normalizeSecretKey(jwk.k);\n        }\n        pubCache || (pubCache = new WeakMap());\n        return importAndCache(pubCache, key, jwk, alg);\n    }\n    return key;\n};\nconst normalizePrivateKey = (key, alg) => {\n    if (isKeyObject(key)) {\n        let jwk = key.export({ format: 'jwk' });\n        if (jwk.k) {\n            return normalizeSecretKey(jwk.k);\n        }\n        privCache || (privCache = new WeakMap());\n        return importAndCache(privCache, key, jwk, alg);\n    }\n    return key;\n};\nexport default { normalizePublicKey, normalizePrivateKey };\n","import { JOSENotSupported } from '../util/errors.js';\nimport random from '../runtime/random.js';\nexport function bitLength(alg) {\n    switch (alg) {\n        case 'A128GCM':\n            return 128;\n        case 'A192GCM':\n            return 192;\n        case 'A256GCM':\n        case 'A128CBC-HS256':\n            return 256;\n        case 'A192CBC-HS384':\n            return 384;\n        case 'A256CBC-HS512':\n            return 512;\n        default:\n            throw new JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n    }\n}\nexport default (alg) => random(new Uint8Array(bitLength(alg) >> 3));\n","import crypto, { isCryptoKey } from './webcrypto.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { encodeBase64, decodeBase64 } from './base64url.js';\nimport formatPEM from '../lib/format_pem.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { types } from './is_key_like.js';\nconst genericExport = async (keyType, keyFormat, key) => {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    if (!key.extractable) {\n        throw new TypeError('CryptoKey is not extractable');\n    }\n    if (key.type !== keyType) {\n        throw new TypeError(`key is not a ${keyType} key`);\n    }\n    return formatPEM(encodeBase64(new Uint8Array(await crypto.subtle.exportKey(keyFormat, key))), `${keyType.toUpperCase()} KEY`);\n};\nexport const toSPKI = (key) => {\n    return genericExport('public', 'spki', key);\n};\nexport const toPKCS8 = (key) => {\n    return genericExport('private', 'pkcs8', key);\n};\nconst findOid = (keyData, oid, from = 0) => {\n    if (from === 0) {\n        oid.unshift(oid.length);\n        oid.unshift(0x06);\n    }\n    const i = keyData.indexOf(oid[0], from);\n    if (i === -1)\n        return false;\n    const sub = keyData.subarray(i, i + oid.length);\n    if (sub.length !== oid.length)\n        return false;\n    return sub.every((value, index) => value === oid[index]) || findOid(keyData, oid, i + 1);\n};\nconst getNamedCurve = (keyData) => {\n    switch (true) {\n        case findOid(keyData, [0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07]):\n            return 'P-256';\n        case findOid(keyData, [0x2b, 0x81, 0x04, 0x00, 0x22]):\n            return 'P-384';\n        case findOid(keyData, [0x2b, 0x81, 0x04, 0x00, 0x23]):\n            return 'P-521';\n        case findOid(keyData, [0x2b, 0x65, 0x6e]):\n            return 'X25519';\n        case findOid(keyData, [0x2b, 0x65, 0x6f]):\n            return 'X448';\n        case findOid(keyData, [0x2b, 0x65, 0x70]):\n            return 'Ed25519';\n        case findOid(keyData, [0x2b, 0x65, 0x71]):\n            return 'Ed448';\n        default:\n            throw new JOSENotSupported('Invalid or unsupported EC Key Curve or OKP Key Sub Type');\n    }\n};\nconst genericImport = async (replace, keyFormat, pem, alg, options) => {\n    let algorithm;\n    let keyUsages;\n    const keyData = new Uint8Array(atob(pem.replace(replace, ''))\n        .split('')\n        .map((c) => c.charCodeAt(0)));\n    const isPublic = keyFormat === 'spki';\n    switch (alg) {\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            algorithm = { name: 'RSA-PSS', hash: `SHA-${alg.slice(-3)}` };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${alg.slice(-3)}` };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            algorithm = {\n                name: 'RSA-OAEP',\n                hash: `SHA-${parseInt(alg.slice(-3), 10) || 1}`,\n            };\n            keyUsages = isPublic ? ['encrypt', 'wrapKey'] : ['decrypt', 'unwrapKey'];\n            break;\n        case 'ES256':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ES384':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ES512':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            const namedCurve = getNamedCurve(keyData);\n            algorithm = namedCurve.startsWith('P-') ? { name: 'ECDH', namedCurve } : { name: namedCurve };\n            keyUsages = isPublic ? [] : ['deriveBits'];\n            break;\n        }\n        case 'EdDSA':\n            algorithm = { name: getNamedCurve(keyData) };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        default:\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (Algorithm) value');\n    }\n    return crypto.subtle.importKey(keyFormat, keyData, algorithm, options?.extractable ?? false, keyUsages);\n};\nexport const fromPKCS8 = (pem, alg, options) => {\n    return genericImport(/(?:-----(?:BEGIN|END) PRIVATE KEY-----|\\s)/g, 'pkcs8', pem, alg, options);\n};\nexport const fromSPKI = (pem, alg, options) => {\n    return genericImport(/(?:-----(?:BEGIN|END) PUBLIC KEY-----|\\s)/g, 'spki', pem, alg, options);\n};\nfunction getElement(seq) {\n    const result = [];\n    let next = 0;\n    while (next < seq.length) {\n        const nextPart = parseElement(seq.subarray(next));\n        result.push(nextPart);\n        next += nextPart.byteLength;\n    }\n    return result;\n}\nfunction parseElement(bytes) {\n    let position = 0;\n    let tag = bytes[0] & 0x1f;\n    position++;\n    if (tag === 0x1f) {\n        tag = 0;\n        while (bytes[position] >= 0x80) {\n            tag = tag * 128 + bytes[position] - 0x80;\n            position++;\n        }\n        tag = tag * 128 + bytes[position] - 0x80;\n        position++;\n    }\n    let length = 0;\n    if (bytes[position] < 0x80) {\n        length = bytes[position];\n        position++;\n    }\n    else if (length === 0x80) {\n        length = 0;\n        while (bytes[position + length] !== 0 || bytes[position + length + 1] !== 0) {\n            if (length > bytes.byteLength) {\n                throw new TypeError('invalid indefinite form length');\n            }\n            length++;\n        }\n        const byteLength = position + length + 2;\n        return {\n            byteLength,\n            contents: bytes.subarray(position, position + length),\n            raw: bytes.subarray(0, byteLength),\n        };\n    }\n    else {\n        const numberOfDigits = bytes[position] & 0x7f;\n        position++;\n        length = 0;\n        for (let i = 0; i < numberOfDigits; i++) {\n            length = length * 256 + bytes[position];\n            position++;\n        }\n    }\n    const byteLength = position + length;\n    return {\n        byteLength,\n        contents: bytes.subarray(position, byteLength),\n        raw: bytes.subarray(0, byteLength),\n    };\n}\nfunction spkiFromX509(buf) {\n    const tbsCertificate = getElement(getElement(parseElement(buf).contents)[0].contents);\n    return encodeBase64(tbsCertificate[tbsCertificate[0].raw[0] === 0xa0 ? 6 : 5].raw);\n}\nfunction getSPKI(x509) {\n    const pem = x509.replace(/(?:-----(?:BEGIN|END) CERTIFICATE-----|\\s)/g, '');\n    const raw = decodeBase64(pem);\n    return formatPEM(spkiFromX509(raw), 'PUBLIC KEY');\n}\nexport const fromX509 = (pem, alg, options) => {\n    let spki;\n    try {\n        spki = getSPKI(pem);\n    }\n    catch (cause) {\n        throw new TypeError('Failed to parse the X.509 certificate', { cause });\n    }\n    return fromSPKI(spki, alg, options);\n};\n","import { decode as decodeBase64URL } from '../runtime/base64url.js';\nimport { fromSPKI, fromPKCS8, fromX509 } from '../runtime/asn1.js';\nimport asKeyObject from '../runtime/jwk_to_key.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nexport async function importSPKI(spki, alg, options) {\n    if (typeof spki !== 'string' || spki.indexOf('-----BEGIN PUBLIC KEY-----') !== 0) {\n        throw new TypeError('\"spki\" must be SPKI formatted string');\n    }\n    return fromSPKI(spki, alg, options);\n}\nexport async function importX509(x509, alg, options) {\n    if (typeof x509 !== 'string' || x509.indexOf('-----BEGIN CERTIFICATE-----') !== 0) {\n        throw new TypeError('\"x509\" must be X.509 formatted string');\n    }\n    return fromX509(x509, alg, options);\n}\nexport async function importPKCS8(pkcs8, alg, options) {\n    if (typeof pkcs8 !== 'string' || pkcs8.indexOf('-----BEGIN PRIVATE KEY-----') !== 0) {\n        throw new TypeError('\"pkcs8\" must be PKCS#8 formatted string');\n    }\n    return fromPKCS8(pkcs8, alg, options);\n}\nexport async function importJWK(jwk, alg) {\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    alg || (alg = jwk.alg);\n    switch (jwk.kty) {\n        case 'oct':\n            if (typeof jwk.k !== 'string' || !jwk.k) {\n                throw new TypeError('missing \"k\" (Key Value) Parameter value');\n            }\n            return decodeBase64URL(jwk.k);\n        case 'RSA':\n            if (jwk.oth !== undefined) {\n                throw new JOSENotSupported('RSA JWK \"oth\" (Other Primes Info) Parameter value is not supported');\n            }\n        case 'EC':\n        case 'OKP':\n            return asKeyObject({ ...jwk, alg });\n        default:\n            throw new JOSENotSupported('Unsupported \"kty\" (Key Type) Parameter value');\n    }\n}\n","import { concat, uint64be } from '../lib/buffer_utils.js';\nimport checkIvLength from '../lib/check_iv_length.js';\nimport checkCekLength from './check_cek_length.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport generateIv from '../lib/iv.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { types } from './is_key_like.js';\nasync function cbcEncrypt(enc, plaintext, cek, iv, aad) {\n    if (!(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, 'Uint8Array'));\n    }\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const encKey = await crypto.subtle.importKey('raw', cek.subarray(keySize >> 3), 'AES-CBC', false, ['encrypt']);\n    const macKey = await crypto.subtle.importKey('raw', cek.subarray(0, keySize >> 3), {\n        hash: `SHA-${keySize << 1}`,\n        name: 'HMAC',\n    }, false, ['sign']);\n    const ciphertext = new Uint8Array(await crypto.subtle.encrypt({\n        iv,\n        name: 'AES-CBC',\n    }, encKey, plaintext));\n    const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\n    const tag = new Uint8Array((await crypto.subtle.sign('HMAC', macKey, macData)).slice(0, keySize >> 3));\n    return { ciphertext, tag, iv };\n}\nasync function gcmEncrypt(enc, plaintext, cek, iv, aad) {\n    let encKey;\n    if (cek instanceof Uint8Array) {\n        encKey = await crypto.subtle.importKey('raw', cek, 'AES-GCM', false, ['encrypt']);\n    }\n    else {\n        checkEncCryptoKey(cek, enc, 'encrypt');\n        encKey = cek;\n    }\n    const encrypted = new Uint8Array(await crypto.subtle.encrypt({\n        additionalData: aad,\n        iv,\n        name: 'AES-GCM',\n        tagLength: 128,\n    }, encKey, plaintext));\n    const tag = encrypted.slice(-16);\n    const ciphertext = encrypted.slice(0, -16);\n    return { ciphertext, tag, iv };\n}\nconst encrypt = async (enc, plaintext, cek, iv, aad) => {\n    if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, ...types, 'Uint8Array'));\n    }\n    if (iv) {\n        checkIvLength(enc, iv);\n    }\n    else {\n        iv = generateIv(enc);\n    }\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            if (cek instanceof Uint8Array) {\n                checkCekLength(cek, parseInt(enc.slice(-3), 10));\n            }\n            return cbcEncrypt(enc, plaintext, cek, iv, aad);\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            if (cek instanceof Uint8Array) {\n                checkCekLength(cek, parseInt(enc.slice(1, 4), 10));\n            }\n            return gcmEncrypt(enc, plaintext, cek, iv, aad);\n        default:\n            throw new JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n    }\n};\nexport default encrypt;\n","import encrypt from '../runtime/encrypt.js';\nimport decrypt from '../runtime/decrypt.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nexport async function wrap(alg, key, cek, iv) {\n    const jweAlgorithm = alg.slice(0, 7);\n    const wrapped = await encrypt(jweAlgorithm, cek, key, iv, new Uint8Array(0));\n    return {\n        encryptedKey: wrapped.ciphertext,\n        iv: base64url(wrapped.iv),\n        tag: base64url(wrapped.tag),\n    };\n}\nexport async function unwrap(alg, key, encryptedKey, iv, tag) {\n    const jweAlgorithm = alg.slice(0, 7);\n    return decrypt(jweAlgorithm, key, encryptedKey, iv, tag, new Uint8Array(0));\n}\n","import { unwrap as aesKw } from '../runtime/aeskw.js';\nimport * as ECDH from '../runtime/ecdhes.js';\nimport { decrypt as pbes2Kw } from '../runtime/pbes2kw.js';\nimport { decrypt as rsaEs } from '../runtime/rsaes.js';\nimport { decode as base64url } from '../runtime/base64url.js';\nimport normalize from '../runtime/normalize_key.js';\nimport { JOSENotSupported, JWEInvalid } from '../util/errors.js';\nimport { bitLength as cekLength } from '../lib/cek.js';\nimport { importJWK } from '../key/import.js';\nimport checkKeyType from './check_key_type.js';\nimport isObject from './is_object.js';\nimport { unwrap as aesGcmKw } from './aesgcmkw.js';\nasync function decryptKeyManagement(alg, key, encryptedKey, joseHeader, options) {\n    checkKeyType(alg, key, 'decrypt');\n    key = (await normalize.normalizePrivateKey?.(key, alg)) || key;\n    switch (alg) {\n        case 'dir': {\n            if (encryptedKey !== undefined)\n                throw new JWEInvalid('Encountered unexpected JWE Encrypted Key');\n            return key;\n        }\n        case 'ECDH-ES':\n            if (encryptedKey !== undefined)\n                throw new JWEInvalid('Encountered unexpected JWE Encrypted Key');\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            if (!isObject(joseHeader.epk))\n                throw new JWEInvalid(`JOSE Header \"epk\" (Ephemeral Public Key) missing or invalid`);\n            if (!ECDH.ecdhAllowed(key))\n                throw new JOSENotSupported('ECDH with the provided key is not allowed or not supported by your javascript runtime');\n            const epk = await importJWK(joseHeader.epk, alg);\n            let partyUInfo;\n            let partyVInfo;\n            if (joseHeader.apu !== undefined) {\n                if (typeof joseHeader.apu !== 'string')\n                    throw new JWEInvalid(`JOSE Header \"apu\" (Agreement PartyUInfo) invalid`);\n                try {\n                    partyUInfo = base64url(joseHeader.apu);\n                }\n                catch {\n                    throw new JWEInvalid('Failed to base64url decode the apu');\n                }\n            }\n            if (joseHeader.apv !== undefined) {\n                if (typeof joseHeader.apv !== 'string')\n                    throw new JWEInvalid(`JOSE Header \"apv\" (Agreement PartyVInfo) invalid`);\n                try {\n                    partyVInfo = base64url(joseHeader.apv);\n                }\n                catch {\n                    throw new JWEInvalid('Failed to base64url decode the apv');\n                }\n            }\n            const sharedSecret = await ECDH.deriveKey(epk, key, alg === 'ECDH-ES' ? joseHeader.enc : alg, alg === 'ECDH-ES' ? cekLength(joseHeader.enc) : parseInt(alg.slice(-5, -2), 10), partyUInfo, partyVInfo);\n            if (alg === 'ECDH-ES')\n                return sharedSecret;\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            return aesKw(alg.slice(-6), sharedSecret, encryptedKey);\n        }\n        case 'RSA1_5':\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            return rsaEs(alg, key, encryptedKey);\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            if (typeof joseHeader.p2c !== 'number')\n                throw new JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) missing or invalid`);\n            const p2cLimit = options?.maxPBES2Count || 10000;\n            if (joseHeader.p2c > p2cLimit)\n                throw new JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) out is of acceptable bounds`);\n            if (typeof joseHeader.p2s !== 'string')\n                throw new JWEInvalid(`JOSE Header \"p2s\" (PBES2 Salt) missing or invalid`);\n            let p2s;\n            try {\n                p2s = base64url(joseHeader.p2s);\n            }\n            catch {\n                throw new JWEInvalid('Failed to base64url decode the p2s');\n            }\n            return pbes2Kw(alg, key, encryptedKey, joseHeader.p2c, p2s);\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            return aesKw(alg, key, encryptedKey);\n        }\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            if (typeof joseHeader.iv !== 'string')\n                throw new JWEInvalid(`JOSE Header \"iv\" (Initialization Vector) missing or invalid`);\n            if (typeof joseHeader.tag !== 'string')\n                throw new JWEInvalid(`JOSE Header \"tag\" (Authentication Tag) missing or invalid`);\n            let iv;\n            try {\n                iv = base64url(joseHeader.iv);\n            }\n            catch {\n                throw new JWEInvalid('Failed to base64url decode the iv');\n            }\n            let tag;\n            try {\n                tag = base64url(joseHeader.tag);\n            }\n            catch {\n                throw new JWEInvalid('Failed to base64url decode the tag');\n            }\n            return aesGcmKw(alg, key, encryptedKey, iv, tag);\n        }\n        default: {\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n        }\n    }\n}\nexport default decryptKeyManagement;\n","import { JOSENotSupported } from '../util/errors.js';\nfunction validateCrit(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {\n    if (joseHeader.crit !== undefined && protectedHeader?.crit === undefined) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\n    }\n    if (!protectedHeader || protectedHeader.crit === undefined) {\n        return new Set();\n    }\n    if (!Array.isArray(protectedHeader.crit) ||\n        protectedHeader.crit.length === 0 ||\n        protectedHeader.crit.some((input) => typeof input !== 'string' || input.length === 0)) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\n    }\n    let recognized;\n    if (recognizedOption !== undefined) {\n        recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);\n    }\n    else {\n        recognized = recognizedDefault;\n    }\n    for (const parameter of protectedHeader.crit) {\n        if (!recognized.has(parameter)) {\n            throw new JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\n        }\n        if (joseHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\n        }\n        if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\n        }\n    }\n    return new Set(protectedHeader.crit);\n}\nexport default validateCrit;\n","import { decode as base64url } from '../../runtime/base64url.js';\nimport decrypt from '../../runtime/decrypt.js';\nimport { JOSEAlgNotAllowed, JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport decryptKeyManagement from '../../lib/decrypt_key_management.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport generateCek from '../../lib/cek.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nexport async function flattenedDecrypt(jwe, key, options) {\n    if (!isObject(jwe)) {\n        throw new JWEInvalid('Flattened JWE must be an object');\n    }\n    if (jwe.protected === undefined && jwe.header === undefined && jwe.unprotected === undefined) {\n        throw new JWEInvalid('JOSE Header missing');\n    }\n    if (jwe.iv !== undefined && typeof jwe.iv !== 'string') {\n        throw new JWEInvalid('JWE Initialization Vector incorrect type');\n    }\n    if (typeof jwe.ciphertext !== 'string') {\n        throw new JWEInvalid('JWE Ciphertext missing or incorrect type');\n    }\n    if (jwe.tag !== undefined && typeof jwe.tag !== 'string') {\n        throw new JWEInvalid('JWE Authentication Tag incorrect type');\n    }\n    if (jwe.protected !== undefined && typeof jwe.protected !== 'string') {\n        throw new JWEInvalid('JWE Protected Header incorrect type');\n    }\n    if (jwe.encrypted_key !== undefined && typeof jwe.encrypted_key !== 'string') {\n        throw new JWEInvalid('JWE Encrypted Key incorrect type');\n    }\n    if (jwe.aad !== undefined && typeof jwe.aad !== 'string') {\n        throw new JWEInvalid('JWE AAD incorrect type');\n    }\n    if (jwe.header !== undefined && !isObject(jwe.header)) {\n        throw new JWEInvalid('JWE Shared Unprotected Header incorrect type');\n    }\n    if (jwe.unprotected !== undefined && !isObject(jwe.unprotected)) {\n        throw new JWEInvalid('JWE Per-Recipient Unprotected Header incorrect type');\n    }\n    let parsedProt;\n    if (jwe.protected) {\n        try {\n            const protectedHeader = base64url(jwe.protected);\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch {\n            throw new JWEInvalid('JWE Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jwe.header, jwe.unprotected)) {\n        throw new JWEInvalid('JWE Protected, JWE Unprotected Header, and JWE Per-Recipient Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jwe.header,\n        ...jwe.unprotected,\n    };\n    validateCrit(JWEInvalid, new Map(), options?.crit, parsedProt, joseHeader);\n    if (joseHeader.zip !== undefined) {\n        throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported.');\n    }\n    const { alg, enc } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWEInvalid('missing JWE Algorithm (alg) in JWE Header');\n    }\n    if (typeof enc !== 'string' || !enc) {\n        throw new JWEInvalid('missing JWE Encryption Algorithm (enc) in JWE Header');\n    }\n    const keyManagementAlgorithms = options && validateAlgorithms('keyManagementAlgorithms', options.keyManagementAlgorithms);\n    const contentEncryptionAlgorithms = options &&\n        validateAlgorithms('contentEncryptionAlgorithms', options.contentEncryptionAlgorithms);\n    if ((keyManagementAlgorithms && !keyManagementAlgorithms.has(alg)) ||\n        (!keyManagementAlgorithms && alg.startsWith('PBES2'))) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter value not allowed');\n    }\n    if (contentEncryptionAlgorithms && !contentEncryptionAlgorithms.has(enc)) {\n        throw new JOSEAlgNotAllowed('\"enc\" (Encryption Algorithm) Header Parameter value not allowed');\n    }\n    let encryptedKey;\n    if (jwe.encrypted_key !== undefined) {\n        try {\n            encryptedKey = base64url(jwe.encrypted_key);\n        }\n        catch {\n            throw new JWEInvalid('Failed to base64url decode the encrypted_key');\n        }\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jwe);\n        resolvedKey = true;\n    }\n    let cek;\n    try {\n        cek = await decryptKeyManagement(alg, key, encryptedKey, joseHeader, options);\n    }\n    catch (err) {\n        if (err instanceof TypeError || err instanceof JWEInvalid || err instanceof JOSENotSupported) {\n            throw err;\n        }\n        cek = generateCek(enc);\n    }\n    let iv;\n    let tag;\n    if (jwe.iv !== undefined) {\n        try {\n            iv = base64url(jwe.iv);\n        }\n        catch {\n            throw new JWEInvalid('Failed to base64url decode the iv');\n        }\n    }\n    if (jwe.tag !== undefined) {\n        try {\n            tag = base64url(jwe.tag);\n        }\n        catch {\n            throw new JWEInvalid('Failed to base64url decode the tag');\n        }\n    }\n    const protectedHeader = encoder.encode(jwe.protected ?? '');\n    let additionalData;\n    if (jwe.aad !== undefined) {\n        additionalData = concat(protectedHeader, encoder.encode('.'), encoder.encode(jwe.aad));\n    }\n    else {\n        additionalData = protectedHeader;\n    }\n    let ciphertext;\n    try {\n        ciphertext = base64url(jwe.ciphertext);\n    }\n    catch {\n        throw new JWEInvalid('Failed to base64url decode the ciphertext');\n    }\n    const plaintext = await decrypt(enc, cek, ciphertext, iv, tag, additionalData);\n    const result = { plaintext };\n    if (jwe.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jwe.aad !== undefined) {\n        try {\n            result.additionalAuthenticatedData = base64url(jwe.aad);\n        }\n        catch {\n            throw new JWEInvalid('Failed to base64url decode the aad');\n        }\n    }\n    if (jwe.unprotected !== undefined) {\n        result.sharedUnprotectedHeader = jwe.unprotected;\n    }\n    if (jwe.header !== undefined) {\n        result.unprotectedHeader = jwe.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\n","import { flattenedDecrypt } from '../flattened/decrypt.js';\nimport { JWEInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactDecrypt(jwe, key, options) {\n    if (jwe instanceof Uint8Array) {\n        jwe = decoder.decode(jwe);\n    }\n    if (typeof jwe !== 'string') {\n        throw new JWEInvalid('Compact JWE must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: encryptedKey, 2: iv, 3: ciphertext, 4: tag, length, } = jwe.split('.');\n    if (length !== 5) {\n        throw new JWEInvalid('Invalid Compact JWE');\n    }\n    const decrypted = await flattenedDecrypt({\n        ciphertext,\n        iv: iv || undefined,\n        protected: protectedHeader,\n        tag: tag || undefined,\n        encrypted_key: encryptedKey || undefined,\n    }, key, options);\n    const result = { plaintext: decrypted.plaintext, protectedHeader: decrypted.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: decrypted.key };\n    }\n    return result;\n}\n","import { flattenedDecrypt } from '../flattened/decrypt.js';\nimport { JWEDecryptionFailed, JWEInvalid } from '../../util/errors.js';\nimport isObject from '../../lib/is_object.js';\nexport async function generalDecrypt(jwe, key, options) {\n    if (!isObject(jwe)) {\n        throw new JWEInvalid('General JWE must be an object');\n    }\n    if (!Array.isArray(jwe.recipients) || !jwe.recipients.every(isObject)) {\n        throw new JWEInvalid('JWE Recipients missing or incorrect type');\n    }\n    if (!jwe.recipients.length) {\n        throw new JWEInvalid('JWE Recipients has no members');\n    }\n    for (const recipient of jwe.recipients) {\n        try {\n            return await flattenedDecrypt({\n                aad: jwe.aad,\n                ciphertext: jwe.ciphertext,\n                encrypted_key: recipient.encrypted_key,\n                header: recipient.header,\n                iv: jwe.iv,\n                protected: jwe.protected,\n                tag: jwe.tag,\n                unprotected: jwe.unprotected,\n            }, key, options);\n        }\n        catch {\n        }\n    }\n    throw new JWEDecryptionFailed();\n}\n","import crypto, { isCryptoKey } from './webcrypto.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { encode as base64url } from './base64url.js';\nimport { types } from './is_key_like.js';\nconst keyToJWK = async (key) => {\n    if (key instanceof Uint8Array) {\n        return {\n            kty: 'oct',\n            k: base64url(key),\n        };\n    }\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n    }\n    if (!key.extractable) {\n        throw new TypeError('non-extractable CryptoKey cannot be exported as a JWK');\n    }\n    const { ext, key_ops, alg, use, ...jwk } = await crypto.subtle.exportKey('jwk', key);\n    return jwk;\n};\nexport default keyToJWK;\n","import { toSPKI as exportPublic } from '../runtime/asn1.js';\nimport { toPKCS8 as exportPrivate } from '../runtime/asn1.js';\nimport keyToJWK from '../runtime/key_to_jwk.js';\nexport async function exportSPKI(key) {\n    return exportPublic(key);\n}\nexport async function exportPKCS8(key) {\n    return exportPrivate(key);\n}\nexport async function exportJWK(key) {\n    return keyToJWK(key);\n}\n","import { wrap as aesKw } from '../runtime/aeskw.js';\nimport * as ECDH from '../runtime/ecdhes.js';\nimport { encrypt as pbes2Kw } from '../runtime/pbes2kw.js';\nimport { encrypt as rsaEs } from '../runtime/rsaes.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nimport normalize from '../runtime/normalize_key.js';\nimport generateCek, { bitLength as cekLength } from '../lib/cek.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { exportJWK } from '../key/export.js';\nimport checkKeyType from './check_key_type.js';\nimport { wrap as aesGcmKw } from './aesgcmkw.js';\nasync function encryptKeyManagement(alg, enc, key, providedCek, providedParameters = {}) {\n    let encryptedKey;\n    let parameters;\n    let cek;\n    checkKeyType(alg, key, 'encrypt');\n    key = (await normalize.normalizePublicKey?.(key, alg)) || key;\n    switch (alg) {\n        case 'dir': {\n            cek = key;\n            break;\n        }\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            if (!ECDH.ecdhAllowed(key)) {\n                throw new JOSENotSupported('ECDH with the provided key is not allowed or not supported by your javascript runtime');\n            }\n            const { apu, apv } = providedParameters;\n            let { epk: ephemeralKey } = providedParameters;\n            ephemeralKey || (ephemeralKey = (await ECDH.generateEpk(key)).privateKey);\n            const { x, y, crv, kty } = await exportJWK(ephemeralKey);\n            const sharedSecret = await ECDH.deriveKey(key, ephemeralKey, alg === 'ECDH-ES' ? enc : alg, alg === 'ECDH-ES' ? cekLength(enc) : parseInt(alg.slice(-5, -2), 10), apu, apv);\n            parameters = { epk: { x, crv, kty } };\n            if (kty === 'EC')\n                parameters.epk.y = y;\n            if (apu)\n                parameters.apu = base64url(apu);\n            if (apv)\n                parameters.apv = base64url(apv);\n            if (alg === 'ECDH-ES') {\n                cek = sharedSecret;\n                break;\n            }\n            cek = providedCek || generateCek(enc);\n            const kwAlg = alg.slice(-6);\n            encryptedKey = await aesKw(kwAlg, sharedSecret, cek);\n            break;\n        }\n        case 'RSA1_5':\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            cek = providedCek || generateCek(enc);\n            encryptedKey = await rsaEs(alg, key, cek);\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW': {\n            cek = providedCek || generateCek(enc);\n            const { p2c, p2s } = providedParameters;\n            ({ encryptedKey, ...parameters } = await pbes2Kw(alg, key, cek, p2c, p2s));\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            cek = providedCek || generateCek(enc);\n            encryptedKey = await aesKw(alg, key, cek);\n            break;\n        }\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW': {\n            cek = providedCek || generateCek(enc);\n            const { iv } = providedParameters;\n            ({ encryptedKey, ...parameters } = await aesGcmKw(alg, key, cek, iv));\n            break;\n        }\n        default: {\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n        }\n    }\n    return { cek, encryptedKey, parameters };\n}\nexport default encryptKeyManagement;\n","import { encode as base64url } from '../../runtime/base64url.js';\nimport encrypt from '../../runtime/encrypt.js';\nimport encryptKeyManagement from '../../lib/encrypt_key_management.js';\nimport { JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport validateCrit from '../../lib/validate_crit.js';\nexport const unprotected = Symbol();\nexport class FlattenedEncrypt {\n    constructor(plaintext) {\n        if (!(plaintext instanceof Uint8Array)) {\n            throw new TypeError('plaintext must be an instance of Uint8Array');\n        }\n        this._plaintext = plaintext;\n    }\n    setKeyManagementParameters(parameters) {\n        if (this._keyManagementParameters) {\n            throw new TypeError('setKeyManagementParameters can only be called once');\n        }\n        this._keyManagementParameters = parameters;\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n        if (this._sharedUnprotectedHeader) {\n            throw new TypeError('setSharedUnprotectedHeader can only be called once');\n        }\n        this._sharedUnprotectedHeader = sharedUnprotectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    setAdditionalAuthenticatedData(aad) {\n        this._aad = aad;\n        return this;\n    }\n    setContentEncryptionKey(cek) {\n        if (this._cek) {\n            throw new TypeError('setContentEncryptionKey can only be called once');\n        }\n        this._cek = cek;\n        return this;\n    }\n    setInitializationVector(iv) {\n        if (this._iv) {\n            throw new TypeError('setInitializationVector can only be called once');\n        }\n        this._iv = iv;\n        return this;\n    }\n    async encrypt(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader && !this._sharedUnprotectedHeader) {\n            throw new JWEInvalid('either setProtectedHeader, setUnprotectedHeader, or sharedUnprotectedHeader must be called before #encrypt()');\n        }\n        if (!isDisjoint(this._protectedHeader, this._unprotectedHeader, this._sharedUnprotectedHeader)) {\n            throw new JWEInvalid('JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader,\n            ...this._sharedUnprotectedHeader,\n        };\n        validateCrit(JWEInvalid, new Map(), options?.crit, this._protectedHeader, joseHeader);\n        if (joseHeader.zip !== undefined) {\n            throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported.');\n        }\n        const { alg, enc } = joseHeader;\n        if (typeof alg !== 'string' || !alg) {\n            throw new JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        if (typeof enc !== 'string' || !enc) {\n            throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n        }\n        let encryptedKey;\n        if (this._cek && (alg === 'dir' || alg === 'ECDH-ES')) {\n            throw new TypeError(`setContentEncryptionKey cannot be called with JWE \"alg\" (Algorithm) Header ${alg}`);\n        }\n        let cek;\n        {\n            let parameters;\n            ({ cek, encryptedKey, parameters } = await encryptKeyManagement(alg, enc, key, this._cek, this._keyManagementParameters));\n            if (parameters) {\n                if (options && unprotected in options) {\n                    if (!this._unprotectedHeader) {\n                        this.setUnprotectedHeader(parameters);\n                    }\n                    else {\n                        this._unprotectedHeader = { ...this._unprotectedHeader, ...parameters };\n                    }\n                }\n                else if (!this._protectedHeader) {\n                    this.setProtectedHeader(parameters);\n                }\n                else {\n                    this._protectedHeader = { ...this._protectedHeader, ...parameters };\n                }\n            }\n        }\n        let additionalData;\n        let protectedHeader;\n        let aadMember;\n        if (this._protectedHeader) {\n            protectedHeader = encoder.encode(base64url(JSON.stringify(this._protectedHeader)));\n        }\n        else {\n            protectedHeader = encoder.encode('');\n        }\n        if (this._aad) {\n            aadMember = base64url(this._aad);\n            additionalData = concat(protectedHeader, encoder.encode('.'), encoder.encode(aadMember));\n        }\n        else {\n            additionalData = protectedHeader;\n        }\n        const { ciphertext, tag, iv } = await encrypt(enc, this._plaintext, cek, this._iv, additionalData);\n        const jwe = {\n            ciphertext: base64url(ciphertext),\n        };\n        if (iv) {\n            jwe.iv = base64url(iv);\n        }\n        if (tag) {\n            jwe.tag = base64url(tag);\n        }\n        if (encryptedKey) {\n            jwe.encrypted_key = base64url(encryptedKey);\n        }\n        if (aadMember) {\n            jwe.aad = aadMember;\n        }\n        if (this._protectedHeader) {\n            jwe.protected = decoder.decode(protectedHeader);\n        }\n        if (this._sharedUnprotectedHeader) {\n            jwe.unprotected = this._sharedUnprotectedHeader;\n        }\n        if (this._unprotectedHeader) {\n            jwe.header = this._unprotectedHeader;\n        }\n        return jwe;\n    }\n}\n","import { FlattenedEncrypt, unprotected } from '../flattened/encrypt.js';\nimport { JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport generateCek from '../../lib/cek.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport encryptKeyManagement from '../../lib/encrypt_key_management.js';\nimport { encode as base64url } from '../../runtime/base64url.js';\nimport validateCrit from '../../lib/validate_crit.js';\nclass IndividualRecipient {\n    constructor(enc, key, options) {\n        this.parent = enc;\n        this.key = key;\n        this.options = options;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this.unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this.unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    addRecipient(...args) {\n        return this.parent.addRecipient(...args);\n    }\n    encrypt(...args) {\n        return this.parent.encrypt(...args);\n    }\n    done() {\n        return this.parent;\n    }\n}\nexport class GeneralEncrypt {\n    constructor(plaintext) {\n        this._recipients = [];\n        this._plaintext = plaintext;\n    }\n    addRecipient(key, options) {\n        const recipient = new IndividualRecipient(this, key, { crit: options?.crit });\n        this._recipients.push(recipient);\n        return recipient;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setSharedUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = sharedUnprotectedHeader;\n        return this;\n    }\n    setAdditionalAuthenticatedData(aad) {\n        this._aad = aad;\n        return this;\n    }\n    async encrypt() {\n        if (!this._recipients.length) {\n            throw new JWEInvalid('at least one recipient must be added');\n        }\n        if (this._recipients.length === 1) {\n            const [recipient] = this._recipients;\n            const flattened = await new FlattenedEncrypt(this._plaintext)\n                .setAdditionalAuthenticatedData(this._aad)\n                .setProtectedHeader(this._protectedHeader)\n                .setSharedUnprotectedHeader(this._unprotectedHeader)\n                .setUnprotectedHeader(recipient.unprotectedHeader)\n                .encrypt(recipient.key, { ...recipient.options });\n            const jwe = {\n                ciphertext: flattened.ciphertext,\n                iv: flattened.iv,\n                recipients: [{}],\n                tag: flattened.tag,\n            };\n            if (flattened.aad)\n                jwe.aad = flattened.aad;\n            if (flattened.protected)\n                jwe.protected = flattened.protected;\n            if (flattened.unprotected)\n                jwe.unprotected = flattened.unprotected;\n            if (flattened.encrypted_key)\n                jwe.recipients[0].encrypted_key = flattened.encrypted_key;\n            if (flattened.header)\n                jwe.recipients[0].header = flattened.header;\n            return jwe;\n        }\n        let enc;\n        for (let i = 0; i < this._recipients.length; i++) {\n            const recipient = this._recipients[i];\n            if (!isDisjoint(this._protectedHeader, this._unprotectedHeader, recipient.unprotectedHeader)) {\n                throw new JWEInvalid('JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\n            }\n            const joseHeader = {\n                ...this._protectedHeader,\n                ...this._unprotectedHeader,\n                ...recipient.unprotectedHeader,\n            };\n            const { alg } = joseHeader;\n            if (typeof alg !== 'string' || !alg) {\n                throw new JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n            }\n            if (alg === 'dir' || alg === 'ECDH-ES') {\n                throw new JWEInvalid('\"dir\" and \"ECDH-ES\" alg may only be used with a single recipient');\n            }\n            if (typeof joseHeader.enc !== 'string' || !joseHeader.enc) {\n                throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n            }\n            if (!enc) {\n                enc = joseHeader.enc;\n            }\n            else if (enc !== joseHeader.enc) {\n                throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter must be the same for all recipients');\n            }\n            validateCrit(JWEInvalid, new Map(), recipient.options.crit, this._protectedHeader, joseHeader);\n            if (joseHeader.zip !== undefined) {\n                throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported.');\n            }\n        }\n        const cek = generateCek(enc);\n        const jwe = {\n            ciphertext: '',\n            iv: '',\n            recipients: [],\n            tag: '',\n        };\n        for (let i = 0; i < this._recipients.length; i++) {\n            const recipient = this._recipients[i];\n            const target = {};\n            jwe.recipients.push(target);\n            const joseHeader = {\n                ...this._protectedHeader,\n                ...this._unprotectedHeader,\n                ...recipient.unprotectedHeader,\n            };\n            const p2c = joseHeader.alg.startsWith('PBES2') ? 2048 + i : undefined;\n            if (i === 0) {\n                const flattened = await new FlattenedEncrypt(this._plaintext)\n                    .setAdditionalAuthenticatedData(this._aad)\n                    .setContentEncryptionKey(cek)\n                    .setProtectedHeader(this._protectedHeader)\n                    .setSharedUnprotectedHeader(this._unprotectedHeader)\n                    .setUnprotectedHeader(recipient.unprotectedHeader)\n                    .setKeyManagementParameters({ p2c })\n                    .encrypt(recipient.key, {\n                    ...recipient.options,\n                    [unprotected]: true,\n                });\n                jwe.ciphertext = flattened.ciphertext;\n                jwe.iv = flattened.iv;\n                jwe.tag = flattened.tag;\n                if (flattened.aad)\n                    jwe.aad = flattened.aad;\n                if (flattened.protected)\n                    jwe.protected = flattened.protected;\n                if (flattened.unprotected)\n                    jwe.unprotected = flattened.unprotected;\n                target.encrypted_key = flattened.encrypted_key;\n                if (flattened.header)\n                    target.header = flattened.header;\n                continue;\n            }\n            const { encryptedKey, parameters } = await encryptKeyManagement(recipient.unprotectedHeader?.alg ||\n                this._protectedHeader?.alg ||\n                this._unprotectedHeader?.alg, enc, recipient.key, cek, { p2c });\n            target.encrypted_key = base64url(encryptedKey);\n            if (recipient.unprotectedHeader || parameters)\n                target.header = { ...recipient.unprotectedHeader, ...parameters };\n        }\n        return jwe;\n    }\n}\n","import { JOSENotSupported } from '../util/errors.js';\nexport default function subtleDsa(alg, algorithm) {\n    const hash = `SHA-${alg.slice(-3)}`;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n            return { hash, name: 'HMAC' };\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            return { hash, name: 'RSA-PSS', saltLength: alg.slice(-3) >> 3 };\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            return { hash, name: 'RSASSA-PKCS1-v1_5' };\n        case 'ES256':\n        case 'ES384':\n        case 'ES512':\n            return { hash, name: 'ECDSA', namedCurve: algorithm.namedCurve };\n        case 'EdDSA':\n            return { name: algorithm.name };\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n","export default (alg, key) => {\n    if (alg.startsWith('RS') || alg.startsWith('PS')) {\n        const { modulusLength } = key.algorithm;\n        if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n            throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);\n        }\n    }\n};\n","function unusable(name, prop = 'algorithm.name') {\n    return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);\n}\nfunction isAlgorithm(algorithm, name) {\n    return algorithm.name === name;\n}\nfunction getHashLength(hash) {\n    return parseInt(hash.name.slice(4), 10);\n}\nfunction getNamedCurve(alg) {\n    switch (alg) {\n        case 'ES256':\n            return 'P-256';\n        case 'ES384':\n            return 'P-384';\n        case 'ES512':\n            return 'P-521';\n        default:\n            throw new Error('unreachable');\n    }\n}\nfunction checkUsage(key, usages) {\n    if (usages.length && !usages.some((expected) => key.usages.includes(expected))) {\n        let msg = 'CryptoKey does not support this operation, its usages must include ';\n        if (usages.length > 2) {\n            const last = usages.pop();\n            msg += `one of ${usages.join(', ')}, or ${last}.`;\n        }\n        else if (usages.length === 2) {\n            msg += `one of ${usages[0]} or ${usages[1]}.`;\n        }\n        else {\n            msg += `${usages[0]}.`;\n        }\n        throw new TypeError(msg);\n    }\n}\nexport function checkSigCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512': {\n            if (!isAlgorithm(key.algorithm, 'HMAC'))\n                throw unusable('HMAC');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'RS256':\n        case 'RS384':\n        case 'RS512': {\n            if (!isAlgorithm(key.algorithm, 'RSASSA-PKCS1-v1_5'))\n                throw unusable('RSASSA-PKCS1-v1_5');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'PS256':\n        case 'PS384':\n        case 'PS512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-PSS'))\n                throw unusable('RSA-PSS');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'EdDSA': {\n            if (key.algorithm.name !== 'Ed25519' && key.algorithm.name !== 'Ed448') {\n                throw unusable('Ed25519 or Ed448');\n            }\n            break;\n        }\n        case 'ES256':\n        case 'ES384':\n        case 'ES512': {\n            if (!isAlgorithm(key.algorithm, 'ECDSA'))\n                throw unusable('ECDSA');\n            const expected = getNamedCurve(alg);\n            const actual = key.algorithm.namedCurve;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.namedCurve');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\nexport function checkEncCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM': {\n            if (!isAlgorithm(key.algorithm, 'AES-GCM'))\n                throw unusable('AES-GCM');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (!isAlgorithm(key.algorithm, 'AES-KW'))\n                throw unusable('AES-KW');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'ECDH': {\n            switch (key.algorithm.name) {\n                case 'ECDH':\n                case 'X25519':\n                case 'X448':\n                    break;\n                default:\n                    throw unusable('ECDH, X25519, or X448');\n            }\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW':\n            if (!isAlgorithm(key.algorithm, 'PBKDF2'))\n                throw unusable('PBKDF2');\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-OAEP'))\n                throw unusable('RSA-OAEP');\n            const expected = parseInt(alg.slice(9), 10) || 1;\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\n","function message(msg, actual, ...types) {\n    if (types.length > 2) {\n        const last = types.pop();\n        msg += `one of type ${types.join(', ')}, or ${last}.`;\n    }\n    else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}.`;\n    }\n    else {\n        msg += `of type ${types[0]}.`;\n    }\n    if (actual == null) {\n        msg += ` Received ${actual}`;\n    }\n    else if (typeof actual === 'function' && actual.name) {\n        msg += ` Received function ${actual.name}`;\n    }\n    else if (typeof actual === 'object' && actual != null) {\n        if (actual.constructor?.name) {\n            msg += ` Received an instance of ${actual.constructor.name}`;\n        }\n    }\n    return msg;\n}\nexport default (actual, ...types) => {\n    return message('Key must be ', actual, ...types);\n};\nexport function withAlg(alg, actual, ...types) {\n    return message(`Key for the ${alg} algorithm must be `, actual, ...types);\n}\n","import { isCryptoKey } from './webcrypto.js';\nexport default (key) => {\n    if (isCryptoKey(key)) {\n        return true;\n    }\n    return key?.[Symbol.toStringTag] === 'KeyObject';\n};\nexport const types = ['CryptoKey'];\n","import crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkSigCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nimport normalize from './normalize_key.js';\nexport default async function getCryptoKey(alg, key, usage) {\n    if (usage === 'sign') {\n        key = await normalize.normalizePrivateKey(key, alg);\n    }\n    if (usage === 'verify') {\n        key = await normalize.normalizePublicKey(key, alg);\n    }\n    if (isCryptoKey(key)) {\n        checkSigCryptoKey(key, alg, usage);\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        if (!alg.startsWith('HS')) {\n            throw new TypeError(invalidKeyInput(key, ...types));\n        }\n        return crypto.subtle.importKey('raw', key, { hash: `SHA-${alg.slice(-3)}`, name: 'HMAC' }, false, [usage]);\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\n","import subtleAlgorithm from './subtle_dsa.js';\nimport crypto from './webcrypto.js';\nimport checkKeyLength from './check_key_length.js';\nimport getVerifyKey from './get_sign_verify_key.js';\nconst verify = async (alg, key, signature, data) => {\n    const cryptoKey = await getVerifyKey(alg, key, 'verify');\n    checkKeyLength(alg, cryptoKey);\n    const algorithm = subtleAlgorithm(alg, cryptoKey.algorithm);\n    try {\n        return await crypto.subtle.verify(algorithm, cryptoKey, signature, data);\n    }\n    catch {\n        return false;\n    }\n};\nexport default verify;\n","const isDisjoint = (...headers) => {\n    const sources = headers.filter(Boolean);\n    if (sources.length === 0 || sources.length === 1) {\n        return true;\n    }\n    let acc;\n    for (const header of sources) {\n        const parameters = Object.keys(header);\n        if (!acc || acc.size === 0) {\n            acc = new Set(parameters);\n            continue;\n        }\n        for (const parameter of parameters) {\n            if (acc.has(parameter)) {\n                return false;\n            }\n            acc.add(parameter);\n        }\n    }\n    return true;\n};\nexport default isDisjoint;\n","function isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nexport default function isObject(input) {\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== '[object Object]') {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n}\n","import { withAlg as invalidKeyInput } from './invalid_key_input.js';\nimport isKeyLike, { types } from '../runtime/is_key_like.js';\nconst tag = (key) => key?.[Symbol.toStringTag];\nconst symmetricTypeCheck = (alg, key) => {\n    if (key instanceof Uint8Array)\n        return;\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types, 'Uint8Array'));\n    }\n    if (key.type !== 'secret') {\n        throw new TypeError(`${tag(key)} instances for symmetric algorithms must be of type \"secret\"`);\n    }\n};\nconst asymmetricTypeCheck = (alg, key, usage) => {\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types));\n    }\n    if (key.type === 'secret') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithms must not be of type \"secret\"`);\n    }\n    if (usage === 'sign' && key.type === 'public') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm signing must be of type \"private\"`);\n    }\n    if (usage === 'decrypt' && key.type === 'public') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm decryption must be of type \"private\"`);\n    }\n    if (key.algorithm && usage === 'verify' && key.type === 'private') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm verifying must be of type \"public\"`);\n    }\n    if (key.algorithm && usage === 'encrypt' && key.type === 'private') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm encryption must be of type \"public\"`);\n    }\n};\nconst checkKeyType = (alg, key, usage) => {\n    const symmetric = alg.startsWith('HS') ||\n        alg === 'dir' ||\n        alg.startsWith('PBES2') ||\n        /^A\\d{3}(?:GCM)?KW$/.test(alg);\n    if (symmetric) {\n        symmetricTypeCheck(alg, key);\n    }\n    else {\n        asymmetricTypeCheck(alg, key, usage);\n    }\n};\nexport default checkKeyType;\n","const validateAlgorithms = (option, algorithms) => {\n    if (algorithms !== undefined &&\n        (!Array.isArray(algorithms) || algorithms.some((s) => typeof s !== 'string'))) {\n        throw new TypeError(`\"${option}\" option must be an array of strings`);\n    }\n    if (!algorithms) {\n        return undefined;\n    }\n    return new Set(algorithms);\n};\nexport default validateAlgorithms;\n","import { decode as base64url } from '../../runtime/base64url.js';\nimport verify from '../../runtime/verify.js';\nimport { JOSEAlgNotAllowed, JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport { concat, encoder, decoder } from '../../lib/buffer_utils.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport checkKeyType from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nexport async function flattenedVerify(jws, key, options) {\n    if (!isObject(jws)) {\n        throw new JWSInvalid('Flattened JWS must be an object');\n    }\n    if (jws.protected === undefined && jws.header === undefined) {\n        throw new JWSInvalid('Flattened JWS must have either of the \"protected\" or \"header\" members');\n    }\n    if (jws.protected !== undefined && typeof jws.protected !== 'string') {\n        throw new JWSInvalid('JWS Protected Header incorrect type');\n    }\n    if (jws.payload === undefined) {\n        throw new JWSInvalid('JWS Payload missing');\n    }\n    if (typeof jws.signature !== 'string') {\n        throw new JWSInvalid('JWS Signature missing or incorrect type');\n    }\n    if (jws.header !== undefined && !isObject(jws.header)) {\n        throw new JWSInvalid('JWS Unprotected Header incorrect type');\n    }\n    let parsedProt = {};\n    if (jws.protected) {\n        try {\n            const protectedHeader = base64url(jws.protected);\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch {\n            throw new JWSInvalid('JWS Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jws.header)) {\n        throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jws.header,\n    };\n    const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options?.crit, parsedProt, joseHeader);\n    let b64 = true;\n    if (extensions.has('b64')) {\n        b64 = parsedProt.b64;\n        if (typeof b64 !== 'boolean') {\n            throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n        }\n    }\n    const { alg } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n    }\n    const algorithms = options && validateAlgorithms('algorithms', options.algorithms);\n    if (algorithms && !algorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter value not allowed');\n    }\n    if (b64) {\n        if (typeof jws.payload !== 'string') {\n            throw new JWSInvalid('JWS Payload must be a string');\n        }\n    }\n    else if (typeof jws.payload !== 'string' && !(jws.payload instanceof Uint8Array)) {\n        throw new JWSInvalid('JWS Payload must be a string or an Uint8Array instance');\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jws);\n        resolvedKey = true;\n    }\n    checkKeyType(alg, key, 'verify');\n    const data = concat(encoder.encode(jws.protected ?? ''), encoder.encode('.'), typeof jws.payload === 'string' ? encoder.encode(jws.payload) : jws.payload);\n    let signature;\n    try {\n        signature = base64url(jws.signature);\n    }\n    catch {\n        throw new JWSInvalid('Failed to base64url decode the signature');\n    }\n    const verified = await verify(alg, key, signature, data);\n    if (!verified) {\n        throw new JWSSignatureVerificationFailed();\n    }\n    let payload;\n    if (b64) {\n        try {\n            payload = base64url(jws.payload);\n        }\n        catch {\n            throw new JWSInvalid('Failed to base64url decode the payload');\n        }\n    }\n    else if (typeof jws.payload === 'string') {\n        payload = encoder.encode(jws.payload);\n    }\n    else {\n        payload = jws.payload;\n    }\n    const result = { payload };\n    if (jws.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jws.header !== undefined) {\n        result.unprotectedHeader = jws.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\n","import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactVerify(jws, key, options) {\n    if (jws instanceof Uint8Array) {\n        jws = decoder.decode(jws);\n    }\n    if (typeof jws !== 'string') {\n        throw new JWSInvalid('Compact JWS must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split('.');\n    if (length !== 3) {\n        throw new JWSInvalid('Invalid Compact JWS');\n    }\n    const verified = await flattenedVerify({ payload, protected: protectedHeader, signature }, key, options);\n    const result = { payload: verified.payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n","import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport isObject from '../../lib/is_object.js';\nexport async function generalVerify(jws, key, options) {\n    if (!isObject(jws)) {\n        throw new JWSInvalid('General JWS must be an object');\n    }\n    if (!Array.isArray(jws.signatures) || !jws.signatures.every(isObject)) {\n        throw new JWSInvalid('JWS Signatures missing or incorrect type');\n    }\n    for (const signature of jws.signatures) {\n        try {\n            return await flattenedVerify({\n                header: signature.header,\n                payload: jws.payload,\n                protected: signature.protected,\n                signature: signature.signature,\n            }, key, options);\n        }\n        catch {\n        }\n    }\n    throw new JWSSignatureVerificationFailed();\n}\n","export default (date) => Math.floor(date.getTime() / 1000);\n","const minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\+|\\-)? ?(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)(?: (ago|from now))?$/i;\nexport default (str) => {\n    const matched = REGEX.exec(str);\n    if (!matched || (matched[4] && matched[1])) {\n        throw new TypeError('Invalid time period format');\n    }\n    const value = parseFloat(matched[2]);\n    const unit = matched[3].toLowerCase();\n    let numericDate;\n    switch (unit) {\n        case 'sec':\n        case 'secs':\n        case 'second':\n        case 'seconds':\n        case 's':\n            numericDate = Math.round(value);\n            break;\n        case 'minute':\n        case 'minutes':\n        case 'min':\n        case 'mins':\n        case 'm':\n            numericDate = Math.round(value * minute);\n            break;\n        case 'hour':\n        case 'hours':\n        case 'hr':\n        case 'hrs':\n        case 'h':\n            numericDate = Math.round(value * hour);\n            break;\n        case 'day':\n        case 'days':\n        case 'd':\n            numericDate = Math.round(value * day);\n            break;\n        case 'week':\n        case 'weeks':\n        case 'w':\n            numericDate = Math.round(value * week);\n            break;\n        default:\n            numericDate = Math.round(value * year);\n            break;\n    }\n    if (matched[1] === '-' || matched[4] === 'ago') {\n        return -numericDate;\n    }\n    return numericDate;\n};\n","import { JWTClaimValidationFailed, JWTExpired, JWTInvalid } from '../util/errors.js';\nimport { decoder } from './buffer_utils.js';\nimport epoch from './epoch.js';\nimport secs from './secs.js';\nimport isObject from './is_object.js';\nconst normalizeTyp = (value) => value.toLowerCase().replace(/^application\\//, '');\nconst checkAudiencePresence = (audPayload, audOption) => {\n    if (typeof audPayload === 'string') {\n        return audOption.includes(audPayload);\n    }\n    if (Array.isArray(audPayload)) {\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n    }\n    return false;\n};\nexport default (protectedHeader, encodedPayload, options = {}) => {\n    let payload;\n    try {\n        payload = JSON.parse(decoder.decode(encodedPayload));\n    }\n    catch {\n    }\n    if (!isObject(payload)) {\n        throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\n    }\n    const { typ } = options;\n    if (typ &&\n        (typeof protectedHeader.typ !== 'string' ||\n            normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n        throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', payload, 'typ', 'check_failed');\n    }\n    const { requiredClaims = [], issuer, subject, audience, maxTokenAge } = options;\n    const presenceCheck = [...requiredClaims];\n    if (maxTokenAge !== undefined)\n        presenceCheck.push('iat');\n    if (audience !== undefined)\n        presenceCheck.push('aud');\n    if (subject !== undefined)\n        presenceCheck.push('sub');\n    if (issuer !== undefined)\n        presenceCheck.push('iss');\n    for (const claim of new Set(presenceCheck.reverse())) {\n        if (!(claim in payload)) {\n            throw new JWTClaimValidationFailed(`missing required \"${claim}\" claim`, payload, claim, 'missing');\n        }\n    }\n    if (issuer && !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n        throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', payload, 'iss', 'check_failed');\n    }\n    if (subject && payload.sub !== subject) {\n        throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', payload, 'sub', 'check_failed');\n    }\n    if (audience &&\n        !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n        throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', payload, 'aud', 'check_failed');\n    }\n    let tolerance;\n    switch (typeof options.clockTolerance) {\n        case 'string':\n            tolerance = secs(options.clockTolerance);\n            break;\n        case 'number':\n            tolerance = options.clockTolerance;\n            break;\n        case 'undefined':\n            tolerance = 0;\n            break;\n        default:\n            throw new TypeError('Invalid clockTolerance option type');\n    }\n    const { currentDate } = options;\n    const now = epoch(currentDate || new Date());\n    if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== 'number') {\n        throw new JWTClaimValidationFailed('\"iat\" claim must be a number', payload, 'iat', 'invalid');\n    }\n    if (payload.nbf !== undefined) {\n        if (typeof payload.nbf !== 'number') {\n            throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', payload, 'nbf', 'invalid');\n        }\n        if (payload.nbf > now + tolerance) {\n            throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', payload, 'nbf', 'check_failed');\n        }\n    }\n    if (payload.exp !== undefined) {\n        if (typeof payload.exp !== 'number') {\n            throw new JWTClaimValidationFailed('\"exp\" claim must be a number', payload, 'exp', 'invalid');\n        }\n        if (payload.exp <= now - tolerance) {\n            throw new JWTExpired('\"exp\" claim timestamp check failed', payload, 'exp', 'check_failed');\n        }\n    }\n    if (maxTokenAge) {\n        const age = now - payload.iat;\n        const max = typeof maxTokenAge === 'number' ? maxTokenAge : secs(maxTokenAge);\n        if (age - tolerance > max) {\n            throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', payload, 'iat', 'check_failed');\n        }\n        if (age < 0 - tolerance) {\n            throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', payload, 'iat', 'check_failed');\n        }\n    }\n    return payload;\n};\n","import { compactVerify } from '../jws/compact/verify.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTInvalid } from '../util/errors.js';\nexport async function jwtVerify(jwt, key, options) {\n    const verified = await compactVerify(jwt, key, options);\n    if (verified.protectedHeader.crit?.includes('b64') && verified.protectedHeader.b64 === false) {\n        throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n    }\n    const payload = jwtPayload(verified.protectedHeader, verified.payload, options);\n    const result = { payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n","import { compactDecrypt } from '../jwe/compact/decrypt.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTClaimValidationFailed } from '../util/errors.js';\nexport async function jwtDecrypt(jwt, key, options) {\n    const decrypted = await compactDecrypt(jwt, key, options);\n    const payload = jwtPayload(decrypted.protectedHeader, decrypted.plaintext, options);\n    const { protectedHeader } = decrypted;\n    if (protectedHeader.iss !== undefined && protectedHeader.iss !== payload.iss) {\n        throw new JWTClaimValidationFailed('replicated \"iss\" claim header parameter mismatch', payload, 'iss', 'mismatch');\n    }\n    if (protectedHeader.sub !== undefined && protectedHeader.sub !== payload.sub) {\n        throw new JWTClaimValidationFailed('replicated \"sub\" claim header parameter mismatch', payload, 'sub', 'mismatch');\n    }\n    if (protectedHeader.aud !== undefined &&\n        JSON.stringify(protectedHeader.aud) !== JSON.stringify(payload.aud)) {\n        throw new JWTClaimValidationFailed('replicated \"aud\" claim header parameter mismatch', payload, 'aud', 'mismatch');\n    }\n    const result = { payload, protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: decrypted.key };\n    }\n    return result;\n}\n","import { FlattenedEncrypt } from '../flattened/encrypt.js';\nexport class CompactEncrypt {\n    constructor(plaintext) {\n        this._flattened = new FlattenedEncrypt(plaintext);\n    }\n    setContentEncryptionKey(cek) {\n        this._flattened.setContentEncryptionKey(cek);\n        return this;\n    }\n    setInitializationVector(iv) {\n        this._flattened.setInitializationVector(iv);\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    setKeyManagementParameters(parameters) {\n        this._flattened.setKeyManagementParameters(parameters);\n        return this;\n    }\n    async encrypt(key, options) {\n        const jwe = await this._flattened.encrypt(key, options);\n        return [jwe.protected, jwe.encrypted_key, jwe.iv, jwe.ciphertext, jwe.tag].join('.');\n    }\n}\n","import subtleAlgorithm from './subtle_dsa.js';\nimport crypto from './webcrypto.js';\nimport checkKeyLength from './check_key_length.js';\nimport getSignKey from './get_sign_verify_key.js';\nconst sign = async (alg, key, data) => {\n    const cryptoKey = await getSignKey(alg, key, 'sign');\n    checkKeyLength(alg, cryptoKey);\n    const signature = await crypto.subtle.sign(subtleAlgorithm(alg, cryptoKey.algorithm), cryptoKey, data);\n    return new Uint8Array(signature);\n};\nexport default sign;\n","import { encode as base64url } from '../../runtime/base64url.js';\nimport sign from '../../runtime/sign.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport checkKeyType from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nexport class FlattenedSign {\n    constructor(payload) {\n        if (!(payload instanceof Uint8Array)) {\n            throw new TypeError('payload must be an instance of Uint8Array');\n        }\n        this._payload = payload;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader) {\n            throw new JWSInvalid('either setProtectedHeader or setUnprotectedHeader must be called before #sign()');\n        }\n        if (!isDisjoint(this._protectedHeader, this._unprotectedHeader)) {\n            throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader,\n        };\n        const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options?.crit, this._protectedHeader, joseHeader);\n        let b64 = true;\n        if (extensions.has('b64')) {\n            b64 = this._protectedHeader.b64;\n            if (typeof b64 !== 'boolean') {\n                throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n            }\n        }\n        const { alg } = joseHeader;\n        if (typeof alg !== 'string' || !alg) {\n            throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        checkKeyType(alg, key, 'sign');\n        let payload = this._payload;\n        if (b64) {\n            payload = encoder.encode(base64url(payload));\n        }\n        let protectedHeader;\n        if (this._protectedHeader) {\n            protectedHeader = encoder.encode(base64url(JSON.stringify(this._protectedHeader)));\n        }\n        else {\n            protectedHeader = encoder.encode('');\n        }\n        const data = concat(protectedHeader, encoder.encode('.'), payload);\n        const signature = await sign(alg, key, data);\n        const jws = {\n            signature: base64url(signature),\n            payload: '',\n        };\n        if (b64) {\n            jws.payload = decoder.decode(payload);\n        }\n        if (this._unprotectedHeader) {\n            jws.header = this._unprotectedHeader;\n        }\n        if (this._protectedHeader) {\n            jws.protected = decoder.decode(protectedHeader);\n        }\n        return jws;\n    }\n}\n","import { FlattenedSign } from '../flattened/sign.js';\nexport class CompactSign {\n    constructor(payload) {\n        this._flattened = new FlattenedSign(payload);\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    async sign(key, options) {\n        const jws = await this._flattened.sign(key, options);\n        if (jws.payload === undefined) {\n            throw new TypeError('use the flattened module for creating JWS with b64: false');\n        }\n        return `${jws.protected}.${jws.payload}.${jws.signature}`;\n    }\n}\n","import { FlattenedSign } from '../flattened/sign.js';\nimport { JWSInvalid } from '../../util/errors.js';\nclass IndividualSignature {\n    constructor(sig, key, options) {\n        this.parent = sig;\n        this.key = key;\n        this.options = options;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this.protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this.protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this.unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this.unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    addSignature(...args) {\n        return this.parent.addSignature(...args);\n    }\n    sign(...args) {\n        return this.parent.sign(...args);\n    }\n    done() {\n        return this.parent;\n    }\n}\nexport class GeneralSign {\n    constructor(payload) {\n        this._signatures = [];\n        this._payload = payload;\n    }\n    addSignature(key, options) {\n        const signature = new IndividualSignature(this, key, options);\n        this._signatures.push(signature);\n        return signature;\n    }\n    async sign() {\n        if (!this._signatures.length) {\n            throw new JWSInvalid('at least one signature must be added');\n        }\n        const jws = {\n            signatures: [],\n            payload: '',\n        };\n        for (let i = 0; i < this._signatures.length; i++) {\n            const signature = this._signatures[i];\n            const flattened = new FlattenedSign(this._payload);\n            flattened.setProtectedHeader(signature.protectedHeader);\n            flattened.setUnprotectedHeader(signature.unprotectedHeader);\n            const { payload, ...rest } = await flattened.sign(signature.key, signature.options);\n            if (i === 0) {\n                jws.payload = payload;\n            }\n            else if (jws.payload !== payload) {\n                throw new JWSInvalid('inconsistent use of JWS Unencoded Payload (RFC7797)');\n            }\n            jws.signatures.push(rest);\n        }\n        return jws;\n    }\n}\n","import epoch from '../lib/epoch.js';\nimport isObject from '../lib/is_object.js';\nimport secs from '../lib/secs.js';\nfunction validateInput(label, input) {\n    if (!Number.isFinite(input)) {\n        throw new TypeError(`Invalid ${label} input`);\n    }\n    return input;\n}\nexport class ProduceJWT {\n    constructor(payload = {}) {\n        if (!isObject(payload)) {\n            throw new TypeError('JWT Claims Set MUST be an object');\n        }\n        this._payload = payload;\n    }\n    setIssuer(issuer) {\n        this._payload = { ...this._payload, iss: issuer };\n        return this;\n    }\n    setSubject(subject) {\n        this._payload = { ...this._payload, sub: subject };\n        return this;\n    }\n    setAudience(audience) {\n        this._payload = { ...this._payload, aud: audience };\n        return this;\n    }\n    setJti(jwtId) {\n        this._payload = { ...this._payload, jti: jwtId };\n        return this;\n    }\n    setNotBefore(input) {\n        if (typeof input === 'number') {\n            this._payload = { ...this._payload, nbf: validateInput('setNotBefore', input) };\n        }\n        else if (input instanceof Date) {\n            this._payload = { ...this._payload, nbf: validateInput('setNotBefore', epoch(input)) };\n        }\n        else {\n            this._payload = { ...this._payload, nbf: epoch(new Date()) + secs(input) };\n        }\n        return this;\n    }\n    setExpirationTime(input) {\n        if (typeof input === 'number') {\n            this._payload = { ...this._payload, exp: validateInput('setExpirationTime', input) };\n        }\n        else if (input instanceof Date) {\n            this._payload = { ...this._payload, exp: validateInput('setExpirationTime', epoch(input)) };\n        }\n        else {\n            this._payload = { ...this._payload, exp: epoch(new Date()) + secs(input) };\n        }\n        return this;\n    }\n    setIssuedAt(input) {\n        if (typeof input === 'undefined') {\n            this._payload = { ...this._payload, iat: epoch(new Date()) };\n        }\n        else if (input instanceof Date) {\n            this._payload = { ...this._payload, iat: validateInput('setIssuedAt', epoch(input)) };\n        }\n        else if (typeof input === 'string') {\n            this._payload = {\n                ...this._payload,\n                iat: validateInput('setIssuedAt', epoch(new Date()) + secs(input)),\n            };\n        }\n        else {\n            this._payload = { ...this._payload, iat: validateInput('setIssuedAt', input) };\n        }\n        return this;\n    }\n}\n","import { CompactSign } from '../jws/compact/sign.js';\nimport { JWTInvalid } from '../util/errors.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport { ProduceJWT } from './produce.js';\nexport class SignJWT extends ProduceJWT {\n    setProtectedHeader(protectedHeader) {\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        const sig = new CompactSign(encoder.encode(JSON.stringify(this._payload)));\n        sig.setProtectedHeader(this._protectedHeader);\n        if (Array.isArray(this._protectedHeader?.crit) &&\n            this._protectedHeader.crit.includes('b64') &&\n            this._protectedHeader.b64 === false) {\n            throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n        }\n        return sig.sign(key, options);\n    }\n}\n","import { CompactEncrypt } from '../jwe/compact/encrypt.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport { ProduceJWT } from './produce.js';\nexport class EncryptJWT extends ProduceJWT {\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setKeyManagementParameters(parameters) {\n        if (this._keyManagementParameters) {\n            throw new TypeError('setKeyManagementParameters can only be called once');\n        }\n        this._keyManagementParameters = parameters;\n        return this;\n    }\n    setContentEncryptionKey(cek) {\n        if (this._cek) {\n            throw new TypeError('setContentEncryptionKey can only be called once');\n        }\n        this._cek = cek;\n        return this;\n    }\n    setInitializationVector(iv) {\n        if (this._iv) {\n            throw new TypeError('setInitializationVector can only be called once');\n        }\n        this._iv = iv;\n        return this;\n    }\n    replicateIssuerAsHeader() {\n        this._replicateIssuerAsHeader = true;\n        return this;\n    }\n    replicateSubjectAsHeader() {\n        this._replicateSubjectAsHeader = true;\n        return this;\n    }\n    replicateAudienceAsHeader() {\n        this._replicateAudienceAsHeader = true;\n        return this;\n    }\n    async encrypt(key, options) {\n        const enc = new CompactEncrypt(encoder.encode(JSON.stringify(this._payload)));\n        if (this._replicateIssuerAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, iss: this._payload.iss };\n        }\n        if (this._replicateSubjectAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, sub: this._payload.sub };\n        }\n        if (this._replicateAudienceAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, aud: this._payload.aud };\n        }\n        enc.setProtectedHeader(this._protectedHeader);\n        if (this._iv) {\n            enc.setInitializationVector(this._iv);\n        }\n        if (this._cek) {\n            enc.setContentEncryptionKey(this._cek);\n        }\n        if (this._keyManagementParameters) {\n            enc.setKeyManagementParameters(this._keyManagementParameters);\n        }\n        return enc.encrypt(key, options);\n    }\n}\n","import digest from '../runtime/digest.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nimport { JOSENotSupported, JWKInvalid } from '../util/errors.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nconst check = (value, description) => {\n    if (typeof value !== 'string' || !value) {\n        throw new JWKInvalid(`${description} missing or invalid`);\n    }\n};\nexport async function calculateJwkThumbprint(jwk, digestAlgorithm) {\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    digestAlgorithm ?? (digestAlgorithm = 'sha256');\n    if (digestAlgorithm !== 'sha256' &&\n        digestAlgorithm !== 'sha384' &&\n        digestAlgorithm !== 'sha512') {\n        throw new TypeError('digestAlgorithm must one of \"sha256\", \"sha384\", or \"sha512\"');\n    }\n    let components;\n    switch (jwk.kty) {\n        case 'EC':\n            check(jwk.crv, '\"crv\" (Curve) Parameter');\n            check(jwk.x, '\"x\" (X Coordinate) Parameter');\n            check(jwk.y, '\"y\" (Y Coordinate) Parameter');\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x, y: jwk.y };\n            break;\n        case 'OKP':\n            check(jwk.crv, '\"crv\" (Subtype of Key Pair) Parameter');\n            check(jwk.x, '\"x\" (Public Key) Parameter');\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x };\n            break;\n        case 'RSA':\n            check(jwk.e, '\"e\" (Exponent) Parameter');\n            check(jwk.n, '\"n\" (Modulus) Parameter');\n            components = { e: jwk.e, kty: jwk.kty, n: jwk.n };\n            break;\n        case 'oct':\n            check(jwk.k, '\"k\" (Key Value) Parameter');\n            components = { k: jwk.k, kty: jwk.kty };\n            break;\n        default:\n            throw new JOSENotSupported('\"kty\" (Key Type) Parameter missing or unsupported');\n    }\n    const data = encoder.encode(JSON.stringify(components));\n    return base64url(await digest(digestAlgorithm, data));\n}\nexport async function calculateJwkThumbprintUri(jwk, digestAlgorithm) {\n    digestAlgorithm ?? (digestAlgorithm = 'sha256');\n    const thumbprint = await calculateJwkThumbprint(jwk, digestAlgorithm);\n    return `urn:ietf:params:oauth:jwk-thumbprint:sha-${digestAlgorithm.slice(-3)}:${thumbprint}`;\n}\n","import { importJWK } from '../key/import.js';\nimport isObject from '../lib/is_object.js';\nimport { JWSInvalid } from '../util/errors.js';\nexport async function EmbeddedJWK(protectedHeader, token) {\n    const joseHeader = {\n        ...protectedHeader,\n        ...token?.header,\n    };\n    if (!isObject(joseHeader.jwk)) {\n        throw new JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a JSON object');\n    }\n    const key = await importJWK({ ...joseHeader.jwk, ext: true }, joseHeader.alg);\n    if (key instanceof Uint8Array || key.type !== 'public') {\n        throw new JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a public key');\n    }\n    return key;\n}\n","import { importJWK } from '../key/import.js';\nimport { JWKSInvalid, JOSENotSupported, JWKSNoMatchingKey, JWKSMultipleMatchingKeys, } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nfunction getKtyFromAlg(alg) {\n    switch (typeof alg === 'string' && alg.slice(0, 2)) {\n        case 'RS':\n        case 'PS':\n            return 'RSA';\n        case 'ES':\n            return 'EC';\n        case 'Ed':\n            return 'OKP';\n        default:\n            throw new JOSENotSupported('Unsupported \"alg\" value for a JSON Web Key Set');\n    }\n}\nfunction isJWKSLike(jwks) {\n    return (jwks &&\n        typeof jwks === 'object' &&\n        Array.isArray(jwks.keys) &&\n        jwks.keys.every(isJWKLike));\n}\nfunction isJWKLike(key) {\n    return isObject(key);\n}\nfunction clone(obj) {\n    if (typeof structuredClone === 'function') {\n        return structuredClone(obj);\n    }\n    return JSON.parse(JSON.stringify(obj));\n}\nexport class LocalJWKSet {\n    constructor(jwks) {\n        this._cached = new WeakMap();\n        if (!isJWKSLike(jwks)) {\n            throw new JWKSInvalid('JSON Web Key Set malformed');\n        }\n        this._jwks = clone(jwks);\n    }\n    async getKey(protectedHeader, token) {\n        const { alg, kid } = { ...protectedHeader, ...token?.header };\n        const kty = getKtyFromAlg(alg);\n        const candidates = this._jwks.keys.filter((jwk) => {\n            let candidate = kty === jwk.kty;\n            if (candidate && typeof kid === 'string') {\n                candidate = kid === jwk.kid;\n            }\n            if (candidate && typeof jwk.alg === 'string') {\n                candidate = alg === jwk.alg;\n            }\n            if (candidate && typeof jwk.use === 'string') {\n                candidate = jwk.use === 'sig';\n            }\n            if (candidate && Array.isArray(jwk.key_ops)) {\n                candidate = jwk.key_ops.includes('verify');\n            }\n            if (candidate && alg === 'EdDSA') {\n                candidate = jwk.crv === 'Ed25519' || jwk.crv === 'Ed448';\n            }\n            if (candidate) {\n                switch (alg) {\n                    case 'ES256':\n                        candidate = jwk.crv === 'P-256';\n                        break;\n                    case 'ES256K':\n                        candidate = jwk.crv === 'secp256k1';\n                        break;\n                    case 'ES384':\n                        candidate = jwk.crv === 'P-384';\n                        break;\n                    case 'ES512':\n                        candidate = jwk.crv === 'P-521';\n                        break;\n                }\n            }\n            return candidate;\n        });\n        const { 0: jwk, length } = candidates;\n        if (length === 0) {\n            throw new JWKSNoMatchingKey();\n        }\n        if (length !== 1) {\n            const error = new JWKSMultipleMatchingKeys();\n            const { _cached } = this;\n            error[Symbol.asyncIterator] = async function* () {\n                for (const jwk of candidates) {\n                    try {\n                        yield await importWithAlgCache(_cached, jwk, alg);\n                    }\n                    catch { }\n                }\n            };\n            throw error;\n        }\n        return importWithAlgCache(this._cached, jwk, alg);\n    }\n}\nasync function importWithAlgCache(cache, jwk, alg) {\n    const cached = cache.get(jwk) || cache.set(jwk, {}).get(jwk);\n    if (cached[alg] === undefined) {\n        const key = await importJWK({ ...jwk, ext: true }, alg);\n        if (key instanceof Uint8Array || key.type !== 'public') {\n            throw new JWKSInvalid('JSON Web Key Set members must be public keys');\n        }\n        cached[alg] = key;\n    }\n    return cached[alg];\n}\nexport function createLocalJWKSet(jwks) {\n    const set = new LocalJWKSet(jwks);\n    const localJWKSet = async (protectedHeader, token) => set.getKey(protectedHeader, token);\n    Object.defineProperties(localJWKSet, {\n        jwks: {\n            value: () => clone(set._jwks),\n            enumerable: true,\n            configurable: false,\n            writable: false,\n        },\n    });\n    return localJWKSet;\n}\n","import { JOSEError, JWKSTimeout } from '../util/errors.js';\nconst fetchJwks = async (url, timeout, options) => {\n    let controller;\n    let id;\n    let timedOut = false;\n    if (typeof AbortController === 'function') {\n        controller = new AbortController();\n        id = setTimeout(() => {\n            timedOut = true;\n            controller.abort();\n        }, timeout);\n    }\n    const response = await fetch(url.href, {\n        signal: controller ? controller.signal : undefined,\n        redirect: 'manual',\n        headers: options.headers,\n    }).catch((err) => {\n        if (timedOut)\n            throw new JWKSTimeout();\n        throw err;\n    });\n    if (id !== undefined)\n        clearTimeout(id);\n    if (response.status !== 200) {\n        throw new JOSEError('Expected 200 OK from the JSON Web Key Set HTTP response');\n    }\n    try {\n        return await response.json();\n    }\n    catch {\n        throw new JOSEError('Failed to parse the JSON Web Key Set HTTP response as JSON');\n    }\n};\nexport default fetchJwks;\n","import fetchJwks from '../runtime/fetch_jwks.js';\nimport { JWKSNoMatchingKey } from '../util/errors.js';\nimport { createLocalJWKSet } from './local.js';\nimport isObject from '../lib/is_object.js';\nfunction isCloudflareWorkers() {\n    return (typeof WebSocketPair !== 'undefined' ||\n        (typeof navigator !== 'undefined' && navigator.userAgent === 'Cloudflare-Workers') ||\n        (typeof EdgeRuntime !== 'undefined' && EdgeRuntime === 'vercel'));\n}\nlet USER_AGENT;\nif (typeof navigator === 'undefined' || !navigator.userAgent?.startsWith?.('Mozilla/5.0 ')) {\n    const NAME = 'jose';\n    const VERSION = 'v5.6.2';\n    USER_AGENT = `${NAME}/${VERSION}`;\n}\nexport const experimental_jwksCache = Symbol();\nfunction isFreshJwksCache(input, cacheMaxAge) {\n    if (typeof input !== 'object' || input === null) {\n        return false;\n    }\n    if (!('uat' in input) || typeof input.uat !== 'number' || Date.now() - input.uat >= cacheMaxAge) {\n        return false;\n    }\n    if (!('jwks' in input) ||\n        !isObject(input.jwks) ||\n        !Array.isArray(input.jwks.keys) ||\n        !Array.prototype.every.call(input.jwks.keys, isObject)) {\n        return false;\n    }\n    return true;\n}\nclass RemoteJWKSet {\n    constructor(url, options) {\n        if (!(url instanceof URL)) {\n            throw new TypeError('url must be an instance of URL');\n        }\n        this._url = new URL(url.href);\n        this._options = { agent: options?.agent, headers: options?.headers };\n        this._timeoutDuration =\n            typeof options?.timeoutDuration === 'number' ? options?.timeoutDuration : 5000;\n        this._cooldownDuration =\n            typeof options?.cooldownDuration === 'number' ? options?.cooldownDuration : 30000;\n        this._cacheMaxAge = typeof options?.cacheMaxAge === 'number' ? options?.cacheMaxAge : 600000;\n        if (options?.[experimental_jwksCache] !== undefined) {\n            this._cache = options?.[experimental_jwksCache];\n            if (isFreshJwksCache(options?.[experimental_jwksCache], this._cacheMaxAge)) {\n                this._jwksTimestamp = this._cache.uat;\n                this._local = createLocalJWKSet(this._cache.jwks);\n            }\n        }\n    }\n    coolingDown() {\n        return typeof this._jwksTimestamp === 'number'\n            ? Date.now() < this._jwksTimestamp + this._cooldownDuration\n            : false;\n    }\n    fresh() {\n        return typeof this._jwksTimestamp === 'number'\n            ? Date.now() < this._jwksTimestamp + this._cacheMaxAge\n            : false;\n    }\n    async getKey(protectedHeader, token) {\n        if (!this._local || !this.fresh()) {\n            await this.reload();\n        }\n        try {\n            return await this._local(protectedHeader, token);\n        }\n        catch (err) {\n            if (err instanceof JWKSNoMatchingKey) {\n                if (this.coolingDown() === false) {\n                    await this.reload();\n                    return this._local(protectedHeader, token);\n                }\n            }\n            throw err;\n        }\n    }\n    async reload() {\n        if (this._pendingFetch && isCloudflareWorkers()) {\n            this._pendingFetch = undefined;\n        }\n        const headers = new Headers(this._options.headers);\n        if (USER_AGENT && !headers.has('User-Agent')) {\n            headers.set('User-Agent', USER_AGENT);\n            this._options.headers = Object.fromEntries(headers.entries());\n        }\n        this._pendingFetch || (this._pendingFetch = fetchJwks(this._url, this._timeoutDuration, this._options)\n            .then((json) => {\n            this._local = createLocalJWKSet(json);\n            if (this._cache) {\n                this._cache.uat = Date.now();\n                this._cache.jwks = json;\n            }\n            this._jwksTimestamp = Date.now();\n            this._pendingFetch = undefined;\n        })\n            .catch((err) => {\n            this._pendingFetch = undefined;\n            throw err;\n        }));\n        await this._pendingFetch;\n    }\n}\nexport function createRemoteJWKSet(url, options) {\n    const set = new RemoteJWKSet(url, options);\n    const remoteJWKSet = async (protectedHeader, token) => set.getKey(protectedHeader, token);\n    Object.defineProperties(remoteJWKSet, {\n        coolingDown: {\n            get: () => set.coolingDown(),\n            enumerable: true,\n            configurable: false,\n        },\n        fresh: {\n            get: () => set.fresh(),\n            enumerable: true,\n            configurable: false,\n        },\n        reload: {\n            value: () => set.reload(),\n            enumerable: true,\n            configurable: false,\n            writable: false,\n        },\n        reloading: {\n            get: () => !!set._pendingFetch,\n            enumerable: true,\n            configurable: false,\n        },\n        jwks: {\n            value: () => set._local?.jwks(),\n            enumerable: true,\n            configurable: false,\n            writable: false,\n        },\n    });\n    return remoteJWKSet;\n}\n","import * as base64url from '../runtime/base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport { JWTInvalid } from '../util/errors.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { ProduceJWT } from './produce.js';\nexport class UnsecuredJWT extends ProduceJWT {\n    encode() {\n        const header = base64url.encode(JSON.stringify({ alg: 'none' }));\n        const payload = base64url.encode(JSON.stringify(this._payload));\n        return `${header}.${payload}.`;\n    }\n    static decode(jwt, options) {\n        if (typeof jwt !== 'string') {\n            throw new JWTInvalid('Unsecured JWT must be a string');\n        }\n        const { 0: encodedHeader, 1: encodedPayload, 2: signature, length } = jwt.split('.');\n        if (length !== 3 || signature !== '') {\n            throw new JWTInvalid('Invalid Unsecured JWT');\n        }\n        let header;\n        try {\n            header = JSON.parse(decoder.decode(base64url.decode(encodedHeader)));\n            if (header.alg !== 'none')\n                throw new Error();\n        }\n        catch {\n            throw new JWTInvalid('Invalid Unsecured JWT');\n        }\n        const payload = jwtPayload(header, base64url.decode(encodedPayload), options);\n        return { payload, header };\n    }\n}\n","import * as base64url from '../runtime/base64url.js';\nexport const encode = base64url.encode;\nexport const decode = base64url.decode;\n","import { decode as base64url } from './base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nexport function decodeProtectedHeader(token) {\n    let protectedB64u;\n    if (typeof token === 'string') {\n        const parts = token.split('.');\n        if (parts.length === 3 || parts.length === 5) {\n            ;\n            [protectedB64u] = parts;\n        }\n    }\n    else if (typeof token === 'object' && token) {\n        if ('protected' in token) {\n            protectedB64u = token.protected;\n        }\n        else {\n            throw new TypeError('Token does not contain a Protected Header');\n        }\n    }\n    try {\n        if (typeof protectedB64u !== 'string' || !protectedB64u) {\n            throw new Error();\n        }\n        const result = JSON.parse(decoder.decode(base64url(protectedB64u)));\n        if (!isObject(result)) {\n            throw new Error();\n        }\n        return result;\n    }\n    catch {\n        throw new TypeError('Invalid Token or Protected Header formatting');\n    }\n}\n","import { decode as base64url } from './base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nimport { JWTInvalid } from './errors.js';\nexport function decodeJwt(jwt) {\n    if (typeof jwt !== 'string')\n        throw new JWTInvalid('JWTs must use Compact JWS serialization, JWT must be a string');\n    const { 1: payload, length } = jwt.split('.');\n    if (length === 5)\n        throw new JWTInvalid('Only JWTs using Compact JWS serialization can be decoded');\n    if (length !== 3)\n        throw new JWTInvalid('Invalid JWT');\n    if (!payload)\n        throw new JWTInvalid('JWTs must contain a payload');\n    let decoded;\n    try {\n        decoded = base64url(payload);\n    }\n    catch {\n        throw new JWTInvalid('Failed to base64url decode the payload');\n    }\n    let result;\n    try {\n        result = JSON.parse(decoder.decode(decoded));\n    }\n    catch {\n        throw new JWTInvalid('Failed to parse the decoded payload as JSON');\n    }\n    if (!isObject(result))\n        throw new JWTInvalid('Invalid JWT Claims Set');\n    return result;\n}\n","import crypto from './webcrypto.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport random from './random.js';\nexport async function generateSecret(alg, options) {\n    let length;\n    let algorithm;\n    let keyUsages;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n            length = parseInt(alg.slice(-3), 10);\n            algorithm = { name: 'HMAC', hash: `SHA-${length}`, length };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            length = parseInt(alg.slice(-3), 10);\n            return random(new Uint8Array(length >> 3));\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW':\n            length = parseInt(alg.slice(1, 4), 10);\n            algorithm = { name: 'AES-KW', length };\n            keyUsages = ['wrapKey', 'unwrapKey'];\n            break;\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW':\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            length = parseInt(alg.slice(1, 4), 10);\n            algorithm = { name: 'AES-GCM', length };\n            keyUsages = ['encrypt', 'decrypt'];\n            break;\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n    }\n    return crypto.subtle.generateKey(algorithm, options?.extractable ?? false, keyUsages);\n}\nfunction getModulusLengthOption(options) {\n    const modulusLength = options?.modulusLength ?? 2048;\n    if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n        throw new JOSENotSupported('Invalid or unsupported modulusLength option provided, 2048 bits or larger keys must be used');\n    }\n    return modulusLength;\n}\nexport async function generateKeyPair(alg, options) {\n    let algorithm;\n    let keyUsages;\n    switch (alg) {\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            algorithm = {\n                name: 'RSA-PSS',\n                hash: `SHA-${alg.slice(-3)}`,\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                modulusLength: getModulusLengthOption(options),\n            };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            algorithm = {\n                name: 'RSASSA-PKCS1-v1_5',\n                hash: `SHA-${alg.slice(-3)}`,\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                modulusLength: getModulusLengthOption(options),\n            };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            algorithm = {\n                name: 'RSA-OAEP',\n                hash: `SHA-${parseInt(alg.slice(-3), 10) || 1}`,\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                modulusLength: getModulusLengthOption(options),\n            };\n            keyUsages = ['decrypt', 'unwrapKey', 'encrypt', 'wrapKey'];\n            break;\n        case 'ES256':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'ES384':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'ES512':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'EdDSA': {\n            keyUsages = ['sign', 'verify'];\n            const crv = options?.crv ?? 'Ed25519';\n            switch (crv) {\n                case 'Ed25519':\n                case 'Ed448':\n                    algorithm = { name: crv };\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported crv option provided');\n            }\n            break;\n        }\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            keyUsages = ['deriveKey', 'deriveBits'];\n            const crv = options?.crv ?? 'P-256';\n            switch (crv) {\n                case 'P-256':\n                case 'P-384':\n                case 'P-521': {\n                    algorithm = { name: 'ECDH', namedCurve: crv };\n                    break;\n                }\n                case 'X25519':\n                case 'X448':\n                    algorithm = { name: crv };\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported crv option provided, supported values are P-256, P-384, P-521, X25519, and X448');\n            }\n            break;\n        }\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n    }\n    return (crypto.subtle.generateKey(algorithm, options?.extractable ?? false, keyUsages));\n}\n","import { generateKeyPair as generate } from '../runtime/generate.js';\nexport async function generateKeyPair(alg, options) {\n    return generate(alg, options);\n}\n","import { generateSecret as generate } from '../runtime/generate.js';\nexport async function generateSecret(alg, options) {\n    return generate(alg, options);\n}\n","export { compactDecrypt } from './jwe/compact/decrypt.js';\nexport { flattenedDecrypt } from './jwe/flattened/decrypt.js';\nexport { generalDecrypt } from './jwe/general/decrypt.js';\nexport { GeneralEncrypt } from './jwe/general/encrypt.js';\nexport { compactVerify } from './jws/compact/verify.js';\nexport { flattenedVerify } from './jws/flattened/verify.js';\nexport { generalVerify } from './jws/general/verify.js';\nexport { jwtVerify } from './jwt/verify.js';\nexport { jwtDecrypt } from './jwt/decrypt.js';\nexport { CompactEncrypt } from './jwe/compact/encrypt.js';\nexport { FlattenedEncrypt } from './jwe/flattened/encrypt.js';\nexport { CompactSign } from './jws/compact/sign.js';\nexport { FlattenedSign } from './jws/flattened/sign.js';\nexport { GeneralSign } from './jws/general/sign.js';\nexport { SignJWT } from './jwt/sign.js';\nexport { EncryptJWT } from './jwt/encrypt.js';\nexport { calculateJwkThumbprint, calculateJwkThumbprintUri } from './jwk/thumbprint.js';\nexport { EmbeddedJWK } from './jwk/embedded.js';\nexport { createLocalJWKSet } from './jwks/local.js';\nexport { createRemoteJWKSet, experimental_jwksCache } from './jwks/remote.js';\nexport { UnsecuredJWT } from './jwt/unsecured.js';\nexport { exportPKCS8, exportSPKI, exportJWK } from './key/export.js';\nexport { importSPKI, importPKCS8, importX509, importJWK } from './key/import.js';\nexport { decodeProtectedHeader } from './util/decode_protected_header.js';\nexport { decodeJwt } from './util/decode_jwt.js';\nexport * as errors from './util/errors.js';\nexport { generateKeyPair } from './key/generate_key_pair.js';\nexport { generateSecret } from './key/generate_secret.js';\nexport * as base64url from './util/base64url.js';\nexport { default as cryptoRuntime } from './util/runtime.js';\n","import { StaticGenBailoutError } from '../../client/components/static-generation-bailout';\nimport { afterTaskAsyncStorage } from '../app-render/after-task-async-storage.external';\nexport function throwWithStaticGenerationBailoutError(route, expression) {\n    throw Object.defineProperty(new StaticGenBailoutError(`Route ${route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`), \"__NEXT_ERROR_CODE\", {\n        value: \"E576\",\n        enumerable: false,\n        configurable: true\n    });\n}\nexport function throwWithStaticGenerationBailoutErrorWithDynamicError(route, expression) {\n    throw Object.defineProperty(new StaticGenBailoutError(`Route ${route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`), \"__NEXT_ERROR_CODE\", {\n        value: \"E543\",\n        enumerable: false,\n        configurable: true\n    });\n}\nexport function throwForSearchParamsAccessInUseCache(workStore) {\n    const error = Object.defineProperty(new Error(`Route ${workStore.route} used \"searchParams\" inside \"use cache\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"searchParams\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache`), \"__NEXT_ERROR_CODE\", {\n        value: \"E634\",\n        enumerable: false,\n        configurable: true\n    });\n    workStore.invalidUsageError ??= error;\n    throw error;\n}\nexport function isRequestAPICallableInsideAfter() {\n    const afterTaskStore = afterTaskAsyncStorage.getStore();\n    return (afterTaskStore == null ? void 0 : afterTaskStore.rootTaskSpawnPhase) === 'action';\n}\n\n//# sourceMappingURL=utils.js.map","import { areCookiesMutableInCurrentPhase, RequestCookiesAdapter } from '../web/spec-extension/adapters/request-cookies';\nimport { RequestCookies } from '../web/spec-extension/cookies';\nimport { workAsyncStorage } from '../app-render/work-async-storage.external';\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external';\nimport { postponeWithTracking, abortAndThrowOnSynchronousRequestDataAccess, throwToInterruptStaticGeneration, trackDynamicDataInDynamicRender, trackSynchronousRequestDataAccessInDev } from '../app-render/dynamic-rendering';\nimport { getExpectedRequestStore } from '../app-render/work-unit-async-storage.external';\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout';\nimport { makeHangingPromise } from '../dynamic-rendering-utils';\nimport { createDedupedByCallsiteServerErrorLoggerDev } from '../create-deduped-by-callsite-server-error-logger';\nimport { scheduleImmediate } from '../../lib/scheduler';\nimport { isRequestAPICallableInsideAfter } from './utils';\nexport function cookies() {\n    const callingExpression = 'cookies';\n    const workStore = workAsyncStorage.getStore();\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workStore) {\n        if (workUnitStore && workUnitStore.phase === 'after' && !isRequestAPICallableInsideAfter()) {\n            throw Object.defineProperty(new Error(// TODO(after): clarify that this only applies to pages?\n            `Route ${workStore.route} used \"cookies\" inside \"after(...)\". This is not supported. If you need this data inside an \"after\" callback, use \"cookies\" outside of the callback. See more info here: https://nextjs.org/docs/canary/app/api-reference/functions/after`), \"__NEXT_ERROR_CODE\", {\n                value: \"E88\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (workStore.forceStatic) {\n            // When using forceStatic we override all other logic and always just return an empty\n            // cookies object without tracking\n            const underlyingCookies = createEmptyCookies();\n            return makeUntrackedExoticCookies(underlyingCookies);\n        }\n        if (workUnitStore) {\n            if (workUnitStore.type === 'cache') {\n                throw Object.defineProperty(new Error(`Route ${workStore.route} used \"cookies\" inside \"use cache\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"cookies\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E398\",\n                    enumerable: false,\n                    configurable: true\n                });\n            } else if (workUnitStore.type === 'unstable-cache') {\n                throw Object.defineProperty(new Error(`Route ${workStore.route} used \"cookies\" inside a function cached with \"unstable_cache(...)\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"cookies\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/app/api-reference/functions/unstable_cache`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E157\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n        }\n        if (workStore.dynamicShouldError) {\n            throw Object.defineProperty(new StaticGenBailoutError(`Route ${workStore.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`cookies\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`), \"__NEXT_ERROR_CODE\", {\n                value: \"E549\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (workUnitStore) {\n            if (workUnitStore.type === 'prerender') {\n                // dynamicIO Prerender\n                // We don't track dynamic access here because access will be tracked when you access\n                // one of the properties of the cookies object.\n                return makeDynamicallyTrackedExoticCookies(workStore.route, workUnitStore);\n            } else if (workUnitStore.type === 'prerender-ppr') {\n                // PPR Prerender (no dynamicIO)\n                // We are prerendering with PPR. We need track dynamic access here eagerly\n                // to keep continuity with how cookies has worked in PPR without dynamicIO.\n                postponeWithTracking(workStore.route, callingExpression, workUnitStore.dynamicTracking);\n            } else if (workUnitStore.type === 'prerender-legacy') {\n                // Legacy Prerender\n                // We track dynamic access here so we don't need to wrap the cookies in\n                // individual property access tracking.\n                throwToInterruptStaticGeneration(callingExpression, workStore, workUnitStore);\n            }\n        }\n        // We fall through to the dynamic context below but we still track dynamic access\n        // because in dev we can still error for things like using cookies inside a cache context\n        trackDynamicDataInDynamicRender(workStore, workUnitStore);\n    }\n    // cookies is being called in a dynamic context\n    const requestStore = getExpectedRequestStore(callingExpression);\n    let underlyingCookies;\n    if (areCookiesMutableInCurrentPhase(requestStore)) {\n        // We can't conditionally return different types here based on the context.\n        // To avoid confusion, we always return the readonly type here.\n        underlyingCookies = requestStore.userspaceMutableCookies;\n    } else {\n        underlyingCookies = requestStore.cookies;\n    }\n    if (process.env.NODE_ENV === 'development' && !(workStore == null ? void 0 : workStore.isPrefetchRequest)) {\n        return makeUntrackedExoticCookiesWithDevWarnings(underlyingCookies, workStore == null ? void 0 : workStore.route);\n    } else {\n        return makeUntrackedExoticCookies(underlyingCookies);\n    }\n}\nfunction createEmptyCookies() {\n    return RequestCookiesAdapter.seal(new RequestCookies(new Headers({})));\n}\nconst CachedCookies = new WeakMap();\nfunction makeDynamicallyTrackedExoticCookies(route, prerenderStore) {\n    const cachedPromise = CachedCookies.get(prerenderStore);\n    if (cachedPromise) {\n        return cachedPromise;\n    }\n    const promise = makeHangingPromise(prerenderStore.renderSignal, '`cookies()`');\n    CachedCookies.set(prerenderStore, promise);\n    Object.defineProperties(promise, {\n        [Symbol.iterator]: {\n            value: function() {\n                const expression = '`cookies()[Symbol.iterator]()`';\n                const error = createCookiesAccessError(route, expression);\n                abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n            }\n        },\n        size: {\n            get () {\n                const expression = '`cookies().size`';\n                const error = createCookiesAccessError(route, expression);\n                abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n            }\n        },\n        get: {\n            value: function get() {\n                let expression;\n                if (arguments.length === 0) {\n                    expression = '`cookies().get()`';\n                } else {\n                    expression = `\\`cookies().get(${describeNameArg(arguments[0])})\\``;\n                }\n                const error = createCookiesAccessError(route, expression);\n                abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n            }\n        },\n        getAll: {\n            value: function getAll() {\n                let expression;\n                if (arguments.length === 0) {\n                    expression = '`cookies().getAll()`';\n                } else {\n                    expression = `\\`cookies().getAll(${describeNameArg(arguments[0])})\\``;\n                }\n                const error = createCookiesAccessError(route, expression);\n                abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n            }\n        },\n        has: {\n            value: function has() {\n                let expression;\n                if (arguments.length === 0) {\n                    expression = '`cookies().has()`';\n                } else {\n                    expression = `\\`cookies().has(${describeNameArg(arguments[0])})\\``;\n                }\n                const error = createCookiesAccessError(route, expression);\n                abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n            }\n        },\n        set: {\n            value: function set() {\n                let expression;\n                if (arguments.length === 0) {\n                    expression = '`cookies().set()`';\n                } else {\n                    const arg = arguments[0];\n                    if (arg) {\n                        expression = `\\`cookies().set(${describeNameArg(arg)}, ...)\\``;\n                    } else {\n                        expression = '`cookies().set(...)`';\n                    }\n                }\n                const error = createCookiesAccessError(route, expression);\n                abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n            }\n        },\n        delete: {\n            value: function() {\n                let expression;\n                if (arguments.length === 0) {\n                    expression = '`cookies().delete()`';\n                } else if (arguments.length === 1) {\n                    expression = `\\`cookies().delete(${describeNameArg(arguments[0])})\\``;\n                } else {\n                    expression = `\\`cookies().delete(${describeNameArg(arguments[0])}, ...)\\``;\n                }\n                const error = createCookiesAccessError(route, expression);\n                abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n            }\n        },\n        clear: {\n            value: function clear() {\n                const expression = '`cookies().clear()`';\n                const error = createCookiesAccessError(route, expression);\n                abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n            }\n        },\n        toString: {\n            value: function toString() {\n                const expression = '`cookies().toString()`';\n                const error = createCookiesAccessError(route, expression);\n                abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n            }\n        }\n    });\n    return promise;\n}\nfunction makeUntrackedExoticCookies(underlyingCookies) {\n    const cachedCookies = CachedCookies.get(underlyingCookies);\n    if (cachedCookies) {\n        return cachedCookies;\n    }\n    const promise = Promise.resolve(underlyingCookies);\n    CachedCookies.set(underlyingCookies, promise);\n    Object.defineProperties(promise, {\n        [Symbol.iterator]: {\n            value: underlyingCookies[Symbol.iterator] ? underlyingCookies[Symbol.iterator].bind(underlyingCookies) : // We should remove this and unify our cookies types. We could just let this continue to throw lazily\n            // but that's already a hard thing to debug so we may as well implement it consistently. The biggest problem with\n            // implementing this in this way is the underlying cookie type is a ResponseCookie and not a RequestCookie and so it\n            // has extra properties not available on RequestCookie instances.\n            polyfilledResponseCookiesIterator.bind(underlyingCookies)\n        },\n        size: {\n            get () {\n                return underlyingCookies.size;\n            }\n        },\n        get: {\n            value: underlyingCookies.get.bind(underlyingCookies)\n        },\n        getAll: {\n            value: underlyingCookies.getAll.bind(underlyingCookies)\n        },\n        has: {\n            value: underlyingCookies.has.bind(underlyingCookies)\n        },\n        set: {\n            value: underlyingCookies.set.bind(underlyingCookies)\n        },\n        delete: {\n            value: underlyingCookies.delete.bind(underlyingCookies)\n        },\n        clear: {\n            value: // @ts-expect-error clear is defined in RequestCookies implementation but not in the type\n            typeof underlyingCookies.clear === 'function' ? underlyingCookies.clear.bind(underlyingCookies) : // We should remove this and unify our cookies types. We could just let this continue to throw lazily\n            // but that's already a hard thing to debug so we may as well implement it consistently. The biggest problem with\n            // implementing this in this way is the underlying cookie type is a ResponseCookie and not a RequestCookie and so it\n            // has extra properties not available on RequestCookie instances.\n            polyfilledResponseCookiesClear.bind(underlyingCookies, promise)\n        },\n        toString: {\n            value: underlyingCookies.toString.bind(underlyingCookies)\n        }\n    });\n    return promise;\n}\nfunction makeUntrackedExoticCookiesWithDevWarnings(underlyingCookies, route) {\n    const cachedCookies = CachedCookies.get(underlyingCookies);\n    if (cachedCookies) {\n        return cachedCookies;\n    }\n    const promise = new Promise((resolve)=>scheduleImmediate(()=>resolve(underlyingCookies)));\n    CachedCookies.set(underlyingCookies, promise);\n    Object.defineProperties(promise, {\n        [Symbol.iterator]: {\n            value: function() {\n                const expression = '`...cookies()` or similar iteration';\n                syncIODev(route, expression);\n                return underlyingCookies[Symbol.iterator] ? underlyingCookies[Symbol.iterator].apply(underlyingCookies, arguments) : // We should remove this and unify our cookies types. We could just let this continue to throw lazily\n                // but that's already a hard thing to debug so we may as well implement it consistently. The biggest problem with\n                // implementing this in this way is the underlying cookie type is a ResponseCookie and not a RequestCookie and so it\n                // has extra properties not available on RequestCookie instances.\n                polyfilledResponseCookiesIterator.call(underlyingCookies);\n            },\n            writable: false\n        },\n        size: {\n            get () {\n                const expression = '`cookies().size`';\n                syncIODev(route, expression);\n                return underlyingCookies.size;\n            }\n        },\n        get: {\n            value: function get() {\n                let expression;\n                if (arguments.length === 0) {\n                    expression = '`cookies().get()`';\n                } else {\n                    expression = `\\`cookies().get(${describeNameArg(arguments[0])})\\``;\n                }\n                syncIODev(route, expression);\n                return underlyingCookies.get.apply(underlyingCookies, arguments);\n            },\n            writable: false\n        },\n        getAll: {\n            value: function getAll() {\n                let expression;\n                if (arguments.length === 0) {\n                    expression = '`cookies().getAll()`';\n                } else {\n                    expression = `\\`cookies().getAll(${describeNameArg(arguments[0])})\\``;\n                }\n                syncIODev(route, expression);\n                return underlyingCookies.getAll.apply(underlyingCookies, arguments);\n            },\n            writable: false\n        },\n        has: {\n            value: function get() {\n                let expression;\n                if (arguments.length === 0) {\n                    expression = '`cookies().has()`';\n                } else {\n                    expression = `\\`cookies().has(${describeNameArg(arguments[0])})\\``;\n                }\n                syncIODev(route, expression);\n                return underlyingCookies.has.apply(underlyingCookies, arguments);\n            },\n            writable: false\n        },\n        set: {\n            value: function set() {\n                let expression;\n                if (arguments.length === 0) {\n                    expression = '`cookies().set()`';\n                } else {\n                    const arg = arguments[0];\n                    if (arg) {\n                        expression = `\\`cookies().set(${describeNameArg(arg)}, ...)\\``;\n                    } else {\n                        expression = '`cookies().set(...)`';\n                    }\n                }\n                syncIODev(route, expression);\n                return underlyingCookies.set.apply(underlyingCookies, arguments);\n            },\n            writable: false\n        },\n        delete: {\n            value: function() {\n                let expression;\n                if (arguments.length === 0) {\n                    expression = '`cookies().delete()`';\n                } else if (arguments.length === 1) {\n                    expression = `\\`cookies().delete(${describeNameArg(arguments[0])})\\``;\n                } else {\n                    expression = `\\`cookies().delete(${describeNameArg(arguments[0])}, ...)\\``;\n                }\n                syncIODev(route, expression);\n                return underlyingCookies.delete.apply(underlyingCookies, arguments);\n            },\n            writable: false\n        },\n        clear: {\n            value: function clear() {\n                const expression = '`cookies().clear()`';\n                syncIODev(route, expression);\n                // @ts-ignore clear is defined in RequestCookies implementation but not in the type\n                return typeof underlyingCookies.clear === 'function' ? underlyingCookies.clear.apply(underlyingCookies, arguments) : // We should remove this and unify our cookies types. We could just let this continue to throw lazily\n                // but that's already a hard thing to debug so we may as well implement it consistently. The biggest problem with\n                // implementing this in this way is the underlying cookie type is a ResponseCookie and not a RequestCookie and so it\n                // has extra properties not available on RequestCookie instances.\n                polyfilledResponseCookiesClear.call(underlyingCookies, promise);\n            },\n            writable: false\n        },\n        toString: {\n            value: function toString() {\n                const expression = '`cookies().toString()` or implicit casting';\n                syncIODev(route, expression);\n                return underlyingCookies.toString.apply(underlyingCookies, arguments);\n            },\n            writable: false\n        }\n    });\n    return promise;\n}\nfunction describeNameArg(arg) {\n    return typeof arg === 'object' && arg !== null && typeof arg.name === 'string' ? `'${arg.name}'` : typeof arg === 'string' ? `'${arg}'` : '...';\n}\nfunction syncIODev(route, expression) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore && workUnitStore.type === 'request' && workUnitStore.prerenderPhase === true) {\n        // When we're rendering dynamically in dev we need to advance out of the\n        // Prerender environment when we read Request data synchronously\n        const requestStore = workUnitStore;\n        trackSynchronousRequestDataAccessInDev(requestStore);\n    }\n    // In all cases we warn normally\n    warnForSyncAccess(route, expression);\n}\nconst warnForSyncAccess = createDedupedByCallsiteServerErrorLoggerDev(createCookiesAccessError);\nfunction createCookiesAccessError(route, expression) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return Object.defineProperty(new Error(`${prefix}used ${expression}. ` + `\\`cookies()\\` should be awaited before using its value. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`), \"__NEXT_ERROR_CODE\", {\n        value: \"E223\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction polyfilledResponseCookiesIterator() {\n    return this.getAll().map((c)=>[\n            c.name,\n            c\n        ]).values();\n}\nfunction polyfilledResponseCookiesClear(returnable) {\n    for (const cookie of this.getAll()){\n        this.delete(cookie.name);\n    }\n    return returnable;\n}\n\n//# sourceMappingURL=cookies.js.map","import { HeadersAdapter } from '../web/spec-extension/adapters/headers';\nimport { workAsyncStorage } from '../app-render/work-async-storage.external';\nimport { getExpectedRequestStore } from '../app-render/work-unit-async-storage.external';\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external';\nimport { postponeWithTracking, abortAndThrowOnSynchronousRequestDataAccess, throwToInterruptStaticGeneration, trackDynamicDataInDynamicRender, trackSynchronousRequestDataAccessInDev } from '../app-render/dynamic-rendering';\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout';\nimport { makeHangingPromise } from '../dynamic-rendering-utils';\nimport { createDedupedByCallsiteServerErrorLoggerDev } from '../create-deduped-by-callsite-server-error-logger';\nimport { scheduleImmediate } from '../../lib/scheduler';\nimport { isRequestAPICallableInsideAfter } from './utils';\n/**\n * This function allows you to read the HTTP incoming request headers in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers) and\n * [Middleware](https://nextjs.org/docs/app/building-your-application/routing/middleware).\n *\n * Read more: [Next.js Docs: `headers`](https://nextjs.org/docs/app/api-reference/functions/headers)\n */ export function headers() {\n    const workStore = workAsyncStorage.getStore();\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workStore) {\n        if (workUnitStore && workUnitStore.phase === 'after' && !isRequestAPICallableInsideAfter()) {\n            throw Object.defineProperty(new Error(`Route ${workStore.route} used \"headers\" inside \"after(...)\". This is not supported. If you need this data inside an \"after\" callback, use \"headers\" outside of the callback. See more info here: https://nextjs.org/docs/canary/app/api-reference/functions/after`), \"__NEXT_ERROR_CODE\", {\n                value: \"E367\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (workStore.forceStatic) {\n            // When using forceStatic we override all other logic and always just return an empty\n            // headers object without tracking\n            const underlyingHeaders = HeadersAdapter.seal(new Headers({}));\n            return makeUntrackedExoticHeaders(underlyingHeaders);\n        }\n        if (workUnitStore) {\n            if (workUnitStore.type === 'cache') {\n                throw Object.defineProperty(new Error(`Route ${workStore.route} used \"headers\" inside \"use cache\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"headers\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E304\",\n                    enumerable: false,\n                    configurable: true\n                });\n            } else if (workUnitStore.type === 'unstable-cache') {\n                throw Object.defineProperty(new Error(`Route ${workStore.route} used \"headers\" inside a function cached with \"unstable_cache(...)\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"headers\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/app/api-reference/functions/unstable_cache`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E127\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n        }\n        if (workStore.dynamicShouldError) {\n            throw Object.defineProperty(new StaticGenBailoutError(`Route ${workStore.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`headers\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`), \"__NEXT_ERROR_CODE\", {\n                value: \"E525\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (workUnitStore) {\n            if (workUnitStore.type === 'prerender') {\n                // dynamicIO Prerender\n                // We don't track dynamic access here because access will be tracked when you access\n                // one of the properties of the headers object.\n                return makeDynamicallyTrackedExoticHeaders(workStore.route, workUnitStore);\n            } else if (workUnitStore.type === 'prerender-ppr') {\n                // PPR Prerender (no dynamicIO)\n                // We are prerendering with PPR. We need track dynamic access here eagerly\n                // to keep continuity with how headers has worked in PPR without dynamicIO.\n                // TODO consider switching the semantic to throw on property access instead\n                postponeWithTracking(workStore.route, 'headers', workUnitStore.dynamicTracking);\n            } else if (workUnitStore.type === 'prerender-legacy') {\n                // Legacy Prerender\n                // We are in a legacy static generation mode while prerendering\n                // We track dynamic access here so we don't need to wrap the headers in\n                // individual property access tracking.\n                throwToInterruptStaticGeneration('headers', workStore, workUnitStore);\n            }\n        }\n        // We fall through to the dynamic context below but we still track dynamic access\n        // because in dev we can still error for things like using headers inside a cache context\n        trackDynamicDataInDynamicRender(workStore, workUnitStore);\n    }\n    const requestStore = getExpectedRequestStore('headers');\n    if (process.env.NODE_ENV === 'development' && !(workStore == null ? void 0 : workStore.isPrefetchRequest)) {\n        return makeUntrackedExoticHeadersWithDevWarnings(requestStore.headers, workStore == null ? void 0 : workStore.route);\n    } else {\n        return makeUntrackedExoticHeaders(requestStore.headers);\n    }\n}\nconst CachedHeaders = new WeakMap();\nfunction makeDynamicallyTrackedExoticHeaders(route, prerenderStore) {\n    const cachedHeaders = CachedHeaders.get(prerenderStore);\n    if (cachedHeaders) {\n        return cachedHeaders;\n    }\n    const promise = makeHangingPromise(prerenderStore.renderSignal, '`headers()`');\n    CachedHeaders.set(prerenderStore, promise);\n    Object.defineProperties(promise, {\n        append: {\n            value: function append() {\n                const expression = `\\`headers().append(${describeNameArg(arguments[0])}, ...)\\``;\n                const error = createHeadersAccessError(route, expression);\n                abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n            }\n        },\n        delete: {\n            value: function _delete() {\n                const expression = `\\`headers().delete(${describeNameArg(arguments[0])})\\``;\n                const error = createHeadersAccessError(route, expression);\n                abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n            }\n        },\n        get: {\n            value: function get() {\n                const expression = `\\`headers().get(${describeNameArg(arguments[0])})\\``;\n                const error = createHeadersAccessError(route, expression);\n                abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n            }\n        },\n        has: {\n            value: function has() {\n                const expression = `\\`headers().has(${describeNameArg(arguments[0])})\\``;\n                const error = createHeadersAccessError(route, expression);\n                abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n            }\n        },\n        set: {\n            value: function set() {\n                const expression = `\\`headers().set(${describeNameArg(arguments[0])}, ...)\\``;\n                const error = createHeadersAccessError(route, expression);\n                abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n            }\n        },\n        getSetCookie: {\n            value: function getSetCookie() {\n                const expression = '`headers().getSetCookie()`';\n                const error = createHeadersAccessError(route, expression);\n                abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n            }\n        },\n        forEach: {\n            value: function forEach() {\n                const expression = '`headers().forEach(...)`';\n                const error = createHeadersAccessError(route, expression);\n                abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n            }\n        },\n        keys: {\n            value: function keys() {\n                const expression = '`headers().keys()`';\n                const error = createHeadersAccessError(route, expression);\n                abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n            }\n        },\n        values: {\n            value: function values() {\n                const expression = '`headers().values()`';\n                const error = createHeadersAccessError(route, expression);\n                abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n            }\n        },\n        entries: {\n            value: function entries() {\n                const expression = '`headers().entries()`';\n                const error = createHeadersAccessError(route, expression);\n                abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n            }\n        },\n        [Symbol.iterator]: {\n            value: function() {\n                const expression = '`headers()[Symbol.iterator]()`';\n                const error = createHeadersAccessError(route, expression);\n                abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n            }\n        }\n    });\n    return promise;\n}\nfunction makeUntrackedExoticHeaders(underlyingHeaders) {\n    const cachedHeaders = CachedHeaders.get(underlyingHeaders);\n    if (cachedHeaders) {\n        return cachedHeaders;\n    }\n    const promise = Promise.resolve(underlyingHeaders);\n    CachedHeaders.set(underlyingHeaders, promise);\n    Object.defineProperties(promise, {\n        append: {\n            value: underlyingHeaders.append.bind(underlyingHeaders)\n        },\n        delete: {\n            value: underlyingHeaders.delete.bind(underlyingHeaders)\n        },\n        get: {\n            value: underlyingHeaders.get.bind(underlyingHeaders)\n        },\n        has: {\n            value: underlyingHeaders.has.bind(underlyingHeaders)\n        },\n        set: {\n            value: underlyingHeaders.set.bind(underlyingHeaders)\n        },\n        getSetCookie: {\n            value: underlyingHeaders.getSetCookie.bind(underlyingHeaders)\n        },\n        forEach: {\n            value: underlyingHeaders.forEach.bind(underlyingHeaders)\n        },\n        keys: {\n            value: underlyingHeaders.keys.bind(underlyingHeaders)\n        },\n        values: {\n            value: underlyingHeaders.values.bind(underlyingHeaders)\n        },\n        entries: {\n            value: underlyingHeaders.entries.bind(underlyingHeaders)\n        },\n        [Symbol.iterator]: {\n            value: underlyingHeaders[Symbol.iterator].bind(underlyingHeaders)\n        }\n    });\n    return promise;\n}\nfunction makeUntrackedExoticHeadersWithDevWarnings(underlyingHeaders, route) {\n    const cachedHeaders = CachedHeaders.get(underlyingHeaders);\n    if (cachedHeaders) {\n        return cachedHeaders;\n    }\n    const promise = new Promise((resolve)=>scheduleImmediate(()=>resolve(underlyingHeaders)));\n    CachedHeaders.set(underlyingHeaders, promise);\n    Object.defineProperties(promise, {\n        append: {\n            value: function append() {\n                const expression = `\\`headers().append(${describeNameArg(arguments[0])}, ...)\\``;\n                syncIODev(route, expression);\n                return underlyingHeaders.append.apply(underlyingHeaders, arguments);\n            }\n        },\n        delete: {\n            value: function _delete() {\n                const expression = `\\`headers().delete(${describeNameArg(arguments[0])})\\``;\n                syncIODev(route, expression);\n                return underlyingHeaders.delete.apply(underlyingHeaders, arguments);\n            }\n        },\n        get: {\n            value: function get() {\n                const expression = `\\`headers().get(${describeNameArg(arguments[0])})\\``;\n                syncIODev(route, expression);\n                return underlyingHeaders.get.apply(underlyingHeaders, arguments);\n            }\n        },\n        has: {\n            value: function has() {\n                const expression = `\\`headers().has(${describeNameArg(arguments[0])})\\``;\n                syncIODev(route, expression);\n                return underlyingHeaders.has.apply(underlyingHeaders, arguments);\n            }\n        },\n        set: {\n            value: function set() {\n                const expression = `\\`headers().set(${describeNameArg(arguments[0])}, ...)\\``;\n                syncIODev(route, expression);\n                return underlyingHeaders.set.apply(underlyingHeaders, arguments);\n            }\n        },\n        getSetCookie: {\n            value: function getSetCookie() {\n                const expression = '`headers().getSetCookie()`';\n                syncIODev(route, expression);\n                return underlyingHeaders.getSetCookie.apply(underlyingHeaders, arguments);\n            }\n        },\n        forEach: {\n            value: function forEach() {\n                const expression = '`headers().forEach(...)`';\n                syncIODev(route, expression);\n                return underlyingHeaders.forEach.apply(underlyingHeaders, arguments);\n            }\n        },\n        keys: {\n            value: function keys() {\n                const expression = '`headers().keys()`';\n                syncIODev(route, expression);\n                return underlyingHeaders.keys.apply(underlyingHeaders, arguments);\n            }\n        },\n        values: {\n            value: function values() {\n                const expression = '`headers().values()`';\n                syncIODev(route, expression);\n                return underlyingHeaders.values.apply(underlyingHeaders, arguments);\n            }\n        },\n        entries: {\n            value: function entries() {\n                const expression = '`headers().entries()`';\n                syncIODev(route, expression);\n                return underlyingHeaders.entries.apply(underlyingHeaders, arguments);\n            }\n        },\n        [Symbol.iterator]: {\n            value: function() {\n                const expression = '`...headers()` or similar iteration';\n                syncIODev(route, expression);\n                return underlyingHeaders[Symbol.iterator].apply(underlyingHeaders, arguments);\n            }\n        }\n    });\n    return promise;\n}\nfunction describeNameArg(arg) {\n    return typeof arg === 'string' ? `'${arg}'` : '...';\n}\nfunction syncIODev(route, expression) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore && workUnitStore.type === 'request' && workUnitStore.prerenderPhase === true) {\n        // When we're rendering dynamically in dev we need to advance out of the\n        // Prerender environment when we read Request data synchronously\n        const requestStore = workUnitStore;\n        trackSynchronousRequestDataAccessInDev(requestStore);\n    }\n    // In all cases we warn normally\n    warnForSyncAccess(route, expression);\n}\nconst warnForSyncAccess = createDedupedByCallsiteServerErrorLoggerDev(createHeadersAccessError);\nfunction createHeadersAccessError(route, expression) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return Object.defineProperty(new Error(`${prefix}used ${expression}. ` + `\\`headers()\\` should be awaited before using its value. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`), \"__NEXT_ERROR_CODE\", {\n        value: \"E277\",\n        enumerable: false,\n        configurable: true\n    });\n}\n\n//# sourceMappingURL=headers.js.map","import { getDraftModeProviderForCacheScope, throwForMissingRequestStore } from '../app-render/work-unit-async-storage.external';\nimport { workAsyncStorage } from '../app-render/work-async-storage.external';\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external';\nimport { abortAndThrowOnSynchronousRequestDataAccess, postponeWithTracking, trackSynchronousRequestDataAccessInDev } from '../app-render/dynamic-rendering';\nimport { createDedupedByCallsiteServerErrorLoggerDev } from '../create-deduped-by-callsite-server-error-logger';\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout';\nimport { DynamicServerError } from '../../client/components/hooks-server-context';\nexport function draftMode() {\n    const callingExpression = 'draftMode';\n    const workStore = workAsyncStorage.getStore();\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (!workStore || !workUnitStore) {\n        throwForMissingRequestStore(callingExpression);\n    }\n    switch(workUnitStore.type){\n        case 'request':\n            return createOrGetCachedExoticDraftMode(workUnitStore.draftMode, workStore);\n        case 'cache':\n        case 'unstable-cache':\n            // Inside of `\"use cache\"` or `unstable_cache`, draft mode is available if\n            // the outmost work unit store is a request store, and if draft mode is\n            // enabled.\n            const draftModeProvider = getDraftModeProviderForCacheScope(workStore, workUnitStore);\n            if (draftModeProvider) {\n                return createOrGetCachedExoticDraftMode(draftModeProvider, workStore);\n            }\n        // Otherwise, we fall through to providing an empty draft mode.\n        // eslint-disable-next-line no-fallthrough\n        case 'prerender':\n        case 'prerender-ppr':\n        case 'prerender-legacy':\n            // Return empty draft mode\n            if (process.env.NODE_ENV === 'development' && !(workStore == null ? void 0 : workStore.isPrefetchRequest)) {\n                const route = workStore == null ? void 0 : workStore.route;\n                return createExoticDraftModeWithDevWarnings(null, route);\n            } else {\n                return createExoticDraftMode(null);\n            }\n        default:\n            const _exhaustiveCheck = workUnitStore;\n            return _exhaustiveCheck;\n    }\n}\nfunction createOrGetCachedExoticDraftMode(draftModeProvider, workStore) {\n    const cachedDraftMode = CachedDraftModes.get(draftMode);\n    if (cachedDraftMode) {\n        return cachedDraftMode;\n    }\n    let promise;\n    if (process.env.NODE_ENV === 'development' && !(workStore == null ? void 0 : workStore.isPrefetchRequest)) {\n        const route = workStore == null ? void 0 : workStore.route;\n        promise = createExoticDraftModeWithDevWarnings(draftModeProvider, route);\n    } else {\n        promise = createExoticDraftMode(draftModeProvider);\n    }\n    CachedDraftModes.set(draftModeProvider, promise);\n    return promise;\n}\nconst CachedDraftModes = new WeakMap();\nfunction createExoticDraftMode(underlyingProvider) {\n    const instance = new DraftMode(underlyingProvider);\n    const promise = Promise.resolve(instance);\n    Object.defineProperty(promise, 'isEnabled', {\n        get () {\n            return instance.isEnabled;\n        },\n        set (newValue) {\n            Object.defineProperty(promise, 'isEnabled', {\n                value: newValue,\n                writable: true,\n                enumerable: true\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    promise.enable = instance.enable.bind(instance);\n    promise.disable = instance.disable.bind(instance);\n    return promise;\n}\nfunction createExoticDraftModeWithDevWarnings(underlyingProvider, route) {\n    const instance = new DraftMode(underlyingProvider);\n    const promise = Promise.resolve(instance);\n    Object.defineProperty(promise, 'isEnabled', {\n        get () {\n            const expression = '`draftMode().isEnabled`';\n            syncIODev(route, expression);\n            return instance.isEnabled;\n        },\n        set (newValue) {\n            Object.defineProperty(promise, 'isEnabled', {\n                value: newValue,\n                writable: true,\n                enumerable: true\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(promise, 'enable', {\n        value: function get() {\n            const expression = '`draftMode().enable()`';\n            syncIODev(route, expression);\n            return instance.enable.apply(instance, arguments);\n        }\n    });\n    Object.defineProperty(promise, 'disable', {\n        value: function get() {\n            const expression = '`draftMode().disable()`';\n            syncIODev(route, expression);\n            return instance.disable.apply(instance, arguments);\n        }\n    });\n    return promise;\n}\nclass DraftMode {\n    constructor(provider){\n        this._provider = provider;\n    }\n    get isEnabled() {\n        if (this._provider !== null) {\n            return this._provider.isEnabled;\n        }\n        return false;\n    }\n    enable() {\n        // We have a store we want to track dynamic data access to ensure we\n        // don't statically generate routes that manipulate draft mode.\n        trackDynamicDraftMode('draftMode().enable()');\n        if (this._provider !== null) {\n            this._provider.enable();\n        }\n    }\n    disable() {\n        trackDynamicDraftMode('draftMode().disable()');\n        if (this._provider !== null) {\n            this._provider.disable();\n        }\n    }\n}\nfunction syncIODev(route, expression) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore && workUnitStore.type === 'request' && workUnitStore.prerenderPhase === true) {\n        // When we're rendering dynamically in dev we need to advance out of the\n        // Prerender environment when we read Request data synchronously\n        const requestStore = workUnitStore;\n        trackSynchronousRequestDataAccessInDev(requestStore);\n    }\n    // In all cases we warn normally\n    warnForSyncAccess(route, expression);\n}\nconst warnForSyncAccess = createDedupedByCallsiteServerErrorLoggerDev(createDraftModeAccessError);\nfunction createDraftModeAccessError(route, expression) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return Object.defineProperty(new Error(`${prefix}used ${expression}. ` + `\\`draftMode()\\` should be awaited before using its value. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`), \"__NEXT_ERROR_CODE\", {\n        value: \"E377\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction trackDynamicDraftMode(expression) {\n    const store = workAsyncStorage.getStore();\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (store) {\n        // We have a store we want to track dynamic data access to ensure we\n        // don't statically generate routes that manipulate draft mode.\n        if (workUnitStore) {\n            if (workUnitStore.type === 'cache') {\n                throw Object.defineProperty(new Error(`Route ${store.route} used \"${expression}\" inside \"use cache\". The enabled status of draftMode can be read in caches but you must not enable or disable draftMode inside a cache. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E246\",\n                    enumerable: false,\n                    configurable: true\n                });\n            } else if (workUnitStore.type === 'unstable-cache') {\n                throw Object.defineProperty(new Error(`Route ${store.route} used \"${expression}\" inside a function cached with \"unstable_cache(...)\". The enabled status of draftMode can be read in caches but you must not enable or disable draftMode inside a cache. See more info here: https://nextjs.org/docs/app/api-reference/functions/unstable_cache`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E259\",\n                    enumerable: false,\n                    configurable: true\n                });\n            } else if (workUnitStore.phase === 'after') {\n                throw Object.defineProperty(new Error(`Route ${store.route} used \"${expression}\" inside \\`after\\`. The enabled status of draftMode can be read inside \\`after\\` but you cannot enable or disable draftMode. See more info here: https://nextjs.org/docs/app/api-reference/functions/after`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E348\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n        }\n        if (store.dynamicShouldError) {\n            throw Object.defineProperty(new StaticGenBailoutError(`Route ${store.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`), \"__NEXT_ERROR_CODE\", {\n                value: \"E553\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (workUnitStore) {\n            if (workUnitStore.type === 'prerender') {\n                // dynamicIO Prerender\n                const error = Object.defineProperty(new Error(`Route ${store.route} used ${expression} without first calling \\`await connection()\\`. See more info here: https://nextjs.org/docs/messages/next-prerender-sync-headers`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E126\",\n                    enumerable: false,\n                    configurable: true\n                });\n                abortAndThrowOnSynchronousRequestDataAccess(store.route, expression, error, workUnitStore);\n            } else if (workUnitStore.type === 'prerender-ppr') {\n                // PPR Prerender\n                postponeWithTracking(store.route, expression, workUnitStore.dynamicTracking);\n            } else if (workUnitStore.type === 'prerender-legacy') {\n                // legacy Prerender\n                workUnitStore.revalidate = 0;\n                const err = Object.defineProperty(new DynamicServerError(`Route ${store.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E558\",\n                    enumerable: false,\n                    configurable: true\n                });\n                store.dynamicUsageDescription = expression;\n                store.dynamicUsageStack = err.stack;\n                throw err;\n            } else if (process.env.NODE_ENV === 'development' && workUnitStore && workUnitStore.type === 'request') {\n                workUnitStore.usedDynamic = true;\n            }\n        }\n    }\n}\n\n//# sourceMappingURL=draft-mode.js.map","export * from '../server/request/cookies';\nexport * from '../server/request/headers';\nexport * from '../server/request/draft-mode';\n\n//# sourceMappingURL=headers.js.map","var DoubleIndexedKV = /** @class */ (function () {\n    function DoubleIndexedKV() {\n        this.keyToValue = new Map();\n        this.valueToKey = new Map();\n    }\n    DoubleIndexedKV.prototype.set = function (key, value) {\n        this.keyToValue.set(key, value);\n        this.valueToKey.set(value, key);\n    };\n    DoubleIndexedKV.prototype.getByKey = function (key) {\n        return this.keyToValue.get(key);\n    };\n    DoubleIndexedKV.prototype.getByValue = function (value) {\n        return this.valueToKey.get(value);\n    };\n    DoubleIndexedKV.prototype.clear = function () {\n        this.keyToValue.clear();\n        this.valueToKey.clear();\n    };\n    return DoubleIndexedKV;\n}());\nexport { DoubleIndexedKV };\n//# sourceMappingURL=double-indexed-kv.js.map","import { DoubleIndexedKV } from './double-indexed-kv';\nvar Registry = /** @class */ (function () {\n    function Registry(generateIdentifier) {\n        this.generateIdentifier = generateIdentifier;\n        this.kv = new DoubleIndexedKV();\n    }\n    Registry.prototype.register = function (value, identifier) {\n        if (this.kv.getByValue(value)) {\n            return;\n        }\n        if (!identifier) {\n            identifier = this.generateIdentifier(value);\n        }\n        this.kv.set(identifier, value);\n    };\n    Registry.prototype.clear = function () {\n        this.kv.clear();\n    };\n    Registry.prototype.getIdentifier = function (value) {\n        return this.kv.getByValue(value);\n    };\n    Registry.prototype.getValue = function (identifier) {\n        return this.kv.getByKey(identifier);\n    };\n    return Registry;\n}());\nexport { Registry };\n//# sourceMappingURL=registry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Registry } from './registry';\nvar ClassRegistry = /** @class */ (function (_super) {\n    __extends(ClassRegistry, _super);\n    function ClassRegistry() {\n        var _this = _super.call(this, function (c) { return c.name; }) || this;\n        _this.classToAllowedProps = new Map();\n        return _this;\n    }\n    ClassRegistry.prototype.register = function (value, options) {\n        if (typeof options === 'object') {\n            if (options.allowProps) {\n                this.classToAllowedProps.set(value, options.allowProps);\n            }\n            _super.prototype.register.call(this, value, options.identifier);\n        }\n        else {\n            _super.prototype.register.call(this, value, options);\n        }\n    };\n    ClassRegistry.prototype.getAllowedProps = function (value) {\n        return this.classToAllowedProps.get(value);\n    };\n    return ClassRegistry;\n}(Registry));\nexport { ClassRegistry };\n//# sourceMappingURL=class-registry.js.map","var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nfunction valuesOfObj(record) {\n    if ('values' in Object) {\n        // eslint-disable-next-line es5/no-es6-methods\n        return Object.values(record);\n    }\n    var values = [];\n    // eslint-disable-next-line no-restricted-syntax\n    for (var key in record) {\n        if (record.hasOwnProperty(key)) {\n            values.push(record[key]);\n        }\n    }\n    return values;\n}\nexport function find(record, predicate) {\n    var values = valuesOfObj(record);\n    if ('find' in values) {\n        // eslint-disable-next-line es5/no-es6-methods\n        return values.find(predicate);\n    }\n    var valuesNotNever = values;\n    for (var i = 0; i < valuesNotNever.length; i++) {\n        var value = valuesNotNever[i];\n        if (predicate(value)) {\n            return value;\n        }\n    }\n    return undefined;\n}\nexport function forEach(record, run) {\n    Object.entries(record).forEach(function (_a) {\n        var _b = __read(_a, 2), key = _b[0], value = _b[1];\n        return run(value, key);\n    });\n}\nexport function includes(arr, value) {\n    return arr.indexOf(value) !== -1;\n}\nexport function findArr(record, predicate) {\n    for (var i = 0; i < record.length; i++) {\n        var value = record[i];\n        if (predicate(value)) {\n            return value;\n        }\n    }\n    return undefined;\n}\n//# sourceMappingURL=util.js.map","import { find } from './util';\nvar CustomTransformerRegistry = /** @class */ (function () {\n    function CustomTransformerRegistry() {\n        this.transfomers = {};\n    }\n    CustomTransformerRegistry.prototype.register = function (transformer) {\n        this.transfomers[transformer.name] = transformer;\n    };\n    CustomTransformerRegistry.prototype.findApplicable = function (v) {\n        return find(this.transfomers, function (transformer) {\n            return transformer.isApplicable(v);\n        });\n    };\n    CustomTransformerRegistry.prototype.findByName = function (name) {\n        return this.transfomers[name];\n    };\n    return CustomTransformerRegistry;\n}());\nexport { CustomTransformerRegistry };\n//# sourceMappingURL=custom-transformer-registry.js.map","var getType = function (payload) {\n    return Object.prototype.toString.call(payload).slice(8, -1);\n};\nexport var isUndefined = function (payload) {\n    return typeof payload === 'undefined';\n};\nexport var isNull = function (payload) { return payload === null; };\nexport var isPlainObject = function (payload) {\n    if (typeof payload !== 'object' || payload === null)\n        return false;\n    if (payload === Object.prototype)\n        return false;\n    if (Object.getPrototypeOf(payload) === null)\n        return true;\n    return Object.getPrototypeOf(payload) === Object.prototype;\n};\nexport var isEmptyObject = function (payload) {\n    return isPlainObject(payload) && Object.keys(payload).length === 0;\n};\nexport var isArray = function (payload) {\n    return Array.isArray(payload);\n};\nexport var isString = function (payload) {\n    return typeof payload === 'string';\n};\nexport var isNumber = function (payload) {\n    return typeof payload === 'number' && !isNaN(payload);\n};\nexport var isBoolean = function (payload) {\n    return typeof payload === 'boolean';\n};\nexport var isRegExp = function (payload) {\n    return payload instanceof RegExp;\n};\nexport var isMap = function (payload) {\n    return payload instanceof Map;\n};\nexport var isSet = function (payload) {\n    return payload instanceof Set;\n};\nexport var isSymbol = function (payload) {\n    return getType(payload) === 'Symbol';\n};\nexport var isDate = function (payload) {\n    return payload instanceof Date && !isNaN(payload.valueOf());\n};\nexport var isError = function (payload) {\n    return payload instanceof Error;\n};\nexport var isNaNValue = function (payload) {\n    return typeof payload === 'number' && isNaN(payload);\n};\nexport var isPrimitive = function (payload) {\n    return isBoolean(payload) ||\n        isNull(payload) ||\n        isUndefined(payload) ||\n        isNumber(payload) ||\n        isString(payload) ||\n        isSymbol(payload);\n};\nexport var isBigint = function (payload) {\n    return typeof payload === 'bigint';\n};\nexport var isInfinite = function (payload) {\n    return payload === Infinity || payload === -Infinity;\n};\nexport var isTypedArray = function (payload) {\n    return ArrayBuffer.isView(payload) && !(payload instanceof DataView);\n};\nexport var isURL = function (payload) { return payload instanceof URL; };\n//# sourceMappingURL=is.js.map","export var escapeKey = function (key) { return key.replace(/\\./g, '\\\\.'); };\nexport var stringifyPath = function (path) {\n    return path\n        .map(String)\n        .map(escapeKey)\n        .join('.');\n};\nexport var parsePath = function (string) {\n    var result = [];\n    var segment = '';\n    for (var i = 0; i < string.length; i++) {\n        var char = string.charAt(i);\n        var isEscapedDot = char === '\\\\' && string.charAt(i + 1) === '.';\n        if (isEscapedDot) {\n            segment += '.';\n            i++;\n            continue;\n        }\n        var isEndOfSegment = char === '.';\n        if (isEndOfSegment) {\n            result.push(segment);\n            segment = '';\n            continue;\n        }\n        segment += char;\n    }\n    var lastSegment = segment;\n    result.push(lastSegment);\n    return result;\n};\n//# sourceMappingURL=pathstringifier.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nimport { isBigint, isDate, isInfinite, isMap, isNaNValue, isRegExp, isSet, isUndefined, isSymbol, isArray, isError, isTypedArray, isURL, } from './is';\nimport { findArr } from './util';\nfunction simpleTransformation(isApplicable, annotation, transform, untransform) {\n    return {\n        isApplicable: isApplicable,\n        annotation: annotation,\n        transform: transform,\n        untransform: untransform\n    };\n}\nvar simpleRules = [\n    simpleTransformation(isUndefined, 'undefined', function () { return null; }, function () { return undefined; }),\n    simpleTransformation(isBigint, 'bigint', function (v) { return v.toString(); }, function (v) {\n        if (typeof BigInt !== 'undefined') {\n            return BigInt(v);\n        }\n        console.error('Please add a BigInt polyfill.');\n        return v;\n    }),\n    simpleTransformation(isDate, 'Date', function (v) { return v.toISOString(); }, function (v) { return new Date(v); }),\n    simpleTransformation(isError, 'Error', function (v, superJson) {\n        var baseError = {\n            name: v.name,\n            message: v.message\n        };\n        superJson.allowedErrorProps.forEach(function (prop) {\n            baseError[prop] = v[prop];\n        });\n        return baseError;\n    }, function (v, superJson) {\n        var e = new Error(v.message);\n        e.name = v.name;\n        e.stack = v.stack;\n        superJson.allowedErrorProps.forEach(function (prop) {\n            e[prop] = v[prop];\n        });\n        return e;\n    }),\n    simpleTransformation(isRegExp, 'regexp', function (v) { return '' + v; }, function (regex) {\n        var body = regex.slice(1, regex.lastIndexOf('/'));\n        var flags = regex.slice(regex.lastIndexOf('/') + 1);\n        return new RegExp(body, flags);\n    }),\n    simpleTransformation(isSet, 'set', \n    // (sets only exist in es6+)\n    // eslint-disable-next-line es5/no-es6-methods\n    function (v) { return __spreadArray([], __read(v.values())); }, function (v) { return new Set(v); }),\n    simpleTransformation(isMap, 'map', function (v) { return __spreadArray([], __read(v.entries())); }, function (v) { return new Map(v); }),\n    simpleTransformation(function (v) { return isNaNValue(v) || isInfinite(v); }, 'number', function (v) {\n        if (isNaNValue(v)) {\n            return 'NaN';\n        }\n        if (v > 0) {\n            return 'Infinity';\n        }\n        else {\n            return '-Infinity';\n        }\n    }, Number),\n    simpleTransformation(function (v) { return v === 0 && 1 / v === -Infinity; }, 'number', function () {\n        return '-0';\n    }, Number),\n    simpleTransformation(isURL, 'URL', function (v) { return v.toString(); }, function (v) { return new URL(v); }),\n];\nfunction compositeTransformation(isApplicable, annotation, transform, untransform) {\n    return {\n        isApplicable: isApplicable,\n        annotation: annotation,\n        transform: transform,\n        untransform: untransform\n    };\n}\nvar symbolRule = compositeTransformation(function (s, superJson) {\n    if (isSymbol(s)) {\n        var isRegistered = !!superJson.symbolRegistry.getIdentifier(s);\n        return isRegistered;\n    }\n    return false;\n}, function (s, superJson) {\n    var identifier = superJson.symbolRegistry.getIdentifier(s);\n    return ['symbol', identifier];\n}, function (v) { return v.description; }, function (_, a, superJson) {\n    var value = superJson.symbolRegistry.getValue(a[1]);\n    if (!value) {\n        throw new Error('Trying to deserialize unknown symbol');\n    }\n    return value;\n});\nvar constructorToName = [\n    Int8Array,\n    Uint8Array,\n    Int16Array,\n    Uint16Array,\n    Int32Array,\n    Uint32Array,\n    Float32Array,\n    Float64Array,\n    Uint8ClampedArray,\n].reduce(function (obj, ctor) {\n    obj[ctor.name] = ctor;\n    return obj;\n}, {});\nvar typedArrayRule = compositeTransformation(isTypedArray, function (v) { return ['typed-array', v.constructor.name]; }, function (v) { return __spreadArray([], __read(v)); }, function (v, a) {\n    var ctor = constructorToName[a[1]];\n    if (!ctor) {\n        throw new Error('Trying to deserialize unknown typed array');\n    }\n    return new ctor(v);\n});\nexport function isInstanceOfRegisteredClass(potentialClass, superJson) {\n    if (potentialClass === null || potentialClass === void 0 ? void 0 : potentialClass.constructor) {\n        var isRegistered = !!superJson.classRegistry.getIdentifier(potentialClass.constructor);\n        return isRegistered;\n    }\n    return false;\n}\nvar classRule = compositeTransformation(isInstanceOfRegisteredClass, function (clazz, superJson) {\n    var identifier = superJson.classRegistry.getIdentifier(clazz.constructor);\n    return ['class', identifier];\n}, function (clazz, superJson) {\n    var allowedProps = superJson.classRegistry.getAllowedProps(clazz.constructor);\n    if (!allowedProps) {\n        return __assign({}, clazz);\n    }\n    var result = {};\n    allowedProps.forEach(function (prop) {\n        result[prop] = clazz[prop];\n    });\n    return result;\n}, function (v, a, superJson) {\n    var clazz = superJson.classRegistry.getValue(a[1]);\n    if (!clazz) {\n        throw new Error('Trying to deserialize unknown class - check https://github.com/blitz-js/superjson/issues/116#issuecomment-773996564');\n    }\n    return Object.assign(Object.create(clazz.prototype), v);\n});\nvar customRule = compositeTransformation(function (value, superJson) {\n    return !!superJson.customTransformerRegistry.findApplicable(value);\n}, function (value, superJson) {\n    var transformer = superJson.customTransformerRegistry.findApplicable(value);\n    return ['custom', transformer.name];\n}, function (value, superJson) {\n    var transformer = superJson.customTransformerRegistry.findApplicable(value);\n    return transformer.serialize(value);\n}, function (v, a, superJson) {\n    var transformer = superJson.customTransformerRegistry.findByName(a[1]);\n    if (!transformer) {\n        throw new Error('Trying to deserialize unknown custom value');\n    }\n    return transformer.deserialize(v);\n});\nvar compositeRules = [classRule, symbolRule, customRule, typedArrayRule];\nexport var transformValue = function (value, superJson) {\n    var applicableCompositeRule = findArr(compositeRules, function (rule) {\n        return rule.isApplicable(value, superJson);\n    });\n    if (applicableCompositeRule) {\n        return {\n            value: applicableCompositeRule.transform(value, superJson),\n            type: applicableCompositeRule.annotation(value, superJson)\n        };\n    }\n    var applicableSimpleRule = findArr(simpleRules, function (rule) {\n        return rule.isApplicable(value, superJson);\n    });\n    if (applicableSimpleRule) {\n        return {\n            value: applicableSimpleRule.transform(value, superJson),\n            type: applicableSimpleRule.annotation\n        };\n    }\n    return undefined;\n};\nvar simpleRulesByAnnotation = {};\nsimpleRules.forEach(function (rule) {\n    simpleRulesByAnnotation[rule.annotation] = rule;\n});\nexport var untransformValue = function (json, type, superJson) {\n    if (isArray(type)) {\n        switch (type[0]) {\n            case 'symbol':\n                return symbolRule.untransform(json, type, superJson);\n            case 'class':\n                return classRule.untransform(json, type, superJson);\n            case 'custom':\n                return customRule.untransform(json, type, superJson);\n            case 'typed-array':\n                return typedArrayRule.untransform(json, type, superJson);\n            default:\n                throw new Error('Unknown transformation: ' + type);\n        }\n    }\n    else {\n        var transformation = simpleRulesByAnnotation[type];\n        if (!transformation) {\n            throw new Error('Unknown transformation: ' + type);\n        }\n        return transformation.untransform(json, superJson);\n    }\n};\n//# sourceMappingURL=transformer.js.map","import { isMap, isArray, isPlainObject, isSet } from './is';\nimport { includes } from './util';\nvar getNthKey = function (value, n) {\n    var keys = value.keys();\n    while (n > 0) {\n        keys.next();\n        n--;\n    }\n    return keys.next().value;\n};\nfunction validatePath(path) {\n    if (includes(path, '__proto__')) {\n        throw new Error('__proto__ is not allowed as a property');\n    }\n    if (includes(path, 'prototype')) {\n        throw new Error('prototype is not allowed as a property');\n    }\n    if (includes(path, 'constructor')) {\n        throw new Error('constructor is not allowed as a property');\n    }\n}\nexport var getDeep = function (object, path) {\n    validatePath(path);\n    for (var i = 0; i < path.length; i++) {\n        var key = path[i];\n        if (isSet(object)) {\n            object = getNthKey(object, +key);\n        }\n        else if (isMap(object)) {\n            var row = +key;\n            var type = +path[++i] === 0 ? 'key' : 'value';\n            var keyOfRow = getNthKey(object, row);\n            switch (type) {\n                case 'key':\n                    object = keyOfRow;\n                    break;\n                case 'value':\n                    object = object.get(keyOfRow);\n                    break;\n            }\n        }\n        else {\n            object = object[key];\n        }\n    }\n    return object;\n};\nexport var setDeep = function (object, path, mapper) {\n    validatePath(path);\n    if (path.length === 0) {\n        return mapper(object);\n    }\n    var parent = object;\n    for (var i = 0; i < path.length - 1; i++) {\n        var key = path[i];\n        if (isArray(parent)) {\n            var index = +key;\n            parent = parent[index];\n        }\n        else if (isPlainObject(parent)) {\n            parent = parent[key];\n        }\n        else if (isSet(parent)) {\n            var row = +key;\n            parent = getNthKey(parent, row);\n        }\n        else if (isMap(parent)) {\n            var isEnd = i === path.length - 2;\n            if (isEnd) {\n                break;\n            }\n            var row = +key;\n            var type = +path[++i] === 0 ? 'key' : 'value';\n            var keyOfRow = getNthKey(parent, row);\n            switch (type) {\n                case 'key':\n                    parent = keyOfRow;\n                    break;\n                case 'value':\n                    parent = parent.get(keyOfRow);\n                    break;\n            }\n        }\n    }\n    var lastKey = path[path.length - 1];\n    if (isArray(parent)) {\n        parent[+lastKey] = mapper(parent[+lastKey]);\n    }\n    else if (isPlainObject(parent)) {\n        parent[lastKey] = mapper(parent[lastKey]);\n    }\n    if (isSet(parent)) {\n        var oldValue = getNthKey(parent, +lastKey);\n        var newValue = mapper(oldValue);\n        if (oldValue !== newValue) {\n            parent[\"delete\"](oldValue);\n            parent.add(newValue);\n        }\n    }\n    if (isMap(parent)) {\n        var row = +path[path.length - 2];\n        var keyToRow = getNthKey(parent, row);\n        var type = +lastKey === 0 ? 'key' : 'value';\n        switch (type) {\n            case 'key': {\n                var newKey = mapper(keyToRow);\n                parent.set(newKey, parent.get(keyToRow));\n                if (newKey !== keyToRow) {\n                    parent[\"delete\"](keyToRow);\n                }\n                break;\n            }\n            case 'value': {\n                parent.set(keyToRow, mapper(parent.get(keyToRow)));\n                break;\n            }\n        }\n    }\n    return object;\n};\n//# sourceMappingURL=accessDeep.js.map","var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nimport { isArray, isEmptyObject, isMap, isPlainObject, isPrimitive, isSet, } from './is';\nimport { escapeKey, stringifyPath } from './pathstringifier';\nimport { isInstanceOfRegisteredClass, transformValue, untransformValue, } from './transformer';\nimport { includes, forEach } from './util';\nimport { parsePath } from './pathstringifier';\nimport { getDeep, setDeep } from './accessDeep';\nfunction traverse(tree, walker, origin) {\n    if (origin === void 0) { origin = []; }\n    if (!tree) {\n        return;\n    }\n    if (!isArray(tree)) {\n        forEach(tree, function (subtree, key) {\n            return traverse(subtree, walker, __spreadArray(__spreadArray([], __read(origin)), __read(parsePath(key))));\n        });\n        return;\n    }\n    var _a = __read(tree, 2), nodeValue = _a[0], children = _a[1];\n    if (children) {\n        forEach(children, function (child, key) {\n            traverse(child, walker, __spreadArray(__spreadArray([], __read(origin)), __read(parsePath(key))));\n        });\n    }\n    walker(nodeValue, origin);\n}\nexport function applyValueAnnotations(plain, annotations, superJson) {\n    traverse(annotations, function (type, path) {\n        plain = setDeep(plain, path, function (v) { return untransformValue(v, type, superJson); });\n    });\n    return plain;\n}\nexport function applyReferentialEqualityAnnotations(plain, annotations) {\n    function apply(identicalPaths, path) {\n        var object = getDeep(plain, parsePath(path));\n        identicalPaths.map(parsePath).forEach(function (identicalObjectPath) {\n            plain = setDeep(plain, identicalObjectPath, function () { return object; });\n        });\n    }\n    if (isArray(annotations)) {\n        var _a = __read(annotations, 2), root = _a[0], other = _a[1];\n        root.forEach(function (identicalPath) {\n            plain = setDeep(plain, parsePath(identicalPath), function () { return plain; });\n        });\n        if (other) {\n            forEach(other, apply);\n        }\n    }\n    else {\n        forEach(annotations, apply);\n    }\n    return plain;\n}\nvar isDeep = function (object, superJson) {\n    return isPlainObject(object) ||\n        isArray(object) ||\n        isMap(object) ||\n        isSet(object) ||\n        isInstanceOfRegisteredClass(object, superJson);\n};\nfunction addIdentity(object, path, identities) {\n    var existingSet = identities.get(object);\n    if (existingSet) {\n        existingSet.push(path);\n    }\n    else {\n        identities.set(object, [path]);\n    }\n}\nexport function generateReferentialEqualityAnnotations(identitites, dedupe) {\n    var result = {};\n    var rootEqualityPaths = undefined;\n    identitites.forEach(function (paths) {\n        if (paths.length <= 1) {\n            return;\n        }\n        // if we're not deduping, all of these objects continue existing.\n        // putting the shortest path first makes it easier to parse for humans\n        // if we're deduping though, only the first entry will still exist, so we can't do this optimisation.\n        if (!dedupe) {\n            paths = paths\n                .map(function (path) { return path.map(String); })\n                .sort(function (a, b) { return a.length - b.length; });\n        }\n        var _a = __read(paths), representativePath = _a[0], identicalPaths = _a.slice(1);\n        if (representativePath.length === 0) {\n            rootEqualityPaths = identicalPaths.map(stringifyPath);\n        }\n        else {\n            result[stringifyPath(representativePath)] = identicalPaths.map(stringifyPath);\n        }\n    });\n    if (rootEqualityPaths) {\n        if (isEmptyObject(result)) {\n            return [rootEqualityPaths];\n        }\n        else {\n            return [rootEqualityPaths, result];\n        }\n    }\n    else {\n        return isEmptyObject(result) ? undefined : result;\n    }\n}\nexport var walker = function (object, identities, superJson, dedupe, path, objectsInThisPath, seenObjects) {\n    var _a;\n    if (path === void 0) { path = []; }\n    if (objectsInThisPath === void 0) { objectsInThisPath = []; }\n    if (seenObjects === void 0) { seenObjects = new Map(); }\n    var primitive = isPrimitive(object);\n    if (!primitive) {\n        addIdentity(object, path, identities);\n        var seen = seenObjects.get(object);\n        if (seen) {\n            // short-circuit result if we've seen this object before\n            return dedupe\n                ? {\n                    transformedValue: null\n                }\n                : seen;\n        }\n    }\n    if (!isDeep(object, superJson)) {\n        var transformed_1 = transformValue(object, superJson);\n        var result_1 = transformed_1\n            ? {\n                transformedValue: transformed_1.value,\n                annotations: [transformed_1.type]\n            }\n            : {\n                transformedValue: object\n            };\n        if (!primitive) {\n            seenObjects.set(object, result_1);\n        }\n        return result_1;\n    }\n    if (includes(objectsInThisPath, object)) {\n        // prevent circular references\n        return {\n            transformedValue: null\n        };\n    }\n    var transformationResult = transformValue(object, superJson);\n    var transformed = (_a = transformationResult === null || transformationResult === void 0 ? void 0 : transformationResult.value) !== null && _a !== void 0 ? _a : object;\n    var transformedValue = isArray(transformed) ? [] : {};\n    var innerAnnotations = {};\n    forEach(transformed, function (value, index) {\n        var recursiveResult = walker(value, identities, superJson, dedupe, __spreadArray(__spreadArray([], __read(path)), [index]), __spreadArray(__spreadArray([], __read(objectsInThisPath)), [object]), seenObjects);\n        transformedValue[index] = recursiveResult.transformedValue;\n        if (isArray(recursiveResult.annotations)) {\n            innerAnnotations[index] = recursiveResult.annotations;\n        }\n        else if (isPlainObject(recursiveResult.annotations)) {\n            forEach(recursiveResult.annotations, function (tree, key) {\n                innerAnnotations[escapeKey(index) + '.' + key] = tree;\n            });\n        }\n    });\n    var result = isEmptyObject(innerAnnotations)\n        ? {\n            transformedValue: transformedValue,\n            annotations: !!transformationResult\n                ? [transformationResult.type]\n                : undefined\n        }\n        : {\n            transformedValue: transformedValue,\n            annotations: !!transformationResult\n                ? [transformationResult.type, innerAnnotations]\n                : innerAnnotations\n        };\n    if (!primitive) {\n        seenObjects.set(object, result);\n    }\n    return result;\n};\n//# sourceMappingURL=plainer.js.map","function getType(payload) {\n  return Object.prototype.toString.call(payload).slice(8, -1);\n}\n\nfunction isAnyObject(payload) {\n  return getType(payload) === \"Object\";\n}\n\nfunction isArray(payload) {\n  return getType(payload) === \"Array\";\n}\n\nfunction isBlob(payload) {\n  return getType(payload) === \"Blob\";\n}\n\nfunction isBoolean(payload) {\n  return getType(payload) === \"Boolean\";\n}\n\nfunction isDate(payload) {\n  return getType(payload) === \"Date\" && !isNaN(payload);\n}\n\nfunction isEmptyArray(payload) {\n  return isArray(payload) && payload.length === 0;\n}\n\nfunction isPlainObject(payload) {\n  if (getType(payload) !== \"Object\")\n    return false;\n  const prototype = Object.getPrototypeOf(payload);\n  return !!prototype && prototype.constructor === Object && prototype === Object.prototype;\n}\n\nfunction isEmptyObject(payload) {\n  return isPlainObject(payload) && Object.keys(payload).length === 0;\n}\n\nfunction isEmptyString(payload) {\n  return payload === \"\";\n}\n\nfunction isError(payload) {\n  return getType(payload) === \"Error\" || payload instanceof Error;\n}\n\nfunction isFile(payload) {\n  return getType(payload) === \"File\";\n}\n\nfunction isFullArray(payload) {\n  return isArray(payload) && payload.length > 0;\n}\n\nfunction isFullObject(payload) {\n  return isPlainObject(payload) && Object.keys(payload).length > 0;\n}\n\nfunction isString(payload) {\n  return getType(payload) === \"String\";\n}\n\nfunction isFullString(payload) {\n  return isString(payload) && payload !== \"\";\n}\n\nfunction isFunction(payload) {\n  return typeof payload === \"function\";\n}\n\nfunction isType(payload, type) {\n  if (!(type instanceof Function)) {\n    throw new TypeError(\"Type must be a function\");\n  }\n  if (!Object.prototype.hasOwnProperty.call(type, \"prototype\")) {\n    throw new TypeError(\"Type is not a class\");\n  }\n  const name = type.name;\n  return getType(payload) === name || Boolean(payload && payload.constructor === type);\n}\n\nfunction isInstanceOf(value, classOrClassName) {\n  if (typeof classOrClassName === \"function\") {\n    for (let p = value; p; p = Object.getPrototypeOf(p)) {\n      if (isType(p, classOrClassName)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    for (let p = value; p; p = Object.getPrototypeOf(p)) {\n      if (getType(p) === classOrClassName) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nfunction isMap(payload) {\n  return getType(payload) === \"Map\";\n}\n\nfunction isNaNValue(payload) {\n  return getType(payload) === \"Number\" && isNaN(payload);\n}\n\nfunction isNumber(payload) {\n  return getType(payload) === \"Number\" && !isNaN(payload);\n}\n\nfunction isNegativeNumber(payload) {\n  return isNumber(payload) && payload < 0;\n}\n\nfunction isNull(payload) {\n  return getType(payload) === \"Null\";\n}\n\nfunction isOneOf(a, b, c, d, e) {\n  return (value) => a(value) || b(value) || !!c && c(value) || !!d && d(value) || !!e && e(value);\n}\n\nfunction isUndefined(payload) {\n  return getType(payload) === \"Undefined\";\n}\n\nconst isNullOrUndefined = isOneOf(isNull, isUndefined);\n\nfunction isObject(payload) {\n  return isPlainObject(payload);\n}\n\nfunction isObjectLike(payload) {\n  return isAnyObject(payload);\n}\n\nfunction isPositiveNumber(payload) {\n  return isNumber(payload) && payload > 0;\n}\n\nfunction isSymbol(payload) {\n  return getType(payload) === \"Symbol\";\n}\n\nfunction isPrimitive(payload) {\n  return isBoolean(payload) || isNull(payload) || isUndefined(payload) || isNumber(payload) || isString(payload) || isSymbol(payload);\n}\n\nfunction isPromise(payload) {\n  return getType(payload) === \"Promise\";\n}\n\nfunction isRegExp(payload) {\n  return getType(payload) === \"RegExp\";\n}\n\nfunction isSet(payload) {\n  return getType(payload) === \"Set\";\n}\n\nfunction isWeakMap(payload) {\n  return getType(payload) === \"WeakMap\";\n}\n\nfunction isWeakSet(payload) {\n  return getType(payload) === \"WeakSet\";\n}\n\nexport { getType, isAnyObject, isArray, isBlob, isBoolean, isDate, isEmptyArray, isEmptyObject, isEmptyString, isError, isFile, isFullArray, isFullObject, isFullString, isFunction, isInstanceOf, isMap, isNaNValue, isNegativeNumber, isNull, isNullOrUndefined, isNumber, isObject, isObjectLike, isOneOf, isPlainObject, isPositiveNumber, isPrimitive, isPromise, isRegExp, isSet, isString, isSymbol, isType, isUndefined, isWeakMap, isWeakSet };\n","import { isArray, isPlainObject } from 'is-what';\n\nfunction assignProp(carry, key, newVal, originalObject, includeNonenumerable) {\n  const propType = {}.propertyIsEnumerable.call(originalObject, key) ? \"enumerable\" : \"nonenumerable\";\n  if (propType === \"enumerable\")\n    carry[key] = newVal;\n  if (includeNonenumerable && propType === \"nonenumerable\") {\n    Object.defineProperty(carry, key, {\n      value: newVal,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    });\n  }\n}\nfunction copy(target, options = {}) {\n  if (isArray(target)) {\n    return target.map((item) => copy(item, options));\n  }\n  if (!isPlainObject(target)) {\n    return target;\n  }\n  const props = Object.getOwnPropertyNames(target);\n  const symbols = Object.getOwnPropertySymbols(target);\n  return [...props, ...symbols].reduce((carry, key) => {\n    if (isArray(options.props) && !options.props.includes(key)) {\n      return carry;\n    }\n    const val = target[key];\n    const newVal = copy(val, options);\n    assignProp(carry, key, newVal, target, options.nonenumerable);\n    return carry;\n  }, {});\n}\n\nexport { copy };\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nimport { ClassRegistry } from './class-registry';\nimport { Registry } from './registry';\nimport { CustomTransformerRegistry, } from './custom-transformer-registry';\nimport { applyReferentialEqualityAnnotations, applyValueAnnotations, generateReferentialEqualityAnnotations, walker, } from './plainer';\nimport { copy } from 'copy-anything';\nvar SuperJSON = /** @class */ (function () {\n    /**\n     * @param dedupeReferentialEqualities  If true, SuperJSON will make sure only one instance of referentially equal objects are serialized and the rest are replaced with `null`.\n     */\n    function SuperJSON(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.dedupe, dedupe = _c === void 0 ? false : _c;\n        this.classRegistry = new ClassRegistry();\n        this.symbolRegistry = new Registry(function (s) { var _a; return (_a = s.description) !== null && _a !== void 0 ? _a : ''; });\n        this.customTransformerRegistry = new CustomTransformerRegistry();\n        this.allowedErrorProps = [];\n        this.dedupe = dedupe;\n    }\n    SuperJSON.prototype.serialize = function (object) {\n        var identities = new Map();\n        var output = walker(object, identities, this, this.dedupe);\n        var res = {\n            json: output.transformedValue\n        };\n        if (output.annotations) {\n            res.meta = __assign(__assign({}, res.meta), { values: output.annotations });\n        }\n        var equalityAnnotations = generateReferentialEqualityAnnotations(identities, this.dedupe);\n        if (equalityAnnotations) {\n            res.meta = __assign(__assign({}, res.meta), { referentialEqualities: equalityAnnotations });\n        }\n        return res;\n    };\n    SuperJSON.prototype.deserialize = function (payload) {\n        var json = payload.json, meta = payload.meta;\n        var result = copy(json);\n        if (meta === null || meta === void 0 ? void 0 : meta.values) {\n            result = applyValueAnnotations(result, meta.values, this);\n        }\n        if (meta === null || meta === void 0 ? void 0 : meta.referentialEqualities) {\n            result = applyReferentialEqualityAnnotations(result, meta.referentialEqualities);\n        }\n        return result;\n    };\n    SuperJSON.prototype.stringify = function (object) {\n        return JSON.stringify(this.serialize(object));\n    };\n    SuperJSON.prototype.parse = function (string) {\n        return this.deserialize(JSON.parse(string));\n    };\n    SuperJSON.prototype.registerClass = function (v, options) {\n        this.classRegistry.register(v, options);\n    };\n    SuperJSON.prototype.registerSymbol = function (v, identifier) {\n        this.symbolRegistry.register(v, identifier);\n    };\n    SuperJSON.prototype.registerCustom = function (transformer, name) {\n        this.customTransformerRegistry.register(__assign({ name: name }, transformer));\n    };\n    SuperJSON.prototype.allowErrorProps = function () {\n        var _a;\n        var props = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            props[_i] = arguments[_i];\n        }\n        (_a = this.allowedErrorProps).push.apply(_a, __spreadArray([], __read(props)));\n    };\n    SuperJSON.defaultInstance = new SuperJSON();\n    SuperJSON.serialize = SuperJSON.defaultInstance.serialize.bind(SuperJSON.defaultInstance);\n    SuperJSON.deserialize = SuperJSON.defaultInstance.deserialize.bind(SuperJSON.defaultInstance);\n    SuperJSON.stringify = SuperJSON.defaultInstance.stringify.bind(SuperJSON.defaultInstance);\n    SuperJSON.parse = SuperJSON.defaultInstance.parse.bind(SuperJSON.defaultInstance);\n    SuperJSON.registerClass = SuperJSON.defaultInstance.registerClass.bind(SuperJSON.defaultInstance);\n    SuperJSON.registerSymbol = SuperJSON.defaultInstance.registerSymbol.bind(SuperJSON.defaultInstance);\n    SuperJSON.registerCustom = SuperJSON.defaultInstance.registerCustom.bind(SuperJSON.defaultInstance);\n    SuperJSON.allowErrorProps = SuperJSON.defaultInstance.allowErrorProps.bind(SuperJSON.defaultInstance);\n    return SuperJSON;\n}());\nexport default SuperJSON;\nexport { SuperJSON };\nexport var serialize = SuperJSON.serialize;\nexport var deserialize = SuperJSON.deserialize;\nexport var stringify = SuperJSON.stringify;\nexport var parse = SuperJSON.parse;\nexport var registerClass = SuperJSON.registerClass;\nexport var registerCustom = SuperJSON.registerCustom;\nexport var registerSymbol = SuperJSON.registerSymbol;\nexport var allowErrorProps = SuperJSON.allowErrorProps;\n//# sourceMappingURL=index.js.map","import type { Database } from '@statstrade/supabase/types'\nimport { createRouteHandlerClient } from '@supabase/auth-helpers-nextjs'\nimport { createClient } from '@supabase/supabase-js'\nimport { TRPCError, initTRPC } from '@trpc/server'\nimport type { FetchCreateContextFnOptions } from '@trpc/server/adapters/fetch'\nimport * as jose from 'jose'\nimport { cookies, type UnsafeUnwrappedCookies } from 'next/headers'\nimport superJson from 'superjson'\n\nconst jwtSecret = process.env.SUPABASE_AUTH_JWT_SECRET\n\nexport const createTRPCContext = async (opts: FetchCreateContextFnOptions) => {\n  // if there's auth cookie it'll be authenticated by this helper\n  const cookiesStore = (await cookies()) as unknown as UnsafeUnwrappedCookies\n\n  let supabase = createRouteHandlerClient<Database>({\n    cookies: () => cookiesStore as never,\n  })\n  let userId = (await supabase.auth.getUser()).data.user?.id\n\n  if (!jwtSecret) {\n    throw new Error('the `SUPABASE_AUTH_JWT_SECRET` env variable is not set.')\n  }\n  if (!process.env.NEXT_PUBLIC_SUPABASE_URL) {\n    throw new Error('the `NEXT_PUBLIC_SUPABASE_URL` env variable is not set.')\n  }\n  if (!process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY) {\n    throw new Error('the `NEXT_PUBLIC_SUPABASE_ANON_KEY` env variable is not set.')\n  }\n\n  // Native clients pass an access token in the authorization header\n  if (opts.req.headers.has('authorization')) {\n    const accessToken = opts.req.headers.get('authorization')!.split('Bearer ').pop()\n\n    if (accessToken) {\n      try {\n        const { payload } = await jose.jwtVerify(accessToken, new TextEncoder().encode(jwtSecret))\n        userId = payload.sub\n      } catch (error) {\n        // Leaves userId undefined, which will eventually fail the enforceUserIsAuthed check\n        // Might want to log this out for debugging, etc.\n        if (error instanceof Error) {\n          console.error('Error parsing JWT', error.message)\n        }\n      }\n    }\n\n    supabase = createClient<Database>(\n      process.env.NEXT_PUBLIC_SUPABASE_URL,\n      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY,\n      {\n        //TODO: remove this options from takout starter\n        // auth: {\n        // autoRefreshToken: false,\n        // detectSessionInUrl: false,\n        // persistSession: false,\n        // },\n        global: {\n          headers: {\n            // pass the authorization header through to Supabase\n            Authorization: opts.req.headers.get('authorization')!,\n          },\n        },\n      }\n    )\n  }\n\n  return {\n    requestOrigin: opts.req.headers.get('origin'),\n\n    /**\n     * The Supabase user\n     * More claims from the JWT or Session can be added here if needed inside tRPC procedures\n     */\n    user: userId && { id: userId },\n\n    /**\n     * The Supabase instance with the authenticated session on it (RLS works)\n     *\n     * You should import `supabaseAdmin` here in case you want to\n     * do anything on behalf of the service role (RLS doesn't work - you're admin)\n     */\n    supabase,\n  }\n}\n\n// Avoid exporting the entire t-object since it's not very descriptive.\nconst t = initTRPC.context<typeof createTRPCContext>().create({\n  transformer: superJson,\n})\n\n/**\n * This is how you create new routers and sub-routers in your tRPC API.\n *\n * @see https://trpc.io/docs/router\n */\nexport const createTRPCRouter = t.router\n\n/**\n * Public (unauthenticated) procedure\n *\n * This is the base piece you use to build new queries and mutations on your tRPC API. It does not\n * guarantee that a user querying is authorized, but you can still access user session data if they\n * are logged in.\n */\nexport const publicProcedure = t.procedure\n\n/** Reusable middleware that enforces users are logged in before running the procedure. */\nconst enforceUserIsAuthed = t.middleware(({ ctx, next }) => {\n  if (!ctx.user) {\n    throw new TRPCError({ code: 'UNAUTHORIZED' })\n  }\n\n  return next({\n    ctx: {\n      // infers the `user` as non-nullable\n      user: { ...ctx.user },\n    },\n  })\n})\n\n/**\n * Protected (authenticated) procedure\n *\n * If you want a query or mutation to ONLY be accessible to logged in users, use this. It verifies\n * the session is valid and guarantees `ctx.session.user` is not null.\n *\n * @see https://trpc.io/docs/procedures\n */\nexport const protectedProcedure = t.procedure.use(enforceUserIsAuthed)\n","import { TRPCError } from '@trpc/server'\n\nimport { createTRPCRouter, protectedProcedure } from '../trpc'\n\nfunction getTimeOfDay() {\n  const today = new Date()\n  const curHr = today.getHours()\n  if (curHr < 4) {\n    return 'night'\n  }\n  if (curHr < 12) {\n    return 'morning'\n  }\n  if (curHr < 18) {\n    return 'afternoon'\n  }\n  return 'night'\n}\n\nexport const greetingRouter = createTRPCRouter({\n  greet: protectedProcedure.query(async ({ ctx: { supabase, user } }) => {\n    const profile = await supabase.from('profiles').select('*').eq('id', user.id).single()\n    if (profile.error) {\n      console.error(profile.error)\n      throw new TRPCError({ code: 'INTERNAL_SERVER_ERROR' })\n    }\n    const name = profile.data.name\n    return `Good ${getTimeOfDay()}${name ? `, ${name}!` : '!'}`\n  }),\n})\n","import { inferRouterInputs, inferRouterOutputs } from '@trpc/server'\n\nimport { greetingRouter } from './greeting'\nimport { createTRPCRouter } from '../trpc'\nexport const appRouter = createTRPCRouter({\n  greeting: greetingRouter,\n})\n// export type definition of API\nexport type AppRouter = typeof appRouter\n\n/**\n * Inference helpers for input types\n * @example type HelloInput = RouterInputs['example']['hello']\n **/\nexport type RouterInputs = inferRouterInputs<AppRouter>\n\n/**\n * Inference helpers for output types\n * @example type HelloOutput = RouterOutputs['example']['hello']\n **/\nexport type RouterOutputs = inferRouterOutputs<AppRouter>\n","export * from './routers/_app'\nexport * from './trpc'\n","//#region src/observable/observable.ts\n/** @public */\nfunction isObservable(x) {\n\treturn typeof x === \"object\" && x !== null && \"subscribe\" in x;\n}\n/** @public */\nfunction observable(subscribe) {\n\tconst self = {\n\t\tsubscribe(observer) {\n\t\t\tlet teardownRef = null;\n\t\t\tlet isDone = false;\n\t\t\tlet unsubscribed = false;\n\t\t\tlet teardownImmediately = false;\n\t\t\tfunction unsubscribe() {\n\t\t\t\tif (teardownRef === null) {\n\t\t\t\t\tteardownImmediately = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (unsubscribed) return;\n\t\t\t\tunsubscribed = true;\n\t\t\t\tif (typeof teardownRef === \"function\") teardownRef();\n\t\t\t\telse if (teardownRef) teardownRef.unsubscribe();\n\t\t\t}\n\t\t\tteardownRef = subscribe({\n\t\t\t\tnext(value) {\n\t\t\t\t\tvar _observer$next;\n\t\t\t\t\tif (isDone) return;\n\t\t\t\t\t(_observer$next = observer.next) === null || _observer$next === void 0 || _observer$next.call(observer, value);\n\t\t\t\t},\n\t\t\t\terror(err) {\n\t\t\t\t\tvar _observer$error;\n\t\t\t\t\tif (isDone) return;\n\t\t\t\t\tisDone = true;\n\t\t\t\t\t(_observer$error = observer.error) === null || _observer$error === void 0 || _observer$error.call(observer, err);\n\t\t\t\t\tunsubscribe();\n\t\t\t\t},\n\t\t\t\tcomplete() {\n\t\t\t\t\tvar _observer$complete;\n\t\t\t\t\tif (isDone) return;\n\t\t\t\t\tisDone = true;\n\t\t\t\t\t(_observer$complete = observer.complete) === null || _observer$complete === void 0 || _observer$complete.call(observer);\n\t\t\t\t\tunsubscribe();\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (teardownImmediately) unsubscribe();\n\t\t\treturn { unsubscribe };\n\t\t},\n\t\tpipe(...operations) {\n\t\t\treturn operations.reduce(pipeReducer, self);\n\t\t}\n\t};\n\treturn self;\n}\nfunction pipeReducer(prev, fn) {\n\treturn fn(prev);\n}\n/** @internal */\nfunction observableToPromise(observable$1) {\n\tconst ac = new AbortController();\n\tconst promise = new Promise((resolve, reject) => {\n\t\tlet isDone = false;\n\t\tfunction onDone() {\n\t\t\tif (isDone) return;\n\t\t\tisDone = true;\n\t\t\tobs$.unsubscribe();\n\t\t}\n\t\tac.signal.addEventListener(\"abort\", () => {\n\t\t\treject(ac.signal.reason);\n\t\t});\n\t\tconst obs$ = observable$1.subscribe({\n\t\t\tnext(data) {\n\t\t\t\tisDone = true;\n\t\t\t\tresolve(data);\n\t\t\t\tonDone();\n\t\t\t},\n\t\t\terror(data) {\n\t\t\t\treject(data);\n\t\t\t},\n\t\t\tcomplete() {\n\t\t\t\tac.abort();\n\t\t\t\tonDone();\n\t\t\t}\n\t\t});\n\t});\n\treturn promise;\n}\n/**\n* @internal\n*/\nfunction observableToReadableStream(observable$1, signal) {\n\tlet unsub = null;\n\tconst onAbort = () => {\n\t\tunsub === null || unsub === void 0 || unsub.unsubscribe();\n\t\tunsub = null;\n\t\tsignal.removeEventListener(\"abort\", onAbort);\n\t};\n\treturn new ReadableStream({\n\t\tstart(controller) {\n\t\t\tunsub = observable$1.subscribe({\n\t\t\t\tnext(data) {\n\t\t\t\t\tcontroller.enqueue({\n\t\t\t\t\t\tok: true,\n\t\t\t\t\t\tvalue: data\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\terror(error) {\n\t\t\t\t\tcontroller.enqueue({\n\t\t\t\t\t\tok: false,\n\t\t\t\t\t\terror\n\t\t\t\t\t});\n\t\t\t\t\tcontroller.close();\n\t\t\t\t},\n\t\t\t\tcomplete() {\n\t\t\t\t\tcontroller.close();\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (signal.aborted) onAbort();\n\t\t\telse signal.addEventListener(\"abort\", onAbort, { once: true });\n\t\t},\n\t\tcancel() {\n\t\t\tonAbort();\n\t\t}\n\t});\n}\n/** @internal */\nfunction observableToAsyncIterable(observable$1, signal) {\n\tconst stream = observableToReadableStream(observable$1, signal);\n\tconst reader = stream.getReader();\n\tconst iterator = {\n\t\tasync next() {\n\t\t\tconst value = await reader.read();\n\t\t\tif (value.done) return {\n\t\t\t\tvalue: void 0,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t\tconst { value: result } = value;\n\t\t\tif (!result.ok) throw result.error;\n\t\t\treturn {\n\t\t\t\tvalue: result.value,\n\t\t\t\tdone: false\n\t\t\t};\n\t\t},\n\t\tasync return() {\n\t\t\tawait reader.cancel();\n\t\t\treturn {\n\t\t\t\tvalue: void 0,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\t};\n\treturn { [Symbol.asyncIterator]() {\n\t\treturn iterator;\n\t} };\n}\n\n//#endregion\nexport { isObservable, observable, observableToAsyncIterable, observableToPromise };\n//# sourceMappingURL=observable-UMO3vUa_.mjs.map","import { __commonJS, __toESM, getErrorShape, getHTTPStatusCode, require_defineProperty, require_objectSpread2 } from \"./getErrorShape-Uhlrl4Bk.mjs\";\nimport { TRPCError, getProcedureAtPath, getTRPCErrorFromUnknown, isTrackedEnvelope, transformTRPCResponse } from \"./tracked-gU3ttYjg.mjs\";\nimport { identity, isAsyncIterable, isFunction, isObject, run } from \"./utils-DdbbrDku.mjs\";\nimport { isObservable, observableToAsyncIterable } from \"./observable-UMO3vUa_.mjs\";\n\n//#region src/unstable-core-do-not-import/http/parseConnectionParams.ts\nfunction parseConnectionParamsFromUnknown(parsed) {\n\ttry {\n\t\tif (parsed === null) return null;\n\t\tif (!isObject(parsed)) throw new Error(\"Expected object\");\n\t\tconst nonStringValues = Object.entries(parsed).filter(([_key, value]) => typeof value !== \"string\");\n\t\tif (nonStringValues.length > 0) throw new Error(`Expected connectionParams to be string values. Got ${nonStringValues.map(([key, value]) => `${key}: ${typeof value}`).join(\", \")}`);\n\t\treturn parsed;\n\t} catch (cause) {\n\t\tthrow new TRPCError({\n\t\t\tcode: \"PARSE_ERROR\",\n\t\t\tmessage: \"Invalid connection params shape\",\n\t\t\tcause\n\t\t});\n\t}\n}\nfunction parseConnectionParamsFromString(str) {\n\tlet parsed;\n\ttry {\n\t\tparsed = JSON.parse(str);\n\t} catch (cause) {\n\t\tthrow new TRPCError({\n\t\t\tcode: \"PARSE_ERROR\",\n\t\t\tmessage: \"Not JSON-parsable query params\",\n\t\t\tcause\n\t\t});\n\t}\n\treturn parseConnectionParamsFromUnknown(parsed);\n}\n\n//#endregion\n//#region src/unstable-core-do-not-import/http/contentType.ts\nvar import_objectSpread2$1 = __toESM(require_objectSpread2(), 1);\n/**\n* Memoize a function that takes no arguments\n* @internal\n*/\nfunction memo(fn) {\n\tlet promise = null;\n\tconst sym = Symbol.for(\"@trpc/server/http/memo\");\n\tlet value = sym;\n\treturn {\n\t\tread: async () => {\n\t\t\tvar _promise;\n\t\t\tif (value !== sym) return value;\n\t\t\t(_promise = promise) !== null && _promise !== void 0 || (promise = fn().catch((cause) => {\n\t\t\t\tif (cause instanceof TRPCError) throw cause;\n\t\t\t\tthrow new TRPCError({\n\t\t\t\t\tcode: \"BAD_REQUEST\",\n\t\t\t\t\tmessage: cause instanceof Error ? cause.message : \"Invalid input\",\n\t\t\t\t\tcause\n\t\t\t\t});\n\t\t\t}));\n\t\t\tvalue = await promise;\n\t\t\tpromise = null;\n\t\t\treturn value;\n\t\t},\n\t\tresult: () => {\n\t\t\treturn value !== sym ? value : void 0;\n\t\t}\n\t};\n}\nconst jsonContentTypeHandler = {\n\tisMatch(req) {\n\t\tvar _req$headers$get;\n\t\treturn !!((_req$headers$get = req.headers.get(\"content-type\")) === null || _req$headers$get === void 0 ? void 0 : _req$headers$get.startsWith(\"application/json\"));\n\t},\n\tasync parse(opts) {\n\t\tvar _types$values$next$va;\n\t\tconst { req } = opts;\n\t\tconst isBatchCall = opts.searchParams.get(\"batch\") === \"1\";\n\t\tconst paths = isBatchCall ? opts.path.split(\",\") : [opts.path];\n\t\tconst getInputs = memo(async () => {\n\t\t\tlet inputs = void 0;\n\t\t\tif (req.method === \"GET\") {\n\t\t\t\tconst queryInput = opts.searchParams.get(\"input\");\n\t\t\t\tif (queryInput) inputs = JSON.parse(queryInput);\n\t\t\t} else inputs = await req.json();\n\t\t\tif (inputs === void 0) return {};\n\t\t\tif (!isBatchCall) return { 0: opts.router._def._config.transformer.input.deserialize(inputs) };\n\t\t\tif (!isObject(inputs)) throw new TRPCError({\n\t\t\t\tcode: \"BAD_REQUEST\",\n\t\t\t\tmessage: \"\\\"input\\\" needs to be an object when doing a batch call\"\n\t\t\t});\n\t\t\tconst acc = {};\n\t\t\tfor (const index of paths.keys()) {\n\t\t\t\tconst input = inputs[index];\n\t\t\t\tif (input !== void 0) acc[index] = opts.router._def._config.transformer.input.deserialize(input);\n\t\t\t}\n\t\t\treturn acc;\n\t\t});\n\t\tconst calls = await Promise.all(paths.map(async (path, index) => {\n\t\t\tconst procedure = await getProcedureAtPath(opts.router, path);\n\t\t\treturn {\n\t\t\t\tpath,\n\t\t\t\tprocedure,\n\t\t\t\tgetRawInput: async () => {\n\t\t\t\t\tconst inputs = await getInputs.read();\n\t\t\t\t\tlet input = inputs[index];\n\t\t\t\t\tif ((procedure === null || procedure === void 0 ? void 0 : procedure._def.type) === \"subscription\") {\n\t\t\t\t\t\tvar _ref, _opts$headers$get;\n\t\t\t\t\t\tconst lastEventId = (_ref = (_opts$headers$get = opts.headers.get(\"last-event-id\")) !== null && _opts$headers$get !== void 0 ? _opts$headers$get : opts.searchParams.get(\"lastEventId\")) !== null && _ref !== void 0 ? _ref : opts.searchParams.get(\"Last-Event-Id\");\n\t\t\t\t\t\tif (lastEventId) if (isObject(input)) input = (0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, input), {}, { lastEventId });\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tvar _input;\n\t\t\t\t\t\t\t(_input = input) !== null && _input !== void 0 || (input = { lastEventId });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn input;\n\t\t\t\t},\n\t\t\t\tresult: () => {\n\t\t\t\t\tvar _getInputs$result;\n\t\t\t\t\treturn (_getInputs$result = getInputs.result()) === null || _getInputs$result === void 0 ? void 0 : _getInputs$result[index];\n\t\t\t\t}\n\t\t\t};\n\t\t}));\n\t\tconst types = new Set(calls.map((call) => {\n\t\t\tvar _call$procedure;\n\t\t\treturn (_call$procedure = call.procedure) === null || _call$procedure === void 0 ? void 0 : _call$procedure._def.type;\n\t\t}).filter(Boolean));\n\t\t/* istanbul ignore if -- @preserve */\n\t\tif (types.size > 1) throw new TRPCError({\n\t\t\tcode: \"BAD_REQUEST\",\n\t\t\tmessage: `Cannot mix procedure types in call: ${Array.from(types).join(\", \")}`\n\t\t});\n\t\tconst type = (_types$values$next$va = types.values().next().value) !== null && _types$values$next$va !== void 0 ? _types$values$next$va : \"unknown\";\n\t\tconst connectionParamsStr = opts.searchParams.get(\"connectionParams\");\n\t\tconst info = {\n\t\t\tisBatchCall,\n\t\t\taccept: req.headers.get(\"trpc-accept\"),\n\t\t\tcalls,\n\t\t\ttype,\n\t\t\tconnectionParams: connectionParamsStr === null ? null : parseConnectionParamsFromString(connectionParamsStr),\n\t\t\tsignal: req.signal,\n\t\t\turl: opts.url\n\t\t};\n\t\treturn info;\n\t}\n};\nconst formDataContentTypeHandler = {\n\tisMatch(req) {\n\t\tvar _req$headers$get2;\n\t\treturn !!((_req$headers$get2 = req.headers.get(\"content-type\")) === null || _req$headers$get2 === void 0 ? void 0 : _req$headers$get2.startsWith(\"multipart/form-data\"));\n\t},\n\tasync parse(opts) {\n\t\tconst { req } = opts;\n\t\tif (req.method !== \"POST\") throw new TRPCError({\n\t\t\tcode: \"METHOD_NOT_SUPPORTED\",\n\t\t\tmessage: \"Only POST requests are supported for multipart/form-data requests\"\n\t\t});\n\t\tconst getInputs = memo(async () => {\n\t\t\tconst fd = await req.formData();\n\t\t\treturn fd;\n\t\t});\n\t\tconst procedure = await getProcedureAtPath(opts.router, opts.path);\n\t\treturn {\n\t\t\taccept: null,\n\t\t\tcalls: [{\n\t\t\t\tpath: opts.path,\n\t\t\t\tgetRawInput: getInputs.read,\n\t\t\t\tresult: getInputs.result,\n\t\t\t\tprocedure\n\t\t\t}],\n\t\t\tisBatchCall: false,\n\t\t\ttype: \"mutation\",\n\t\t\tconnectionParams: null,\n\t\t\tsignal: req.signal,\n\t\t\turl: opts.url\n\t\t};\n\t}\n};\nconst octetStreamContentTypeHandler = {\n\tisMatch(req) {\n\t\tvar _req$headers$get3;\n\t\treturn !!((_req$headers$get3 = req.headers.get(\"content-type\")) === null || _req$headers$get3 === void 0 ? void 0 : _req$headers$get3.startsWith(\"application/octet-stream\"));\n\t},\n\tasync parse(opts) {\n\t\tconst { req } = opts;\n\t\tif (req.method !== \"POST\") throw new TRPCError({\n\t\t\tcode: \"METHOD_NOT_SUPPORTED\",\n\t\t\tmessage: \"Only POST requests are supported for application/octet-stream requests\"\n\t\t});\n\t\tconst getInputs = memo(async () => {\n\t\t\treturn req.body;\n\t\t});\n\t\treturn {\n\t\t\tcalls: [{\n\t\t\t\tpath: opts.path,\n\t\t\t\tgetRawInput: getInputs.read,\n\t\t\t\tresult: getInputs.result,\n\t\t\t\tprocedure: await getProcedureAtPath(opts.router, opts.path)\n\t\t\t}],\n\t\t\tisBatchCall: false,\n\t\t\taccept: null,\n\t\t\ttype: \"mutation\",\n\t\t\tconnectionParams: null,\n\t\t\tsignal: req.signal,\n\t\t\turl: opts.url\n\t\t};\n\t}\n};\nconst handlers = [\n\tjsonContentTypeHandler,\n\tformDataContentTypeHandler,\n\toctetStreamContentTypeHandler\n];\nfunction getContentTypeHandler(req) {\n\tconst handler = handlers.find((handler$1) => handler$1.isMatch(req));\n\tif (handler) return handler;\n\tif (!handler && req.method === \"GET\") return jsonContentTypeHandler;\n\tthrow new TRPCError({\n\t\tcode: \"UNSUPPORTED_MEDIA_TYPE\",\n\t\tmessage: req.headers.has(\"content-type\") ? `Unsupported content-type \"${req.headers.get(\"content-type\")}` : \"Missing content-type header\"\n\t});\n}\nasync function getRequestInfo(opts) {\n\tconst handler = getContentTypeHandler(opts.req);\n\treturn await handler.parse(opts);\n}\n\n//#endregion\n//#region src/unstable-core-do-not-import/http/abortError.ts\nfunction isAbortError(error) {\n\treturn isObject(error) && error[\"name\"] === \"AbortError\";\n}\nfunction throwAbortError(message = \"AbortError\") {\n\tthrow new DOMException(message, \"AbortError\");\n}\n\n//#endregion\n//#region src/vendor/unpromise/unpromise.ts\nvar import_defineProperty = __toESM(require_defineProperty(), 1);\nlet _Symbol$toStringTag;\n/** Memory safe (weakmapped) cache of the ProxyPromise for each Promise,\n* which is retained for the lifetime of the original Promise.\n*/\nconst subscribableCache = /* @__PURE__ */ new WeakMap();\n/** A NOOP function allowing a consistent interface for settled\n* SubscribedPromises (settled promises are not subscribed - they resolve\n* immediately). */\nconst NOOP = () => {};\n_Symbol$toStringTag = Symbol.toStringTag;\n/**\n* Every `Promise<T>` can be shadowed by a single `ProxyPromise<T>`. It is\n* created once, cached and reused throughout the lifetime of the Promise. Get a\n* Promise's ProxyPromise using `Unpromise.proxy(promise)`.\n*\n* The `ProxyPromise<T>` attaches handlers to the original `Promise<T>`\n* `.then()` and `.catch()` just once. Promises derived from it use a\n* subscription- (and unsubscription-) based mechanism that monitors these\n* handlers.\n*\n* Every time you call `.subscribe()`, `.then()` `.catch()` or `.finally()` on a\n* `ProxyPromise<T>` it returns a `SubscribedPromise<T>` having an additional\n* `unsubscribe()` method. Calling `unsubscribe()` detaches reference chains\n* from the original, potentially long-lived Promise, eliminating memory leaks.\n*\n* This approach can eliminate the memory leaks that otherwise come about from\n* repeated `race()` or `any()` calls invoking `.then()` and `.catch()` multiple\n* times on the same long-lived native Promise (subscriptions which can never be\n* cleaned up).\n*\n* `Unpromise.race(promises)` is a reference implementation of `Promise.race`\n* avoiding memory leaks when using long-lived unsettled Promises.\n*\n* `Unpromise.any(promises)` is a reference implementation of `Promise.any`\n* avoiding memory leaks when using long-lived unsettled Promises.\n*\n* `Unpromise.resolve(promise)` returns an ephemeral `SubscribedPromise<T>` for\n* any given `Promise<T>` facilitating arbitrary async/await patterns. Behind\n* the scenes, `resolve` is implemented simply as\n* `Unpromise.proxy(promise).subscribe()`. Don't forget to call `.unsubscribe()`\n* to tidy up!\n*\n*/\nvar Unpromise = class Unpromise {\n\tconstructor(arg) {\n\t\t(0, import_defineProperty.default)(this, \"promise\", void 0);\n\t\t(0, import_defineProperty.default)(this, \"subscribers\", []);\n\t\t(0, import_defineProperty.default)(this, \"settlement\", null);\n\t\t(0, import_defineProperty.default)(this, _Symbol$toStringTag, \"Unpromise\");\n\t\tif (typeof arg === \"function\") this.promise = new Promise(arg);\n\t\telse this.promise = arg;\n\t\tconst thenReturn = this.promise.then((value) => {\n\t\t\tconst { subscribers } = this;\n\t\t\tthis.subscribers = null;\n\t\t\tthis.settlement = {\n\t\t\t\tstatus: \"fulfilled\",\n\t\t\t\tvalue\n\t\t\t};\n\t\t\tsubscribers === null || subscribers === void 0 || subscribers.forEach(({ resolve }) => {\n\t\t\t\tresolve(value);\n\t\t\t});\n\t\t});\n\t\tif (\"catch\" in thenReturn) thenReturn.catch((reason) => {\n\t\t\tconst { subscribers } = this;\n\t\t\tthis.subscribers = null;\n\t\t\tthis.settlement = {\n\t\t\t\tstatus: \"rejected\",\n\t\t\t\treason\n\t\t\t};\n\t\t\tsubscribers === null || subscribers === void 0 || subscribers.forEach(({ reject }) => {\n\t\t\t\treject(reason);\n\t\t\t});\n\t\t});\n\t}\n\t/** Create a promise that mitigates uncontrolled subscription to a long-lived\n\t* Promise via .then() and .catch() - otherwise a source of memory leaks.\n\t*\n\t* The returned promise has an `unsubscribe()` method which can be called when\n\t* the Promise is no longer being tracked by application logic, and which\n\t* ensures that there is no reference chain from the original promise to the\n\t* new one, and therefore no memory leak.\n\t*\n\t* If original promise has not yet settled, this adds a new unique promise\n\t* that listens to then/catch events, along with an `unsubscribe()` method to\n\t* detach it.\n\t*\n\t* If original promise has settled, then creates a new Promise.resolve() or\n\t* Promise.reject() and provided unsubscribe is a noop.\n\t*\n\t* If you call `unsubscribe()` before the returned Promise has settled, it\n\t* will never settle.\n\t*/\n\tsubscribe() {\n\t\tlet promise;\n\t\tlet unsubscribe;\n\t\tconst { settlement } = this;\n\t\tif (settlement === null) {\n\t\t\tif (this.subscribers === null) throw new Error(\"Unpromise settled but still has subscribers\");\n\t\t\tconst subscriber = withResolvers();\n\t\t\tthis.subscribers = listWithMember(this.subscribers, subscriber);\n\t\t\tpromise = subscriber.promise;\n\t\t\tunsubscribe = () => {\n\t\t\t\tif (this.subscribers !== null) this.subscribers = listWithoutMember(this.subscribers, subscriber);\n\t\t\t};\n\t\t} else {\n\t\t\tconst { status } = settlement;\n\t\t\tif (status === \"fulfilled\") promise = Promise.resolve(settlement.value);\n\t\t\telse promise = Promise.reject(settlement.reason);\n\t\t\tunsubscribe = NOOP;\n\t\t}\n\t\treturn Object.assign(promise, { unsubscribe });\n\t}\n\t/** STANDARD PROMISE METHODS (but returning a SubscribedPromise) */\n\tthen(onfulfilled, onrejected) {\n\t\tconst subscribed = this.subscribe();\n\t\tconst { unsubscribe } = subscribed;\n\t\treturn Object.assign(subscribed.then(onfulfilled, onrejected), { unsubscribe });\n\t}\n\tcatch(onrejected) {\n\t\tconst subscribed = this.subscribe();\n\t\tconst { unsubscribe } = subscribed;\n\t\treturn Object.assign(subscribed.catch(onrejected), { unsubscribe });\n\t}\n\tfinally(onfinally) {\n\t\tconst subscribed = this.subscribe();\n\t\tconst { unsubscribe } = subscribed;\n\t\treturn Object.assign(subscribed.finally(onfinally), { unsubscribe });\n\t}\n\t/** Unpromise STATIC METHODS */\n\t/** Create or Retrieve the proxy Unpromise (a re-used Unpromise for the VM lifetime\n\t* of the provided Promise reference) */\n\tstatic proxy(promise) {\n\t\tconst cached = Unpromise.getSubscribablePromise(promise);\n\t\treturn typeof cached !== \"undefined\" ? cached : Unpromise.createSubscribablePromise(promise);\n\t}\n\t/** Create and store an Unpromise keyed by an original Promise. */\n\tstatic createSubscribablePromise(promise) {\n\t\tconst created = new Unpromise(promise);\n\t\tsubscribableCache.set(promise, created);\n\t\tsubscribableCache.set(created, created);\n\t\treturn created;\n\t}\n\t/** Retrieve a previously-created Unpromise keyed by an original Promise. */\n\tstatic getSubscribablePromise(promise) {\n\t\treturn subscribableCache.get(promise);\n\t}\n\t/** Promise STATIC METHODS */\n\t/** Lookup the Unpromise for this promise, and derive a SubscribedPromise from\n\t* it (that can be later unsubscribed to eliminate Memory leaks) */\n\tstatic resolve(value) {\n\t\tconst promise = typeof value === \"object\" && value !== null && \"then\" in value && typeof value.then === \"function\" ? value : Promise.resolve(value);\n\t\treturn Unpromise.proxy(promise).subscribe();\n\t}\n\tstatic async any(values) {\n\t\tconst valuesArray = Array.isArray(values) ? values : [...values];\n\t\tconst subscribedPromises = valuesArray.map(Unpromise.resolve);\n\t\ttry {\n\t\t\treturn await Promise.any(subscribedPromises);\n\t\t} finally {\n\t\t\tsubscribedPromises.forEach(({ unsubscribe }) => {\n\t\t\t\tunsubscribe();\n\t\t\t});\n\t\t}\n\t}\n\tstatic async race(values) {\n\t\tconst valuesArray = Array.isArray(values) ? values : [...values];\n\t\tconst subscribedPromises = valuesArray.map(Unpromise.resolve);\n\t\ttry {\n\t\t\treturn await Promise.race(subscribedPromises);\n\t\t} finally {\n\t\t\tsubscribedPromises.forEach(({ unsubscribe }) => {\n\t\t\t\tunsubscribe();\n\t\t\t});\n\t\t}\n\t}\n\t/** Create a race of SubscribedPromises that will fulfil to a single winning\n\t* Promise (in a 1-Tuple). Eliminates memory leaks from long-lived promises\n\t* accumulating .then() and .catch() subscribers. Allows simple logic to\n\t* consume the result, like...\n\t* ```ts\n\t* const [ winner ] = await Unpromise.race([ promiseA, promiseB ]);\n\t* if(winner === promiseB){\n\t*   const result = await promiseB;\n\t*   // do the thing\n\t* }\n\t* ```\n\t* */\n\tstatic async raceReferences(promises) {\n\t\tconst selfPromises = promises.map(resolveSelfTuple);\n\t\ttry {\n\t\t\treturn await Promise.race(selfPromises);\n\t\t} finally {\n\t\t\tfor (const promise of selfPromises) promise.unsubscribe();\n\t\t}\n\t}\n};\n/** Promises a 1-tuple containing the original promise when it resolves. Allows\n* awaiting the eventual Promise ***reference*** (easy to destructure and\n* exactly compare with ===). Avoids resolving to the Promise ***value*** (which\n* may be ambiguous and therefore hard to identify as the winner of a race).\n* You can call unsubscribe on the Promise to mitigate memory leaks.\n* */\nfunction resolveSelfTuple(promise) {\n\treturn Unpromise.proxy(promise).then(() => [promise]);\n}\n/** VENDORED (Future) PROMISE UTILITIES */\n/** Reference implementation of https://github.com/tc39/proposal-promise-with-resolvers */\nfunction withResolvers() {\n\tlet resolve;\n\tlet reject;\n\tconst promise = new Promise((_resolve, _reject) => {\n\t\tresolve = _resolve;\n\t\treject = _reject;\n\t});\n\treturn {\n\t\tpromise,\n\t\tresolve,\n\t\treject\n\t};\n}\n/** IMMUTABLE LIST OPERATIONS */\nfunction listWithMember(arr, member) {\n\treturn [...arr, member];\n}\nfunction listWithoutIndex(arr, index) {\n\treturn [...arr.slice(0, index), ...arr.slice(index + 1)];\n}\nfunction listWithoutMember(arr, member) {\n\tconst index = arr.indexOf(member);\n\tif (index !== -1) return listWithoutIndex(arr, index);\n\treturn arr;\n}\n\n//#endregion\n//#region src/unstable-core-do-not-import/stream/utils/disposable.ts\nvar _Symbol, _Symbol$dispose, _Symbol2, _Symbol2$asyncDispose;\n(_Symbol$dispose = (_Symbol = Symbol).dispose) !== null && _Symbol$dispose !== void 0 || (_Symbol.dispose = Symbol());\n(_Symbol2$asyncDispose = (_Symbol2 = Symbol).asyncDispose) !== null && _Symbol2$asyncDispose !== void 0 || (_Symbol2.asyncDispose = Symbol());\n/**\n* Takes a value and a dispose function and returns a new object that implements the Disposable interface.\n* The returned object is the original value augmented with a Symbol.dispose method.\n* @param thing The value to make disposable\n* @param dispose Function to call when disposing the resource\n* @returns The original value with Symbol.dispose method added\n*/\nfunction makeResource(thing, dispose) {\n\tconst it = thing;\n\tconst existing = it[Symbol.dispose];\n\tit[Symbol.dispose] = () => {\n\t\tdispose();\n\t\texisting === null || existing === void 0 || existing();\n\t};\n\treturn it;\n}\n/**\n* Takes a value and an async dispose function and returns a new object that implements the AsyncDisposable interface.\n* The returned object is the original value augmented with a Symbol.asyncDispose method.\n* @param thing The value to make async disposable\n* @param dispose Async function to call when disposing the resource\n* @returns The original value with Symbol.asyncDispose method added\n*/\nfunction makeAsyncResource(thing, dispose) {\n\tconst it = thing;\n\tconst existing = it[Symbol.asyncDispose];\n\tit[Symbol.asyncDispose] = async () => {\n\t\tawait dispose();\n\t\tawait (existing === null || existing === void 0 ? void 0 : existing());\n\t};\n\treturn it;\n}\n\n//#endregion\n//#region src/unstable-core-do-not-import/stream/utils/timerResource.ts\nconst disposablePromiseTimerResult = Symbol();\nfunction timerResource(ms) {\n\tlet timer = null;\n\treturn makeResource({ start() {\n\t\tif (timer) throw new Error(\"Timer already started\");\n\t\tconst promise = new Promise((resolve) => {\n\t\t\ttimer = setTimeout(() => resolve(disposablePromiseTimerResult), ms);\n\t\t});\n\t\treturn promise;\n\t} }, () => {\n\t\tif (timer) clearTimeout(timer);\n\t});\n}\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/usingCtx.js\nvar require_usingCtx = __commonJS({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/usingCtx.js\"(exports, module) {\n\tfunction _usingCtx() {\n\t\tvar r = \"function\" == typeof SuppressedError ? SuppressedError : function(r$1, e$1) {\n\t\t\tvar n$1 = Error();\n\t\t\treturn n$1.name = \"SuppressedError\", n$1.error = r$1, n$1.suppressed = e$1, n$1;\n\t\t}, e = {}, n = [];\n\t\tfunction using(r$1, e$1) {\n\t\t\tif (null != e$1) {\n\t\t\t\tif (Object(e$1) !== e$1) throw new TypeError(\"using declarations can only be used with objects, functions, null, or undefined.\");\n\t\t\t\tif (r$1) var o = e$1[Symbol.asyncDispose || Symbol[\"for\"](\"Symbol.asyncDispose\")];\n\t\t\t\tif (void 0 === o && (o = e$1[Symbol.dispose || Symbol[\"for\"](\"Symbol.dispose\")], r$1)) var t = o;\n\t\t\t\tif (\"function\" != typeof o) throw new TypeError(\"Object is not disposable.\");\n\t\t\t\tt && (o = function o$1() {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tt.call(e$1);\n\t\t\t\t\t} catch (r$2) {\n\t\t\t\t\t\treturn Promise.reject(r$2);\n\t\t\t\t\t}\n\t\t\t\t}), n.push({\n\t\t\t\t\tv: e$1,\n\t\t\t\t\td: o,\n\t\t\t\t\ta: r$1\n\t\t\t\t});\n\t\t\t} else r$1 && n.push({\n\t\t\t\td: e$1,\n\t\t\t\ta: r$1\n\t\t\t});\n\t\t\treturn e$1;\n\t\t}\n\t\treturn {\n\t\t\te,\n\t\t\tu: using.bind(null, !1),\n\t\t\ta: using.bind(null, !0),\n\t\t\td: function d() {\n\t\t\t\tvar o, t = this.e, s = 0;\n\t\t\t\tfunction next() {\n\t\t\t\t\tfor (; o = n.pop();) try {\n\t\t\t\t\t\tif (!o.a && 1 === s) return s = 0, n.push(o), Promise.resolve().then(next);\n\t\t\t\t\t\tif (o.d) {\n\t\t\t\t\t\t\tvar r$1 = o.d.call(o.v);\n\t\t\t\t\t\t\tif (o.a) return s |= 2, Promise.resolve(r$1).then(next, err);\n\t\t\t\t\t\t} else s |= 1;\n\t\t\t\t\t} catch (r$2) {\n\t\t\t\t\t\treturn err(r$2);\n\t\t\t\t\t}\n\t\t\t\t\tif (1 === s) return t !== e ? Promise.reject(t) : Promise.resolve();\n\t\t\t\t\tif (t !== e) throw t;\n\t\t\t\t}\n\t\t\t\tfunction err(n$1) {\n\t\t\t\t\treturn t = t !== e ? new r(n$1, t) : n$1, next();\n\t\t\t\t}\n\t\t\t\treturn next();\n\t\t\t}\n\t\t};\n\t}\n\tmodule.exports = _usingCtx, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/OverloadYield.js\nvar require_OverloadYield = __commonJS({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/OverloadYield.js\"(exports, module) {\n\tfunction _OverloadYield(e, d) {\n\t\tthis.v = e, this.k = d;\n\t}\n\tmodule.exports = _OverloadYield, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/awaitAsyncGenerator.js\nvar require_awaitAsyncGenerator = __commonJS({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/awaitAsyncGenerator.js\"(exports, module) {\n\tvar OverloadYield$2 = require_OverloadYield();\n\tfunction _awaitAsyncGenerator$5(e) {\n\t\treturn new OverloadYield$2(e, 0);\n\t}\n\tmodule.exports = _awaitAsyncGenerator$5, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/wrapAsyncGenerator.js\nvar require_wrapAsyncGenerator = __commonJS({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/wrapAsyncGenerator.js\"(exports, module) {\n\tvar OverloadYield$1 = require_OverloadYield();\n\tfunction _wrapAsyncGenerator$6(e) {\n\t\treturn function() {\n\t\t\treturn new AsyncGenerator(e.apply(this, arguments));\n\t\t};\n\t}\n\tfunction AsyncGenerator(e) {\n\t\tvar r, t;\n\t\tfunction resume(r$1, t$1) {\n\t\t\ttry {\n\t\t\t\tvar n = e[r$1](t$1), o = n.value, u = o instanceof OverloadYield$1;\n\t\t\t\tPromise.resolve(u ? o.v : o).then(function(t$2) {\n\t\t\t\t\tif (u) {\n\t\t\t\t\t\tvar i = \"return\" === r$1 ? \"return\" : \"next\";\n\t\t\t\t\t\tif (!o.k || t$2.done) return resume(i, t$2);\n\t\t\t\t\t\tt$2 = e[i](t$2).value;\n\t\t\t\t\t}\n\t\t\t\t\tsettle(n.done ? \"return\" : \"normal\", t$2);\n\t\t\t\t}, function(e$1) {\n\t\t\t\t\tresume(\"throw\", e$1);\n\t\t\t\t});\n\t\t\t} catch (e$1) {\n\t\t\t\tsettle(\"throw\", e$1);\n\t\t\t}\n\t\t}\n\t\tfunction settle(e$1, n) {\n\t\t\tswitch (e$1) {\n\t\t\t\tcase \"return\":\n\t\t\t\t\tr.resolve({\n\t\t\t\t\t\tvalue: n,\n\t\t\t\t\t\tdone: !0\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"throw\":\n\t\t\t\t\tr.reject(n);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault: r.resolve({\n\t\t\t\t\tvalue: n,\n\t\t\t\t\tdone: !1\n\t\t\t\t});\n\t\t\t}\n\t\t\t(r = r.next) ? resume(r.key, r.arg) : t = null;\n\t\t}\n\t\tthis._invoke = function(e$1, n) {\n\t\t\treturn new Promise(function(o, u) {\n\t\t\t\tvar i = {\n\t\t\t\t\tkey: e$1,\n\t\t\t\t\targ: n,\n\t\t\t\t\tresolve: o,\n\t\t\t\t\treject: u,\n\t\t\t\t\tnext: null\n\t\t\t\t};\n\t\t\t\tt ? t = t.next = i : (r = t = i, resume(e$1, n));\n\t\t\t});\n\t\t}, \"function\" != typeof e[\"return\"] && (this[\"return\"] = void 0);\n\t}\n\tAsyncGenerator.prototype[\"function\" == typeof Symbol && Symbol.asyncIterator || \"@@asyncIterator\"] = function() {\n\t\treturn this;\n\t}, AsyncGenerator.prototype.next = function(e) {\n\t\treturn this._invoke(\"next\", e);\n\t}, AsyncGenerator.prototype[\"throw\"] = function(e) {\n\t\treturn this._invoke(\"throw\", e);\n\t}, AsyncGenerator.prototype[\"return\"] = function(e) {\n\t\treturn this._invoke(\"return\", e);\n\t};\n\tmodule.exports = _wrapAsyncGenerator$6, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region src/unstable-core-do-not-import/stream/utils/asyncIterable.ts\nvar import_usingCtx$4 = __toESM(require_usingCtx(), 1);\nvar import_awaitAsyncGenerator$4 = __toESM(require_awaitAsyncGenerator(), 1);\nvar import_wrapAsyncGenerator$5 = __toESM(require_wrapAsyncGenerator(), 1);\nfunction iteratorResource(iterable) {\n\tconst iterator = iterable[Symbol.asyncIterator]();\n\tif (iterator[Symbol.asyncDispose]) return iterator;\n\treturn makeAsyncResource(iterator, async () => {\n\t\tvar _iterator$return;\n\t\tawait ((_iterator$return = iterator.return) === null || _iterator$return === void 0 ? void 0 : _iterator$return.call(iterator));\n\t});\n}\n/**\n* Derives a new {@link AsyncGenerator} based on {@link iterable}, that automatically aborts after the specified duration.\n*/\nfunction withMaxDuration(_x, _x2) {\n\treturn _withMaxDuration.apply(this, arguments);\n}\nfunction _withMaxDuration() {\n\t_withMaxDuration = (0, import_wrapAsyncGenerator$5.default)(function* (iterable, opts) {\n\t\ttry {\n\t\t\tvar _usingCtx$1 = (0, import_usingCtx$4.default)();\n\t\t\tconst iterator = _usingCtx$1.a(iteratorResource(iterable));\n\t\t\tconst timer = _usingCtx$1.u(timerResource(opts.maxDurationMs));\n\t\t\tconst timerPromise = timer.start();\n\t\t\tlet result;\n\t\t\twhile (true) {\n\t\t\t\tresult = yield (0, import_awaitAsyncGenerator$4.default)(Unpromise.race([iterator.next(), timerPromise]));\n\t\t\t\tif (result === disposablePromiseTimerResult) throwAbortError();\n\t\t\t\tif (result.done) return result;\n\t\t\t\tyield result.value;\n\t\t\t\tresult = null;\n\t\t\t}\n\t\t} catch (_) {\n\t\t\t_usingCtx$1.e = _;\n\t\t} finally {\n\t\t\tyield (0, import_awaitAsyncGenerator$4.default)(_usingCtx$1.d());\n\t\t}\n\t});\n\treturn _withMaxDuration.apply(this, arguments);\n}\n/**\n* Derives a new {@link AsyncGenerator} based of {@link iterable}, that yields its first\n* {@link count} values. Then, a grace period of {@link gracePeriodMs} is started in which further\n* values may still come through. After this period, the generator aborts.\n*/\nfunction takeWithGrace(_x3, _x4) {\n\treturn _takeWithGrace.apply(this, arguments);\n}\nfunction _takeWithGrace() {\n\t_takeWithGrace = (0, import_wrapAsyncGenerator$5.default)(function* (iterable, opts) {\n\t\ttry {\n\t\t\tvar _usingCtx3 = (0, import_usingCtx$4.default)();\n\t\t\tconst iterator = _usingCtx3.a(iteratorResource(iterable));\n\t\t\tlet result;\n\t\t\tconst timer = _usingCtx3.u(timerResource(opts.gracePeriodMs));\n\t\t\tlet count = opts.count;\n\t\t\tlet timerPromise = new Promise(() => {});\n\t\t\twhile (true) {\n\t\t\t\tresult = yield (0, import_awaitAsyncGenerator$4.default)(Unpromise.race([iterator.next(), timerPromise]));\n\t\t\t\tif (result === disposablePromiseTimerResult) throwAbortError();\n\t\t\t\tif (result.done) return result.value;\n\t\t\t\tyield result.value;\n\t\t\t\tif (--count === 0) timerPromise = timer.start();\n\t\t\t\tresult = null;\n\t\t\t}\n\t\t} catch (_) {\n\t\t\t_usingCtx3.e = _;\n\t\t} finally {\n\t\t\tyield (0, import_awaitAsyncGenerator$4.default)(_usingCtx3.d());\n\t\t}\n\t});\n\treturn _takeWithGrace.apply(this, arguments);\n}\n\n//#endregion\n//#region src/unstable-core-do-not-import/stream/utils/createDeferred.ts\nfunction createDeferred() {\n\tlet resolve;\n\tlet reject;\n\tconst promise = new Promise((res, rej) => {\n\t\tresolve = res;\n\t\treject = rej;\n\t});\n\treturn {\n\t\tpromise,\n\t\tresolve,\n\t\treject\n\t};\n}\n\n//#endregion\n//#region src/unstable-core-do-not-import/stream/utils/mergeAsyncIterables.ts\nvar import_usingCtx$3 = __toESM(require_usingCtx(), 1);\nvar import_awaitAsyncGenerator$3 = __toESM(require_awaitAsyncGenerator(), 1);\nvar import_wrapAsyncGenerator$4 = __toESM(require_wrapAsyncGenerator(), 1);\nfunction createManagedIterator(iterable, onResult) {\n\tconst iterator = iterable[Symbol.asyncIterator]();\n\tlet state = \"idle\";\n\tfunction cleanup() {\n\t\tstate = \"done\";\n\t\tonResult = () => {};\n\t}\n\tfunction pull() {\n\t\tif (state !== \"idle\") return;\n\t\tstate = \"pending\";\n\t\tconst next = iterator.next();\n\t\tnext.then((result) => {\n\t\t\tif (result.done) {\n\t\t\t\tstate = \"done\";\n\t\t\t\tonResult({\n\t\t\t\t\tstatus: \"return\",\n\t\t\t\t\tvalue: result.value\n\t\t\t\t});\n\t\t\t\tcleanup();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tstate = \"idle\";\n\t\t\tonResult({\n\t\t\t\tstatus: \"yield\",\n\t\t\t\tvalue: result.value\n\t\t\t});\n\t\t}).catch((cause) => {\n\t\t\tonResult({\n\t\t\t\tstatus: \"error\",\n\t\t\t\terror: cause\n\t\t\t});\n\t\t\tcleanup();\n\t\t});\n\t}\n\treturn {\n\t\tpull,\n\t\tdestroy: async () => {\n\t\t\tvar _iterator$return;\n\t\t\tcleanup();\n\t\t\tawait ((_iterator$return = iterator.return) === null || _iterator$return === void 0 ? void 0 : _iterator$return.call(iterator));\n\t\t}\n\t};\n}\n/**\n* Creates a new async iterable that merges multiple async iterables into a single stream.\n* Values from the input iterables are yielded in the order they resolve, similar to Promise.race().\n*\n* New iterables can be added dynamically using the returned {@link MergedAsyncIterables.add} method, even after iteration has started.\n*\n* If any of the input iterables throws an error, that error will be propagated through the merged stream.\n* Other iterables will not continue to be processed.\n*\n* @template TYield The type of values yielded by the input iterables\n*/\nfunction mergeAsyncIterables() {\n\tlet state = \"idle\";\n\tlet flushSignal = createDeferred();\n\t/**\n\t* used while {@link state} is `idle`\n\t*/\n\tconst iterables = [];\n\t/**\n\t* used while {@link state} is `pending`\n\t*/\n\tconst iterators = /* @__PURE__ */ new Set();\n\tconst buffer = [];\n\tfunction initIterable(iterable) {\n\t\tif (state !== \"pending\") return;\n\t\tconst iterator = createManagedIterator(iterable, (result) => {\n\t\t\tif (state !== \"pending\") return;\n\t\t\tswitch (result.status) {\n\t\t\t\tcase \"yield\":\n\t\t\t\t\tbuffer.push([iterator, result]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"return\":\n\t\t\t\t\titerators.delete(iterator);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"error\":\n\t\t\t\t\tbuffer.push([iterator, result]);\n\t\t\t\t\titerators.delete(iterator);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tflushSignal.resolve();\n\t\t});\n\t\titerators.add(iterator);\n\t\titerator.pull();\n\t}\n\treturn {\n\t\tadd(iterable) {\n\t\t\tswitch (state) {\n\t\t\t\tcase \"idle\":\n\t\t\t\t\titerables.push(iterable);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"pending\":\n\t\t\t\t\tinitIterable(iterable);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"done\": break;\n\t\t\t}\n\t\t},\n\t\t[Symbol.asyncIterator]() {\n\t\t\treturn (0, import_wrapAsyncGenerator$4.default)(function* () {\n\t\t\t\ttry {\n\t\t\t\t\tvar _usingCtx$1 = (0, import_usingCtx$3.default)();\n\t\t\t\t\tif (state !== \"idle\") throw new Error(\"Cannot iterate twice\");\n\t\t\t\t\tstate = \"pending\";\n\t\t\t\t\tconst _finally = _usingCtx$1.a(makeAsyncResource({}, async () => {\n\t\t\t\t\t\tstate = \"done\";\n\t\t\t\t\t\tconst errors = [];\n\t\t\t\t\t\tawait Promise.all(Array.from(iterators.values()).map(async (it) => {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tawait it.destroy();\n\t\t\t\t\t\t\t} catch (cause) {\n\t\t\t\t\t\t\t\terrors.push(cause);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}));\n\t\t\t\t\t\tbuffer.length = 0;\n\t\t\t\t\t\titerators.clear();\n\t\t\t\t\t\tflushSignal.resolve();\n\t\t\t\t\t\tif (errors.length > 0) throw new AggregateError(errors);\n\t\t\t\t\t}));\n\t\t\t\t\twhile (iterables.length > 0) initIterable(iterables.shift());\n\t\t\t\t\twhile (iterators.size > 0) {\n\t\t\t\t\t\tyield (0, import_awaitAsyncGenerator$3.default)(flushSignal.promise);\n\t\t\t\t\t\twhile (buffer.length > 0) {\n\t\t\t\t\t\t\tconst [iterator, result] = buffer.shift();\n\t\t\t\t\t\t\tswitch (result.status) {\n\t\t\t\t\t\t\t\tcase \"yield\":\n\t\t\t\t\t\t\t\t\tyield result.value;\n\t\t\t\t\t\t\t\t\titerator.pull();\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"error\": throw result.error;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tflushSignal = createDeferred();\n\t\t\t\t\t}\n\t\t\t\t} catch (_) {\n\t\t\t\t\t_usingCtx$1.e = _;\n\t\t\t\t} finally {\n\t\t\t\t\tyield (0, import_awaitAsyncGenerator$3.default)(_usingCtx$1.d());\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\t};\n}\n\n//#endregion\n//#region src/unstable-core-do-not-import/stream/utils/readableStreamFrom.ts\n/**\n* Creates a ReadableStream from an AsyncIterable.\n*\n* @param iterable - The source AsyncIterable to stream from\n* @returns A ReadableStream that yields values from the AsyncIterable\n*/\nfunction readableStreamFrom(iterable) {\n\tconst iterator = iterable[Symbol.asyncIterator]();\n\treturn new ReadableStream({\n\t\tasync cancel() {\n\t\t\tvar _iterator$return;\n\t\t\tawait ((_iterator$return = iterator.return) === null || _iterator$return === void 0 ? void 0 : _iterator$return.call(iterator));\n\t\t},\n\t\tasync pull(controller) {\n\t\t\tconst result = await iterator.next();\n\t\t\tif (result.done) {\n\t\t\t\tcontroller.close();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontroller.enqueue(result.value);\n\t\t}\n\t});\n}\n\n//#endregion\n//#region src/unstable-core-do-not-import/stream/utils/withPing.ts\nvar import_usingCtx$2 = __toESM(require_usingCtx(), 1);\nvar import_awaitAsyncGenerator$2 = __toESM(require_awaitAsyncGenerator(), 1);\nvar import_wrapAsyncGenerator$3 = __toESM(require_wrapAsyncGenerator(), 1);\nconst PING_SYM = Symbol(\"ping\");\n/**\n* Derives a new {@link AsyncGenerator} based of {@link iterable}, that yields {@link PING_SYM}\n* whenever no value has been yielded for {@link pingIntervalMs}.\n*/\nfunction withPing(_x, _x2) {\n\treturn _withPing.apply(this, arguments);\n}\nfunction _withPing() {\n\t_withPing = (0, import_wrapAsyncGenerator$3.default)(function* (iterable, pingIntervalMs) {\n\t\ttry {\n\t\t\tvar _usingCtx$1 = (0, import_usingCtx$2.default)();\n\t\t\tconst iterator = _usingCtx$1.a(iteratorResource(iterable));\n\t\t\tlet result;\n\t\t\tlet nextPromise = iterator.next();\n\t\t\twhile (true) try {\n\t\t\t\tvar _usingCtx3 = (0, import_usingCtx$2.default)();\n\t\t\t\tconst pingPromise = _usingCtx3.u(timerResource(pingIntervalMs));\n\t\t\t\tresult = yield (0, import_awaitAsyncGenerator$2.default)(Unpromise.race([nextPromise, pingPromise.start()]));\n\t\t\t\tif (result === disposablePromiseTimerResult) {\n\t\t\t\t\tyield PING_SYM;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (result.done) return result.value;\n\t\t\t\tnextPromise = iterator.next();\n\t\t\t\tyield result.value;\n\t\t\t\tresult = null;\n\t\t\t} catch (_) {\n\t\t\t\t_usingCtx3.e = _;\n\t\t\t} finally {\n\t\t\t\t_usingCtx3.d();\n\t\t\t}\n\t\t} catch (_) {\n\t\t\t_usingCtx$1.e = _;\n\t\t} finally {\n\t\t\tyield (0, import_awaitAsyncGenerator$2.default)(_usingCtx$1.d());\n\t\t}\n\t});\n\treturn _withPing.apply(this, arguments);\n}\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/asyncIterator.js\nvar require_asyncIterator = __commonJS({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/asyncIterator.js\"(exports, module) {\n\tfunction _asyncIterator$2(r) {\n\t\tvar n, t, o, e = 2;\n\t\tfor (\"undefined\" != typeof Symbol && (t = Symbol.asyncIterator, o = Symbol.iterator); e--;) {\n\t\t\tif (t && null != (n = r[t])) return n.call(r);\n\t\t\tif (o && null != (n = r[o])) return new AsyncFromSyncIterator(n.call(r));\n\t\t\tt = \"@@asyncIterator\", o = \"@@iterator\";\n\t\t}\n\t\tthrow new TypeError(\"Object is not async iterable\");\n\t}\n\tfunction AsyncFromSyncIterator(r) {\n\t\tfunction AsyncFromSyncIteratorContinuation(r$1) {\n\t\t\tif (Object(r$1) !== r$1) return Promise.reject(new TypeError(r$1 + \" is not an object.\"));\n\t\t\tvar n = r$1.done;\n\t\t\treturn Promise.resolve(r$1.value).then(function(r$2) {\n\t\t\t\treturn {\n\t\t\t\t\tvalue: r$2,\n\t\t\t\t\tdone: n\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\treturn AsyncFromSyncIterator = function AsyncFromSyncIterator$1(r$1) {\n\t\t\tthis.s = r$1, this.n = r$1.next;\n\t\t}, AsyncFromSyncIterator.prototype = {\n\t\t\ts: null,\n\t\t\tn: null,\n\t\t\tnext: function next() {\n\t\t\t\treturn AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));\n\t\t\t},\n\t\t\t\"return\": function _return(r$1) {\n\t\t\t\tvar n = this.s[\"return\"];\n\t\t\t\treturn void 0 === n ? Promise.resolve({\n\t\t\t\t\tvalue: r$1,\n\t\t\t\t\tdone: !0\n\t\t\t\t}) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments));\n\t\t\t},\n\t\t\t\"throw\": function _throw(r$1) {\n\t\t\t\tvar n = this.s[\"return\"];\n\t\t\t\treturn void 0 === n ? Promise.reject(r$1) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments));\n\t\t\t}\n\t\t}, new AsyncFromSyncIterator(r);\n\t}\n\tmodule.exports = _asyncIterator$2, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region src/unstable-core-do-not-import/stream/jsonl.ts\nvar import_awaitAsyncGenerator$1 = __toESM(require_awaitAsyncGenerator(), 1);\nvar import_wrapAsyncGenerator$2 = __toESM(require_wrapAsyncGenerator(), 1);\nvar import_usingCtx$1 = __toESM(require_usingCtx(), 1);\nvar import_asyncIterator$1 = __toESM(require_asyncIterator(), 1);\nfunction isPlainObject(value) {\n\treturn Object.prototype.toString.call(value) === \"[object Object]\";\n}\nconst CHUNK_VALUE_TYPE_PROMISE = 0;\nconst CHUNK_VALUE_TYPE_ASYNC_ITERABLE = 1;\nconst PROMISE_STATUS_FULFILLED = 0;\nconst PROMISE_STATUS_REJECTED = 1;\nconst ASYNC_ITERABLE_STATUS_RETURN = 0;\nconst ASYNC_ITERABLE_STATUS_YIELD = 1;\nconst ASYNC_ITERABLE_STATUS_ERROR = 2;\nfunction isPromise(value) {\n\treturn (isObject(value) || isFunction(value)) && typeof (value === null || value === void 0 ? void 0 : value[\"then\"]) === \"function\" && typeof (value === null || value === void 0 ? void 0 : value[\"catch\"]) === \"function\";\n}\nvar MaxDepthError = class extends Error {\n\tconstructor(path) {\n\t\tsuper(\"Max depth reached at path: \" + path.join(\".\"));\n\t\tthis.path = path;\n\t}\n};\nfunction createBatchStreamProducer(_x3) {\n\treturn _createBatchStreamProducer.apply(this, arguments);\n}\nfunction _createBatchStreamProducer() {\n\t_createBatchStreamProducer = (0, import_wrapAsyncGenerator$2.default)(function* (opts) {\n\t\tconst { data } = opts;\n\t\tlet counter = 0;\n\t\tconst placeholder = 0;\n\t\tconst mergedIterables = mergeAsyncIterables();\n\t\tfunction registerAsync(callback) {\n\t\t\tconst idx = counter++;\n\t\t\tconst iterable$1 = callback(idx);\n\t\t\tmergedIterables.add(iterable$1);\n\t\t\treturn idx;\n\t\t}\n\t\tfunction encodePromise(promise, path) {\n\t\t\treturn registerAsync(/* @__PURE__ */ function() {\n\t\t\t\tvar _ref = (0, import_wrapAsyncGenerator$2.default)(function* (idx) {\n\t\t\t\t\tconst error = checkMaxDepth(path);\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tpromise.catch((cause) => {\n\t\t\t\t\t\t\tvar _opts$onError;\n\t\t\t\t\t\t\t(_opts$onError = opts.onError) === null || _opts$onError === void 0 || _opts$onError.call(opts, {\n\t\t\t\t\t\t\t\terror: cause,\n\t\t\t\t\t\t\t\tpath\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t\tpromise = Promise.reject(error);\n\t\t\t\t\t}\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst next = yield (0, import_awaitAsyncGenerator$1.default)(promise);\n\t\t\t\t\t\tyield [\n\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\tPROMISE_STATUS_FULFILLED,\n\t\t\t\t\t\t\tencode(next, path)\n\t\t\t\t\t\t];\n\t\t\t\t\t} catch (cause) {\n\t\t\t\t\t\tvar _opts$onError2, _opts$formatError;\n\t\t\t\t\t\t(_opts$onError2 = opts.onError) === null || _opts$onError2 === void 0 || _opts$onError2.call(opts, {\n\t\t\t\t\t\t\terror: cause,\n\t\t\t\t\t\t\tpath\n\t\t\t\t\t\t});\n\t\t\t\t\t\tyield [\n\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\tPROMISE_STATUS_REJECTED,\n\t\t\t\t\t\t\t(_opts$formatError = opts.formatError) === null || _opts$formatError === void 0 ? void 0 : _opts$formatError.call(opts, {\n\t\t\t\t\t\t\t\terror: cause,\n\t\t\t\t\t\t\t\tpath\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn function(_x) {\n\t\t\t\t\treturn _ref.apply(this, arguments);\n\t\t\t\t};\n\t\t\t}());\n\t\t}\n\t\tfunction encodeAsyncIterable(iterable$1, path) {\n\t\t\treturn registerAsync(/* @__PURE__ */ function() {\n\t\t\t\tvar _ref2 = (0, import_wrapAsyncGenerator$2.default)(function* (idx) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar _usingCtx$1 = (0, import_usingCtx$1.default)();\n\t\t\t\t\t\tconst error = checkMaxDepth(path);\n\t\t\t\t\t\tif (error) throw error;\n\t\t\t\t\t\tconst iterator = _usingCtx$1.a(iteratorResource(iterable$1));\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t\t\tconst next = yield (0, import_awaitAsyncGenerator$1.default)(iterator.next());\n\t\t\t\t\t\t\t\tif (next.done) {\n\t\t\t\t\t\t\t\t\tyield [\n\t\t\t\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\t\t\t\tASYNC_ITERABLE_STATUS_RETURN,\n\t\t\t\t\t\t\t\t\t\tencode(next.value, path)\n\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tyield [\n\t\t\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\t\t\tASYNC_ITERABLE_STATUS_YIELD,\n\t\t\t\t\t\t\t\t\tencode(next.value, path)\n\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (cause) {\n\t\t\t\t\t\t\tvar _opts$onError3, _opts$formatError2;\n\t\t\t\t\t\t\t(_opts$onError3 = opts.onError) === null || _opts$onError3 === void 0 || _opts$onError3.call(opts, {\n\t\t\t\t\t\t\t\terror: cause,\n\t\t\t\t\t\t\t\tpath\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tyield [\n\t\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\t\tASYNC_ITERABLE_STATUS_ERROR,\n\t\t\t\t\t\t\t\t(_opts$formatError2 = opts.formatError) === null || _opts$formatError2 === void 0 ? void 0 : _opts$formatError2.call(opts, {\n\t\t\t\t\t\t\t\t\terror: cause,\n\t\t\t\t\t\t\t\t\tpath\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (_) {\n\t\t\t\t\t\t_usingCtx$1.e = _;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tyield (0, import_awaitAsyncGenerator$1.default)(_usingCtx$1.d());\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn function(_x2) {\n\t\t\t\t\treturn _ref2.apply(this, arguments);\n\t\t\t\t};\n\t\t\t}());\n\t\t}\n\t\tfunction checkMaxDepth(path) {\n\t\t\tif (opts.maxDepth && path.length > opts.maxDepth) return new MaxDepthError(path);\n\t\t\treturn null;\n\t\t}\n\t\tfunction encodeAsync(value, path) {\n\t\t\tif (isPromise(value)) return [CHUNK_VALUE_TYPE_PROMISE, encodePromise(value, path)];\n\t\t\tif (isAsyncIterable(value)) {\n\t\t\t\tif (opts.maxDepth && path.length >= opts.maxDepth) throw new Error(\"Max depth reached\");\n\t\t\t\treturn [CHUNK_VALUE_TYPE_ASYNC_ITERABLE, encodeAsyncIterable(value, path)];\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tfunction encode(value, path) {\n\t\t\tif (value === void 0) return [[]];\n\t\t\tconst reg = encodeAsync(value, path);\n\t\t\tif (reg) return [[placeholder], [null, ...reg]];\n\t\t\tif (!isPlainObject(value)) return [[value]];\n\t\t\tconst newObj = {};\n\t\t\tconst asyncValues = [];\n\t\t\tfor (const [key, item] of Object.entries(value)) {\n\t\t\t\tconst transformed = encodeAsync(item, [...path, key]);\n\t\t\t\tif (!transformed) {\n\t\t\t\t\tnewObj[key] = item;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tnewObj[key] = placeholder;\n\t\t\t\tasyncValues.push([key, ...transformed]);\n\t\t\t}\n\t\t\treturn [[newObj], ...asyncValues];\n\t\t}\n\t\tconst newHead = {};\n\t\tfor (const [key, item] of Object.entries(data)) newHead[key] = encode(item, [key]);\n\t\tyield newHead;\n\t\tlet iterable = mergedIterables;\n\t\tif (opts.pingMs) iterable = withPing(mergedIterables, opts.pingMs);\n\t\tvar _iteratorAbruptCompletion = false;\n\t\tvar _didIteratorError = false;\n\t\tvar _iteratorError;\n\t\ttry {\n\t\t\tfor (var _iterator = (0, import_asyncIterator$1.default)(iterable), _step; _iteratorAbruptCompletion = !(_step = yield (0, import_awaitAsyncGenerator$1.default)(_iterator.next())).done; _iteratorAbruptCompletion = false) {\n\t\t\t\tconst value = _step.value;\n\t\t\t\tyield value;\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t_didIteratorError = true;\n\t\t\t_iteratorError = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (_iteratorAbruptCompletion && _iterator.return != null) yield (0, import_awaitAsyncGenerator$1.default)(_iterator.return());\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError) throw _iteratorError;\n\t\t\t}\n\t\t}\n\t});\n\treturn _createBatchStreamProducer.apply(this, arguments);\n}\n/**\n* JSON Lines stream producer\n* @see https://jsonlines.org/\n*/\nfunction jsonlStreamProducer(opts) {\n\tlet stream = readableStreamFrom(createBatchStreamProducer(opts));\n\tconst { serialize } = opts;\n\tif (serialize) stream = stream.pipeThrough(new TransformStream({ transform(chunk, controller) {\n\t\tif (chunk === PING_SYM) controller.enqueue(PING_SYM);\n\t\telse controller.enqueue(serialize(chunk));\n\t} }));\n\treturn stream.pipeThrough(new TransformStream({ transform(chunk, controller) {\n\t\tif (chunk === PING_SYM) controller.enqueue(\" \");\n\t\telse controller.enqueue(JSON.stringify(chunk) + \"\\n\");\n\t} })).pipeThrough(new TextEncoderStream());\n}\nvar AsyncError = class extends Error {\n\tconstructor(data) {\n\t\tsuper(\"Received error from server\");\n\t\tthis.data = data;\n\t}\n};\nconst nodeJsStreamToReaderEsque = (source) => {\n\treturn { getReader() {\n\t\tconst stream = new ReadableStream({ start(controller) {\n\t\t\tsource.on(\"data\", (chunk) => {\n\t\t\t\tcontroller.enqueue(chunk);\n\t\t\t});\n\t\t\tsource.on(\"end\", () => {\n\t\t\t\tcontroller.close();\n\t\t\t});\n\t\t\tsource.on(\"error\", (error) => {\n\t\t\t\tcontroller.error(error);\n\t\t\t});\n\t\t} });\n\t\treturn stream.getReader();\n\t} };\n};\nfunction createLineAccumulator(from) {\n\tconst reader = \"getReader\" in from ? from.getReader() : nodeJsStreamToReaderEsque(from).getReader();\n\tlet lineAggregate = \"\";\n\treturn new ReadableStream({\n\t\tasync pull(controller) {\n\t\t\tconst { done, value } = await reader.read();\n\t\t\tif (done) controller.close();\n\t\t\telse controller.enqueue(value);\n\t\t},\n\t\tcancel() {\n\t\t\treturn reader.cancel();\n\t\t}\n\t}).pipeThrough(new TextDecoderStream()).pipeThrough(new TransformStream({ transform(chunk, controller) {\n\t\tvar _parts$pop;\n\t\tlineAggregate += chunk;\n\t\tconst parts = lineAggregate.split(\"\\n\");\n\t\tlineAggregate = (_parts$pop = parts.pop()) !== null && _parts$pop !== void 0 ? _parts$pop : \"\";\n\t\tfor (const part of parts) controller.enqueue(part);\n\t} }));\n}\nfunction createConsumerStream(from) {\n\tconst stream = createLineAccumulator(from);\n\tlet sentHead = false;\n\treturn stream.pipeThrough(new TransformStream({ transform(line, controller) {\n\t\tif (!sentHead) {\n\t\t\tconst head = JSON.parse(line);\n\t\t\tcontroller.enqueue(head);\n\t\t\tsentHead = true;\n\t\t} else {\n\t\t\tconst chunk = JSON.parse(line);\n\t\t\tcontroller.enqueue(chunk);\n\t\t}\n\t} }));\n}\n/**\n* Creates a handler for managing stream controllers and their lifecycle\n*/\nfunction createStreamsManager(abortController) {\n\tconst controllerMap = /* @__PURE__ */ new Map();\n\t/**\n\t* Checks if there are no pending controllers or deferred promises\n\t*/\n\tfunction isEmpty() {\n\t\treturn Array.from(controllerMap.values()).every((c) => c.closed);\n\t}\n\t/**\n\t* Creates a stream controller\n\t*/\n\tfunction createStreamController() {\n\t\tlet originalController;\n\t\tconst stream = new ReadableStream({ start(controller) {\n\t\t\toriginalController = controller;\n\t\t} });\n\t\tconst streamController = {\n\t\t\tenqueue: (v) => originalController.enqueue(v),\n\t\t\tclose: () => {\n\t\t\t\toriginalController.close();\n\t\t\t\tclear();\n\t\t\t\tif (isEmpty()) abortController.abort();\n\t\t\t},\n\t\t\tclosed: false,\n\t\t\tgetReaderResource: () => {\n\t\t\t\tconst reader = stream.getReader();\n\t\t\t\treturn makeResource(reader, () => {\n\t\t\t\t\treader.releaseLock();\n\t\t\t\t\tstreamController.close();\n\t\t\t\t});\n\t\t\t},\n\t\t\terror: (reason) => {\n\t\t\t\toriginalController.error(reason);\n\t\t\t\tclear();\n\t\t\t}\n\t\t};\n\t\tfunction clear() {\n\t\t\tObject.assign(streamController, {\n\t\t\t\tclosed: true,\n\t\t\t\tclose: () => {},\n\t\t\t\tenqueue: () => {},\n\t\t\t\tgetReaderResource: null,\n\t\t\t\terror: () => {}\n\t\t\t});\n\t\t}\n\t\treturn streamController;\n\t}\n\t/**\n\t* Gets or creates a stream controller\n\t*/\n\tfunction getOrCreate(chunkId) {\n\t\tlet c = controllerMap.get(chunkId);\n\t\tif (!c) {\n\t\t\tc = createStreamController();\n\t\t\tcontrollerMap.set(chunkId, c);\n\t\t}\n\t\treturn c;\n\t}\n\t/**\n\t* Cancels all pending controllers and rejects deferred promises\n\t*/\n\tfunction cancelAll(reason) {\n\t\tfor (const controller of controllerMap.values()) controller.error(reason);\n\t}\n\treturn {\n\t\tgetOrCreate,\n\t\tisEmpty,\n\t\tcancelAll\n\t};\n}\n/**\n* JSON Lines stream consumer\n* @see https://jsonlines.org/\n*/\nasync function jsonlStreamConsumer(opts) {\n\tconst { deserialize = (v) => v } = opts;\n\tlet source = createConsumerStream(opts.from);\n\tif (deserialize) source = source.pipeThrough(new TransformStream({ transform(chunk, controller) {\n\t\tcontroller.enqueue(deserialize(chunk));\n\t} }));\n\tlet headDeferred = createDeferred();\n\tconst streamManager = createStreamsManager(opts.abortController);\n\tfunction decodeChunkDefinition(value) {\n\t\tconst [_path, type, chunkId] = value;\n\t\tconst controller = streamManager.getOrCreate(chunkId);\n\t\tswitch (type) {\n\t\t\tcase CHUNK_VALUE_TYPE_PROMISE: return run(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tvar _usingCtx3 = (0, import_usingCtx$1.default)();\n\t\t\t\t\tconst reader = _usingCtx3.u(controller.getReaderResource());\n\t\t\t\t\tconst { value: value$1 } = await reader.read();\n\t\t\t\t\tconst [_chunkId, status, data] = value$1;\n\t\t\t\t\tswitch (status) {\n\t\t\t\t\t\tcase PROMISE_STATUS_FULFILLED: return decode(data);\n\t\t\t\t\t\tcase PROMISE_STATUS_REJECTED:\n\t\t\t\t\t\t\tvar _opts$formatError3, _opts$formatError4;\n\t\t\t\t\t\t\tthrow (_opts$formatError3 = (_opts$formatError4 = opts.formatError) === null || _opts$formatError4 === void 0 ? void 0 : _opts$formatError4.call(opts, { error: data })) !== null && _opts$formatError3 !== void 0 ? _opts$formatError3 : new AsyncError(data);\n\t\t\t\t\t}\n\t\t\t\t} catch (_) {\n\t\t\t\t\t_usingCtx3.e = _;\n\t\t\t\t} finally {\n\t\t\t\t\t_usingCtx3.d();\n\t\t\t\t}\n\t\t\t});\n\t\t\tcase CHUNK_VALUE_TYPE_ASYNC_ITERABLE: return run((0, import_wrapAsyncGenerator$2.default)(function* () {\n\t\t\t\ttry {\n\t\t\t\t\tvar _usingCtx4 = (0, import_usingCtx$1.default)();\n\t\t\t\t\tconst reader = _usingCtx4.u(controller.getReaderResource());\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tconst { value: value$1 } = yield (0, import_awaitAsyncGenerator$1.default)(reader.read());\n\t\t\t\t\t\tconst [_chunkId, status, data] = value$1;\n\t\t\t\t\t\tswitch (status) {\n\t\t\t\t\t\t\tcase ASYNC_ITERABLE_STATUS_YIELD:\n\t\t\t\t\t\t\t\tyield decode(data);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase ASYNC_ITERABLE_STATUS_RETURN: return decode(data);\n\t\t\t\t\t\t\tcase ASYNC_ITERABLE_STATUS_ERROR:\n\t\t\t\t\t\t\t\tvar _opts$formatError5, _opts$formatError6;\n\t\t\t\t\t\t\t\tthrow (_opts$formatError5 = (_opts$formatError6 = opts.formatError) === null || _opts$formatError6 === void 0 ? void 0 : _opts$formatError6.call(opts, { error: data })) !== null && _opts$formatError5 !== void 0 ? _opts$formatError5 : new AsyncError(data);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (_) {\n\t\t\t\t\t_usingCtx4.e = _;\n\t\t\t\t} finally {\n\t\t\t\t\t_usingCtx4.d();\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\tfunction decode(value) {\n\t\tconst [[data], ...asyncProps] = value;\n\t\tfor (const value$1 of asyncProps) {\n\t\t\tconst [key] = value$1;\n\t\t\tconst decoded = decodeChunkDefinition(value$1);\n\t\t\tif (key === null) return decoded;\n\t\t\tdata[key] = decoded;\n\t\t}\n\t\treturn data;\n\t}\n\tconst closeOrAbort = (reason) => {\n\t\theadDeferred === null || headDeferred === void 0 || headDeferred.reject(reason);\n\t\tstreamManager.cancelAll(reason);\n\t};\n\tsource.pipeTo(new WritableStream({\n\t\twrite(chunkOrHead) {\n\t\t\tif (headDeferred) {\n\t\t\t\tconst head = chunkOrHead;\n\t\t\t\tfor (const [key, value] of Object.entries(chunkOrHead)) {\n\t\t\t\t\tconst parsed = decode(value);\n\t\t\t\t\thead[key] = parsed;\n\t\t\t\t}\n\t\t\t\theadDeferred.resolve(head);\n\t\t\t\theadDeferred = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst chunk = chunkOrHead;\n\t\t\tconst [idx] = chunk;\n\t\t\tconst controller = streamManager.getOrCreate(idx);\n\t\t\tcontroller.enqueue(chunk);\n\t\t},\n\t\tclose: () => closeOrAbort(new Error(\"Stream closed\")),\n\t\tabort: closeOrAbort\n\t}), { signal: opts.abortController.signal }).catch((error) => {\n\t\tvar _opts$onError4;\n\t\t(_opts$onError4 = opts.onError) === null || _opts$onError4 === void 0 || _opts$onError4.call(opts, { error });\n\t\tcloseOrAbort(error);\n\t});\n\treturn [await headDeferred.promise, streamManager];\n}\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/asyncGeneratorDelegate.js\nvar require_asyncGeneratorDelegate = __commonJS({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/asyncGeneratorDelegate.js\"(exports, module) {\n\tvar OverloadYield = require_OverloadYield();\n\tfunction _asyncGeneratorDelegate$1(t) {\n\t\tvar e = {}, n = !1;\n\t\tfunction pump(e$1, r) {\n\t\t\treturn n = !0, r = new Promise(function(n$1) {\n\t\t\t\tn$1(t[e$1](r));\n\t\t\t}), {\n\t\t\t\tdone: !1,\n\t\t\t\tvalue: new OverloadYield(r, 1)\n\t\t\t};\n\t\t}\n\t\treturn e[\"undefined\" != typeof Symbol && Symbol.iterator || \"@@iterator\"] = function() {\n\t\t\treturn this;\n\t\t}, e.next = function(t$1) {\n\t\t\treturn n ? (n = !1, t$1) : pump(\"next\", t$1);\n\t\t}, \"function\" == typeof t[\"throw\"] && (e[\"throw\"] = function(t$1) {\n\t\t\tif (n) throw n = !1, t$1;\n\t\t\treturn pump(\"throw\", t$1);\n\t\t}), \"function\" == typeof t[\"return\"] && (e[\"return\"] = function(t$1) {\n\t\t\treturn n ? (n = !1, t$1) : pump(\"return\", t$1);\n\t\t}), e;\n\t}\n\tmodule.exports = _asyncGeneratorDelegate$1, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region src/unstable-core-do-not-import/stream/sse.ts\nvar import_asyncIterator = __toESM(require_asyncIterator(), 1);\nvar import_awaitAsyncGenerator = __toESM(require_awaitAsyncGenerator(), 1);\nvar import_wrapAsyncGenerator$1 = __toESM(require_wrapAsyncGenerator(), 1);\nvar import_asyncGeneratorDelegate = __toESM(require_asyncGeneratorDelegate(), 1);\nvar import_usingCtx = __toESM(require_usingCtx(), 1);\nconst PING_EVENT = \"ping\";\nconst SERIALIZED_ERROR_EVENT = \"serialized-error\";\nconst CONNECTED_EVENT = \"connected\";\nconst RETURN_EVENT = \"return\";\n/**\n*\n* @see https://html.spec.whatwg.org/multipage/server-sent-events.html\n*/\nfunction sseStreamProducer(opts) {\n\tvar _opts$ping$enabled, _opts$ping, _opts$ping$intervalMs, _opts$ping2, _opts$client;\n\tconst { serialize = identity } = opts;\n\tconst ping = {\n\t\tenabled: (_opts$ping$enabled = (_opts$ping = opts.ping) === null || _opts$ping === void 0 ? void 0 : _opts$ping.enabled) !== null && _opts$ping$enabled !== void 0 ? _opts$ping$enabled : false,\n\t\tintervalMs: (_opts$ping$intervalMs = (_opts$ping2 = opts.ping) === null || _opts$ping2 === void 0 ? void 0 : _opts$ping2.intervalMs) !== null && _opts$ping$intervalMs !== void 0 ? _opts$ping$intervalMs : 1e3\n\t};\n\tconst client = (_opts$client = opts.client) !== null && _opts$client !== void 0 ? _opts$client : {};\n\tif (ping.enabled && client.reconnectAfterInactivityMs && ping.intervalMs > client.reconnectAfterInactivityMs) throw new Error(`Ping interval must be less than client reconnect interval to prevent unnecessary reconnection - ping.intervalMs: ${ping.intervalMs} client.reconnectAfterInactivityMs: ${client.reconnectAfterInactivityMs}`);\n\tfunction generator() {\n\t\treturn _generator.apply(this, arguments);\n\t}\n\tfunction _generator() {\n\t\t_generator = (0, import_wrapAsyncGenerator$1.default)(function* () {\n\t\t\tyield {\n\t\t\t\tevent: CONNECTED_EVENT,\n\t\t\t\tdata: JSON.stringify(client)\n\t\t\t};\n\t\t\tlet iterable = opts.data;\n\t\t\tif (opts.emitAndEndImmediately) iterable = takeWithGrace(iterable, {\n\t\t\t\tcount: 1,\n\t\t\t\tgracePeriodMs: 1\n\t\t\t});\n\t\t\tif (opts.maxDurationMs && opts.maxDurationMs > 0 && opts.maxDurationMs !== Infinity) iterable = withMaxDuration(iterable, { maxDurationMs: opts.maxDurationMs });\n\t\t\tif (ping.enabled && ping.intervalMs !== Infinity && ping.intervalMs > 0) iterable = withPing(iterable, ping.intervalMs);\n\t\t\tlet value;\n\t\t\tlet chunk;\n\t\t\tvar _iteratorAbruptCompletion = false;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError;\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = (0, import_asyncIterator.default)(iterable), _step; _iteratorAbruptCompletion = !(_step = yield (0, import_awaitAsyncGenerator.default)(_iterator.next())).done; _iteratorAbruptCompletion = false) {\n\t\t\t\t\tvalue = _step.value;\n\t\t\t\t\t{\n\t\t\t\t\t\tif (value === PING_SYM) {\n\t\t\t\t\t\t\tyield {\n\t\t\t\t\t\t\t\tevent: PING_EVENT,\n\t\t\t\t\t\t\t\tdata: \"\"\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchunk = isTrackedEnvelope(value) ? {\n\t\t\t\t\t\t\tid: value[0],\n\t\t\t\t\t\t\tdata: value[1]\n\t\t\t\t\t\t} : { data: value };\n\t\t\t\t\t\tchunk.data = JSON.stringify(serialize(chunk.data));\n\t\t\t\t\t\tyield chunk;\n\t\t\t\t\t\tvalue = null;\n\t\t\t\t\t\tchunk = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (_iteratorAbruptCompletion && _iterator.return != null) yield (0, import_awaitAsyncGenerator.default)(_iterator.return());\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) throw _iteratorError;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn _generator.apply(this, arguments);\n\t}\n\tfunction generatorWithErrorHandling() {\n\t\treturn _generatorWithErrorHandling.apply(this, arguments);\n\t}\n\tfunction _generatorWithErrorHandling() {\n\t\t_generatorWithErrorHandling = (0, import_wrapAsyncGenerator$1.default)(function* () {\n\t\t\ttry {\n\t\t\t\tyield* (0, import_asyncGeneratorDelegate.default)((0, import_asyncIterator.default)(generator()));\n\t\t\t\tyield {\n\t\t\t\t\tevent: RETURN_EVENT,\n\t\t\t\t\tdata: \"\"\n\t\t\t\t};\n\t\t\t} catch (cause) {\n\t\t\t\tvar _opts$formatError, _opts$formatError2;\n\t\t\t\tif (isAbortError(cause)) return;\n\t\t\t\tconst error = getTRPCErrorFromUnknown(cause);\n\t\t\t\tconst data = (_opts$formatError = (_opts$formatError2 = opts.formatError) === null || _opts$formatError2 === void 0 ? void 0 : _opts$formatError2.call(opts, { error })) !== null && _opts$formatError !== void 0 ? _opts$formatError : null;\n\t\t\t\tyield {\n\t\t\t\t\tevent: SERIALIZED_ERROR_EVENT,\n\t\t\t\t\tdata: JSON.stringify(serialize(data))\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t\treturn _generatorWithErrorHandling.apply(this, arguments);\n\t}\n\tconst stream = readableStreamFrom(generatorWithErrorHandling());\n\treturn stream.pipeThrough(new TransformStream({ transform(chunk, controller) {\n\t\tif (\"event\" in chunk) controller.enqueue(`event: ${chunk.event}\\n`);\n\t\tif (\"data\" in chunk) controller.enqueue(`data: ${chunk.data}\\n`);\n\t\tif (\"id\" in chunk) controller.enqueue(`id: ${chunk.id}\\n`);\n\t\tif (\"comment\" in chunk) controller.enqueue(`: ${chunk.comment}\\n`);\n\t\tcontroller.enqueue(\"\\n\\n\");\n\t} })).pipeThrough(new TextEncoderStream());\n}\nasync function withTimeout(opts) {\n\ttry {\n\t\tvar _usingCtx$1 = (0, import_usingCtx.default)();\n\t\tconst timeoutPromise = _usingCtx$1.u(timerResource(opts.timeoutMs));\n\t\tconst res = await Unpromise.race([opts.promise, timeoutPromise.start()]);\n\t\tif (res === disposablePromiseTimerResult) return await opts.onTimeout();\n\t\treturn res;\n\t} catch (_) {\n\t\t_usingCtx$1.e = _;\n\t} finally {\n\t\t_usingCtx$1.d();\n\t}\n}\n/**\n* @see https://html.spec.whatwg.org/multipage/server-sent-events.html\n*/\nfunction sseStreamConsumer(opts) {\n\tconst { deserialize = (v) => v } = opts;\n\tlet clientOptions = {};\n\tconst signal = opts.signal;\n\tlet _es = null;\n\tconst createStream = () => new ReadableStream({\n\t\tasync start(controller) {\n\t\t\tconst [url, init] = await Promise.all([opts.url(), opts.init()]);\n\t\t\tconst eventSource = _es = new opts.EventSource(url, init);\n\t\t\tcontroller.enqueue({\n\t\t\t\ttype: \"connecting\",\n\t\t\t\teventSource: _es,\n\t\t\t\tevent: null\n\t\t\t});\n\t\t\teventSource.addEventListener(CONNECTED_EVENT, (_msg) => {\n\t\t\t\tconst msg = _msg;\n\t\t\t\tconst options = JSON.parse(msg.data);\n\t\t\t\tclientOptions = options;\n\t\t\t\tcontroller.enqueue({\n\t\t\t\t\ttype: \"connected\",\n\t\t\t\t\toptions,\n\t\t\t\t\teventSource\n\t\t\t\t});\n\t\t\t});\n\t\t\teventSource.addEventListener(SERIALIZED_ERROR_EVENT, (_msg) => {\n\t\t\t\tconst msg = _msg;\n\t\t\t\tcontroller.enqueue({\n\t\t\t\t\ttype: \"serialized-error\",\n\t\t\t\t\terror: deserialize(JSON.parse(msg.data)),\n\t\t\t\t\teventSource\n\t\t\t\t});\n\t\t\t});\n\t\t\teventSource.addEventListener(PING_EVENT, () => {\n\t\t\t\tcontroller.enqueue({\n\t\t\t\t\ttype: \"ping\",\n\t\t\t\t\teventSource\n\t\t\t\t});\n\t\t\t});\n\t\t\teventSource.addEventListener(RETURN_EVENT, () => {\n\t\t\t\teventSource.close();\n\t\t\t\tcontroller.close();\n\t\t\t\t_es = null;\n\t\t\t});\n\t\t\teventSource.addEventListener(\"error\", (event) => {\n\t\t\t\tif (eventSource.readyState === eventSource.CLOSED) controller.error(event);\n\t\t\t\telse controller.enqueue({\n\t\t\t\t\ttype: \"connecting\",\n\t\t\t\t\teventSource,\n\t\t\t\t\tevent\n\t\t\t\t});\n\t\t\t});\n\t\t\teventSource.addEventListener(\"message\", (_msg) => {\n\t\t\t\tconst msg = _msg;\n\t\t\t\tconst chunk = deserialize(JSON.parse(msg.data));\n\t\t\t\tconst def = { data: chunk };\n\t\t\t\tif (msg.lastEventId) def.id = msg.lastEventId;\n\t\t\t\tcontroller.enqueue({\n\t\t\t\t\ttype: \"data\",\n\t\t\t\t\tdata: def,\n\t\t\t\t\teventSource\n\t\t\t\t});\n\t\t\t});\n\t\t\tconst onAbort = () => {\n\t\t\t\ttry {\n\t\t\t\t\teventSource.close();\n\t\t\t\t\tcontroller.close();\n\t\t\t\t} catch (_unused) {}\n\t\t\t};\n\t\t\tif (signal.aborted) onAbort();\n\t\t\telse signal.addEventListener(\"abort\", onAbort);\n\t\t},\n\t\tcancel() {\n\t\t\t_es === null || _es === void 0 || _es.close();\n\t\t}\n\t});\n\tconst getStreamResource = () => {\n\t\tlet stream = createStream();\n\t\tlet reader = stream.getReader();\n\t\tasync function dispose() {\n\t\t\tawait reader.cancel();\n\t\t\t_es = null;\n\t\t}\n\t\treturn makeAsyncResource({\n\t\t\tread() {\n\t\t\t\treturn reader.read();\n\t\t\t},\n\t\t\tasync recreate() {\n\t\t\t\tawait dispose();\n\t\t\t\tstream = createStream();\n\t\t\t\treader = stream.getReader();\n\t\t\t}\n\t\t}, dispose);\n\t};\n\treturn run((0, import_wrapAsyncGenerator$1.default)(function* () {\n\t\ttry {\n\t\t\tvar _usingCtx3 = (0, import_usingCtx.default)();\n\t\t\tconst stream = _usingCtx3.a(getStreamResource());\n\t\t\twhile (true) {\n\t\t\t\tlet promise = stream.read();\n\t\t\t\tconst timeoutMs = clientOptions.reconnectAfterInactivityMs;\n\t\t\t\tif (timeoutMs) promise = withTimeout({\n\t\t\t\t\tpromise,\n\t\t\t\t\ttimeoutMs,\n\t\t\t\t\tonTimeout: async () => {\n\t\t\t\t\t\tconst res = {\n\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\ttype: \"timeout\",\n\t\t\t\t\t\t\t\tms: timeoutMs,\n\t\t\t\t\t\t\t\teventSource: _es\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdone: false\n\t\t\t\t\t\t};\n\t\t\t\t\t\tawait stream.recreate();\n\t\t\t\t\t\treturn res;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tconst result = yield (0, import_awaitAsyncGenerator.default)(promise);\n\t\t\t\tif (result.done) return result.value;\n\t\t\t\tyield result.value;\n\t\t\t}\n\t\t} catch (_) {\n\t\t\t_usingCtx3.e = _;\n\t\t} finally {\n\t\t\tyield (0, import_awaitAsyncGenerator.default)(_usingCtx3.d());\n\t\t}\n\t}));\n}\nconst sseHeaders = {\n\t\"Content-Type\": \"text/event-stream\",\n\t\"Cache-Control\": \"no-cache, no-transform\",\n\t\"X-Accel-Buffering\": \"no\",\n\tConnection: \"keep-alive\"\n};\n\n//#endregion\n//#region src/unstable-core-do-not-import/http/resolveResponse.ts\nvar import_wrapAsyncGenerator = __toESM(require_wrapAsyncGenerator(), 1);\nvar import_objectSpread2 = __toESM(require_objectSpread2(), 1);\nfunction errorToAsyncIterable(err) {\n\treturn run((0, import_wrapAsyncGenerator.default)(function* () {\n\t\tthrow err;\n\t}));\n}\nconst TYPE_ACCEPTED_METHOD_MAP = {\n\tmutation: [\"POST\"],\n\tquery: [\"GET\"],\n\tsubscription: [\"GET\"]\n};\nconst TYPE_ACCEPTED_METHOD_MAP_WITH_METHOD_OVERRIDE = {\n\tmutation: [\"POST\"],\n\tquery: [\"GET\", \"POST\"],\n\tsubscription: [\"GET\", \"POST\"]\n};\nfunction initResponse(initOpts) {\n\tvar _responseMeta, _info$calls$find$proc, _info$calls$find;\n\tconst { ctx, info, responseMeta, untransformedJSON, errors = [], headers } = initOpts;\n\tlet status = untransformedJSON ? getHTTPStatusCode(untransformedJSON) : 200;\n\tconst eagerGeneration = !untransformedJSON;\n\tconst data = eagerGeneration ? [] : Array.isArray(untransformedJSON) ? untransformedJSON : [untransformedJSON];\n\tconst meta = (_responseMeta = responseMeta === null || responseMeta === void 0 ? void 0 : responseMeta({\n\t\tctx,\n\t\tinfo,\n\t\tpaths: info === null || info === void 0 ? void 0 : info.calls.map((call) => call.path),\n\t\tdata,\n\t\terrors,\n\t\teagerGeneration,\n\t\ttype: (_info$calls$find$proc = info === null || info === void 0 || (_info$calls$find = info.calls.find((call) => {\n\t\t\tvar _call$procedure;\n\t\t\treturn (_call$procedure = call.procedure) === null || _call$procedure === void 0 ? void 0 : _call$procedure._def.type;\n\t\t})) === null || _info$calls$find === void 0 || (_info$calls$find = _info$calls$find.procedure) === null || _info$calls$find === void 0 ? void 0 : _info$calls$find._def.type) !== null && _info$calls$find$proc !== void 0 ? _info$calls$find$proc : \"unknown\"\n\t})) !== null && _responseMeta !== void 0 ? _responseMeta : {};\n\tif (meta.headers) {\n\t\tif (meta.headers instanceof Headers) for (const [key, value] of meta.headers.entries()) headers.append(key, value);\n\t\telse\n /**\n\t\t* @deprecated, delete in v12\n\t\t*/\n\t\tfor (const [key, value] of Object.entries(meta.headers)) if (Array.isArray(value)) for (const v of value) headers.append(key, v);\n\t\telse if (typeof value === \"string\") headers.set(key, value);\n\t}\n\tif (meta.status) status = meta.status;\n\treturn { status };\n}\nfunction caughtErrorToData(cause, errorOpts) {\n\tconst { router, req, onError } = errorOpts.opts;\n\tconst error = getTRPCErrorFromUnknown(cause);\n\tonError === null || onError === void 0 || onError({\n\t\terror,\n\t\tpath: errorOpts.path,\n\t\tinput: errorOpts.input,\n\t\tctx: errorOpts.ctx,\n\t\ttype: errorOpts.type,\n\t\treq\n\t});\n\tconst untransformedJSON = { error: getErrorShape({\n\t\tconfig: router._def._config,\n\t\terror,\n\t\ttype: errorOpts.type,\n\t\tpath: errorOpts.path,\n\t\tinput: errorOpts.input,\n\t\tctx: errorOpts.ctx\n\t}) };\n\tconst transformedJSON = transformTRPCResponse(router._def._config, untransformedJSON);\n\tconst body = JSON.stringify(transformedJSON);\n\treturn {\n\t\terror,\n\t\tuntransformedJSON,\n\t\tbody\n\t};\n}\n/**\n* Check if a value is a stream-like object\n* - if it's an async iterable\n* - if it's an object with async iterables or promises\n*/\nfunction isDataStream(v) {\n\tif (!isObject(v)) return false;\n\tif (isAsyncIterable(v)) return true;\n\treturn Object.values(v).some(isPromise) || Object.values(v).some(isAsyncIterable);\n}\nasync function resolveResponse(opts) {\n\tvar _ref, _opts$allowBatching, _opts$batching, _opts$allowMethodOver, _config$sse$enabled, _config$sse;\n\tconst { router, req } = opts;\n\tconst headers = new Headers([[\"vary\", \"trpc-accept\"]]);\n\tconst config = router._def._config;\n\tconst url = new URL(req.url);\n\tif (req.method === \"HEAD\") return new Response(null, { status: 204 });\n\tconst allowBatching = (_ref = (_opts$allowBatching = opts.allowBatching) !== null && _opts$allowBatching !== void 0 ? _opts$allowBatching : (_opts$batching = opts.batching) === null || _opts$batching === void 0 ? void 0 : _opts$batching.enabled) !== null && _ref !== void 0 ? _ref : true;\n\tconst allowMethodOverride = ((_opts$allowMethodOver = opts.allowMethodOverride) !== null && _opts$allowMethodOver !== void 0 ? _opts$allowMethodOver : false) && req.method === \"POST\";\n\tconst infoTuple = await run(async () => {\n\t\ttry {\n\t\t\treturn [void 0, await getRequestInfo({\n\t\t\t\treq,\n\t\t\t\tpath: decodeURIComponent(opts.path),\n\t\t\t\trouter,\n\t\t\t\tsearchParams: url.searchParams,\n\t\t\t\theaders: opts.req.headers,\n\t\t\t\turl\n\t\t\t})];\n\t\t} catch (cause) {\n\t\t\treturn [getTRPCErrorFromUnknown(cause), void 0];\n\t\t}\n\t});\n\tconst ctxManager = run(() => {\n\t\tlet result = void 0;\n\t\treturn {\n\t\t\tvalueOrUndefined: () => {\n\t\t\t\tif (!result) return void 0;\n\t\t\t\treturn result[1];\n\t\t\t},\n\t\t\tvalue: () => {\n\t\t\t\tconst [err, ctx] = result;\n\t\t\t\tif (err) throw err;\n\t\t\t\treturn ctx;\n\t\t\t},\n\t\t\tcreate: async (info) => {\n\t\t\t\tif (result) throw new Error(\"This should only be called once - report a bug in tRPC\");\n\t\t\t\ttry {\n\t\t\t\t\tconst ctx = await opts.createContext({ info });\n\t\t\t\t\tresult = [void 0, ctx];\n\t\t\t\t} catch (cause) {\n\t\t\t\t\tresult = [getTRPCErrorFromUnknown(cause), void 0];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\n\tconst methodMapper = allowMethodOverride ? TYPE_ACCEPTED_METHOD_MAP_WITH_METHOD_OVERRIDE : TYPE_ACCEPTED_METHOD_MAP;\n\t/**\n\t* @deprecated\n\t*/\n\tconst isStreamCall = req.headers.get(\"trpc-accept\") === \"application/jsonl\";\n\tconst experimentalSSE = (_config$sse$enabled = (_config$sse = config.sse) === null || _config$sse === void 0 ? void 0 : _config$sse.enabled) !== null && _config$sse$enabled !== void 0 ? _config$sse$enabled : true;\n\ttry {\n\t\tconst [infoError, info] = infoTuple;\n\t\tif (infoError) throw infoError;\n\t\tif (info.isBatchCall && !allowBatching) throw new TRPCError({\n\t\t\tcode: \"BAD_REQUEST\",\n\t\t\tmessage: `Batching is not enabled on the server`\n\t\t});\n\t\t/* istanbul ignore if -- @preserve */\n\t\tif (isStreamCall && !info.isBatchCall) throw new TRPCError({\n\t\t\tmessage: `Streaming requests must be batched (you can do a batch of 1)`,\n\t\t\tcode: \"BAD_REQUEST\"\n\t\t});\n\t\tawait ctxManager.create(info);\n\t\tconst rpcCalls = info.calls.map(async (call) => {\n\t\t\tconst proc = call.procedure;\n\t\t\ttry {\n\t\t\t\tif (opts.error) throw opts.error;\n\t\t\t\tif (!proc) throw new TRPCError({\n\t\t\t\t\tcode: \"NOT_FOUND\",\n\t\t\t\t\tmessage: `No procedure found on path \"${call.path}\"`\n\t\t\t\t});\n\t\t\t\tif (!methodMapper[proc._def.type].includes(req.method)) throw new TRPCError({\n\t\t\t\t\tcode: \"METHOD_NOT_SUPPORTED\",\n\t\t\t\t\tmessage: `Unsupported ${req.method}-request to ${proc._def.type} procedure at path \"${call.path}\"`\n\t\t\t\t});\n\t\t\t\tif (proc._def.type === \"subscription\") {\n\t\t\t\t\t/* istanbul ignore if -- @preserve */\n\t\t\t\t\tif (info.isBatchCall) throw new TRPCError({\n\t\t\t\t\t\tcode: \"BAD_REQUEST\",\n\t\t\t\t\t\tmessage: `Cannot batch subscription calls`\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tconst data = await proc({\n\t\t\t\t\tpath: call.path,\n\t\t\t\t\tgetRawInput: call.getRawInput,\n\t\t\t\t\tctx: ctxManager.value(),\n\t\t\t\t\ttype: proc._def.type,\n\t\t\t\t\tsignal: opts.req.signal\n\t\t\t\t});\n\t\t\t\treturn [void 0, { data }];\n\t\t\t} catch (cause) {\n\t\t\t\tvar _opts$onError, _call$procedure$_def$, _call$procedure2;\n\t\t\t\tconst error = getTRPCErrorFromUnknown(cause);\n\t\t\t\tconst input = call.result();\n\t\t\t\t(_opts$onError = opts.onError) === null || _opts$onError === void 0 || _opts$onError.call(opts, {\n\t\t\t\t\terror,\n\t\t\t\t\tpath: call.path,\n\t\t\t\t\tinput,\n\t\t\t\t\tctx: ctxManager.valueOrUndefined(),\n\t\t\t\t\ttype: (_call$procedure$_def$ = (_call$procedure2 = call.procedure) === null || _call$procedure2 === void 0 ? void 0 : _call$procedure2._def.type) !== null && _call$procedure$_def$ !== void 0 ? _call$procedure$_def$ : \"unknown\",\n\t\t\t\t\treq: opts.req\n\t\t\t\t});\n\t\t\t\treturn [error, void 0];\n\t\t\t}\n\t\t});\n\t\tif (!info.isBatchCall) {\n\t\t\tconst [call] = info.calls;\n\t\t\tconst [error, result] = await rpcCalls[0];\n\t\t\tswitch (info.type) {\n\t\t\t\tcase \"unknown\":\n\t\t\t\tcase \"mutation\":\n\t\t\t\tcase \"query\": {\n\t\t\t\t\theaders.set(\"content-type\", \"application/json\");\n\t\t\t\t\tif (isDataStream(result === null || result === void 0 ? void 0 : result.data)) throw new TRPCError({\n\t\t\t\t\t\tcode: \"UNSUPPORTED_MEDIA_TYPE\",\n\t\t\t\t\t\tmessage: \"Cannot use stream-like response in non-streaming request - use httpBatchStreamLink\"\n\t\t\t\t\t});\n\t\t\t\t\tconst res = error ? { error: getErrorShape({\n\t\t\t\t\t\tconfig,\n\t\t\t\t\t\tctx: ctxManager.valueOrUndefined(),\n\t\t\t\t\t\terror,\n\t\t\t\t\t\tinput: call.result(),\n\t\t\t\t\t\tpath: call.path,\n\t\t\t\t\t\ttype: info.type\n\t\t\t\t\t}) } : { result: { data: result.data } };\n\t\t\t\t\tconst headResponse$1 = initResponse({\n\t\t\t\t\t\tctx: ctxManager.valueOrUndefined(),\n\t\t\t\t\t\tinfo,\n\t\t\t\t\t\tresponseMeta: opts.responseMeta,\n\t\t\t\t\t\terrors: error ? [error] : [],\n\t\t\t\t\t\theaders,\n\t\t\t\t\t\tuntransformedJSON: [res]\n\t\t\t\t\t});\n\t\t\t\t\treturn new Response(JSON.stringify(transformTRPCResponse(config, res)), {\n\t\t\t\t\t\tstatus: headResponse$1.status,\n\t\t\t\t\t\theaders\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tcase \"subscription\": {\n\t\t\t\t\tconst iterable = run(() => {\n\t\t\t\t\t\tif (error) return errorToAsyncIterable(error);\n\t\t\t\t\t\tif (!experimentalSSE) return errorToAsyncIterable(new TRPCError({\n\t\t\t\t\t\t\tcode: \"METHOD_NOT_SUPPORTED\",\n\t\t\t\t\t\t\tmessage: \"Missing experimental flag \\\"sseSubscriptions\\\"\"\n\t\t\t\t\t\t}));\n\t\t\t\t\t\tif (!isObservable(result.data) && !isAsyncIterable(result.data)) return errorToAsyncIterable(new TRPCError({\n\t\t\t\t\t\t\tmessage: `Subscription ${call.path} did not return an observable or a AsyncGenerator`,\n\t\t\t\t\t\t\tcode: \"INTERNAL_SERVER_ERROR\"\n\t\t\t\t\t\t}));\n\t\t\t\t\t\tconst dataAsIterable = isObservable(result.data) ? observableToAsyncIterable(result.data, opts.req.signal) : result.data;\n\t\t\t\t\t\treturn dataAsIterable;\n\t\t\t\t\t});\n\t\t\t\t\tconst stream = sseStreamProducer((0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, config.sse), {}, {\n\t\t\t\t\t\tdata: iterable,\n\t\t\t\t\t\tserialize: (v) => config.transformer.output.serialize(v),\n\t\t\t\t\t\tformatError(errorOpts) {\n\t\t\t\t\t\t\tvar _call$procedure$_def$2, _call$procedure3, _opts$onError2;\n\t\t\t\t\t\t\tconst error$1 = getTRPCErrorFromUnknown(errorOpts.error);\n\t\t\t\t\t\t\tconst input = call === null || call === void 0 ? void 0 : call.result();\n\t\t\t\t\t\t\tconst path = call === null || call === void 0 ? void 0 : call.path;\n\t\t\t\t\t\t\tconst type = (_call$procedure$_def$2 = call === null || call === void 0 || (_call$procedure3 = call.procedure) === null || _call$procedure3 === void 0 ? void 0 : _call$procedure3._def.type) !== null && _call$procedure$_def$2 !== void 0 ? _call$procedure$_def$2 : \"unknown\";\n\t\t\t\t\t\t\t(_opts$onError2 = opts.onError) === null || _opts$onError2 === void 0 || _opts$onError2.call(opts, {\n\t\t\t\t\t\t\t\terror: error$1,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tinput,\n\t\t\t\t\t\t\t\tctx: ctxManager.valueOrUndefined(),\n\t\t\t\t\t\t\t\treq: opts.req,\n\t\t\t\t\t\t\t\ttype\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconst shape = getErrorShape({\n\t\t\t\t\t\t\t\tconfig,\n\t\t\t\t\t\t\t\tctx: ctxManager.valueOrUndefined(),\n\t\t\t\t\t\t\t\terror: error$1,\n\t\t\t\t\t\t\t\tinput,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\ttype\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\treturn shape;\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t\tfor (const [key, value] of Object.entries(sseHeaders)) headers.set(key, value);\n\t\t\t\t\tconst headResponse$1 = initResponse({\n\t\t\t\t\t\tctx: ctxManager.valueOrUndefined(),\n\t\t\t\t\t\tinfo,\n\t\t\t\t\t\tresponseMeta: opts.responseMeta,\n\t\t\t\t\t\terrors: [],\n\t\t\t\t\t\theaders,\n\t\t\t\t\t\tuntransformedJSON: null\n\t\t\t\t\t});\n\t\t\t\t\treturn new Response(stream, {\n\t\t\t\t\t\theaders,\n\t\t\t\t\t\tstatus: headResponse$1.status\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (info.accept === \"application/jsonl\") {\n\t\t\theaders.set(\"content-type\", \"application/json\");\n\t\t\theaders.set(\"transfer-encoding\", \"chunked\");\n\t\t\tconst headResponse$1 = initResponse({\n\t\t\t\tctx: ctxManager.valueOrUndefined(),\n\t\t\t\tinfo,\n\t\t\t\tresponseMeta: opts.responseMeta,\n\t\t\t\terrors: [],\n\t\t\t\theaders,\n\t\t\t\tuntransformedJSON: null\n\t\t\t});\n\t\t\tconst stream = jsonlStreamProducer((0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, config.jsonl), {}, {\n\t\t\t\tmaxDepth: Infinity,\n\t\t\t\tdata: rpcCalls.map(async (res) => {\n\t\t\t\t\tconst [error, result] = await res;\n\t\t\t\t\tconst call = info.calls[0];\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tvar _procedure$_def$type, _procedure;\n\t\t\t\t\t\treturn { error: getErrorShape({\n\t\t\t\t\t\t\tconfig,\n\t\t\t\t\t\t\tctx: ctxManager.valueOrUndefined(),\n\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\tinput: call.result(),\n\t\t\t\t\t\t\tpath: call.path,\n\t\t\t\t\t\t\ttype: (_procedure$_def$type = (_procedure = call.procedure) === null || _procedure === void 0 ? void 0 : _procedure._def.type) !== null && _procedure$_def$type !== void 0 ? _procedure$_def$type : \"unknown\"\n\t\t\t\t\t\t}) };\n\t\t\t\t\t}\n\t\t\t\t\t/**\n\t\t\t\t\t* Not very pretty, but we need to wrap nested data in promises\n\t\t\t\t\t* Our stream producer will only resolve top-level async values or async values that are directly nested in another async value\n\t\t\t\t\t*/\n\t\t\t\t\tconst iterable = isObservable(result.data) ? observableToAsyncIterable(result.data, opts.req.signal) : Promise.resolve(result.data);\n\t\t\t\t\treturn { result: Promise.resolve({ data: iterable }) };\n\t\t\t\t}),\n\t\t\t\tserialize: config.transformer.output.serialize,\n\t\t\t\tonError: (cause) => {\n\t\t\t\t\tvar _opts$onError3, _info$type;\n\t\t\t\t\t(_opts$onError3 = opts.onError) === null || _opts$onError3 === void 0 || _opts$onError3.call(opts, {\n\t\t\t\t\t\terror: getTRPCErrorFromUnknown(cause),\n\t\t\t\t\t\tpath: void 0,\n\t\t\t\t\t\tinput: void 0,\n\t\t\t\t\t\tctx: ctxManager.valueOrUndefined(),\n\t\t\t\t\t\treq: opts.req,\n\t\t\t\t\t\ttype: (_info$type = info === null || info === void 0 ? void 0 : info.type) !== null && _info$type !== void 0 ? _info$type : \"unknown\"\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tformatError(errorOpts) {\n\t\t\t\t\tvar _call$procedure$_def$3, _call$procedure4;\n\t\t\t\t\tconst call = info === null || info === void 0 ? void 0 : info.calls[errorOpts.path[0]];\n\t\t\t\t\tconst error = getTRPCErrorFromUnknown(errorOpts.error);\n\t\t\t\t\tconst input = call === null || call === void 0 ? void 0 : call.result();\n\t\t\t\t\tconst path = call === null || call === void 0 ? void 0 : call.path;\n\t\t\t\t\tconst type = (_call$procedure$_def$3 = call === null || call === void 0 || (_call$procedure4 = call.procedure) === null || _call$procedure4 === void 0 ? void 0 : _call$procedure4._def.type) !== null && _call$procedure$_def$3 !== void 0 ? _call$procedure$_def$3 : \"unknown\";\n\t\t\t\t\tconst shape = getErrorShape({\n\t\t\t\t\t\tconfig,\n\t\t\t\t\t\tctx: ctxManager.valueOrUndefined(),\n\t\t\t\t\t\terror,\n\t\t\t\t\t\tinput,\n\t\t\t\t\t\tpath,\n\t\t\t\t\t\ttype\n\t\t\t\t\t});\n\t\t\t\t\treturn shape;\n\t\t\t\t}\n\t\t\t}));\n\t\t\treturn new Response(stream, {\n\t\t\t\theaders,\n\t\t\t\tstatus: headResponse$1.status\n\t\t\t});\n\t\t}\n\t\t/**\n\t\t* Non-streaming response:\n\t\t* - await all responses in parallel, blocking on the slowest one\n\t\t* - create headers with known response body\n\t\t* - return a complete HTTPResponse\n\t\t*/\n\t\theaders.set(\"content-type\", \"application/json\");\n\t\tconst results = (await Promise.all(rpcCalls)).map((res) => {\n\t\t\tconst [error, result] = res;\n\t\t\tif (error) return res;\n\t\t\tif (isDataStream(result.data)) return [new TRPCError({\n\t\t\t\tcode: \"UNSUPPORTED_MEDIA_TYPE\",\n\t\t\t\tmessage: \"Cannot use stream-like response in non-streaming request - use httpBatchStreamLink\"\n\t\t\t}), void 0];\n\t\t\treturn res;\n\t\t});\n\t\tconst resultAsRPCResponse = results.map(([error, result], index) => {\n\t\t\tconst call = info.calls[index];\n\t\t\tif (error) {\n\t\t\t\tvar _call$procedure$_def$4, _call$procedure5;\n\t\t\t\treturn { error: getErrorShape({\n\t\t\t\t\tconfig,\n\t\t\t\t\tctx: ctxManager.valueOrUndefined(),\n\t\t\t\t\terror,\n\t\t\t\t\tinput: call.result(),\n\t\t\t\t\tpath: call.path,\n\t\t\t\t\ttype: (_call$procedure$_def$4 = (_call$procedure5 = call.procedure) === null || _call$procedure5 === void 0 ? void 0 : _call$procedure5._def.type) !== null && _call$procedure$_def$4 !== void 0 ? _call$procedure$_def$4 : \"unknown\"\n\t\t\t\t}) };\n\t\t\t}\n\t\t\treturn { result: { data: result.data } };\n\t\t});\n\t\tconst errors = results.map(([error]) => error).filter(Boolean);\n\t\tconst headResponse = initResponse({\n\t\t\tctx: ctxManager.valueOrUndefined(),\n\t\t\tinfo,\n\t\t\tresponseMeta: opts.responseMeta,\n\t\t\tuntransformedJSON: resultAsRPCResponse,\n\t\t\terrors,\n\t\t\theaders\n\t\t});\n\t\treturn new Response(JSON.stringify(transformTRPCResponse(config, resultAsRPCResponse)), {\n\t\t\tstatus: headResponse.status,\n\t\t\theaders\n\t\t});\n\t} catch (cause) {\n\t\tvar _info$type2;\n\t\tconst [_infoError, info] = infoTuple;\n\t\tconst ctx = ctxManager.valueOrUndefined();\n\t\tconst { error, untransformedJSON, body } = caughtErrorToData(cause, {\n\t\t\topts,\n\t\t\tctx: ctxManager.valueOrUndefined(),\n\t\t\ttype: (_info$type2 = info === null || info === void 0 ? void 0 : info.type) !== null && _info$type2 !== void 0 ? _info$type2 : \"unknown\"\n\t\t});\n\t\tconst headResponse = initResponse({\n\t\t\tctx,\n\t\t\tinfo,\n\t\t\tresponseMeta: opts.responseMeta,\n\t\t\tuntransformedJSON,\n\t\t\terrors: [error],\n\t\t\theaders\n\t\t});\n\t\treturn new Response(body, {\n\t\t\tstatus: headResponse.status,\n\t\t\theaders\n\t\t});\n\t}\n}\n\n//#endregion\nexport { Unpromise, createDeferred, getRequestInfo, isAbortError, isPromise, iteratorResource, jsonlStreamConsumer, jsonlStreamProducer, makeAsyncResource, makeResource, parseConnectionParamsFromString, parseConnectionParamsFromUnknown, require_usingCtx, resolveResponse, sseHeaders, sseStreamConsumer, sseStreamProducer, takeWithGrace, throwAbortError, withMaxDuration };\n//# sourceMappingURL=resolveResponse-CzlbRpCI.mjs.map","import { __toESM, require_objectSpread2 } from \"../../getErrorShape-Uhlrl4Bk.mjs\";\nimport \"../../tracked-gU3ttYjg.mjs\";\nimport \"../../utils-DdbbrDku.mjs\";\nimport { resolveResponse } from \"../../resolveResponse-CzlbRpCI.mjs\";\nimport \"../../observable-UMO3vUa_.mjs\";\n\n//#region src/adapters/fetch/fetchRequestHandler.ts\nvar import_objectSpread2 = __toESM(require_objectSpread2(), 1);\nconst trimSlashes = (path) => {\n\tpath = path.startsWith(\"/\") ? path.slice(1) : path;\n\tpath = path.endsWith(\"/\") ? path.slice(0, -1) : path;\n\treturn path;\n};\nasync function fetchRequestHandler(opts) {\n\tconst resHeaders = new Headers();\n\tconst createContext = async (innerOpts) => {\n\t\tvar _opts$createContext;\n\t\treturn (_opts$createContext = opts.createContext) === null || _opts$createContext === void 0 ? void 0 : _opts$createContext.call(opts, (0, import_objectSpread2.default)({\n\t\t\treq: opts.req,\n\t\t\tresHeaders\n\t\t}, innerOpts));\n\t};\n\tconst url = new URL(opts.req.url);\n\tconst pathname = trimSlashes(url.pathname);\n\tconst endpoint = trimSlashes(opts.endpoint);\n\tconst path = trimSlashes(pathname.slice(endpoint.length));\n\treturn await resolveResponse((0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, opts), {}, {\n\t\treq: opts.req,\n\t\tcreateContext,\n\t\tpath,\n\t\terror: null,\n\t\tonError(o) {\n\t\t\tvar _opts$onError;\n\t\t\topts === null || opts === void 0 || (_opts$onError = opts.onError) === null || _opts$onError === void 0 || _opts$onError.call(opts, (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, o), {}, { req: opts.req }));\n\t\t},\n\t\tresponseMeta(data) {\n\t\t\tvar _opts$responseMeta;\n\t\t\tconst meta = (_opts$responseMeta = opts.responseMeta) === null || _opts$responseMeta === void 0 ? void 0 : _opts$responseMeta.call(opts, data);\n\t\t\tif (meta === null || meta === void 0 ? void 0 : meta.headers) {\n\t\t\t\tif (meta.headers instanceof Headers) for (const [key, value] of meta.headers.entries()) resHeaders.append(key, value);\n\t\t\t\telse\n /**\n\t\t\t\t* @deprecated, delete in v12\n\t\t\t\t*/\n\t\t\t\tfor (const [key, value] of Object.entries(meta.headers)) if (Array.isArray(value)) for (const v of value) resHeaders.append(key, v);\n\t\t\t\telse if (typeof value === \"string\") resHeaders.set(key, value);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\theaders: resHeaders,\n\t\t\t\tstatus: meta === null || meta === void 0 ? void 0 : meta.status\n\t\t\t};\n\t\t}\n\t}));\n}\n\n//#endregion\nexport { fetchRequestHandler };\n//# sourceMappingURL=index.mjs.map","import { appRouter, createTRPCContext } from '@statstrade/api'\nimport { fetchRequestHandler } from '@trpc/server/adapters/fetch'\nimport { ServerRuntime } from 'next'\n\nexport const runtime: ServerRuntime = 'edge'\n\nconst handler = (req: Request) =>\n  fetchRequestHandler({\n    endpoint: '/api/trpc',\n    req,\n    router: appRouter,\n    createContext: createTRPCContext,\n  })\nexport { handler as GET, handler as POST }\n","import { AppRouteRouteModule } from \"next/dist/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"/home/runner/work/ci/ci/apps/next/app/api/trpc/[trpc]/route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/trpc/[trpc]/route\",\n        pathname: \"/api/trpc/[trpc]\",\n        filename: \"route\",\n        bundlePath: \"app/api/trpc/[trpc]/route\"\n    },\n    resolvedPagePath: \"/home/runner/work/ci/ci/apps/next/app/api/trpc/[trpc]/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","var _self___RSC_MANIFEST;\nimport { createServerModuleMap } from \"next/dist/server/app-render/action-utils\";\nimport { setReferenceManifestsSingleton } from \"next/dist/server/app-render/encryption-utils\";\nimport { EdgeRouteModuleWrapper } from \"next/dist/server/web/edge-route-module-wrapper\";\n// Import the userland code.\nimport * as module from \"next-app-loader?name=app%2Fapi%2Ftrpc%2F%5Btrpc%5D%2Froute&page=%2Fapi%2Ftrpc%2F%5Btrpc%5D%2Froute&pagePath=private-next-app-dir%2Fapi%2Ftrpc%2F%5Btrpc%5D%2Froute.ts&appDir=%2Fhome%2Frunner%2Fwork%2Fci%2Fci%2Fapps%2Fnext%2Fapp&appPaths=%2Fapi%2Ftrpc%2F%5Btrpc%5D%2Froute&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!private-next-app-dir/api/trpc/[trpc]/route.ts?__next_edge_ssr_entry__\";\nconst nextConfig = {\"env\":{},\"eslint\":{\"ignoreDuringBuilds\":false},\"typescript\":{\"ignoreBuildErrors\":true,\"tsconfigPath\":\"tsconfig.json\"},\"distDir\":\".next\",\"cleanDistDir\":true,\"assetPrefix\":\"\",\"cacheMaxMemorySize\":52428800,\"configOrigin\":\"next.config.js\",\"useFileSystemPublicRoutes\":true,\"generateEtags\":true,\"pageExtensions\":[\"tsx\",\"ts\",\"jsx\",\"js\"],\"poweredByHeader\":true,\"compress\":true,\"images\":{\"deviceSizes\":[640,750,828,1080,1200,1920,2048,3840],\"imageSizes\":[16,32,48,64,96,128,256,384],\"path\":\"/_next/image\",\"loader\":\"default\",\"loaderFile\":\"\",\"domains\":[],\"disableStaticImages\":false,\"minimumCacheTTL\":60,\"formats\":[\"image/webp\"],\"dangerouslyAllowSVG\":false,\"contentSecurityPolicy\":\"script-src 'none'; frame-src 'none'; sandbox;\",\"contentDispositionType\":\"attachment\",\"remotePatterns\":[],\"unoptimized\":true},\"devIndicators\":{\"position\":\"bottom-left\"},\"onDemandEntries\":{\"maxInactiveAge\":60000,\"pagesBufferLength\":5},\"amp\":{\"canonicalBase\":\"\"},\"basePath\":\"\",\"sassOptions\":{},\"trailingSlash\":false,\"i18n\":null,\"productionBrowserSourceMaps\":false,\"excludeDefaultMomentLocales\":true,\"serverRuntimeConfig\":{},\"publicRuntimeConfig\":{},\"reactProductionProfiling\":false,\"reactStrictMode\":null,\"reactMaxHeadersLength\":6000,\"httpAgentOptions\":{\"keepAlive\":true},\"logging\":{},\"expireTime\":31536000,\"staticPageGenerationTimeout\":60,\"modularizeImports\":{\"@mui/icons-material\":{\"transform\":\"@mui/icons-material/{{member}}\"},\"lodash\":{\"transform\":\"lodash/{{member}}\"}},\"outputFileTracingRoot\":\"/home/runner/work/ci/ci\",\"experimental\":{\"nodeMiddleware\":false,\"cacheLife\":{\"default\":{\"stale\":300,\"revalidate\":900,\"expire\":4294967294},\"seconds\":{\"stale\":0,\"revalidate\":1,\"expire\":60},\"minutes\":{\"stale\":300,\"revalidate\":60,\"expire\":3600},\"hours\":{\"stale\":300,\"revalidate\":3600,\"expire\":86400},\"days\":{\"stale\":300,\"revalidate\":86400,\"expire\":604800},\"weeks\":{\"stale\":300,\"revalidate\":604800,\"expire\":2592000},\"max\":{\"stale\":300,\"revalidate\":2592000,\"expire\":4294967294}},\"cacheHandlers\":{},\"cssChunking\":true,\"multiZoneDraftMode\":false,\"appNavFailHandling\":false,\"prerenderEarlyExit\":true,\"serverMinification\":true,\"serverSourceMaps\":false,\"linkNoTouchStart\":false,\"caseSensitiveRoutes\":false,\"clientSegmentCache\":false,\"dynamicOnHover\":false,\"preloadEntriesOnStart\":true,\"clientRouterFilter\":true,\"clientRouterFilterRedirects\":false,\"fetchCacheKeyPrefix\":\"\",\"middlewarePrefetch\":\"flexible\",\"optimisticClientCache\":true,\"manualClientBasePath\":false,\"cpus\":3,\"memoryBasedWorkersCount\":false,\"imgOptConcurrency\":null,\"imgOptTimeoutInSeconds\":7,\"imgOptMaxInputPixels\":268402689,\"imgOptSequentialRead\":null,\"isrFlushToDisk\":true,\"workerThreads\":false,\"optimizeCss\":false,\"nextScriptWorkers\":false,\"scrollRestoration\":true,\"externalDir\":false,\"disableOptimizedLoading\":false,\"gzipSize\":true,\"craCompat\":false,\"esmExternals\":true,\"fullySpecified\":false,\"swcTraceProfiling\":false,\"forceSwcTransforms\":false,\"largePageDataBytes\":128000,\"typedRoutes\":false,\"typedEnv\":false,\"parallelServerCompiles\":false,\"parallelServerBuildTraces\":false,\"ppr\":false,\"authInterrupts\":false,\"webpackMemoryOptimizations\":false,\"optimizeServerReact\":true,\"useEarlyImport\":false,\"viewTransition\":false,\"routerBFCache\":false,\"staleTimes\":{\"dynamic\":0,\"static\":300},\"serverComponentsHmrCache\":true,\"staticGenerationMaxConcurrency\":8,\"staticGenerationMinPagesPerWorker\":25,\"dynamicIO\":false,\"inlineCss\":false,\"useCache\":false,\"optimizePackageImports\":[\"lucide-react\",\"date-fns\",\"lodash-es\",\"ramda\",\"antd\",\"react-bootstrap\",\"ahooks\",\"@ant-design/icons\",\"@headlessui/react\",\"@headlessui-float/react\",\"@heroicons/react/20/solid\",\"@heroicons/react/24/solid\",\"@heroicons/react/24/outline\",\"@visx/visx\",\"@tremor/react\",\"rxjs\",\"@mui/material\",\"@mui/icons-material\",\"recharts\",\"react-use\",\"effect\",\"@effect/schema\",\"@effect/platform\",\"@effect/platform-node\",\"@effect/platform-browser\",\"@effect/platform-bun\",\"@effect/sql\",\"@effect/sql-mssql\",\"@effect/sql-mysql2\",\"@effect/sql-pg\",\"@effect/sql-squlite-node\",\"@effect/sql-squlite-bun\",\"@effect/sql-squlite-wasm\",\"@effect/sql-squlite-react-native\",\"@effect/rpc\",\"@effect/rpc-http\",\"@effect/typeclass\",\"@effect/experimental\",\"@effect/opentelemetry\",\"@material-ui/core\",\"@material-ui/icons\",\"@tabler/icons-react\",\"mui-core\",\"react-icons/ai\",\"react-icons/bi\",\"react-icons/bs\",\"react-icons/cg\",\"react-icons/ci\",\"react-icons/di\",\"react-icons/fa\",\"react-icons/fa6\",\"react-icons/fc\",\"react-icons/fi\",\"react-icons/gi\",\"react-icons/go\",\"react-icons/gr\",\"react-icons/hi\",\"react-icons/hi2\",\"react-icons/im\",\"react-icons/io\",\"react-icons/io5\",\"react-icons/lia\",\"react-icons/lib\",\"react-icons/lu\",\"react-icons/md\",\"react-icons/pi\",\"react-icons/ri\",\"react-icons/rx\",\"react-icons/si\",\"react-icons/sl\",\"react-icons/tb\",\"react-icons/tfi\",\"react-icons/ti\",\"react-icons/vsc\",\"react-icons/wi\"]},\"htmlLimitedBots\":\"Mediapartners-Google|Slurp|DuckDuckBot|baiduspider|yandex|sogou|bitlybot|tumblr|vkShare|quora link preview|redditbot|ia_archiver|Bingbot|BingPreview|applebot|facebookexternalhit|facebookcatalog|Twitterbot|LinkedInBot|Slackbot|Discordbot|WhatsApp|SkypeUriPreview|Yeti\",\"bundlePagesRouterDependencies\":false,\"configFile\":\"/home/runner/work/ci/ci/apps/next/next.config.js\",\"configFileName\":\"next.config.js\",\"transpilePackages\":[\"solito\",\"react-native-web\",\"expo-linking\",\"expo-constants\",\"expo-modules-core\",\"expo-image-picker\",\"react-native-gesture-handler\",\"@ts-react/form\",\"react-hook-form\",\"react-native-reanimated\",\"expo-linear-gradient\"],\"turbopack\":{\"root\":\"/home/runner/work/ci/ci\"},\"_originalRedirects\":[{\"source\":\"/onboarding\",\"destination\":\"/sign-in\",\"permanent\":false}]}\nconst maybeJSONParse = (str)=>str ? JSON.parse(str) : undefined;\nconst rscManifest = (_self___RSC_MANIFEST = self.__RSC_MANIFEST) == null ? void 0 : _self___RSC_MANIFEST[\"/api/trpc/[trpc]/route\"];\nconst rscServerManifest = maybeJSONParse(self.__RSC_SERVER_MANIFEST);\nif (rscManifest && rscServerManifest) {\n    setReferenceManifestsSingleton({\n        page: \"/api/trpc/[trpc]/route\",\n        clientReferenceManifest: rscManifest,\n        serverActionsManifest: rscServerManifest,\n        serverModuleMap: createServerModuleMap({\n            serverActionsManifest: rscServerManifest\n        })\n    });\n}\nexport const ComponentMod = module;\nexport default EdgeRouteModuleWrapper.wrap(module.routeModule, {\n    nextConfig\n});\n\n//# sourceMappingURL=edge-app-route.js.map","/**\n * This is the default \"use cache\" handler it defaults to an in-memory store.\n * In-memory caches are fragile and should not use stale-while-revalidate\n * semantics on the caches because it's not worth warming up an entry that's\n * likely going to get evicted before we get to use it anyway. However, we also\n * don't want to reuse a stale entry for too long so stale entries should be\n * considered expired/missing in such cache handlers.\n */ import { LRUCache } from '../lru-cache';\nimport { isStale, tagsManifest } from '../incremental-cache/tags-manifest.external';\n// LRU cache default to max 50 MB but in future track\nconst memoryCache = new LRUCache(50 * 1024 * 1024, (entry)=>entry.size);\nconst pendingSets = new Map();\nconst debug = process.env.NEXT_PRIVATE_DEBUG_CACHE ? console.debug.bind(console, 'DefaultCacheHandler:') : undefined;\nconst DefaultCacheHandler = {\n    async get (cacheKey) {\n        const pendingPromise = pendingSets.get(cacheKey);\n        if (pendingPromise) {\n            debug == null ? void 0 : debug('get', cacheKey, 'pending');\n            await pendingPromise;\n        }\n        const privateEntry = memoryCache.get(cacheKey);\n        if (!privateEntry) {\n            debug == null ? void 0 : debug('get', cacheKey, 'not found');\n            return undefined;\n        }\n        const entry = privateEntry.entry;\n        if (performance.timeOrigin + performance.now() > entry.timestamp + entry.revalidate * 1000) {\n            // In-memory caches should expire after revalidate time because it is\n            // unlikely that a new entry will be able to be used before it is dropped\n            // from the cache.\n            debug == null ? void 0 : debug('get', cacheKey, 'expired');\n            return undefined;\n        }\n        if (isStale(entry.tags, entry.timestamp)) {\n            debug == null ? void 0 : debug('get', cacheKey, 'had stale tag');\n            return undefined;\n        }\n        const [returnStream, newSaved] = entry.value.tee();\n        entry.value = newSaved;\n        debug == null ? void 0 : debug('get', cacheKey, 'found', {\n            tags: entry.tags,\n            timestamp: entry.timestamp,\n            revalidate: entry.revalidate,\n            expire: entry.expire\n        });\n        return {\n            ...entry,\n            value: returnStream\n        };\n    },\n    async set (cacheKey, pendingEntry) {\n        debug == null ? void 0 : debug('set', cacheKey, 'start');\n        let resolvePending = ()=>{};\n        const pendingPromise = new Promise((resolve)=>{\n            resolvePending = resolve;\n        });\n        pendingSets.set(cacheKey, pendingPromise);\n        const entry = await pendingEntry;\n        let size = 0;\n        try {\n            const [value, clonedValue] = entry.value.tee();\n            entry.value = value;\n            const reader = clonedValue.getReader();\n            for(let chunk; !(chunk = await reader.read()).done;){\n                size += Buffer.from(chunk.value).byteLength;\n            }\n            memoryCache.set(cacheKey, {\n                entry,\n                isErrored: false,\n                errorRetryCount: 0,\n                size\n            });\n            debug == null ? void 0 : debug('set', cacheKey, 'done');\n        } catch (err) {\n            // TODO: store partial buffer with error after we retry 3 times\n            debug == null ? void 0 : debug('set', cacheKey, 'failed', err);\n        } finally{\n            resolvePending();\n            pendingSets.delete(cacheKey);\n        }\n    },\n    async refreshTags () {\n    // Nothing to do for an in-memory cache handler.\n    },\n    async getExpiration (...tags) {\n        const expiration = Math.max(...tags.map((tag)=>tagsManifest.get(tag) ?? 0));\n        debug == null ? void 0 : debug('getExpiration', {\n            tags,\n            expiration\n        });\n        return expiration;\n    },\n    async expireTags (...tags) {\n        const timestamp = Math.round(performance.timeOrigin + performance.now());\n        debug == null ? void 0 : debug('expireTags', {\n            tags,\n            timestamp\n        });\n        for (const tag of tags){\n            // TODO: update file-system-cache?\n            tagsManifest.set(tag, timestamp);\n        }\n    }\n};\nexport default DefaultCacheHandler;\n\n//# sourceMappingURL=default.js.map","import DefaultCacheHandler from '../lib/cache-handlers/default';\nconst debug = process.env.NEXT_PRIVATE_DEBUG_CACHE ? (message, ...args)=>{\n    console.log(`use-cache: ${message}`, ...args);\n} : undefined;\nconst handlersSymbol = Symbol.for('@next/cache-handlers');\nconst handlersMapSymbol = Symbol.for('@next/cache-handlers-map');\nconst handlersSetSymbol = Symbol.for('@next/cache-handlers-set');\n/**\n * The reference to the cache handlers. We store the cache handlers on the\n * global object so that we can access the same instance across different\n * boundaries (such as different copies of the same module).\n */ const reference = globalThis;\n/**\n * Initialize the cache handlers.\n * @returns `true` if the cache handlers were initialized, `false` if they were already initialized.\n */ export function initializeCacheHandlers() {\n    // If the cache handlers have already been initialized, don't do it again.\n    if (reference[handlersMapSymbol]) {\n        debug == null ? void 0 : debug('cache handlers already initialized');\n        return false;\n    }\n    debug == null ? void 0 : debug('initializing cache handlers');\n    reference[handlersMapSymbol] = new Map();\n    // Initialize the cache from the symbol contents first.\n    if (reference[handlersSymbol]) {\n        let fallback;\n        if (reference[handlersSymbol].DefaultCache) {\n            debug == null ? void 0 : debug('setting \"default\" cache handler from symbol');\n            fallback = reference[handlersSymbol].DefaultCache;\n        } else {\n            debug == null ? void 0 : debug('setting \"default\" cache handler from default');\n            fallback = DefaultCacheHandler;\n        }\n        reference[handlersMapSymbol].set('default', fallback);\n        if (reference[handlersSymbol].RemoteCache) {\n            debug == null ? void 0 : debug('setting \"remote\" cache handler from symbol');\n            reference[handlersMapSymbol].set('remote', reference[handlersSymbol].RemoteCache);\n        } else {\n            debug == null ? void 0 : debug('setting \"remote\" cache handler from default');\n            reference[handlersMapSymbol].set('remote', fallback);\n        }\n    } else {\n        debug == null ? void 0 : debug('setting \"default\" cache handler from default');\n        reference[handlersMapSymbol].set('default', DefaultCacheHandler);\n        debug == null ? void 0 : debug('setting \"remote\" cache handler from default');\n        reference[handlersMapSymbol].set('remote', DefaultCacheHandler);\n    }\n    // Create a set of the cache handlers.\n    reference[handlersSetSymbol] = new Set(reference[handlersMapSymbol].values());\n    return true;\n}\n/**\n * Get a cache handler by kind.\n * @param kind - The kind of cache handler to get.\n * @returns The cache handler, or `undefined` if it does not exist.\n * @throws If the cache handlers are not initialized.\n */ export function getCacheHandler(kind) {\n    // This should never be called before initializeCacheHandlers.\n    if (!reference[handlersMapSymbol]) {\n        throw Object.defineProperty(new Error('Cache handlers not initialized'), \"__NEXT_ERROR_CODE\", {\n            value: \"E649\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    return reference[handlersMapSymbol].get(kind);\n}\n/**\n * Get a set iterator over the cache handlers.\n * @returns An iterator over the cache handlers, or `undefined` if they are not\n * initialized.\n */ export function getCacheHandlers() {\n    if (!reference[handlersSetSymbol]) {\n        return undefined;\n    }\n    return reference[handlersSetSymbol].values();\n}\n/**\n * Get a map iterator over the cache handlers (keyed by kind).\n * @returns An iterator over the cache handler entries, or `undefined` if they\n * are not initialized.\n * @throws If the cache handlers are not initialized.\n */ export function getCacheHandlerEntries() {\n    if (!reference[handlersMapSymbol]) {\n        return undefined;\n    }\n    return reference[handlersMapSymbol].entries();\n}\n/**\n * Set a cache handler by kind.\n * @param kind - The kind of cache handler to set.\n * @param cacheHandler - The cache handler to set.\n */ export function setCacheHandler(kind, cacheHandler) {\n    // This should never be called before initializeCacheHandlers.\n    if (!reference[handlersMapSymbol] || !reference[handlersSetSymbol]) {\n        throw Object.defineProperty(new Error('Cache handlers not initialized'), \"__NEXT_ERROR_CODE\", {\n            value: \"E649\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    debug == null ? void 0 : debug('setting cache handler for \"%s\"', kind);\n    reference[handlersMapSymbol].set(kind, cacheHandler);\n    reference[handlersSetSymbol].add(cacheHandler);\n}\n\n//# sourceMappingURL=handlers.js.map","/**\n * Schedules a function to be called on the next tick after the other promises\n * have been resolved.\n *\n * @param cb the function to schedule\n */ export const scheduleOnNextTick = (cb)=>{\n    // We use Promise.resolve().then() here so that the operation is scheduled at\n    // the end of the promise job queue, we then add it to the next process tick\n    // to ensure it's evaluated afterwards.\n    //\n    // This was inspired by the implementation of the DataLoader interface: https://github.com/graphql/dataloader/blob/d336bd15282664e0be4b4a657cb796f09bafbc6b/src/index.js#L213-L255\n    //\n    Promise.resolve().then(()=>{\n        if (process.env.NEXT_RUNTIME === 'edge') {\n            setTimeout(cb, 0);\n        } else {\n            process.nextTick(cb);\n        }\n    });\n};\n/**\n * Schedules a function to be called using `setImmediate` or `setTimeout` if\n * `setImmediate` is not available (like in the Edge runtime).\n *\n * @param cb the function to schedule\n */ export const scheduleImmediate = (cb)=>{\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        setTimeout(cb, 0);\n    } else {\n        setImmediate(cb);\n    }\n};\n/**\n * returns a promise than resolves in a future task. There is no guarantee that the task it resolves in\n * will be the next task but if you await it you can at least be sure that the current task is over and\n * most usefully that the entire microtask queue of the current task has been emptied.\n */ export function atLeastOneTask() {\n    return new Promise((resolve)=>scheduleImmediate(resolve));\n}\n/**\n * This utility function is extracted to make it easier to find places where we are doing\n * specific timing tricks to try to schedule work after React has rendered. This is especially\n * important at the moment because Next.js uses the edge builds of React which use setTimeout to\n * schedule work when you might expect that something like setImmediate would do the trick.\n *\n * Long term we should switch to the node versions of React rendering when possible and then\n * update this to use setImmediate rather than setTimeout\n */ export function waitAtLeastOneReactRenderTask() {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        return new Promise((r)=>setTimeout(r, 0));\n    } else {\n        return new Promise((r)=>setImmediate(r));\n    }\n}\n\n//# sourceMappingURL=scheduler.js.map","export class ReflectAdapter {\n    static get(target, prop, receiver) {\n        const value = Reflect.get(target, prop, receiver);\n        if (typeof value === 'function') {\n            return value.bind(target);\n        }\n        return value;\n    }\n    static set(target, prop, value, receiver) {\n        return Reflect.set(target, prop, value, receiver);\n    }\n    static has(target, prop) {\n        return Reflect.has(target, prop);\n    }\n    static deleteProperty(target, prop) {\n        return Reflect.deleteProperty(target, prop);\n    }\n}\n\n//# sourceMappingURL=reflect.js.map","(()=>{\"use strict\";if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e={};(()=>{var r=e;Object.defineProperty(r,\"__esModule\",{value:true});function lexer(e){var r=[];var n=0;while(n<e.length){var t=e[n];if(t===\"*\"||t===\"+\"||t===\"?\"){r.push({type:\"MODIFIER\",index:n,value:e[n++]});continue}if(t===\"\\\\\"){r.push({type:\"ESCAPED_CHAR\",index:n++,value:e[n++]});continue}if(t===\"{\"){r.push({type:\"OPEN\",index:n,value:e[n++]});continue}if(t===\"}\"){r.push({type:\"CLOSE\",index:n,value:e[n++]});continue}if(t===\":\"){var i=\"\";var a=n+1;while(a<e.length){var o=e.charCodeAt(a);if(o>=48&&o<=57||o>=65&&o<=90||o>=97&&o<=122||o===95){i+=e[a++];continue}break}if(!i)throw new TypeError(\"Missing parameter name at \"+n);r.push({type:\"NAME\",index:n,value:i});n=a;continue}if(t===\"(\"){var f=1;var u=\"\";var a=n+1;if(e[a]===\"?\"){throw new TypeError('Pattern cannot start with \"?\" at '+a)}while(a<e.length){if(e[a]===\"\\\\\"){u+=e[a++]+e[a++];continue}if(e[a]===\")\"){f--;if(f===0){a++;break}}else if(e[a]===\"(\"){f++;if(e[a+1]!==\"?\"){throw new TypeError(\"Capturing groups are not allowed at \"+a)}}u+=e[a++]}if(f)throw new TypeError(\"Unbalanced pattern at \"+n);if(!u)throw new TypeError(\"Missing pattern at \"+n);r.push({type:\"PATTERN\",index:n,value:u});n=a;continue}r.push({type:\"CHAR\",index:n,value:e[n++]})}r.push({type:\"END\",index:n,value:\"\"});return r}function parse(e,r){if(r===void 0){r={}}var n=lexer(e);var t=r.prefixes,i=t===void 0?\"./\":t;var a=\"[^\"+escapeString(r.delimiter||\"/#?\")+\"]+?\";var o=[];var f=0;var u=0;var p=\"\";var tryConsume=function(e){if(u<n.length&&n[u].type===e)return n[u++].value};var mustConsume=function(e){var r=tryConsume(e);if(r!==undefined)return r;var t=n[u],i=t.type,a=t.index;throw new TypeError(\"Unexpected \"+i+\" at \"+a+\", expected \"+e)};var consumeText=function(){var e=\"\";var r;while(r=tryConsume(\"CHAR\")||tryConsume(\"ESCAPED_CHAR\")){e+=r}return e};while(u<n.length){var v=tryConsume(\"CHAR\");var c=tryConsume(\"NAME\");var s=tryConsume(\"PATTERN\");if(c||s){var d=v||\"\";if(i.indexOf(d)===-1){p+=d;d=\"\"}if(p){o.push(p);p=\"\"}o.push({name:c||f++,prefix:d,suffix:\"\",pattern:s||a,modifier:tryConsume(\"MODIFIER\")||\"\"});continue}var g=v||tryConsume(\"ESCAPED_CHAR\");if(g){p+=g;continue}if(p){o.push(p);p=\"\"}var x=tryConsume(\"OPEN\");if(x){var d=consumeText();var l=tryConsume(\"NAME\")||\"\";var h=tryConsume(\"PATTERN\")||\"\";var m=consumeText();mustConsume(\"CLOSE\");o.push({name:l||(h?f++:\"\"),pattern:l&&!h?a:h,prefix:d,suffix:m,modifier:tryConsume(\"MODIFIER\")||\"\"});continue}mustConsume(\"END\")}return o}r.parse=parse;function compile(e,r){return tokensToFunction(parse(e,r),r)}r.compile=compile;function tokensToFunction(e,r){if(r===void 0){r={}}var n=flags(r);var t=r.encode,i=t===void 0?function(e){return e}:t,a=r.validate,o=a===void 0?true:a;var f=e.map((function(e){if(typeof e===\"object\"){return new RegExp(\"^(?:\"+e.pattern+\")$\",n)}}));return function(r){var n=\"\";for(var t=0;t<e.length;t++){var a=e[t];if(typeof a===\"string\"){n+=a;continue}var u=r?r[a.name]:undefined;var p=a.modifier===\"?\"||a.modifier===\"*\";var v=a.modifier===\"*\"||a.modifier===\"+\";if(Array.isArray(u)){if(!v){throw new TypeError('Expected \"'+a.name+'\" to not repeat, but got an array')}if(u.length===0){if(p)continue;throw new TypeError('Expected \"'+a.name+'\" to not be empty')}for(var c=0;c<u.length;c++){var s=i(u[c],a);if(o&&!f[t].test(s)){throw new TypeError('Expected all \"'+a.name+'\" to match \"'+a.pattern+'\", but got \"'+s+'\"')}n+=a.prefix+s+a.suffix}continue}if(typeof u===\"string\"||typeof u===\"number\"){var s=i(String(u),a);if(o&&!f[t].test(s)){throw new TypeError('Expected \"'+a.name+'\" to match \"'+a.pattern+'\", but got \"'+s+'\"')}n+=a.prefix+s+a.suffix;continue}if(p)continue;var d=v?\"an array\":\"a string\";throw new TypeError('Expected \"'+a.name+'\" to be '+d)}return n}}r.tokensToFunction=tokensToFunction;function match(e,r){var n=[];var t=pathToRegexp(e,n,r);return regexpToFunction(t,n,r)}r.match=match;function regexpToFunction(e,r,n){if(n===void 0){n={}}var t=n.decode,i=t===void 0?function(e){return e}:t;return function(n){var t=e.exec(n);if(!t)return false;var a=t[0],o=t.index;var f=Object.create(null);var _loop_1=function(e){if(t[e]===undefined)return\"continue\";var n=r[e-1];if(n.modifier===\"*\"||n.modifier===\"+\"){f[n.name]=t[e].split(n.prefix+n.suffix).map((function(e){return i(e,n)}))}else{f[n.name]=i(t[e],n)}};for(var u=1;u<t.length;u++){_loop_1(u)}return{path:a,index:o,params:f}}}r.regexpToFunction=regexpToFunction;function escapeString(e){return e.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g,\"\\\\$1\")}function flags(e){return e&&e.sensitive?\"\":\"i\"}function regexpToRegexp(e,r){if(!r)return e;var n=e.source.match(/\\((?!\\?)/g);if(n){for(var t=0;t<n.length;t++){r.push({name:t,prefix:\"\",suffix:\"\",modifier:\"\",pattern:\"\"})}}return e}function arrayToRegexp(e,r,n){var t=e.map((function(e){return pathToRegexp(e,r,n).source}));return new RegExp(\"(?:\"+t.join(\"|\")+\")\",flags(n))}function stringToRegexp(e,r,n){return tokensToRegexp(parse(e,n),r,n)}function tokensToRegexp(e,r,n){if(n===void 0){n={}}var t=n.strict,i=t===void 0?false:t,a=n.start,o=a===void 0?true:a,f=n.end,u=f===void 0?true:f,p=n.encode,v=p===void 0?function(e){return e}:p;var c=\"[\"+escapeString(n.endsWith||\"\")+\"]|$\";var s=\"[\"+escapeString(n.delimiter||\"/#?\")+\"]\";var d=o?\"^\":\"\";for(var g=0,x=e;g<x.length;g++){var l=x[g];if(typeof l===\"string\"){d+=escapeString(v(l))}else{var h=escapeString(v(l.prefix));var m=escapeString(v(l.suffix));if(l.pattern){if(r)r.push(l);if(h||m){if(l.modifier===\"+\"||l.modifier===\"*\"){var E=l.modifier===\"*\"?\"?\":\"\";d+=\"(?:\"+h+\"((?:\"+l.pattern+\")(?:\"+m+h+\"(?:\"+l.pattern+\"))*)\"+m+\")\"+E}else{d+=\"(?:\"+h+\"(\"+l.pattern+\")\"+m+\")\"+l.modifier}}else{d+=\"(\"+l.pattern+\")\"+l.modifier}}else{d+=\"(?:\"+h+m+\")\"+l.modifier}}}if(u){if(!i)d+=s+\"?\";d+=!n.endsWith?\"$\":\"(?=\"+c+\")\"}else{var T=e[e.length-1];var y=typeof T===\"string\"?s.indexOf(T[T.length-1])>-1:T===undefined;if(!i){d+=\"(?:\"+s+\"(?=\"+c+\"))?\"}if(!y){d+=\"(?=\"+s+\"|\"+c+\")\"}}return new RegExp(d,flags(n))}r.tokensToRegexp=tokensToRegexp;function pathToRegexp(e,r,n){if(e instanceof RegExp)return regexpToRegexp(e,r);if(Array.isArray(e))return arrayToRegexp(e,r,n);return stringToRegexp(e,r,n)}r.pathToRegexp=pathToRegexp})();module.exports=e})();","// We share the tags manifest between the \"use cache\" handlers and the previous\n// file-system cache.\nexport const tagsManifest = new Map();\nexport const isStale = (tags, timestamp)=>{\n    for (const tag of tags){\n        const revalidatedAt = tagsManifest.get(tag);\n        if (typeof revalidatedAt === 'number' && revalidatedAt >= timestamp) {\n            return true;\n        }\n    }\n    return false;\n};\n\n//# sourceMappingURL=tags-manifest.external.js.map","import { RequestCookies } from '../cookies';\nimport { ResponseCookies } from '../cookies';\nimport { ReflectAdapter } from './reflect';\nimport { workAsyncStorage } from '../../../app-render/work-async-storage.external';\nimport { getExpectedRequestStore } from '../../../app-render/work-unit-async-storage.external';\n/**\n * @internal\n */ export class ReadonlyRequestCookiesError extends Error {\n    constructor(){\n        super('Cookies can only be modified in a Server Action or Route Handler. Read more: https://nextjs.org/docs/app/api-reference/functions/cookies#options');\n    }\n    static callable() {\n        throw new ReadonlyRequestCookiesError();\n    }\n}\nexport class RequestCookiesAdapter {\n    static seal(cookies) {\n        return new Proxy(cookies, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case 'clear':\n                    case 'delete':\n                    case 'set':\n                        return ReadonlyRequestCookiesError.callable;\n                    default:\n                        return ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n}\nconst SYMBOL_MODIFY_COOKIE_VALUES = Symbol.for('next.mutated.cookies');\nexport function getModifiedCookieValues(cookies) {\n    const modified = cookies[SYMBOL_MODIFY_COOKIE_VALUES];\n    if (!modified || !Array.isArray(modified) || modified.length === 0) {\n        return [];\n    }\n    return modified;\n}\nexport function appendMutableCookies(headers, mutableCookies) {\n    const modifiedCookieValues = getModifiedCookieValues(mutableCookies);\n    if (modifiedCookieValues.length === 0) {\n        return false;\n    }\n    // Return a new response that extends the response with\n    // the modified cookies as fallbacks. `res` cookies\n    // will still take precedence.\n    const resCookies = new ResponseCookies(headers);\n    const returnedCookies = resCookies.getAll();\n    // Set the modified cookies as fallbacks.\n    for (const cookie of modifiedCookieValues){\n        resCookies.set(cookie);\n    }\n    // Set the original cookies as the final values.\n    for (const cookie of returnedCookies){\n        resCookies.set(cookie);\n    }\n    return true;\n}\nexport class MutableRequestCookiesAdapter {\n    static wrap(cookies, onUpdateCookies) {\n        const responseCookies = new ResponseCookies(new Headers());\n        for (const cookie of cookies.getAll()){\n            responseCookies.set(cookie);\n        }\n        let modifiedValues = [];\n        const modifiedCookies = new Set();\n        const updateResponseCookies = ()=>{\n            // TODO-APP: change method of getting workStore\n            const workStore = workAsyncStorage.getStore();\n            if (workStore) {\n                workStore.pathWasRevalidated = true;\n            }\n            const allCookies = responseCookies.getAll();\n            modifiedValues = allCookies.filter((c)=>modifiedCookies.has(c.name));\n            if (onUpdateCookies) {\n                const serializedCookies = [];\n                for (const cookie of modifiedValues){\n                    const tempCookies = new ResponseCookies(new Headers());\n                    tempCookies.set(cookie);\n                    serializedCookies.push(tempCookies.toString());\n                }\n                onUpdateCookies(serializedCookies);\n            }\n        };\n        const wrappedCookies = new Proxy(responseCookies, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    // A special symbol to get the modified cookie values\n                    case SYMBOL_MODIFY_COOKIE_VALUES:\n                        return modifiedValues;\n                    // TODO: Throw error if trying to set a cookie after the response\n                    // headers have been set.\n                    case 'delete':\n                        return function(...args) {\n                            modifiedCookies.add(typeof args[0] === 'string' ? args[0] : args[0].name);\n                            try {\n                                target.delete(...args);\n                                return wrappedCookies;\n                            } finally{\n                                updateResponseCookies();\n                            }\n                        };\n                    case 'set':\n                        return function(...args) {\n                            modifiedCookies.add(typeof args[0] === 'string' ? args[0] : args[0].name);\n                            try {\n                                target.set(...args);\n                                return wrappedCookies;\n                            } finally{\n                                updateResponseCookies();\n                            }\n                        };\n                    default:\n                        return ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n        return wrappedCookies;\n    }\n}\nexport function wrapWithMutableAccessCheck(responseCookies) {\n    const wrappedCookies = new Proxy(responseCookies, {\n        get (target, prop, receiver) {\n            switch(prop){\n                case 'delete':\n                    return function(...args) {\n                        ensureCookiesAreStillMutable('cookies().delete');\n                        target.delete(...args);\n                        return wrappedCookies;\n                    };\n                case 'set':\n                    return function(...args) {\n                        ensureCookiesAreStillMutable('cookies().set');\n                        target.set(...args);\n                        return wrappedCookies;\n                    };\n                default:\n                    return ReflectAdapter.get(target, prop, receiver);\n            }\n        }\n    });\n    return wrappedCookies;\n}\nexport function areCookiesMutableInCurrentPhase(requestStore) {\n    return requestStore.phase === 'action';\n}\n/** Ensure that cookies() starts throwing on mutation\n * if we changed phases and can no longer mutate.\n *\n * This can happen when going:\n *   'render' -> 'after'\n *   'action' -> 'render'\n * */ function ensureCookiesAreStillMutable(callingExpression) {\n    const requestStore = getExpectedRequestStore(callingExpression);\n    if (!areCookiesMutableInCurrentPhase(requestStore)) {\n        // TODO: maybe we can give a more precise error message based on callingExpression?\n        throw new ReadonlyRequestCookiesError();\n    }\n}\nexport function responseCookiesToRequestCookies(responseCookies) {\n    const requestCookies = new RequestCookies(new Headers());\n    for (const cookie of responseCookies.getAll()){\n        requestCookies.set(cookie);\n    }\n    return requestCookies;\n}\n\n//# sourceMappingURL=request-cookies.js.map","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-dom.react-server.production.js');\n} else {\n  module.exports = require('./cjs/react-dom.react-server.development.js');\n}\n","export var CachedRouteKind = /*#__PURE__*/ function(CachedRouteKind) {\n    CachedRouteKind[\"APP_PAGE\"] = \"APP_PAGE\";\n    CachedRouteKind[\"APP_ROUTE\"] = \"APP_ROUTE\";\n    CachedRouteKind[\"PAGES\"] = \"PAGES\";\n    CachedRouteKind[\"FETCH\"] = \"FETCH\";\n    CachedRouteKind[\"REDIRECT\"] = \"REDIRECT\";\n    CachedRouteKind[\"IMAGE\"] = \"IMAGE\";\n    return CachedRouteKind;\n}({});\nexport var IncrementalCacheKind = /*#__PURE__*/ function(IncrementalCacheKind) {\n    IncrementalCacheKind[\"APP_PAGE\"] = \"APP_PAGE\";\n    IncrementalCacheKind[\"APP_ROUTE\"] = \"APP_ROUTE\";\n    IncrementalCacheKind[\"PAGES\"] = \"PAGES\";\n    IncrementalCacheKind[\"FETCH\"] = \"FETCH\";\n    IncrementalCacheKind[\"IMAGE\"] = \"IMAGE\";\n    return IncrementalCacheKind;\n}({});\n\n//# sourceMappingURL=types.js.map","export const ENCODED_TAGS = {\n    // opening tags do not have the closing `>` since they can contain other attributes such as `<body className=''>`\n    OPENING: {\n        // <html\n        HTML: new Uint8Array([\n            60,\n            104,\n            116,\n            109,\n            108\n        ]),\n        // <body\n        BODY: new Uint8Array([\n            60,\n            98,\n            111,\n            100,\n            121\n        ])\n    },\n    CLOSED: {\n        // </head>\n        HEAD: new Uint8Array([\n            60,\n            47,\n            104,\n            101,\n            97,\n            100,\n            62\n        ]),\n        // </body>\n        BODY: new Uint8Array([\n            60,\n            47,\n            98,\n            111,\n            100,\n            121,\n            62\n        ]),\n        // </html>\n        HTML: new Uint8Array([\n            60,\n            47,\n            104,\n            116,\n            109,\n            108,\n            62\n        ]),\n        // </body></html>\n        BODY_AND_HTML: new Uint8Array([\n            60,\n            47,\n            98,\n            111,\n            100,\n            121,\n            62,\n            60,\n            47,\n            104,\n            116,\n            109,\n            108,\n            62\n        ])\n    }\n};\n\n//# sourceMappingURL=encodedTags.js.map","import { getTracer } from '../lib/trace/tracer';\nimport { AppRenderSpan } from '../lib/trace/constants';\nimport { DetachedPromise } from '../../lib/detached-promise';\nimport { scheduleImmediate, atLeastOneTask } from '../../lib/scheduler';\nimport { ENCODED_TAGS } from './encodedTags';\nimport { indexOfUint8Array, isEquivalentUint8Arrays, removeFromUint8Array } from './uint8array-helpers';\nimport { MISSING_ROOT_TAGS_ERROR } from '../../shared/lib/errors/constants';\nfunction voidCatch() {\n// this catcher is designed to be used with pipeTo where we expect the underlying\n// pipe implementation to forward errors but we don't want the pipeTo promise to reject\n// and be unhandled\n}\n// We can share the same encoder instance everywhere\n// Notably we cannot do the same for TextDecoder because it is stateful\n// when handling streaming data\nconst encoder = new TextEncoder();\nexport function chainStreams(...streams) {\n    // We could encode this invariant in the arguments but current uses of this function pass\n    // use spread so it would be missed by\n    if (streams.length === 0) {\n        throw Object.defineProperty(new Error('Invariant: chainStreams requires at least one stream'), \"__NEXT_ERROR_CODE\", {\n            value: \"E437\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    // If we only have 1 stream we fast path it by returning just this stream\n    if (streams.length === 1) {\n        return streams[0];\n    }\n    const { readable, writable } = new TransformStream();\n    // We always initiate pipeTo immediately. We know we have at least 2 streams\n    // so we need to avoid closing the writable when this one finishes.\n    let promise = streams[0].pipeTo(writable, {\n        preventClose: true\n    });\n    let i = 1;\n    for(; i < streams.length - 1; i++){\n        const nextStream = streams[i];\n        promise = promise.then(()=>nextStream.pipeTo(writable, {\n                preventClose: true\n            }));\n    }\n    // We can omit the length check because we halted before the last stream and there\n    // is at least two streams so the lastStream here will always be defined\n    const lastStream = streams[i];\n    promise = promise.then(()=>lastStream.pipeTo(writable));\n    // Catch any errors from the streams and ignore them, they will be handled\n    // by whatever is consuming the readable stream.\n    promise.catch(voidCatch);\n    return readable;\n}\nexport function streamFromString(str) {\n    return new ReadableStream({\n        start (controller) {\n            controller.enqueue(encoder.encode(str));\n            controller.close();\n        }\n    });\n}\nexport function streamFromBuffer(chunk) {\n    return new ReadableStream({\n        start (controller) {\n            controller.enqueue(chunk);\n            controller.close();\n        }\n    });\n}\nexport async function streamToBuffer(stream) {\n    const reader = stream.getReader();\n    const chunks = [];\n    while(true){\n        const { done, value } = await reader.read();\n        if (done) {\n            break;\n        }\n        chunks.push(value);\n    }\n    return Buffer.concat(chunks);\n}\nexport async function streamToString(stream, signal) {\n    const decoder = new TextDecoder('utf-8', {\n        fatal: true\n    });\n    let string = '';\n    for await (const chunk of stream){\n        if (signal == null ? void 0 : signal.aborted) {\n            return string;\n        }\n        string += decoder.decode(chunk, {\n            stream: true\n        });\n    }\n    string += decoder.decode();\n    return string;\n}\nexport function createBufferedTransformStream() {\n    let bufferedChunks = [];\n    let bufferByteLength = 0;\n    let pending;\n    const flush = (controller)=>{\n        // If we already have a pending flush, then return early.\n        if (pending) return;\n        const detached = new DetachedPromise();\n        pending = detached;\n        scheduleImmediate(()=>{\n            try {\n                const chunk = new Uint8Array(bufferByteLength);\n                let copiedBytes = 0;\n                for(let i = 0; i < bufferedChunks.length; i++){\n                    const bufferedChunk = bufferedChunks[i];\n                    chunk.set(bufferedChunk, copiedBytes);\n                    copiedBytes += bufferedChunk.byteLength;\n                }\n                // We just wrote all the buffered chunks so we need to reset the bufferedChunks array\n                // and our bufferByteLength to prepare for the next round of buffered chunks\n                bufferedChunks.length = 0;\n                bufferByteLength = 0;\n                controller.enqueue(chunk);\n            } catch  {\n            // If an error occurs while enqueuing it can't be due to this\n            // transformers fault. It's likely due to the controller being\n            // errored due to the stream being cancelled.\n            } finally{\n                pending = undefined;\n                detached.resolve();\n            }\n        });\n    };\n    return new TransformStream({\n        transform (chunk, controller) {\n            // Combine the previous buffer with the new chunk.\n            bufferedChunks.push(chunk);\n            bufferByteLength += chunk.byteLength;\n            // Flush the buffer to the controller.\n            flush(controller);\n        },\n        flush () {\n            if (!pending) return;\n            return pending.promise;\n        }\n    });\n}\nexport function renderToInitialFizzStream({ ReactDOMServer, element, streamOptions }) {\n    return getTracer().trace(AppRenderSpan.renderToReadableStream, async ()=>ReactDOMServer.renderToReadableStream(element, streamOptions));\n}\nfunction createHeadInsertionTransformStream(insert) {\n    let inserted = false;\n    // We need to track if this transform saw any bytes because if it didn't\n    // we won't want to insert any server HTML at all\n    let hasBytes = false;\n    return new TransformStream({\n        async transform (chunk, controller) {\n            hasBytes = true;\n            const insertion = await insert();\n            if (inserted) {\n                if (insertion) {\n                    const encodedInsertion = encoder.encode(insertion);\n                    controller.enqueue(encodedInsertion);\n                }\n                controller.enqueue(chunk);\n            } else {\n                // TODO (@Ethan-Arrowood): Replace the generic `indexOfUint8Array` method with something finely tuned for the subset of things actually being checked for.\n                const index = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.HEAD);\n                // In fully static rendering or non PPR rendering cases:\n                // `/head>` will always be found in the chunk in first chunk rendering.\n                if (index !== -1) {\n                    if (insertion) {\n                        const encodedInsertion = encoder.encode(insertion);\n                        // Get the total count of the bytes in the chunk and the insertion\n                        // e.g.\n                        // chunk = <head><meta charset=\"utf-8\"></head>\n                        // insertion = <script>...</script>\n                        // output = <head><meta charset=\"utf-8\"> [ <script>...</script> ] </head>\n                        const insertedHeadContent = new Uint8Array(chunk.length + encodedInsertion.length);\n                        // Append the first part of the chunk, before the head tag\n                        insertedHeadContent.set(chunk.slice(0, index));\n                        // Append the server inserted content\n                        insertedHeadContent.set(encodedInsertion, index);\n                        // Append the rest of the chunk\n                        insertedHeadContent.set(chunk.slice(index), index + encodedInsertion.length);\n                        controller.enqueue(insertedHeadContent);\n                    } else {\n                        controller.enqueue(chunk);\n                    }\n                    inserted = true;\n                } else {\n                    // This will happens in PPR rendering during next start, when the page is partially rendered.\n                    // When the page resumes, the head tag will be found in the middle of the chunk.\n                    // Where we just need to append the insertion and chunk to the current stream.\n                    // e.g.\n                    // PPR-static: <head>...</head><body> [ resume content ] </body>\n                    // PPR-resume: [ insertion ] [ rest content ]\n                    if (insertion) {\n                        controller.enqueue(encoder.encode(insertion));\n                    }\n                    controller.enqueue(chunk);\n                    inserted = true;\n                }\n            }\n        },\n        async flush (controller) {\n            // Check before closing if there's anything remaining to insert.\n            if (hasBytes) {\n                const insertion = await insert();\n                if (insertion) {\n                    controller.enqueue(encoder.encode(insertion));\n                }\n            }\n        }\n    });\n}\n// Suffix after main body content - scripts before </body>,\n// but wait for the major chunks to be enqueued.\nfunction createDeferredSuffixStream(suffix) {\n    let flushed = false;\n    let pending;\n    const flush = (controller)=>{\n        const detached = new DetachedPromise();\n        pending = detached;\n        scheduleImmediate(()=>{\n            try {\n                controller.enqueue(encoder.encode(suffix));\n            } catch  {\n            // If an error occurs while enqueuing it can't be due to this\n            // transformers fault. It's likely due to the controller being\n            // errored due to the stream being cancelled.\n            } finally{\n                pending = undefined;\n                detached.resolve();\n            }\n        });\n    };\n    return new TransformStream({\n        transform (chunk, controller) {\n            controller.enqueue(chunk);\n            // If we've already flushed, we're done.\n            if (flushed) return;\n            // Schedule the flush to happen.\n            flushed = true;\n            flush(controller);\n        },\n        flush (controller) {\n            if (pending) return pending.promise;\n            if (flushed) return;\n            // Flush now.\n            controller.enqueue(encoder.encode(suffix));\n        }\n    });\n}\n// Merge two streams into one. Ensure the final transform stream is closed\n// when both are finished.\nfunction createMergedTransformStream(stream) {\n    let pull = null;\n    let donePulling = false;\n    async function startPulling(controller) {\n        if (pull) {\n            return;\n        }\n        const reader = stream.getReader();\n        // NOTE: streaming flush\n        // We are buffering here for the inlined data stream because the\n        // \"shell\" stream might be chunkenized again by the underlying stream\n        // implementation, e.g. with a specific high-water mark. To ensure it's\n        // the safe timing to pipe the data stream, this extra tick is\n        // necessary.\n        // We don't start reading until we've left the current Task to ensure\n        // that it's inserted after flushing the shell. Note that this implementation\n        // might get stale if impl details of Fizz change in the future.\n        await atLeastOneTask();\n        try {\n            while(true){\n                const { done, value } = await reader.read();\n                if (done) {\n                    donePulling = true;\n                    return;\n                }\n                controller.enqueue(value);\n            }\n        } catch (err) {\n            controller.error(err);\n        }\n    }\n    return new TransformStream({\n        transform (chunk, controller) {\n            controller.enqueue(chunk);\n            // Start the streaming if it hasn't already been started yet.\n            if (!pull) {\n                pull = startPulling(controller);\n            }\n        },\n        flush (controller) {\n            if (donePulling) {\n                return;\n            }\n            return pull || startPulling(controller);\n        }\n    });\n}\nconst CLOSE_TAG = '</body></html>';\n/**\n * This transform stream moves the suffix to the end of the stream, so results\n * like `</body></html><script>...</script>` will be transformed to\n * `<script>...</script></body></html>`.\n */ function createMoveSuffixStream() {\n    let foundSuffix = false;\n    return new TransformStream({\n        transform (chunk, controller) {\n            if (foundSuffix) {\n                return controller.enqueue(chunk);\n            }\n            const index = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.BODY_AND_HTML);\n            if (index > -1) {\n                foundSuffix = true;\n                // If the whole chunk is the suffix, then don't write anything, it will\n                // be written in the flush.\n                if (chunk.length === ENCODED_TAGS.CLOSED.BODY_AND_HTML.length) {\n                    return;\n                }\n                // Write out the part before the suffix.\n                const before = chunk.slice(0, index);\n                controller.enqueue(before);\n                // In the case where the suffix is in the middle of the chunk, we need\n                // to split the chunk into two parts.\n                if (chunk.length > ENCODED_TAGS.CLOSED.BODY_AND_HTML.length + index) {\n                    // Write out the part after the suffix.\n                    const after = chunk.slice(index + ENCODED_TAGS.CLOSED.BODY_AND_HTML.length);\n                    controller.enqueue(after);\n                }\n            } else {\n                controller.enqueue(chunk);\n            }\n        },\n        flush (controller) {\n            // Even if we didn't find the suffix, the HTML is not valid if we don't\n            // add it, so insert it at the end.\n            controller.enqueue(ENCODED_TAGS.CLOSED.BODY_AND_HTML);\n        }\n    });\n}\nfunction createStripDocumentClosingTagsTransform() {\n    return new TransformStream({\n        transform (chunk, controller) {\n            // We rely on the assumption that chunks will never break across a code unit.\n            // This is reasonable because we currently concat all of React's output from a single\n            // flush into one chunk before streaming it forward which means the chunk will represent\n            // a single coherent utf-8 string. This is not safe to use if we change our streaming to no\n            // longer do this large buffered chunk\n            if (isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.BODY_AND_HTML) || isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.BODY) || isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.HTML)) {\n                // the entire chunk is the closing tags; return without enqueueing anything.\n                return;\n            }\n            // We assume these tags will go at together at the end of the document and that\n            // they won't appear anywhere else in the document. This is not really a safe assumption\n            // but until we revamp our streaming infra this is a performant way to string the tags\n            chunk = removeFromUint8Array(chunk, ENCODED_TAGS.CLOSED.BODY);\n            chunk = removeFromUint8Array(chunk, ENCODED_TAGS.CLOSED.HTML);\n            controller.enqueue(chunk);\n        }\n    });\n}\n/*\n * Checks if the root layout is missing the html or body tags\n * and if so, it will inject a script tag to throw an error in the browser, showing the user\n * the error message in the error overlay.\n */ export function createRootLayoutValidatorStream() {\n    let foundHtml = false;\n    let foundBody = false;\n    return new TransformStream({\n        async transform (chunk, controller) {\n            // Peek into the streamed chunk to see if the tags are present.\n            if (!foundHtml && indexOfUint8Array(chunk, ENCODED_TAGS.OPENING.HTML) > -1) {\n                foundHtml = true;\n            }\n            if (!foundBody && indexOfUint8Array(chunk, ENCODED_TAGS.OPENING.BODY) > -1) {\n                foundBody = true;\n            }\n            controller.enqueue(chunk);\n        },\n        flush (controller) {\n            const missingTags = [];\n            if (!foundHtml) missingTags.push('html');\n            if (!foundBody) missingTags.push('body');\n            if (!missingTags.length) return;\n            controller.enqueue(encoder.encode(`<html id=\"__next_error__\">\n            <template\n              data-next-error-message=\"Missing ${missingTags.map((c)=>`<${c}>`).join(missingTags.length > 1 ? ' and ' : '')} tags in the root layout.\\nRead more at https://nextjs.org/docs/messages/missing-root-layout-tags\"\"\n              data-next-error-digest=\"${MISSING_ROOT_TAGS_ERROR}\"\n              data-next-error-stack=\"\"\n            ></template>\n          `));\n        }\n    });\n}\nfunction chainTransformers(readable, transformers) {\n    let stream = readable;\n    for (const transformer of transformers){\n        if (!transformer) continue;\n        stream = stream.pipeThrough(transformer);\n    }\n    return stream;\n}\nexport async function continueFizzStream(renderStream, { suffix, inlinedDataStream, isStaticGeneration, getServerInsertedHTML, getServerInsertedMetadata, validateRootLayout }) {\n    // Suffix itself might contain close tags at the end, so we need to split it.\n    const suffixUnclosed = suffix ? suffix.split(CLOSE_TAG, 1)[0] : null;\n    // If we're generating static HTML and there's an `allReady` promise on the\n    // stream, we need to wait for it to resolve before continuing.\n    if (isStaticGeneration && 'allReady' in renderStream) {\n        await renderStream.allReady;\n    }\n    return chainTransformers(renderStream, [\n        // Buffer everything to avoid flushing too frequently\n        createBufferedTransformStream(),\n        // Insert generated metadata\n        createHeadInsertionTransformStream(getServerInsertedMetadata),\n        // Insert suffix content\n        suffixUnclosed != null && suffixUnclosed.length > 0 ? createDeferredSuffixStream(suffixUnclosed) : null,\n        // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n        inlinedDataStream ? createMergedTransformStream(inlinedDataStream) : null,\n        // Validate the root layout for missing html or body tags\n        validateRootLayout ? createRootLayoutValidatorStream() : null,\n        // Close tags should always be deferred to the end\n        createMoveSuffixStream(),\n        // Special head insertions\n        // TODO-APP: Insert server side html to end of head in app layout rendering, to avoid\n        // hydration errors. Remove this once it's ready to be handled by react itself.\n        createHeadInsertionTransformStream(getServerInsertedHTML)\n    ]);\n}\nexport async function continueDynamicPrerender(prerenderStream, { getServerInsertedHTML, getServerInsertedMetadata }) {\n    return prerenderStream// Buffer everything to avoid flushing too frequently\n    .pipeThrough(createBufferedTransformStream()).pipeThrough(createStripDocumentClosingTagsTransform())// Insert generated tags to head\n    .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))// Insert generated metadata\n    .pipeThrough(createHeadInsertionTransformStream(getServerInsertedMetadata));\n}\nexport async function continueStaticPrerender(prerenderStream, { inlinedDataStream, getServerInsertedHTML, getServerInsertedMetadata }) {\n    return prerenderStream// Buffer everything to avoid flushing too frequently\n    .pipeThrough(createBufferedTransformStream())// Insert generated tags to head\n    .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))// Insert generated metadata to head\n    .pipeThrough(createHeadInsertionTransformStream(getServerInsertedMetadata))// Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n    .pipeThrough(createMergedTransformStream(inlinedDataStream))// Close tags should always be deferred to the end\n    .pipeThrough(createMoveSuffixStream());\n}\nexport async function continueDynamicHTMLResume(renderStream, { inlinedDataStream, getServerInsertedHTML, getServerInsertedMetadata }) {\n    return renderStream// Buffer everything to avoid flushing too frequently\n    .pipeThrough(createBufferedTransformStream())// Insert generated tags to head\n    .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))// Insert generated metadata to body\n    .pipeThrough(createHeadInsertionTransformStream(getServerInsertedMetadata))// Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n    .pipeThrough(createMergedTransformStream(inlinedDataStream))// Close tags should always be deferred to the end\n    .pipeThrough(createMoveSuffixStream());\n}\nexport function createDocumentClosingStream() {\n    return streamFromString(CLOSE_TAG);\n}\n\n//# sourceMappingURL=node-web-streams-helper.js.map","import { chainStreams, streamFromBuffer, streamFromString, streamToBuffer, streamToString } from './stream-utils/node-web-streams-helper';\nimport { isAbortError, pipeToNodeResponse } from './pipe-readable';\nexport default class RenderResult {\n    /**\n   * Creates a new RenderResult instance from a static response.\n   *\n   * @param value the static response value\n   * @returns a new RenderResult instance\n   */ static fromStatic(value) {\n        return new RenderResult(value, {\n            metadata: {}\n        });\n    }\n    constructor(response, { contentType, waitUntil, metadata }){\n        this.response = response;\n        this.contentType = contentType;\n        this.metadata = metadata;\n        this.waitUntil = waitUntil;\n    }\n    assignMetadata(metadata) {\n        Object.assign(this.metadata, metadata);\n    }\n    /**\n   * Returns true if the response is null. It can be null if the response was\n   * not found or was already sent.\n   */ get isNull() {\n        return this.response === null;\n    }\n    /**\n   * Returns false if the response is a string. It can be a string if the page\n   * was prerendered. If it's not, then it was generated dynamically.\n   */ get isDynamic() {\n        return typeof this.response !== 'string';\n    }\n    toUnchunkedBuffer(stream = false) {\n        if (this.response === null) {\n            throw Object.defineProperty(new Error('Invariant: null responses cannot be unchunked'), \"__NEXT_ERROR_CODE\", {\n                value: \"E274\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (typeof this.response !== 'string') {\n            if (!stream) {\n                throw Object.defineProperty(new Error('Invariant: dynamic responses cannot be unchunked. This is a bug in Next.js'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E81\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            return streamToBuffer(this.readable);\n        }\n        return Buffer.from(this.response);\n    }\n    toUnchunkedString(stream = false) {\n        if (this.response === null) {\n            throw Object.defineProperty(new Error('Invariant: null responses cannot be unchunked'), \"__NEXT_ERROR_CODE\", {\n                value: \"E274\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (typeof this.response !== 'string') {\n            if (!stream) {\n                throw Object.defineProperty(new Error('Invariant: dynamic responses cannot be unchunked. This is a bug in Next.js'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E81\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            return streamToString(this.readable);\n        }\n        return this.response;\n    }\n    /**\n   * Returns the response if it is a stream, or throws an error if it is a\n   * string.\n   */ get readable() {\n        if (this.response === null) {\n            throw Object.defineProperty(new Error('Invariant: null responses cannot be streamed'), \"__NEXT_ERROR_CODE\", {\n                value: \"E14\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (typeof this.response === 'string') {\n            throw Object.defineProperty(new Error('Invariant: static responses cannot be streamed'), \"__NEXT_ERROR_CODE\", {\n                value: \"E151\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (Buffer.isBuffer(this.response)) {\n            return streamFromBuffer(this.response);\n        }\n        // If the response is an array of streams, then chain them together.\n        if (Array.isArray(this.response)) {\n            return chainStreams(...this.response);\n        }\n        return this.response;\n    }\n    /**\n   * Chains a new stream to the response. This will convert the response to an\n   * array of streams if it is not already one and will add the new stream to\n   * the end. When this response is piped, all of the streams will be piped\n   * one after the other.\n   *\n   * @param readable The new stream to chain\n   */ chain(readable) {\n        if (this.response === null) {\n            throw Object.defineProperty(new Error('Invariant: response is null. This is a bug in Next.js'), \"__NEXT_ERROR_CODE\", {\n                value: \"E258\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        // If the response is not an array of streams already, make it one.\n        let responses;\n        if (typeof this.response === 'string') {\n            responses = [\n                streamFromString(this.response)\n            ];\n        } else if (Array.isArray(this.response)) {\n            responses = this.response;\n        } else if (Buffer.isBuffer(this.response)) {\n            responses = [\n                streamFromBuffer(this.response)\n            ];\n        } else {\n            responses = [\n                this.response\n            ];\n        }\n        // Add the new stream to the array.\n        responses.push(readable);\n        // Update the response.\n        this.response = responses;\n    }\n    /**\n   * Pipes the response to a writable stream. This will close/cancel the\n   * writable stream if an error is encountered. If this doesn't throw, then\n   * the writable stream will be closed or aborted.\n   *\n   * @param writable Writable stream to pipe the response to\n   */ async pipeTo(writable) {\n        try {\n            await this.readable.pipeTo(writable, {\n                // We want to close the writable stream ourselves so that we can wait\n                // for the waitUntil promise to resolve before closing it. If an error\n                // is encountered, we'll abort the writable stream if we swallowed the\n                // error.\n                preventClose: true\n            });\n            // If there is a waitUntil promise, wait for it to resolve before\n            // closing the writable stream.\n            if (this.waitUntil) await this.waitUntil;\n            // Close the writable stream.\n            await writable.close();\n        } catch (err) {\n            // If this is an abort error, we should abort the writable stream (as we\n            // took ownership of it when we started piping). We don't need to re-throw\n            // because we handled the error.\n            if (isAbortError(err)) {\n                // Abort the writable stream if an error is encountered.\n                await writable.abort(err);\n                return;\n            }\n            // We're not aborting the writer here as when this method throws it's not\n            // clear as to how so the caller should assume it's their responsibility\n            // to clean up the writer.\n            throw err;\n        }\n    }\n    /**\n   * Pipes the response to a node response. This will close/cancel the node\n   * response if an error is encountered.\n   *\n   * @param res\n   */ async pipeToNodeResponse(res) {\n        await pipeToNodeResponse(this.readable, res, this.waitUntil);\n    }\n}\n\n//# sourceMappingURL=render-result.js.map","import { CachedRouteKind, IncrementalCacheKind } from './types';\nimport RenderResult from '../render-result';\nimport { RouteKind } from '../route-kind';\nexport async function fromResponseCacheEntry(cacheEntry) {\n    var _cacheEntry_value, _cacheEntry_value1;\n    return {\n        ...cacheEntry,\n        value: ((_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) === CachedRouteKind.PAGES ? {\n            kind: CachedRouteKind.PAGES,\n            html: await cacheEntry.value.html.toUnchunkedString(true),\n            pageData: cacheEntry.value.pageData,\n            headers: cacheEntry.value.headers,\n            status: cacheEntry.value.status\n        } : ((_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind) === CachedRouteKind.APP_PAGE ? {\n            kind: CachedRouteKind.APP_PAGE,\n            html: await cacheEntry.value.html.toUnchunkedString(true),\n            postponed: cacheEntry.value.postponed,\n            rscData: cacheEntry.value.rscData,\n            headers: cacheEntry.value.headers,\n            status: cacheEntry.value.status,\n            segmentData: cacheEntry.value.segmentData\n        } : cacheEntry.value\n    };\n}\nexport async function toResponseCacheEntry(response) {\n    var _response_value, _response_value1;\n    if (!response) return null;\n    return {\n        isMiss: response.isMiss,\n        isStale: response.isStale,\n        cacheControl: response.cacheControl,\n        isFallback: response.isFallback,\n        value: ((_response_value = response.value) == null ? void 0 : _response_value.kind) === CachedRouteKind.PAGES ? {\n            kind: CachedRouteKind.PAGES,\n            html: RenderResult.fromStatic(response.value.html),\n            pageData: response.value.pageData,\n            headers: response.value.headers,\n            status: response.value.status\n        } : ((_response_value1 = response.value) == null ? void 0 : _response_value1.kind) === CachedRouteKind.APP_PAGE ? {\n            kind: CachedRouteKind.APP_PAGE,\n            html: RenderResult.fromStatic(response.value.html),\n            rscData: response.value.rscData,\n            headers: response.value.headers,\n            status: response.value.status,\n            postponed: response.value.postponed,\n            segmentData: response.value.segmentData\n        } : response.value\n    };\n}\nexport function routeKindToIncrementalCacheKind(routeKind) {\n    switch(routeKind){\n        case RouteKind.PAGES:\n            return IncrementalCacheKind.PAGES;\n        case RouteKind.APP_PAGE:\n            return IncrementalCacheKind.APP_PAGE;\n        case RouteKind.IMAGE:\n            return IncrementalCacheKind.IMAGE;\n        case RouteKind.APP_ROUTE:\n            return IncrementalCacheKind.APP_ROUTE;\n        default:\n            throw Object.defineProperty(new Error(`Unexpected route kind ${routeKind}`), \"__NEXT_ERROR_CODE\", {\n                value: \"E64\",\n                enumerable: false,\n                configurable: true\n            });\n    }\n}\n\n//# sourceMappingURL=utils.js.map","import { Batcher } from '../../lib/batcher';\nimport { scheduleOnNextTick } from '../../lib/scheduler';\nimport { fromResponseCacheEntry, routeKindToIncrementalCacheKind, toResponseCacheEntry } from './utils';\nexport * from './types';\nexport default class ResponseCache {\n    constructor(minimalMode){\n        this.batcher = Batcher.create({\n            // Ensure on-demand revalidate doesn't block normal requests, it should be\n            // safe to run an on-demand revalidate for the same key as a normal request.\n            cacheKeyFn: ({ key, isOnDemandRevalidate })=>`${key}-${isOnDemandRevalidate ? '1' : '0'}`,\n            // We wait to do any async work until after we've added our promise to\n            // `pendingResponses` to ensure that any any other calls will reuse the\n            // same promise until we've fully finished our work.\n            schedulerFn: scheduleOnNextTick\n        });\n        // this is a hack to avoid Webpack knowing this is equal to this.minimalMode\n        // because we replace this.minimalMode to true in production bundles.\n        const minimalModeKey = 'minimalMode';\n        this[minimalModeKey] = minimalMode;\n    }\n    async get(key, responseGenerator, context) {\n        // If there is no key for the cache, we can't possibly look this up in the\n        // cache so just return the result of the response generator.\n        if (!key) {\n            return responseGenerator({\n                hasResolved: false,\n                previousCacheEntry: null\n            });\n        }\n        const { incrementalCache, isOnDemandRevalidate = false, isFallback = false, isRoutePPREnabled = false } = context;\n        const response = await this.batcher.batch({\n            key,\n            isOnDemandRevalidate\n        }, async (cacheKey, resolve)=>{\n            var _this_previousCacheItem;\n            // We keep the previous cache entry around to leverage when the\n            // incremental cache is disabled in minimal mode.\n            if (this.minimalMode && ((_this_previousCacheItem = this.previousCacheItem) == null ? void 0 : _this_previousCacheItem.key) === cacheKey && this.previousCacheItem.expiresAt > Date.now()) {\n                return this.previousCacheItem.entry;\n            }\n            // Coerce the kindHint into a given kind for the incremental cache.\n            const kind = routeKindToIncrementalCacheKind(context.routeKind);\n            let resolved = false;\n            let cachedResponse = null;\n            try {\n                cachedResponse = !this.minimalMode ? await incrementalCache.get(key, {\n                    kind,\n                    isRoutePPREnabled: context.isRoutePPREnabled,\n                    isFallback\n                }) : null;\n                if (cachedResponse && !isOnDemandRevalidate) {\n                    resolve(cachedResponse);\n                    resolved = true;\n                    if (!cachedResponse.isStale || context.isPrefetch) {\n                        // The cached value is still valid, so we don't need\n                        // to update it yet.\n                        return null;\n                    }\n                }\n                const cacheEntry = await responseGenerator({\n                    hasResolved: resolved,\n                    previousCacheEntry: cachedResponse,\n                    isRevalidating: true\n                });\n                // If the cache entry couldn't be generated, we don't want to cache\n                // the result.\n                if (!cacheEntry) {\n                    // Unset the previous cache item if it was set.\n                    if (this.minimalMode) this.previousCacheItem = undefined;\n                    return null;\n                }\n                const resolveValue = await fromResponseCacheEntry({\n                    ...cacheEntry,\n                    isMiss: !cachedResponse\n                });\n                if (!resolveValue) {\n                    // Unset the previous cache item if it was set.\n                    if (this.minimalMode) this.previousCacheItem = undefined;\n                    return null;\n                }\n                // For on-demand revalidate wait to resolve until cache is set.\n                // Otherwise resolve now.\n                if (!isOnDemandRevalidate && !resolved) {\n                    resolve(resolveValue);\n                    resolved = true;\n                }\n                // We want to persist the result only if it has a cache control value\n                // defined.\n                if (resolveValue.cacheControl) {\n                    if (this.minimalMode) {\n                        this.previousCacheItem = {\n                            key: cacheKey,\n                            entry: resolveValue,\n                            expiresAt: Date.now() + 1000\n                        };\n                    } else {\n                        await incrementalCache.set(key, resolveValue.value, {\n                            cacheControl: resolveValue.cacheControl,\n                            isRoutePPREnabled,\n                            isFallback\n                        });\n                    }\n                }\n                return resolveValue;\n            } catch (err) {\n                // When a path is erroring we automatically re-set the existing cache\n                // with new revalidate and expire times to prevent non-stop retrying.\n                if (cachedResponse == null ? void 0 : cachedResponse.cacheControl) {\n                    const newRevalidate = Math.min(Math.max(cachedResponse.cacheControl.revalidate || 3, 3), 30);\n                    const newExpire = cachedResponse.cacheControl.expire === undefined ? undefined : Math.max(newRevalidate + 3, cachedResponse.cacheControl.expire);\n                    await incrementalCache.set(key, cachedResponse.value, {\n                        cacheControl: {\n                            revalidate: newRevalidate,\n                            expire: newExpire\n                        },\n                        isRoutePPREnabled,\n                        isFallback\n                    });\n                }\n                // While revalidating in the background we can't reject as we already\n                // resolved the cache entry so log the error here.\n                if (resolved) {\n                    console.error(err);\n                    return null;\n                }\n                // We haven't resolved yet, so let's throw to indicate an error.\n                throw err;\n            }\n        });\n        return toResponseCacheEntry(response);\n    }\n}\n\n//# sourceMappingURL=index.js.map","/**\n * This module is for next.js server internal usage of path module.\n * It will use native path module for nodejs runtime.\n * It will use path-browserify polyfill for edge runtime.\n */\nlet path\n\nif (process.env.NEXT_RUNTIME === 'edge') {\n  path = require('next/dist/compiled/path-browserify')\n} else {\n  path = require('path')\n}\n\nmodule.exports = path\n","import { NEXT_INTERCEPTION_MARKER_PREFIX, NEXT_QUERY_PARAM_PREFIX } from '../../lib/constants';\n/**\n * Converts a Node.js IncomingHttpHeaders object to a Headers object. Any\n * headers with multiple values will be joined with a comma and space. Any\n * headers that have an undefined value will be ignored and others will be\n * coerced to strings.\n *\n * @param nodeHeaders the headers object to convert\n * @returns the converted headers object\n */ export function fromNodeOutgoingHttpHeaders(nodeHeaders) {\n    const headers = new Headers();\n    for (let [key, value] of Object.entries(nodeHeaders)){\n        const values = Array.isArray(value) ? value : [\n            value\n        ];\n        for (let v of values){\n            if (typeof v === 'undefined') continue;\n            if (typeof v === 'number') {\n                v = v.toString();\n            }\n            headers.append(key, v);\n        }\n    }\n    return headers;\n}\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/ export function splitCookiesString(cookiesString) {\n    var cookiesStrings = [];\n    var pos = 0;\n    var start;\n    var ch;\n    var lastComma;\n    var nextStart;\n    var cookiesSeparatorFound;\n    function skipWhitespace() {\n        while(pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))){\n            pos += 1;\n        }\n        return pos < cookiesString.length;\n    }\n    function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== '=' && ch !== ';' && ch !== ',';\n    }\n    while(pos < cookiesString.length){\n        start = pos;\n        cookiesSeparatorFound = false;\n        while(skipWhitespace()){\n            ch = cookiesString.charAt(pos);\n            if (ch === ',') {\n                // ',' is a cookie separator if we have later first '=', not ';' or ','\n                lastComma = pos;\n                pos += 1;\n                skipWhitespace();\n                nextStart = pos;\n                while(pos < cookiesString.length && notSpecialChar()){\n                    pos += 1;\n                }\n                // currently special character\n                if (pos < cookiesString.length && cookiesString.charAt(pos) === '=') {\n                    // we found cookies separator\n                    cookiesSeparatorFound = true;\n                    // pos is inside the next cookie, so back up and return it.\n                    pos = nextStart;\n                    cookiesStrings.push(cookiesString.substring(start, lastComma));\n                    start = pos;\n                } else {\n                    // in param ',' or param separator ';',\n                    // we continue from that comma\n                    pos = lastComma + 1;\n                }\n            } else {\n                pos += 1;\n            }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n            cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n    }\n    return cookiesStrings;\n}\n/**\n * Converts a Headers object to a Node.js OutgoingHttpHeaders object. This is\n * required to support the set-cookie header, which may have multiple values.\n *\n * @param headers the headers object to convert\n * @returns the converted headers object\n */ export function toNodeOutgoingHttpHeaders(headers) {\n    const nodeHeaders = {};\n    const cookies = [];\n    if (headers) {\n        for (const [key, value] of headers.entries()){\n            if (key.toLowerCase() === 'set-cookie') {\n                // We may have gotten a comma joined string of cookies, or multiple\n                // set-cookie headers. We need to merge them into one header array\n                // to represent all the cookies.\n                cookies.push(...splitCookiesString(value));\n                nodeHeaders[key] = cookies.length === 1 ? cookies[0] : cookies;\n            } else {\n                nodeHeaders[key] = value;\n            }\n        }\n    }\n    return nodeHeaders;\n}\n/**\n * Validate the correctness of a user-provided URL.\n */ export function validateURL(url) {\n    try {\n        return String(new URL(String(url)));\n    } catch (error) {\n        throw Object.defineProperty(new Error(`URL is malformed \"${String(url)}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`, {\n            cause: error\n        }), \"__NEXT_ERROR_CODE\", {\n            value: \"E61\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n}\n/**\n * Normalizes `nxtP` and `nxtI` query param values to remove the prefix.\n * This function does not mutate the input key.\n */ export function normalizeNextQueryParam(key) {\n    const prefixes = [\n        NEXT_QUERY_PARAM_PREFIX,\n        NEXT_INTERCEPTION_MARKER_PREFIX\n    ];\n    for (const prefix of prefixes){\n        if (key !== prefix && key.startsWith(prefix)) {\n            return key.substring(prefix.length);\n        }\n    }\n    return null;\n}\n\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_HEADERS = void 0;\nconst version_1 = require(\"./version\");\nexports.DEFAULT_HEADERS = { 'X-Client-Info': `postgrest-js/${version_1.version}` };\n//# sourceMappingURL=constants.js.map","/**\n * Contains predefined constants for the trace span name in next/server.\n *\n * Currently, next/server/tracer is internal implementation only for tracking\n * next.js's implementation only with known span names defined here.\n **/ // eslint typescript has a bug with TS enums\n/* eslint-disable no-shadow */ var BaseServerSpan = /*#__PURE__*/ function(BaseServerSpan) {\n    BaseServerSpan[\"handleRequest\"] = \"BaseServer.handleRequest\";\n    BaseServerSpan[\"run\"] = \"BaseServer.run\";\n    BaseServerSpan[\"pipe\"] = \"BaseServer.pipe\";\n    BaseServerSpan[\"getStaticHTML\"] = \"BaseServer.getStaticHTML\";\n    BaseServerSpan[\"render\"] = \"BaseServer.render\";\n    BaseServerSpan[\"renderToResponseWithComponents\"] = \"BaseServer.renderToResponseWithComponents\";\n    BaseServerSpan[\"renderToResponse\"] = \"BaseServer.renderToResponse\";\n    BaseServerSpan[\"renderToHTML\"] = \"BaseServer.renderToHTML\";\n    BaseServerSpan[\"renderError\"] = \"BaseServer.renderError\";\n    BaseServerSpan[\"renderErrorToResponse\"] = \"BaseServer.renderErrorToResponse\";\n    BaseServerSpan[\"renderErrorToHTML\"] = \"BaseServer.renderErrorToHTML\";\n    BaseServerSpan[\"render404\"] = \"BaseServer.render404\";\n    return BaseServerSpan;\n}(BaseServerSpan || {});\nvar LoadComponentsSpan = /*#__PURE__*/ function(LoadComponentsSpan) {\n    LoadComponentsSpan[\"loadDefaultErrorComponents\"] = \"LoadComponents.loadDefaultErrorComponents\";\n    LoadComponentsSpan[\"loadComponents\"] = \"LoadComponents.loadComponents\";\n    return LoadComponentsSpan;\n}(LoadComponentsSpan || {});\nvar NextServerSpan = /*#__PURE__*/ function(NextServerSpan) {\n    NextServerSpan[\"getRequestHandler\"] = \"NextServer.getRequestHandler\";\n    NextServerSpan[\"getServer\"] = \"NextServer.getServer\";\n    NextServerSpan[\"getServerRequestHandler\"] = \"NextServer.getServerRequestHandler\";\n    NextServerSpan[\"createServer\"] = \"createServer.createServer\";\n    return NextServerSpan;\n}(NextServerSpan || {});\nvar NextNodeServerSpan = /*#__PURE__*/ function(NextNodeServerSpan) {\n    NextNodeServerSpan[\"compression\"] = \"NextNodeServer.compression\";\n    NextNodeServerSpan[\"getBuildId\"] = \"NextNodeServer.getBuildId\";\n    NextNodeServerSpan[\"createComponentTree\"] = \"NextNodeServer.createComponentTree\";\n    NextNodeServerSpan[\"clientComponentLoading\"] = \"NextNodeServer.clientComponentLoading\";\n    NextNodeServerSpan[\"getLayoutOrPageModule\"] = \"NextNodeServer.getLayoutOrPageModule\";\n    NextNodeServerSpan[\"generateStaticRoutes\"] = \"NextNodeServer.generateStaticRoutes\";\n    NextNodeServerSpan[\"generateFsStaticRoutes\"] = \"NextNodeServer.generateFsStaticRoutes\";\n    NextNodeServerSpan[\"generatePublicRoutes\"] = \"NextNodeServer.generatePublicRoutes\";\n    NextNodeServerSpan[\"generateImageRoutes\"] = \"NextNodeServer.generateImageRoutes.route\";\n    NextNodeServerSpan[\"sendRenderResult\"] = \"NextNodeServer.sendRenderResult\";\n    NextNodeServerSpan[\"proxyRequest\"] = \"NextNodeServer.proxyRequest\";\n    NextNodeServerSpan[\"runApi\"] = \"NextNodeServer.runApi\";\n    NextNodeServerSpan[\"render\"] = \"NextNodeServer.render\";\n    NextNodeServerSpan[\"renderHTML\"] = \"NextNodeServer.renderHTML\";\n    NextNodeServerSpan[\"imageOptimizer\"] = \"NextNodeServer.imageOptimizer\";\n    NextNodeServerSpan[\"getPagePath\"] = \"NextNodeServer.getPagePath\";\n    NextNodeServerSpan[\"getRoutesManifest\"] = \"NextNodeServer.getRoutesManifest\";\n    NextNodeServerSpan[\"findPageComponents\"] = \"NextNodeServer.findPageComponents\";\n    NextNodeServerSpan[\"getFontManifest\"] = \"NextNodeServer.getFontManifest\";\n    NextNodeServerSpan[\"getServerComponentManifest\"] = \"NextNodeServer.getServerComponentManifest\";\n    NextNodeServerSpan[\"getRequestHandler\"] = \"NextNodeServer.getRequestHandler\";\n    NextNodeServerSpan[\"renderToHTML\"] = \"NextNodeServer.renderToHTML\";\n    NextNodeServerSpan[\"renderError\"] = \"NextNodeServer.renderError\";\n    NextNodeServerSpan[\"renderErrorToHTML\"] = \"NextNodeServer.renderErrorToHTML\";\n    NextNodeServerSpan[\"render404\"] = \"NextNodeServer.render404\";\n    NextNodeServerSpan[\"startResponse\"] = \"NextNodeServer.startResponse\";\n    // nested inner span, does not require parent scope name\n    NextNodeServerSpan[\"route\"] = \"route\";\n    NextNodeServerSpan[\"onProxyReq\"] = \"onProxyReq\";\n    NextNodeServerSpan[\"apiResolver\"] = \"apiResolver\";\n    NextNodeServerSpan[\"internalFetch\"] = \"internalFetch\";\n    return NextNodeServerSpan;\n}(NextNodeServerSpan || {});\nvar StartServerSpan = /*#__PURE__*/ function(StartServerSpan) {\n    StartServerSpan[\"startServer\"] = \"startServer.startServer\";\n    return StartServerSpan;\n}(StartServerSpan || {});\nvar RenderSpan = /*#__PURE__*/ function(RenderSpan) {\n    RenderSpan[\"getServerSideProps\"] = \"Render.getServerSideProps\";\n    RenderSpan[\"getStaticProps\"] = \"Render.getStaticProps\";\n    RenderSpan[\"renderToString\"] = \"Render.renderToString\";\n    RenderSpan[\"renderDocument\"] = \"Render.renderDocument\";\n    RenderSpan[\"createBodyResult\"] = \"Render.createBodyResult\";\n    return RenderSpan;\n}(RenderSpan || {});\nvar AppRenderSpan = /*#__PURE__*/ function(AppRenderSpan) {\n    AppRenderSpan[\"renderToString\"] = \"AppRender.renderToString\";\n    AppRenderSpan[\"renderToReadableStream\"] = \"AppRender.renderToReadableStream\";\n    AppRenderSpan[\"getBodyResult\"] = \"AppRender.getBodyResult\";\n    AppRenderSpan[\"fetch\"] = \"AppRender.fetch\";\n    return AppRenderSpan;\n}(AppRenderSpan || {});\nvar RouterSpan = /*#__PURE__*/ function(RouterSpan) {\n    RouterSpan[\"executeRoute\"] = \"Router.executeRoute\";\n    return RouterSpan;\n}(RouterSpan || {});\nvar NodeSpan = /*#__PURE__*/ function(NodeSpan) {\n    NodeSpan[\"runHandler\"] = \"Node.runHandler\";\n    return NodeSpan;\n}(NodeSpan || {});\nvar AppRouteRouteHandlersSpan = /*#__PURE__*/ function(AppRouteRouteHandlersSpan) {\n    AppRouteRouteHandlersSpan[\"runHandler\"] = \"AppRouteRouteHandlers.runHandler\";\n    return AppRouteRouteHandlersSpan;\n}(AppRouteRouteHandlersSpan || {});\nvar ResolveMetadataSpan = /*#__PURE__*/ function(ResolveMetadataSpan) {\n    ResolveMetadataSpan[\"generateMetadata\"] = \"ResolveMetadata.generateMetadata\";\n    ResolveMetadataSpan[\"generateViewport\"] = \"ResolveMetadata.generateViewport\";\n    return ResolveMetadataSpan;\n}(ResolveMetadataSpan || {});\nvar MiddlewareSpan = /*#__PURE__*/ function(MiddlewareSpan) {\n    MiddlewareSpan[\"execute\"] = \"Middleware.execute\";\n    return MiddlewareSpan;\n}(MiddlewareSpan || {});\n// This list is used to filter out spans that are not relevant to the user\nexport const NextVanillaSpanAllowlist = [\n    \"Middleware.execute\",\n    \"BaseServer.handleRequest\",\n    \"Render.getServerSideProps\",\n    \"Render.getStaticProps\",\n    \"AppRender.fetch\",\n    \"AppRender.getBodyResult\",\n    \"Render.renderDocument\",\n    \"Node.runHandler\",\n    \"AppRouteRouteHandlers.runHandler\",\n    \"ResolveMetadata.generateMetadata\",\n    \"ResolveMetadata.generateViewport\",\n    \"NextNodeServer.createComponentTree\",\n    \"NextNodeServer.findPageComponents\",\n    \"NextNodeServer.getLayoutOrPageModule\",\n    \"NextNodeServer.startResponse\",\n    \"NextNodeServer.clientComponentLoading\"\n];\n// These Spans are allowed to be always logged\n// when the otel log prefix env is set\nexport const LogSpanAllowList = [\n    \"NextNodeServer.findPageComponents\",\n    \"NextNodeServer.createComponentTree\",\n    \"NextNodeServer.clientComponentLoading\"\n];\nexport { BaseServerSpan, LoadComponentsSpan, NextServerSpan, NextNodeServerSpan, StartServerSpan, RenderSpan, RouterSpan, AppRenderSpan, NodeSpan, AppRouteRouteHandlersSpan, ResolveMetadataSpan, MiddlewareSpan,  };\n\n//# sourceMappingURL=constants.js.map","'use strict';\n\nmodule.exports = function () {\n  throw new Error(\n    'ws does not work in the browser. Browser clients must use the native ' +\n      'WebSocket object'\n  );\n};\n","export const NEXT_QUERY_PARAM_PREFIX = 'nxtP';\nexport const NEXT_INTERCEPTION_MARKER_PREFIX = 'nxtI';\nexport const MATCHED_PATH_HEADER = 'x-matched-path';\nexport const PRERENDER_REVALIDATE_HEADER = 'x-prerender-revalidate';\nexport const PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER = 'x-prerender-revalidate-if-generated';\nexport const RSC_PREFETCH_SUFFIX = '.prefetch.rsc';\nexport const RSC_SEGMENTS_DIR_SUFFIX = '.segments';\nexport const RSC_SEGMENT_SUFFIX = '.segment.rsc';\nexport const RSC_SUFFIX = '.rsc';\nexport const ACTION_SUFFIX = '.action';\nexport const NEXT_DATA_SUFFIX = '.json';\nexport const NEXT_META_SUFFIX = '.meta';\nexport const NEXT_BODY_SUFFIX = '.body';\nexport const NEXT_CACHE_TAGS_HEADER = 'x-next-cache-tags';\nexport const NEXT_CACHE_REVALIDATED_TAGS_HEADER = 'x-next-revalidated-tags';\nexport const NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER = 'x-next-revalidate-tag-token';\nexport const NEXT_RESUME_HEADER = 'next-resume';\n// if these change make sure we update the related\n// documentation as well\nexport const NEXT_CACHE_TAG_MAX_ITEMS = 128;\nexport const NEXT_CACHE_TAG_MAX_LENGTH = 256;\nexport const NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024;\nexport const NEXT_CACHE_IMPLICIT_TAG_ID = '_N_T_';\n// in seconds\nexport const CACHE_ONE_YEAR = 31536000;\n// in seconds, represents revalidate=false. I.e. never revaliate.\n// We use this value since it can be represented as a V8 SMI for optimal performance.\n// It can also be serialized as JSON if it ever leaks accidentally as an actual value.\nexport const INFINITE_CACHE = 0xfffffffe;\n// Patterns to detect middleware files\nexport const MIDDLEWARE_FILENAME = 'middleware';\nexport const MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`;\n// Pattern to detect instrumentation hooks file\nexport const INSTRUMENTATION_HOOK_FILENAME = 'instrumentation';\n// Because on Windows absolute paths in the generated code can break because of numbers, eg 1 in the path,\n// we have to use a private alias\nexport const PAGES_DIR_ALIAS = 'private-next-pages';\nexport const DOT_NEXT_ALIAS = 'private-dot-next';\nexport const ROOT_DIR_ALIAS = 'private-next-root-dir';\nexport const APP_DIR_ALIAS = 'private-next-app-dir';\nexport const RSC_MOD_REF_PROXY_ALIAS = 'next/dist/build/webpack/loaders/next-flight-loader/module-proxy';\nexport const RSC_ACTION_VALIDATE_ALIAS = 'private-next-rsc-action-validate';\nexport const RSC_ACTION_PROXY_ALIAS = 'private-next-rsc-server-reference';\nexport const RSC_CACHE_WRAPPER_ALIAS = 'private-next-rsc-cache-wrapper';\nexport const RSC_ACTION_ENCRYPTION_ALIAS = 'private-next-rsc-action-encryption';\nexport const RSC_ACTION_CLIENT_WRAPPER_ALIAS = 'private-next-rsc-action-client-wrapper';\nexport const PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`;\nexport const SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`;\nexport const SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`;\nexport const SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`;\nexport const STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`;\nexport const SERVER_PROPS_EXPORT_ERROR = `pages with \\`getServerSideProps\\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`;\nexport const GSP_NO_RETURNED_VALUE = 'Your `getStaticProps` function did not return an object. Did you forget to add a `return`?';\nexport const GSSP_NO_RETURNED_VALUE = 'Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?';\nexport const UNSTABLE_REVALIDATE_RENAME_ERROR = 'The `unstable_revalidate` property is available for general use.\\n' + 'Please use `revalidate` instead.';\nexport const GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`;\nexport const NON_STANDARD_NODE_ENV = `You are using a non-standard \"NODE_ENV\" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`;\nexport const SSG_FALLBACK_EXPORT_ERROR = `Pages with \\`fallback\\` enabled in \\`getStaticPaths\\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`;\nexport const ESLINT_DEFAULT_DIRS = [\n    'app',\n    'pages',\n    'components',\n    'lib',\n    'src'\n];\nexport const SERVER_RUNTIME = {\n    edge: 'edge',\n    experimentalEdge: 'experimental-edge',\n    nodejs: 'nodejs'\n};\n/**\n * The names of the webpack layers. These layers are the primitives for the\n * webpack chunks.\n */ const WEBPACK_LAYERS_NAMES = {\n    /**\n   * The layer for the shared code between the client and server bundles.\n   */ shared: 'shared',\n    /**\n   * The layer for server-only runtime and picking up `react-server` export conditions.\n   * Including app router RSC pages and app router custom routes and metadata routes.\n   */ reactServerComponents: 'rsc',\n    /**\n   * Server Side Rendering layer for app (ssr).\n   */ serverSideRendering: 'ssr',\n    /**\n   * The browser client bundle layer for actions.\n   */ actionBrowser: 'action-browser',\n    /**\n   * The Node.js bundle layer for the API routes.\n   */ apiNode: 'api-node',\n    /**\n   * The Edge Lite bundle layer for the API routes.\n   */ apiEdge: 'api-edge',\n    /**\n   * The layer for the middleware code.\n   */ middleware: 'middleware',\n    /**\n   * The layer for the instrumentation hooks.\n   */ instrument: 'instrument',\n    /**\n   * The layer for assets on the edge.\n   */ edgeAsset: 'edge-asset',\n    /**\n   * The browser client bundle layer for App directory.\n   */ appPagesBrowser: 'app-pages-browser',\n    /**\n   * The browser client bundle layer for Pages directory.\n   */ pagesDirBrowser: 'pages-dir-browser',\n    /**\n   * The Edge Lite bundle layer for Pages directory.\n   */ pagesDirEdge: 'pages-dir-edge',\n    /**\n   * The Node.js bundle layer for Pages directory.\n   */ pagesDirNode: 'pages-dir-node'\n};\nconst WEBPACK_LAYERS = {\n    ...WEBPACK_LAYERS_NAMES,\n    GROUP: {\n        builtinReact: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser\n        ],\n        serverOnly: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser,\n            WEBPACK_LAYERS_NAMES.instrument,\n            WEBPACK_LAYERS_NAMES.middleware\n        ],\n        neutralTarget: [\n            // pages api\n            WEBPACK_LAYERS_NAMES.apiNode,\n            WEBPACK_LAYERS_NAMES.apiEdge\n        ],\n        clientOnly: [\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\n            WEBPACK_LAYERS_NAMES.appPagesBrowser\n        ],\n        bundled: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser,\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\n            WEBPACK_LAYERS_NAMES.appPagesBrowser,\n            WEBPACK_LAYERS_NAMES.shared,\n            WEBPACK_LAYERS_NAMES.instrument,\n            WEBPACK_LAYERS_NAMES.middleware\n        ],\n        appPages: [\n            // app router pages and layouts\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\n            WEBPACK_LAYERS_NAMES.appPagesBrowser,\n            WEBPACK_LAYERS_NAMES.actionBrowser\n        ]\n    }\n};\nconst WEBPACK_RESOURCE_QUERIES = {\n    edgeSSREntry: '__next_edge_ssr_entry__',\n    metadata: '__next_metadata__',\n    metadataRoute: '__next_metadata_route__',\n    metadataImageMeta: '__next_metadata_image_meta__'\n};\nexport { WEBPACK_LAYERS, WEBPACK_RESOURCE_QUERIES };\n\n//# sourceMappingURL=constants.js.map","import * as React from 'react';\nconst errorRef = {\n    current: null\n};\n// React.cache is currently only available in canary/experimental React channels.\nconst cache = typeof React.cache === 'function' ? React.cache : (fn)=>fn;\n// When Dynamic IO is enabled, we record these as errors so that they\n// are captured by the dev overlay as it's more critical to fix these\n// when enabled.\nconst logErrorOrWarn = process.env.__NEXT_DYNAMIC_IO ? console.error : console.warn;\n// We don't want to dedupe across requests.\n// The developer might've just attempted to fix the warning so we should warn again if it still happens.\nconst flushCurrentErrorIfNew = cache(// eslint-disable-next-line @typescript-eslint/no-unused-vars -- cache key\n(key)=>{\n    try {\n        logErrorOrWarn(errorRef.current);\n    } finally{\n        errorRef.current = null;\n    }\n});\n/**\n * Creates a function that logs an error message that is deduped by the userland\n * callsite.\n * This requires no indirection between the call of this function and the userland\n * callsite i.e. there's only a single library frame above this.\n * Do not use on the Client where sourcemaps and ignore listing might be enabled.\n * Only use that for warnings need a fix independent of the callstack.\n *\n * @param getMessage\n * @returns\n */ export function createDedupedByCallsiteServerErrorLoggerDev(getMessage) {\n    return function logDedupedError(...args) {\n        const message = getMessage(...args);\n        if (process.env.NODE_ENV !== 'production') {\n            var _stack;\n            const callStackFrames = (_stack = new Error().stack) == null ? void 0 : _stack.split('\\n');\n            if (callStackFrames === undefined || callStackFrames.length < 4) {\n                logErrorOrWarn(message);\n            } else {\n                // Error:\n                //   logDedupedError\n                //   asyncApiBeingAccessedSynchronously\n                //   <userland callsite>\n                // TODO: This breaks if sourcemaps with ignore lists are enabled.\n                const key = callStackFrames[4];\n                errorRef.current = message;\n                flushCurrentErrorIfNew(key);\n            }\n        } else {\n            logErrorOrWarn(message);\n        }\n    };\n}\n\n//# sourceMappingURL=create-deduped-by-callsite-server-error-logger.js.map","module.exports = require(\"node:buffer\");","module.exports = require(\"node:async_hooks\");","export var RouteKind = /*#__PURE__*/ function(RouteKind) {\n    /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */ RouteKind[\"PAGES\"] = \"PAGES\";\n    /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */ RouteKind[\"PAGES_API\"] = \"PAGES_API\";\n    /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */ RouteKind[\"APP_PAGE\"] = \"APP_PAGE\";\n    /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */ RouteKind[\"APP_ROUTE\"] = \"APP_ROUTE\";\n    /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */ RouteKind[\"IMAGE\"] = \"IMAGE\";\n    return RouteKind;\n}({});\n\n//# sourceMappingURL=route-kind.js.map","/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */\nexport function parsePath(path: string) {\n  const hashIndex = path.indexOf('#')\n  const queryIndex = path.indexOf('?')\n  const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex)\n\n  if (hasQuery || hashIndex > -1) {\n    return {\n      pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n      query: hasQuery\n        ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined)\n        : '',\n      hash: hashIndex > -1 ? path.slice(hashIndex) : '',\n    }\n  }\n\n  return { pathname: path, query: '', hash: '' }\n}\n","/**\n * Clones a response by teeing the body so we can return two independent\n * ReadableStreams from it. This avoids the bug in the undici library around\n * response cloning.\n *\n * After cloning, the original response's body will be consumed and closed.\n *\n * @see https://github.com/vercel/next.js/pull/73274\n *\n * @param original - The original response to clone.\n * @returns A tuple containing two independent clones of the original response.\n */ export function cloneResponse(original) {\n    // If the response has no body, then we can just return the original response\n    // twice because it's immutable.\n    if (!original.body) {\n        return [\n            original,\n            original\n        ];\n    }\n    const [body1, body2] = original.body.tee();\n    const cloned1 = new Response(body1, {\n        status: original.status,\n        statusText: original.statusText,\n        headers: original.headers\n    });\n    Object.defineProperty(cloned1, 'url', {\n        value: original.url\n    });\n    const cloned2 = new Response(body2, {\n        status: original.status,\n        statusText: original.statusText,\n        headers: original.headers\n    });\n    Object.defineProperty(cloned2, 'url', {\n        value: original.url\n    });\n    return [\n        cloned1,\n        cloned2\n    ];\n}\n\n//# sourceMappingURL=clone-response.js.map","/**\n * Based on https://github.com/facebook/react/blob/d4e78c42a94be027b4dc7ed2659a5fddfbf9bd4e/packages/react/src/ReactFetch.js\n */ import * as React from 'react';\nimport { cloneResponse } from './clone-response';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nconst simpleCacheKey = '[\"GET\",[],null,\"follow\",null,null,null,null]' // generateCacheKey(new Request('https://blank'));\n;\nfunction generateCacheKey(request) {\n    // We pick the fields that goes into the key used to dedupe requests.\n    // We don't include the `cache` field, because we end up using whatever\n    // caching resulted from the first request.\n    // Notably we currently don't consider non-standard (or future) options.\n    // This might not be safe. TODO: warn for non-standard extensions differing.\n    // IF YOU CHANGE THIS UPDATE THE simpleCacheKey ABOVE.\n    return JSON.stringify([\n        request.method,\n        Array.from(request.headers.entries()),\n        request.mode,\n        request.redirect,\n        request.credentials,\n        request.referrer,\n        request.referrerPolicy,\n        request.integrity\n    ]);\n}\nexport function createDedupeFetch(originalFetch) {\n    const getCacheEntries = React.cache(// eslint-disable-next-line @typescript-eslint/no-unused-vars -- url is the cache key\n    (url)=>[]);\n    return function dedupeFetch(resource, options) {\n        if (options && options.signal) {\n            // If we're passed a signal, then we assume that\n            // someone else controls the lifetime of this object and opts out of\n            // caching. It's effectively the opt-out mechanism.\n            // Ideally we should be able to check this on the Request but\n            // it always gets initialized with its own signal so we don't\n            // know if it's supposed to override - unless we also override the\n            // Request constructor.\n            return originalFetch(resource, options);\n        }\n        // Normalize the Request\n        let url;\n        let cacheKey;\n        if (typeof resource === 'string' && !options) {\n            // Fast path.\n            cacheKey = simpleCacheKey;\n            url = resource;\n        } else {\n            // Normalize the request.\n            // if resource is not a string or a URL (its an instance of Request)\n            // then do not instantiate a new Request but instead\n            // reuse the request as to not disturb the body in the event it's a ReadableStream.\n            const request = typeof resource === 'string' || resource instanceof URL ? new Request(resource, options) : resource;\n            if (request.method !== 'GET' && request.method !== 'HEAD' || request.keepalive) {\n                // We currently don't dedupe requests that might have side-effects. Those\n                // have to be explicitly cached. We assume that the request doesn't have a\n                // body if it's GET or HEAD.\n                // keepalive gets treated the same as if you passed a custom cache signal.\n                return originalFetch(resource, options);\n            }\n            cacheKey = generateCacheKey(request);\n            url = request.url;\n        }\n        const cacheEntries = getCacheEntries(url);\n        for(let i = 0, j = cacheEntries.length; i < j; i += 1){\n            const [key, promise] = cacheEntries[i];\n            if (key === cacheKey) {\n                return promise.then(()=>{\n                    const response = cacheEntries[i][2];\n                    if (!response) throw Object.defineProperty(new InvariantError('No cached response'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E579\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                    // We're cloning the response using this utility because there exists\n                    // a bug in the undici library around response cloning. See the\n                    // following pull request for more details:\n                    // https://github.com/vercel/next.js/pull/73274\n                    const [cloned1, cloned2] = cloneResponse(response);\n                    cacheEntries[i][2] = cloned2;\n                    return cloned1;\n                });\n            }\n        }\n        // We pass the original arguments here in case normalizing the Request\n        // doesn't include all the options in this environment.\n        const promise = originalFetch(resource, options);\n        const entry = [\n            cacheKey,\n            promise,\n            null\n        ];\n        cacheEntries.push(entry);\n        return promise.then((response)=>{\n            // We're cloning the response using this utility because there exists\n            // a bug in the undici library around response cloning. See the\n            // following pull request for more details:\n            // https://github.com/vercel/next.js/pull/73274\n            const [cloned1, cloned2] = cloneResponse(response);\n            entry[2] = cloned2;\n            return cloned1;\n        });\n    };\n}\n\n//# sourceMappingURL=dedupe-fetch.js.map","import { AppRenderSpan, NextNodeServerSpan } from './trace/constants';\nimport { getTracer, SpanKind } from './trace/tracer';\nimport { CACHE_ONE_YEAR, INFINITE_CACHE, NEXT_CACHE_TAG_MAX_ITEMS, NEXT_CACHE_TAG_MAX_LENGTH } from '../../lib/constants';\nimport { markCurrentScopeAsDynamic } from '../app-render/dynamic-rendering';\nimport { makeHangingPromise } from '../dynamic-rendering-utils';\nimport { createDedupeFetch } from './dedupe-fetch';\nimport { CachedRouteKind, IncrementalCacheKind } from '../response-cache';\nimport { waitAtLeastOneReactRenderTask } from '../../lib/scheduler';\nimport { cloneResponse } from './clone-response';\nconst isEdgeRuntime = process.env.NEXT_RUNTIME === 'edge';\nexport const NEXT_PATCH_SYMBOL = Symbol.for('next-patch');\nfunction isFetchPatched() {\n    return globalThis[NEXT_PATCH_SYMBOL] === true;\n}\nexport function validateRevalidate(revalidateVal, route) {\n    try {\n        let normalizedRevalidate = undefined;\n        if (revalidateVal === false) {\n            normalizedRevalidate = INFINITE_CACHE;\n        } else if (typeof revalidateVal === 'number' && !isNaN(revalidateVal) && revalidateVal > -1) {\n            normalizedRevalidate = revalidateVal;\n        } else if (typeof revalidateVal !== 'undefined') {\n            throw Object.defineProperty(new Error(`Invalid revalidate value \"${revalidateVal}\" on \"${route}\", must be a non-negative number or false`), \"__NEXT_ERROR_CODE\", {\n                value: \"E179\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        return normalizedRevalidate;\n    } catch (err) {\n        // handle client component error from attempting to check revalidate value\n        if (err instanceof Error && err.message.includes('Invalid revalidate')) {\n            throw err;\n        }\n        return undefined;\n    }\n}\nexport function validateTags(tags, description) {\n    const validTags = [];\n    const invalidTags = [];\n    for(let i = 0; i < tags.length; i++){\n        const tag = tags[i];\n        if (typeof tag !== 'string') {\n            invalidTags.push({\n                tag,\n                reason: 'invalid type, must be a string'\n            });\n        } else if (tag.length > NEXT_CACHE_TAG_MAX_LENGTH) {\n            invalidTags.push({\n                tag,\n                reason: `exceeded max length of ${NEXT_CACHE_TAG_MAX_LENGTH}`\n            });\n        } else {\n            validTags.push(tag);\n        }\n        if (validTags.length > NEXT_CACHE_TAG_MAX_ITEMS) {\n            console.warn(`Warning: exceeded max tag count for ${description}, dropped tags:`, tags.slice(i).join(', '));\n            break;\n        }\n    }\n    if (invalidTags.length > 0) {\n        console.warn(`Warning: invalid tags passed to ${description}: `);\n        for (const { tag, reason } of invalidTags){\n            console.log(`tag: \"${tag}\" ${reason}`);\n        }\n    }\n    return validTags;\n}\nfunction trackFetchMetric(workStore, ctx) {\n    var _workStore_requestEndedState;\n    // If the static generation store is not available, we can't track the fetch\n    if (!workStore) return;\n    if ((_workStore_requestEndedState = workStore.requestEndedState) == null ? void 0 : _workStore_requestEndedState.ended) return;\n    const isDebugBuild = (!!process.env.NEXT_DEBUG_BUILD || process.env.NEXT_SSG_FETCH_METRICS === '1') && workStore.isStaticGeneration;\n    const isDevelopment = process.env.NODE_ENV === 'development';\n    if (// The only time we want to track fetch metrics outside of development is when\n    // we are performing a static generation & we are in debug mode.\n    !isDebugBuild && !isDevelopment) {\n        return;\n    }\n    workStore.fetchMetrics ??= [];\n    workStore.fetchMetrics.push({\n        ...ctx,\n        end: performance.timeOrigin + performance.now(),\n        idx: workStore.nextFetchId || 0\n    });\n}\nexport function createPatchedFetcher(originFetch, { workAsyncStorage, workUnitAsyncStorage }) {\n    // Create the patched fetch function. We don't set the type here, as it's\n    // verified as the return value of this function.\n    const patched = async (input, init)=>{\n        var _init_method, _init_next;\n        let url;\n        try {\n            url = new URL(input instanceof Request ? input.url : input);\n            url.username = '';\n            url.password = '';\n        } catch  {\n            // Error caused by malformed URL should be handled by native fetch\n            url = undefined;\n        }\n        const fetchUrl = (url == null ? void 0 : url.href) ?? '';\n        const method = (init == null ? void 0 : (_init_method = init.method) == null ? void 0 : _init_method.toUpperCase()) || 'GET';\n        // Do create a new span trace for internal fetches in the\n        // non-verbose mode.\n        const isInternal = (init == null ? void 0 : (_init_next = init.next) == null ? void 0 : _init_next.internal) === true;\n        const hideSpan = process.env.NEXT_OTEL_FETCH_DISABLED === '1';\n        // We don't track fetch metrics for internal fetches\n        // so it's not critical that we have a start time, as it won't be recorded.\n        // This is to workaround a flaky issue where performance APIs might\n        // not be available and will require follow-up investigation.\n        const fetchStart = isInternal ? undefined : performance.timeOrigin + performance.now();\n        const workStore = workAsyncStorage.getStore();\n        const workUnitStore = workUnitAsyncStorage.getStore();\n        // During static generation we track cache reads so we can reason about when they fill\n        let cacheSignal = workUnitStore && workUnitStore.type === 'prerender' ? workUnitStore.cacheSignal : null;\n        if (cacheSignal) {\n            cacheSignal.beginRead();\n        }\n        const result = getTracer().trace(isInternal ? NextNodeServerSpan.internalFetch : AppRenderSpan.fetch, {\n            hideSpan,\n            kind: SpanKind.CLIENT,\n            spanName: [\n                'fetch',\n                method,\n                fetchUrl\n            ].filter(Boolean).join(' '),\n            attributes: {\n                'http.url': fetchUrl,\n                'http.method': method,\n                'net.peer.name': url == null ? void 0 : url.hostname,\n                'net.peer.port': (url == null ? void 0 : url.port) || undefined\n            }\n        }, async ()=>{\n            var _getRequestMeta;\n            // If this is an internal fetch, we should not do any special treatment.\n            if (isInternal) {\n                return originFetch(input, init);\n            }\n            // If the workStore is not available, we can't do any\n            // special treatment of fetch, therefore fallback to the original\n            // fetch implementation.\n            if (!workStore) {\n                return originFetch(input, init);\n            }\n            // We should also fallback to the original fetch implementation if we\n            // are in draft mode, it does not constitute a static generation.\n            if (workStore.isDraftMode) {\n                return originFetch(input, init);\n            }\n            const isRequestInput = input && typeof input === 'object' && typeof input.method === 'string';\n            const getRequestMeta = (field)=>{\n                // If request input is present but init is not, retrieve from input first.\n                const value = init == null ? void 0 : init[field];\n                return value || (isRequestInput ? input[field] : null);\n            };\n            let finalRevalidate = undefined;\n            const getNextField = (field)=>{\n                var _init_next, _init_next1, _input_next;\n                return typeof (init == null ? void 0 : (_init_next = init.next) == null ? void 0 : _init_next[field]) !== 'undefined' ? init == null ? void 0 : (_init_next1 = init.next) == null ? void 0 : _init_next1[field] : isRequestInput ? (_input_next = input.next) == null ? void 0 : _input_next[field] : undefined;\n            };\n            // RequestInit doesn't keep extra fields e.g. next so it's\n            // only available if init is used separate\n            let currentFetchRevalidate = getNextField('revalidate');\n            const tags = validateTags(getNextField('tags') || [], `fetch ${input.toString()}`);\n            const revalidateStore = workUnitStore && (workUnitStore.type === 'cache' || workUnitStore.type === 'prerender' || workUnitStore.type === 'prerender-ppr' || workUnitStore.type === 'prerender-legacy') ? workUnitStore : undefined;\n            if (revalidateStore) {\n                if (Array.isArray(tags)) {\n                    // Collect tags onto parent caches or parent prerenders.\n                    const collectedTags = revalidateStore.tags ?? (revalidateStore.tags = []);\n                    for (const tag of tags){\n                        if (!collectedTags.includes(tag)) {\n                            collectedTags.push(tag);\n                        }\n                    }\n                }\n            }\n            const implicitTags = workUnitStore == null ? void 0 : workUnitStore.implicitTags;\n            // Inside unstable-cache we treat it the same as force-no-store on the\n            // page.\n            const pageFetchCacheMode = workUnitStore && workUnitStore.type === 'unstable-cache' ? 'force-no-store' : workStore.fetchCache;\n            const isUsingNoStore = !!workStore.isUnstableNoStore;\n            let currentFetchCacheConfig = getRequestMeta('cache');\n            let cacheReason = '';\n            let cacheWarning;\n            if (typeof currentFetchCacheConfig === 'string' && typeof currentFetchRevalidate !== 'undefined') {\n                // If the revalidate value conflicts with the cache value, we should warn the user and unset the conflicting values.\n                const isConflictingRevalidate = // revalidate: 0 and cache: force-cache\n                currentFetchCacheConfig === 'force-cache' && currentFetchRevalidate === 0 || // revalidate: >0 or revalidate: false and cache: no-store\n                currentFetchCacheConfig === 'no-store' && (currentFetchRevalidate > 0 || currentFetchRevalidate === false);\n                if (isConflictingRevalidate) {\n                    cacheWarning = `Specified \"cache: ${currentFetchCacheConfig}\" and \"revalidate: ${currentFetchRevalidate}\", only one should be specified.`;\n                    currentFetchCacheConfig = undefined;\n                    currentFetchRevalidate = undefined;\n                }\n            }\n            const hasExplicitFetchCacheOptOut = // fetch config itself signals not to cache\n            currentFetchCacheConfig === 'no-cache' || currentFetchCacheConfig === 'no-store' || // the fetch isn't explicitly caching and the segment level cache config signals not to cache\n            // note: `pageFetchCacheMode` is also set by being in an unstable_cache context.\n            pageFetchCacheMode === 'force-no-store' || pageFetchCacheMode === 'only-no-store';\n            // If no explicit fetch cache mode is set, but dynamic = `force-dynamic` is set,\n            // we shouldn't consider caching the fetch. This is because the `dynamic` cache\n            // is considered a \"top-level\" cache mode, whereas something like `fetchCache` is more\n            // fine-grained. Top-level modes are responsible for setting reasonable defaults for the\n            // other configurations.\n            const noFetchConfigAndForceDynamic = !pageFetchCacheMode && !currentFetchCacheConfig && !currentFetchRevalidate && workStore.forceDynamic;\n            if (// force-cache was specified without a revalidate value. We set the revalidate value to false\n            // which will signal the cache to not revalidate\n            currentFetchCacheConfig === 'force-cache' && typeof currentFetchRevalidate === 'undefined') {\n                currentFetchRevalidate = false;\n            } else if (// if we are inside of \"use cache\"/\"unstable_cache\"\n            // we shouldn't set the revalidate to 0 as it's overridden\n            // by the cache context\n            (workUnitStore == null ? void 0 : workUnitStore.type) !== 'cache' && (hasExplicitFetchCacheOptOut || noFetchConfigAndForceDynamic)) {\n                currentFetchRevalidate = 0;\n            }\n            if (currentFetchCacheConfig === 'no-cache' || currentFetchCacheConfig === 'no-store') {\n                cacheReason = `cache: ${currentFetchCacheConfig}`;\n            }\n            finalRevalidate = validateRevalidate(currentFetchRevalidate, workStore.route);\n            const _headers = getRequestMeta('headers');\n            const initHeaders = typeof (_headers == null ? void 0 : _headers.get) === 'function' ? _headers : new Headers(_headers || {});\n            const hasUnCacheableHeader = initHeaders.get('authorization') || initHeaders.get('cookie');\n            const isUnCacheableMethod = ![\n                'get',\n                'head'\n            ].includes(((_getRequestMeta = getRequestMeta('method')) == null ? void 0 : _getRequestMeta.toLowerCase()) || 'get');\n            /**\n         * We automatically disable fetch caching under the following conditions:\n         * - Fetch cache configs are not set. Specifically:\n         *    - A page fetch cache mode is not set (export const fetchCache=...)\n         *    - A fetch cache mode is not set in the fetch call (fetch(url, { cache: ... }))\n         *      or the fetch cache mode is set to 'default'\n         *    - A fetch revalidate value is not set in the fetch call (fetch(url, { revalidate: ... }))\n         * - OR the fetch comes after a configuration that triggered dynamic rendering (e.g., reading cookies())\n         *   and the fetch was considered uncacheable (e.g., POST method or has authorization headers)\n         */ const hasNoExplicitCacheConfig = // eslint-disable-next-line eqeqeq\n            pageFetchCacheMode == undefined && // eslint-disable-next-line eqeqeq\n            (currentFetchCacheConfig == undefined || // when considering whether to opt into the default \"no-cache\" fetch semantics,\n            // a \"default\" cache config should be treated the same as no cache config\n            currentFetchCacheConfig === 'default') && // eslint-disable-next-line eqeqeq\n            currentFetchRevalidate == undefined;\n            const autoNoCache = // this condition is hit for null/undefined\n            // eslint-disable-next-line eqeqeq\n            hasNoExplicitCacheConfig && // we disable automatic no caching behavior during build time SSG so that we can still\n            // leverage the fetch cache between SSG workers\n            !workStore.isPrerendering || (hasUnCacheableHeader || isUnCacheableMethod) && revalidateStore && revalidateStore.revalidate === 0;\n            if (hasNoExplicitCacheConfig && workUnitStore !== undefined && workUnitStore.type === 'prerender') {\n                // If we have no cache config, and we're in Dynamic I/O prerendering, it'll be a dynamic call.\n                // We don't have to issue that dynamic call.\n                if (cacheSignal) {\n                    cacheSignal.endRead();\n                    cacheSignal = null;\n                }\n                return makeHangingPromise(workUnitStore.renderSignal, 'fetch()');\n            }\n            switch(pageFetchCacheMode){\n                case 'force-no-store':\n                    {\n                        cacheReason = 'fetchCache = force-no-store';\n                        break;\n                    }\n                case 'only-no-store':\n                    {\n                        if (currentFetchCacheConfig === 'force-cache' || typeof finalRevalidate !== 'undefined' && finalRevalidate > 0) {\n                            throw Object.defineProperty(new Error(`cache: 'force-cache' used on fetch for ${fetchUrl} with 'export const fetchCache = 'only-no-store'`), \"__NEXT_ERROR_CODE\", {\n                                value: \"E448\",\n                                enumerable: false,\n                                configurable: true\n                            });\n                        }\n                        cacheReason = 'fetchCache = only-no-store';\n                        break;\n                    }\n                case 'only-cache':\n                    {\n                        if (currentFetchCacheConfig === 'no-store') {\n                            throw Object.defineProperty(new Error(`cache: 'no-store' used on fetch for ${fetchUrl} with 'export const fetchCache = 'only-cache'`), \"__NEXT_ERROR_CODE\", {\n                                value: \"E521\",\n                                enumerable: false,\n                                configurable: true\n                            });\n                        }\n                        break;\n                    }\n                case 'force-cache':\n                    {\n                        if (typeof currentFetchRevalidate === 'undefined' || currentFetchRevalidate === 0) {\n                            cacheReason = 'fetchCache = force-cache';\n                            finalRevalidate = INFINITE_CACHE;\n                        }\n                        break;\n                    }\n                default:\n            }\n            if (typeof finalRevalidate === 'undefined') {\n                if (pageFetchCacheMode === 'default-cache' && !isUsingNoStore) {\n                    finalRevalidate = INFINITE_CACHE;\n                    cacheReason = 'fetchCache = default-cache';\n                } else if (pageFetchCacheMode === 'default-no-store') {\n                    finalRevalidate = 0;\n                    cacheReason = 'fetchCache = default-no-store';\n                } else if (isUsingNoStore) {\n                    finalRevalidate = 0;\n                    cacheReason = 'noStore call';\n                } else if (autoNoCache) {\n                    finalRevalidate = 0;\n                    cacheReason = 'auto no cache';\n                } else {\n                    // TODO: should we consider this case an invariant?\n                    cacheReason = 'auto cache';\n                    finalRevalidate = revalidateStore ? revalidateStore.revalidate : INFINITE_CACHE;\n                }\n            } else if (!cacheReason) {\n                cacheReason = `revalidate: ${finalRevalidate}`;\n            }\n            if (// when force static is configured we don't bail from\n            // `revalidate: 0` values\n            !(workStore.forceStatic && finalRevalidate === 0) && // we don't consider autoNoCache to switch to dynamic for ISR\n            !autoNoCache && // If the revalidate value isn't currently set or the value is less\n            // than the current revalidate value, we should update the revalidate\n            // value.\n            revalidateStore && finalRevalidate < revalidateStore.revalidate) {\n                // If we were setting the revalidate value to 0, we should try to\n                // postpone instead first.\n                if (finalRevalidate === 0) {\n                    if (workUnitStore && workUnitStore.type === 'prerender') {\n                        if (cacheSignal) {\n                            cacheSignal.endRead();\n                            cacheSignal = null;\n                        }\n                        return makeHangingPromise(workUnitStore.renderSignal, 'fetch()');\n                    } else {\n                        markCurrentScopeAsDynamic(workStore, workUnitStore, `revalidate: 0 fetch ${input} ${workStore.route}`);\n                    }\n                }\n                // We only want to set the revalidate store's revalidate time if it\n                // was explicitly set for the fetch call, i.e. currentFetchRevalidate.\n                if (revalidateStore && currentFetchRevalidate === finalRevalidate) {\n                    revalidateStore.revalidate = finalRevalidate;\n                }\n            }\n            const isCacheableRevalidate = typeof finalRevalidate === 'number' && finalRevalidate > 0;\n            let cacheKey;\n            const { incrementalCache } = workStore;\n            const useCacheOrRequestStore = (workUnitStore == null ? void 0 : workUnitStore.type) === 'request' || (workUnitStore == null ? void 0 : workUnitStore.type) === 'cache' ? workUnitStore : undefined;\n            if (incrementalCache && (isCacheableRevalidate || (useCacheOrRequestStore == null ? void 0 : useCacheOrRequestStore.serverComponentsHmrCache))) {\n                try {\n                    cacheKey = await incrementalCache.generateCacheKey(fetchUrl, isRequestInput ? input : init);\n                } catch (err) {\n                    console.error(`Failed to generate cache key for`, input);\n                }\n            }\n            const fetchIdx = workStore.nextFetchId ?? 1;\n            workStore.nextFetchId = fetchIdx + 1;\n            let handleUnlock = ()=>Promise.resolve();\n            const doOriginalFetch = async (isStale, cacheReasonOverride)=>{\n                const requestInputFields = [\n                    'cache',\n                    'credentials',\n                    'headers',\n                    'integrity',\n                    'keepalive',\n                    'method',\n                    'mode',\n                    'redirect',\n                    'referrer',\n                    'referrerPolicy',\n                    'window',\n                    'duplex',\n                    // don't pass through signal when revalidating\n                    ...isStale ? [] : [\n                        'signal'\n                    ]\n                ];\n                if (isRequestInput) {\n                    const reqInput = input;\n                    const reqOptions = {\n                        body: reqInput._ogBody || reqInput.body\n                    };\n                    for (const field of requestInputFields){\n                        // @ts-expect-error custom fields\n                        reqOptions[field] = reqInput[field];\n                    }\n                    input = new Request(reqInput.url, reqOptions);\n                } else if (init) {\n                    const { _ogBody, body, signal, ...otherInput } = init;\n                    init = {\n                        ...otherInput,\n                        body: _ogBody || body,\n                        signal: isStale ? undefined : signal\n                    };\n                }\n                // add metadata to init without editing the original\n                const clonedInit = {\n                    ...init,\n                    next: {\n                        ...init == null ? void 0 : init.next,\n                        fetchType: 'origin',\n                        fetchIdx\n                    }\n                };\n                return originFetch(input, clonedInit).then(async (res)=>{\n                    if (!isStale && fetchStart) {\n                        trackFetchMetric(workStore, {\n                            start: fetchStart,\n                            url: fetchUrl,\n                            cacheReason: cacheReasonOverride || cacheReason,\n                            cacheStatus: finalRevalidate === 0 || cacheReasonOverride ? 'skip' : 'miss',\n                            cacheWarning,\n                            status: res.status,\n                            method: clonedInit.method || 'GET'\n                        });\n                    }\n                    if (res.status === 200 && incrementalCache && cacheKey && (isCacheableRevalidate || (useCacheOrRequestStore == null ? void 0 : useCacheOrRequestStore.serverComponentsHmrCache))) {\n                        const normalizedRevalidate = finalRevalidate >= INFINITE_CACHE ? CACHE_ONE_YEAR : finalRevalidate;\n                        if (workUnitStore && workUnitStore.type === 'prerender') {\n                            // We are prerendering at build time or revalidate time with dynamicIO so we need to\n                            // buffer the response so we can guarantee it can be read in a microtask\n                            const bodyBuffer = await res.arrayBuffer();\n                            const fetchedData = {\n                                headers: Object.fromEntries(res.headers.entries()),\n                                body: Buffer.from(bodyBuffer).toString('base64'),\n                                status: res.status,\n                                url: res.url\n                            };\n                            // We can skip checking the serverComponentsHmrCache because we aren't in\n                            // dev mode.\n                            await incrementalCache.set(cacheKey, {\n                                kind: CachedRouteKind.FETCH,\n                                data: fetchedData,\n                                revalidate: normalizedRevalidate\n                            }, {\n                                fetchCache: true,\n                                fetchUrl,\n                                fetchIdx,\n                                tags\n                            });\n                            await handleUnlock();\n                            // We return a new Response to the caller.\n                            return new Response(bodyBuffer, {\n                                headers: res.headers,\n                                status: res.status,\n                                statusText: res.statusText\n                            });\n                        } else {\n                            // We're cloning the response using this utility because there\n                            // exists a bug in the undici library around response cloning.\n                            // See the following pull request for more details:\n                            // https://github.com/vercel/next.js/pull/73274\n                            const [cloned1, cloned2] = cloneResponse(res);\n                            // We are dynamically rendering including dev mode. We want to return\n                            // the response to the caller as soon as possible because it might stream\n                            // over a very long time.\n                            cloned1.arrayBuffer().then(async (arrayBuffer)=>{\n                                var _useCacheOrRequestStore_serverComponentsHmrCache;\n                                const bodyBuffer = Buffer.from(arrayBuffer);\n                                const fetchedData = {\n                                    headers: Object.fromEntries(cloned1.headers.entries()),\n                                    body: bodyBuffer.toString('base64'),\n                                    status: cloned1.status,\n                                    url: cloned1.url\n                                };\n                                useCacheOrRequestStore == null ? void 0 : (_useCacheOrRequestStore_serverComponentsHmrCache = useCacheOrRequestStore.serverComponentsHmrCache) == null ? void 0 : _useCacheOrRequestStore_serverComponentsHmrCache.set(cacheKey, fetchedData);\n                                if (isCacheableRevalidate) {\n                                    await incrementalCache.set(cacheKey, {\n                                        kind: CachedRouteKind.FETCH,\n                                        data: fetchedData,\n                                        revalidate: normalizedRevalidate\n                                    }, {\n                                        fetchCache: true,\n                                        fetchUrl,\n                                        fetchIdx,\n                                        tags\n                                    });\n                                }\n                            }).catch((error)=>console.warn(`Failed to set fetch cache`, input, error)).finally(handleUnlock);\n                            return cloned2;\n                        }\n                    }\n                    // we had response that we determined shouldn't be cached so we return it\n                    // and don't cache it. This also needs to unlock the cache lock we acquired.\n                    await handleUnlock();\n                    return res;\n                }).catch((error)=>{\n                    handleUnlock();\n                    throw error;\n                });\n            };\n            let cacheReasonOverride;\n            let isForegroundRevalidate = false;\n            let isHmrRefreshCache = false;\n            if (cacheKey && incrementalCache) {\n                let cachedFetchData;\n                if ((useCacheOrRequestStore == null ? void 0 : useCacheOrRequestStore.isHmrRefresh) && useCacheOrRequestStore.serverComponentsHmrCache) {\n                    cachedFetchData = useCacheOrRequestStore.serverComponentsHmrCache.get(cacheKey);\n                    isHmrRefreshCache = true;\n                }\n                if (isCacheableRevalidate && !cachedFetchData) {\n                    handleUnlock = await incrementalCache.lock(cacheKey);\n                    const entry = workStore.isOnDemandRevalidate ? null : await incrementalCache.get(cacheKey, {\n                        kind: IncrementalCacheKind.FETCH,\n                        revalidate: finalRevalidate,\n                        fetchUrl,\n                        fetchIdx,\n                        tags,\n                        softTags: implicitTags == null ? void 0 : implicitTags.tags\n                    });\n                    if (hasNoExplicitCacheConfig) {\n                        // We sometimes use the cache to dedupe fetches that do not specify a cache configuration\n                        // In these cases we want to make sure we still exclude them from prerenders if dynamicIO is on\n                        // so we introduce an artificial Task boundary here.\n                        if (workUnitStore && workUnitStore.type === 'prerender') {\n                            await waitAtLeastOneReactRenderTask();\n                        }\n                    }\n                    if (entry) {\n                        await handleUnlock();\n                    } else {\n                        // in dev, incremental cache response will be null in case the browser adds `cache-control: no-cache` in the request headers\n                        cacheReasonOverride = 'cache-control: no-cache (hard refresh)';\n                    }\n                    if ((entry == null ? void 0 : entry.value) && entry.value.kind === CachedRouteKind.FETCH) {\n                        // when stale and is revalidating we wait for fresh data\n                        // so the revalidated entry has the updated data\n                        if (workStore.isRevalidate && entry.isStale) {\n                            isForegroundRevalidate = true;\n                        } else {\n                            if (entry.isStale) {\n                                workStore.pendingRevalidates ??= {};\n                                if (!workStore.pendingRevalidates[cacheKey]) {\n                                    const pendingRevalidate = doOriginalFetch(true).then(async (response)=>({\n                                            body: await response.arrayBuffer(),\n                                            headers: response.headers,\n                                            status: response.status,\n                                            statusText: response.statusText\n                                        })).finally(()=>{\n                                        workStore.pendingRevalidates ??= {};\n                                        delete workStore.pendingRevalidates[cacheKey || ''];\n                                    });\n                                    // Attach the empty catch here so we don't get a \"unhandled\n                                    // promise rejection\" warning.\n                                    pendingRevalidate.catch(console.error);\n                                    workStore.pendingRevalidates[cacheKey] = pendingRevalidate;\n                                }\n                            }\n                            cachedFetchData = entry.value.data;\n                        }\n                    }\n                }\n                if (cachedFetchData) {\n                    if (fetchStart) {\n                        trackFetchMetric(workStore, {\n                            start: fetchStart,\n                            url: fetchUrl,\n                            cacheReason,\n                            cacheStatus: isHmrRefreshCache ? 'hmr' : 'hit',\n                            cacheWarning,\n                            status: cachedFetchData.status || 200,\n                            method: (init == null ? void 0 : init.method) || 'GET'\n                        });\n                    }\n                    const response = new Response(Buffer.from(cachedFetchData.body, 'base64'), {\n                        headers: cachedFetchData.headers,\n                        status: cachedFetchData.status\n                    });\n                    Object.defineProperty(response, 'url', {\n                        value: cachedFetchData.url\n                    });\n                    return response;\n                }\n            }\n            if (workStore.isStaticGeneration && init && typeof init === 'object') {\n                const { cache } = init;\n                // Delete `cache` property as Cloudflare Workers will throw an error\n                if (isEdgeRuntime) delete init.cache;\n                if (cache === 'no-store') {\n                    // If enabled, we should bail out of static generation.\n                    if (workUnitStore && workUnitStore.type === 'prerender') {\n                        if (cacheSignal) {\n                            cacheSignal.endRead();\n                            cacheSignal = null;\n                        }\n                        return makeHangingPromise(workUnitStore.renderSignal, 'fetch()');\n                    } else {\n                        markCurrentScopeAsDynamic(workStore, workUnitStore, `no-store fetch ${input} ${workStore.route}`);\n                    }\n                }\n                const hasNextConfig = 'next' in init;\n                const { next = {} } = init;\n                if (typeof next.revalidate === 'number' && revalidateStore && next.revalidate < revalidateStore.revalidate) {\n                    if (next.revalidate === 0) {\n                        // If enabled, we should bail out of static generation.\n                        if (workUnitStore && workUnitStore.type === 'prerender') {\n                            return makeHangingPromise(workUnitStore.renderSignal, 'fetch()');\n                        } else {\n                            markCurrentScopeAsDynamic(workStore, workUnitStore, `revalidate: 0 fetch ${input} ${workStore.route}`);\n                        }\n                    }\n                    if (!workStore.forceStatic || next.revalidate !== 0) {\n                        revalidateStore.revalidate = next.revalidate;\n                    }\n                }\n                if (hasNextConfig) delete init.next;\n            }\n            // if we are revalidating the whole page via time or on-demand and\n            // the fetch cache entry is stale we should still de-dupe the\n            // origin hit if it's a cache-able entry\n            if (cacheKey && isForegroundRevalidate) {\n                const pendingRevalidateKey = cacheKey;\n                workStore.pendingRevalidates ??= {};\n                let pendingRevalidate = workStore.pendingRevalidates[pendingRevalidateKey];\n                if (pendingRevalidate) {\n                    const revalidatedResult = await pendingRevalidate;\n                    return new Response(revalidatedResult.body, {\n                        headers: revalidatedResult.headers,\n                        status: revalidatedResult.status,\n                        statusText: revalidatedResult.statusText\n                    });\n                }\n                // We used to just resolve the Response and clone it however for\n                // static generation with dynamicIO we need the response to be able to\n                // be resolved in a microtask and cloning the response will never have\n                // a body that can resolve in a microtask in node (as observed through\n                // experimentation) So instead we await the body and then when it is\n                // available we construct manually cloned Response objects with the\n                // body as an ArrayBuffer. This will be resolvable in a microtask\n                // making it compatible with dynamicIO.\n                const pendingResponse = doOriginalFetch(true, cacheReasonOverride)// We're cloning the response using this utility because there\n                // exists a bug in the undici library around response cloning.\n                // See the following pull request for more details:\n                // https://github.com/vercel/next.js/pull/73274\n                .then(cloneResponse);\n                pendingRevalidate = pendingResponse.then(async (responses)=>{\n                    const response = responses[0];\n                    return {\n                        body: await response.arrayBuffer(),\n                        headers: response.headers,\n                        status: response.status,\n                        statusText: response.statusText\n                    };\n                }).finally(()=>{\n                    var _workStore_pendingRevalidates;\n                    // If the pending revalidate is not present in the store, then\n                    // we have nothing to delete.\n                    if (!((_workStore_pendingRevalidates = workStore.pendingRevalidates) == null ? void 0 : _workStore_pendingRevalidates[pendingRevalidateKey])) {\n                        return;\n                    }\n                    delete workStore.pendingRevalidates[pendingRevalidateKey];\n                });\n                // Attach the empty catch here so we don't get a \"unhandled promise\n                // rejection\" warning\n                pendingRevalidate.catch(()=>{});\n                workStore.pendingRevalidates[pendingRevalidateKey] = pendingRevalidate;\n                return pendingResponse.then((responses)=>responses[1]);\n            } else {\n                return doOriginalFetch(false, cacheReasonOverride);\n            }\n        });\n        if (cacheSignal) {\n            try {\n                return await result;\n            } finally{\n                if (cacheSignal) {\n                    cacheSignal.endRead();\n                }\n            }\n        }\n        return result;\n    };\n    // Attach the necessary properties to the patched fetch function.\n    // We don't use this to determine if the fetch function has been patched,\n    // but for external consumers to determine if the fetch function has been\n    // patched.\n    patched.__nextPatched = true;\n    patched.__nextGetStaticStore = ()=>workAsyncStorage;\n    patched._nextOriginalFetch = originFetch;\n    globalThis[NEXT_PATCH_SYMBOL] = true;\n    return patched;\n}\n// we patch fetch to collect cache information used for\n// determining if a page is static or not\nexport function patchFetch(options) {\n    // If we've already patched fetch, we should not patch it again.\n    if (isFetchPatched()) return;\n    // Grab the original fetch function. We'll attach this so we can use it in\n    // the patched fetch function.\n    const original = createDedupeFetch(globalThis.fetch);\n    // Set the global fetch to the patched fetch.\n    globalThis.fetch = createPatchedFetcher(original, options);\n}\n\n//# sourceMappingURL=patch-fetch.js.map","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function() {\n    // the only reliable means to get the global object is\n    // `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof self !== 'undefined') { return self; }\n    if (typeof window !== 'undefined') { return window; }\n    if (typeof global !== 'undefined') { return global; }\n    throw new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nexport const fetch = globalObject.fetch;\n\nexport default globalObject.fetch.bind(globalObject);\n\nexport const Headers = globalObject.Headers;\nexport const Request = globalObject.Request;\nexport const Response = globalObject.Response;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Error format\n *\n * {@link https://postgrest.org/en/stable/api.html?highlight=options#errors-and-http-status-codes}\n */\nclass PostgrestError extends Error {\n    constructor(context) {\n        super(context.message);\n        this.name = 'PostgrestError';\n        this.details = context.details;\n        this.hint = context.hint;\n        this.code = context.code;\n    }\n}\nexports.default = PostgrestError;\n//# sourceMappingURL=PostgrestError.js.map","import digest from '../runtime/digest.js';\nexport const encoder = new TextEncoder();\nexport const decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nexport function concat(...buffers) {\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    buffers.forEach((buffer) => {\n        buf.set(buffer, i);\n        i += buffer.length;\n    });\n    return buf;\n}\nexport function p2s(alg, p2sInput) {\n    return concat(encoder.encode(alg), new Uint8Array([0]), p2sInput);\n}\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nexport function uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nexport function uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\nexport function lengthAndInput(input) {\n    return concat(uint32be(input.length), input);\n}\nexport async function concatKdf(secret, bits, value) {\n    const iterations = Math.ceil((bits >> 3) / 32);\n    const res = new Uint8Array(iterations * 32);\n    for (let iter = 0; iter < iterations; iter++) {\n        const buf = new Uint8Array(4 + secret.length + value.length);\n        buf.set(uint32be(iter + 1));\n        buf.set(secret, 4);\n        buf.set(value, 4 + secret.length);\n        res.set(await digest('sha256', buf), iter * 32);\n    }\n    return res.slice(0, bits >> 3);\n}\n","import { encoder, decoder } from '../lib/buffer_utils.js';\nexport const encodeBase64 = (input) => {\n    let unencoded = input;\n    if (typeof unencoded === 'string') {\n        unencoded = encoder.encode(unencoded);\n    }\n    const CHUNK_SIZE = 0x8000;\n    const arr = [];\n    for (let i = 0; i < unencoded.length; i += CHUNK_SIZE) {\n        arr.push(String.fromCharCode.apply(null, unencoded.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join(''));\n};\nexport const encode = (input) => {\n    return encodeBase64(input).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n};\nexport const decodeBase64 = (encoded) => {\n    const binary = atob(encoded);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n};\nexport const decode = (input) => {\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = decoder.decode(encoded);\n    }\n    encoded = encoded.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '');\n    try {\n        return decodeBase64(encoded);\n    }\n    catch (_a) {\n        throw new TypeError('The input to be decoded is not correctly encoded.');\n    }\n};\n","export class JOSEError extends Error {\n    static get code() {\n        return 'ERR_JOSE_GENERIC';\n    }\n    constructor(message) {\n        var _a;\n        super(message);\n        this.code = 'ERR_JOSE_GENERIC';\n        this.name = this.constructor.name;\n        (_a = Error.captureStackTrace) === null || _a === void 0 ? void 0 : _a.call(Error, this, this.constructor);\n    }\n}\nexport class JWTClaimValidationFailed extends JOSEError {\n    static get code() {\n        return 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n    }\n    constructor(message, claim = 'unspecified', reason = 'unspecified') {\n        super(message);\n        this.code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n        this.claim = claim;\n        this.reason = reason;\n    }\n}\nexport class JWTExpired extends JOSEError {\n    static get code() {\n        return 'ERR_JWT_EXPIRED';\n    }\n    constructor(message, claim = 'unspecified', reason = 'unspecified') {\n        super(message);\n        this.code = 'ERR_JWT_EXPIRED';\n        this.claim = claim;\n        this.reason = reason;\n    }\n}\nexport class JOSEAlgNotAllowed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n    static get code() {\n        return 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n}\nexport class JOSENotSupported extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_NOT_SUPPORTED';\n    }\n    static get code() {\n        return 'ERR_JOSE_NOT_SUPPORTED';\n    }\n}\nexport class JWEDecryptionFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_DECRYPTION_FAILED';\n        this.message = 'decryption operation failed';\n    }\n    static get code() {\n        return 'ERR_JWE_DECRYPTION_FAILED';\n    }\n}\nexport class JWEDecompressionFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_DECOMPRESSION_FAILED';\n        this.message = 'decompression operation failed';\n    }\n    static get code() {\n        return 'ERR_JWE_DECOMPRESSION_FAILED';\n    }\n}\nexport class JWEInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWE_INVALID';\n    }\n}\nexport class JWSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWS_INVALID';\n    }\n}\nexport class JWTInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWT_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWT_INVALID';\n    }\n}\nexport class JWKInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWK_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWK_INVALID';\n    }\n}\nexport class JWKSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWKS_INVALID';\n    }\n}\nexport class JWKSNoMatchingKey extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_NO_MATCHING_KEY';\n        this.message = 'no applicable key found in the JSON Web Key Set';\n    }\n    static get code() {\n        return 'ERR_JWKS_NO_MATCHING_KEY';\n    }\n}\nexport class JWKSMultipleMatchingKeys extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n        this.message = 'multiple matching keys found in the JSON Web Key Set';\n    }\n    static get code() {\n        return 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    }\n}\nSymbol.asyncIterator;\nexport class JWKSTimeout extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_TIMEOUT';\n        this.message = 'request timed out';\n    }\n    static get code() {\n        return 'ERR_JWKS_TIMEOUT';\n    }\n}\nexport class JWSSignatureVerificationFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n        this.message = 'signature verification failed';\n    }\n    static get code() {\n        return 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    }\n}\n","export default crypto;\nexport const isCryptoKey = (key) => key instanceof CryptoKey;\n","import crypto from './webcrypto.js';\nexport default crypto.getRandomValues.bind(crypto);\n","import { JOSENotSupported } from '../util/errors.js';\nimport random from '../runtime/random.js';\nexport function bitLength(alg) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A128GCMKW':\n        case 'A192GCM':\n        case 'A192GCMKW':\n        case 'A256GCM':\n        case 'A256GCMKW':\n            return 96;\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            return 128;\n        default:\n            throw new JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n    }\n}\nexport default (alg) => random(new Uint8Array(bitLength(alg) >> 3));\n","import { JWEInvalid } from '../util/errors.js';\nimport { bitLength } from './iv.js';\nconst checkIvLength = (enc, iv) => {\n    if (iv.length << 3 !== bitLength(enc)) {\n        throw new JWEInvalid('Invalid Initialization Vector length');\n    }\n};\nexport default checkIvLength;\n","import { JWEInvalid } from '../util/errors.js';\nconst checkCekLength = (cek, expected) => {\n    const actual = cek.byteLength << 3;\n    if (actual !== expected) {\n        throw new JWEInvalid(`Invalid Content Encryption Key length. Expected ${expected} bits, got ${actual} bits`);\n    }\n};\nexport default checkCekLength;\n","import { concat, uint64be } from '../lib/buffer_utils.js';\nimport checkIvLength from '../lib/check_iv_length.js';\nimport checkCekLength from './check_cek_length.js';\nimport timingSafeEqual from './timing_safe_equal.js';\nimport { JOSENotSupported, JWEDecryptionFailed } from '../util/errors.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nasync function cbcDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    if (!(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, 'Uint8Array'));\n    }\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const encKey = await crypto.subtle.importKey('raw', cek.subarray(keySize >> 3), 'AES-CBC', false, ['decrypt']);\n    const macKey = await crypto.subtle.importKey('raw', cek.subarray(0, keySize >> 3), {\n        hash: `SHA-${keySize << 1}`,\n        name: 'HMAC',\n    }, false, ['sign']);\n    const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\n    const expectedTag = new Uint8Array((await crypto.subtle.sign('HMAC', macKey, macData)).slice(0, keySize >> 3));\n    let macCheckPassed;\n    try {\n        macCheckPassed = timingSafeEqual(tag, expectedTag);\n    }\n    catch (_a) {\n    }\n    if (!macCheckPassed) {\n        throw new JWEDecryptionFailed();\n    }\n    let plaintext;\n    try {\n        plaintext = new Uint8Array(await crypto.subtle.decrypt({ iv, name: 'AES-CBC' }, encKey, ciphertext));\n    }\n    catch (_b) {\n    }\n    if (!plaintext) {\n        throw new JWEDecryptionFailed();\n    }\n    return plaintext;\n}\nasync function gcmDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    let encKey;\n    if (cek instanceof Uint8Array) {\n        encKey = await crypto.subtle.importKey('raw', cek, 'AES-GCM', false, ['decrypt']);\n    }\n    else {\n        checkEncCryptoKey(cek, enc, 'decrypt');\n        encKey = cek;\n    }\n    try {\n        return new Uint8Array(await crypto.subtle.decrypt({\n            additionalData: aad,\n            iv,\n            name: 'AES-GCM',\n            tagLength: 128,\n        }, encKey, concat(ciphertext, tag)));\n    }\n    catch (_a) {\n        throw new JWEDecryptionFailed();\n    }\n}\nconst decrypt = async (enc, cek, ciphertext, iv, tag, aad) => {\n    if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, ...types, 'Uint8Array'));\n    }\n    checkIvLength(enc, iv);\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(-3), 10));\n            return cbcDecrypt(enc, cek, ciphertext, iv, tag, aad);\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(1, 4), 10));\n            return gcmDecrypt(enc, cek, ciphertext, iv, tag, aad);\n        default:\n            throw new JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n    }\n};\nexport default decrypt;\n","import { JOSENotSupported } from '../util/errors.js';\nexport const inflate = async () => {\n    throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported by your javascript runtime. You need to use the `inflateRaw` decrypt option to provide Inflate Raw implementation.');\n};\nexport const deflate = async () => {\n    throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported by your javascript runtime. You need to use the `deflateRaw` encrypt option to provide Deflate Raw implementation.');\n};\n","const bogusWebCrypto = [\n    { hash: 'SHA-256', name: 'HMAC' },\n    true,\n    ['sign'],\n];\nexport default bogusWebCrypto;\n","import bogusWebCrypto from './bogus.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nfunction checkKeySize(key, alg) {\n    if (key.algorithm.length !== parseInt(alg.slice(1, 4), 10)) {\n        throw new TypeError(`Invalid key size for alg: ${alg}`);\n    }\n}\nfunction getCryptoKey(key, alg, usage) {\n    if (isCryptoKey(key)) {\n        checkEncCryptoKey(key, alg, usage);\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        return crypto.subtle.importKey('raw', key, 'AES-KW', true, [usage]);\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\nexport const wrap = async (alg, key, cek) => {\n    const cryptoKey = await getCryptoKey(key, alg, 'wrapKey');\n    checkKeySize(cryptoKey, alg);\n    const cryptoKeyCek = await crypto.subtle.importKey('raw', cek, ...bogusWebCrypto);\n    return new Uint8Array(await crypto.subtle.wrapKey('raw', cryptoKeyCek, cryptoKey, 'AES-KW'));\n};\nexport const unwrap = async (alg, key, encryptedKey) => {\n    const cryptoKey = await getCryptoKey(key, alg, 'unwrapKey');\n    checkKeySize(cryptoKey, alg);\n    const cryptoKeyCek = await crypto.subtle.unwrapKey('raw', encryptedKey, cryptoKey, 'AES-KW', ...bogusWebCrypto);\n    return new Uint8Array(await crypto.subtle.exportKey('raw', cryptoKeyCek));\n};\n","import { encoder, concat, uint32be, lengthAndInput, concatKdf } from '../lib/buffer_utils.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport async function deriveKey(publicKey, privateKey, algorithm, keyLength, apu = new Uint8Array(0), apv = new Uint8Array(0)) {\n    if (!isCryptoKey(publicKey)) {\n        throw new TypeError(invalidKeyInput(publicKey, ...types));\n    }\n    checkEncCryptoKey(publicKey, 'ECDH');\n    if (!isCryptoKey(privateKey)) {\n        throw new TypeError(invalidKeyInput(privateKey, ...types));\n    }\n    checkEncCryptoKey(privateKey, 'ECDH', 'deriveBits');\n    const value = concat(lengthAndInput(encoder.encode(algorithm)), lengthAndInput(apu), lengthAndInput(apv), uint32be(keyLength));\n    let length;\n    if (publicKey.algorithm.name === 'X25519') {\n        length = 256;\n    }\n    else if (publicKey.algorithm.name === 'X448') {\n        length = 448;\n    }\n    else {\n        length =\n            Math.ceil(parseInt(publicKey.algorithm.namedCurve.substr(-3), 10) / 8) << 3;\n    }\n    const sharedSecret = new Uint8Array(await crypto.subtle.deriveBits({\n        name: publicKey.algorithm.name,\n        public: publicKey,\n    }, privateKey, length));\n    return concatKdf(sharedSecret, keyLength, value);\n}\nexport async function generateEpk(key) {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    return crypto.subtle.generateKey(key.algorithm, true, ['deriveBits']);\n}\nexport function ecdhAllowed(key) {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    return (['P-256', 'P-384', 'P-521'].includes(key.algorithm.namedCurve) ||\n        key.algorithm.name === 'X25519' ||\n        key.algorithm.name === 'X448');\n}\n","import { JWEInvalid } from '../util/errors.js';\nexport default function checkP2s(p2s) {\n    if (!(p2s instanceof Uint8Array) || p2s.length < 8) {\n        throw new JWEInvalid('PBES2 Salt Input must be 8 or more octets');\n    }\n}\n","import random from './random.js';\nimport { p2s as concatSalt } from '../lib/buffer_utils.js';\nimport { encode as base64url } from './base64url.js';\nimport { wrap, unwrap } from './aeskw.js';\nimport checkP2s from '../lib/check_p2s.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nfunction getCryptoKey(key, alg) {\n    if (key instanceof Uint8Array) {\n        return crypto.subtle.importKey('raw', key, 'PBKDF2', false, ['deriveBits']);\n    }\n    if (isCryptoKey(key)) {\n        checkEncCryptoKey(key, alg, 'deriveBits', 'deriveKey');\n        return key;\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\nasync function deriveKey(p2s, alg, p2c, key) {\n    checkP2s(p2s);\n    const salt = concatSalt(alg, p2s);\n    const keylen = parseInt(alg.slice(13, 16), 10);\n    const subtleAlg = {\n        hash: `SHA-${alg.slice(8, 11)}`,\n        iterations: p2c,\n        name: 'PBKDF2',\n        salt,\n    };\n    const wrapAlg = {\n        length: keylen,\n        name: 'AES-KW',\n    };\n    const cryptoKey = await getCryptoKey(key, alg);\n    if (cryptoKey.usages.includes('deriveBits')) {\n        return new Uint8Array(await crypto.subtle.deriveBits(subtleAlg, cryptoKey, keylen));\n    }\n    if (cryptoKey.usages.includes('deriveKey')) {\n        return crypto.subtle.deriveKey(subtleAlg, cryptoKey, wrapAlg, false, ['wrapKey', 'unwrapKey']);\n    }\n    throw new TypeError('PBKDF2 key \"usages\" must include \"deriveBits\" or \"deriveKey\"');\n}\nexport const encrypt = async (alg, key, cek, p2c = 2048, p2s = random(new Uint8Array(16))) => {\n    const derived = await deriveKey(p2s, alg, p2c, key);\n    const encryptedKey = await wrap(alg.slice(-6), derived, cek);\n    return { encryptedKey, p2c, p2s: base64url(p2s) };\n};\nexport const decrypt = async (alg, key, encryptedKey, p2c, p2s) => {\n    const derived = await deriveKey(p2s, alg, p2c, key);\n    return unwrap(alg.slice(-6), derived, encryptedKey);\n};\n","import { JOSENotSupported } from '../util/errors.js';\nexport default function subtleRsaEs(alg) {\n    switch (alg) {\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            return 'RSA-OAEP';\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n","import subtleAlgorithm from './subtle_rsaes.js';\nimport bogusWebCrypto from './bogus.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport checkKeyLength from './check_key_length.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport const encrypt = async (alg, key, cek) => {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    checkEncCryptoKey(key, alg, 'encrypt', 'wrapKey');\n    checkKeyLength(alg, key);\n    if (key.usages.includes('encrypt')) {\n        return new Uint8Array(await crypto.subtle.encrypt(subtleAlgorithm(alg), key, cek));\n    }\n    if (key.usages.includes('wrapKey')) {\n        const cryptoKeyCek = await crypto.subtle.importKey('raw', cek, ...bogusWebCrypto);\n        return new Uint8Array(await crypto.subtle.wrapKey('raw', cryptoKeyCek, key, subtleAlgorithm(alg)));\n    }\n    throw new TypeError('RSA-OAEP key \"usages\" must include \"encrypt\" or \"wrapKey\" for this operation');\n};\nexport const decrypt = async (alg, key, encryptedKey) => {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    checkEncCryptoKey(key, alg, 'decrypt', 'unwrapKey');\n    checkKeyLength(alg, key);\n    if (key.usages.includes('decrypt')) {\n        return new Uint8Array(await crypto.subtle.decrypt(subtleAlgorithm(alg), key, encryptedKey));\n    }\n    if (key.usages.includes('unwrapKey')) {\n        const cryptoKeyCek = await crypto.subtle.unwrapKey('raw', encryptedKey, key, subtleAlgorithm(alg), ...bogusWebCrypto);\n        return new Uint8Array(await crypto.subtle.exportKey('raw', cryptoKeyCek));\n    }\n    throw new TypeError('RSA-OAEP key \"usages\" must include \"decrypt\" or \"unwrapKey\" for this operation');\n};\n","import { JOSENotSupported } from '../util/errors.js';\nimport random from '../runtime/random.js';\nexport function bitLength(alg) {\n    switch (alg) {\n        case 'A128GCM':\n            return 128;\n        case 'A192GCM':\n            return 192;\n        case 'A256GCM':\n        case 'A128CBC-HS256':\n            return 256;\n        case 'A192CBC-HS384':\n            return 384;\n        case 'A256CBC-HS512':\n            return 512;\n        default:\n            throw new JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n    }\n}\nexport default (alg) => random(new Uint8Array(bitLength(alg) >> 3));\n","import crypto, { isCryptoKey } from './webcrypto.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { encodeBase64, decodeBase64 } from './base64url.js';\nimport formatPEM from '../lib/format_pem.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { types } from './is_key_like.js';\nconst genericExport = async (keyType, keyFormat, key) => {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    if (!key.extractable) {\n        throw new TypeError('CryptoKey is not extractable');\n    }\n    if (key.type !== keyType) {\n        throw new TypeError(`key is not a ${keyType} key`);\n    }\n    return formatPEM(encodeBase64(new Uint8Array(await crypto.subtle.exportKey(keyFormat, key))), `${keyType.toUpperCase()} KEY`);\n};\nexport const toSPKI = (key) => {\n    return genericExport('public', 'spki', key);\n};\nexport const toPKCS8 = (key) => {\n    return genericExport('private', 'pkcs8', key);\n};\nconst findOid = (keyData, oid, from = 0) => {\n    if (from === 0) {\n        oid.unshift(oid.length);\n        oid.unshift(0x06);\n    }\n    let i = keyData.indexOf(oid[0], from);\n    if (i === -1)\n        return false;\n    const sub = keyData.subarray(i, i + oid.length);\n    if (sub.length !== oid.length)\n        return false;\n    return sub.every((value, index) => value === oid[index]) || findOid(keyData, oid, i + 1);\n};\nconst getNamedCurve = (keyData) => {\n    switch (true) {\n        case findOid(keyData, [0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07]):\n            return 'P-256';\n        case findOid(keyData, [0x2b, 0x81, 0x04, 0x00, 0x22]):\n            return 'P-384';\n        case findOid(keyData, [0x2b, 0x81, 0x04, 0x00, 0x23]):\n            return 'P-521';\n        case findOid(keyData, [0x2b, 0x65, 0x6e]):\n            return 'X25519';\n        case findOid(keyData, [0x2b, 0x65, 0x6f]):\n            return 'X448';\n        case findOid(keyData, [0x2b, 0x65, 0x70]):\n            return 'Ed25519';\n        case findOid(keyData, [0x2b, 0x65, 0x71]):\n            return 'Ed448';\n        default:\n            throw new JOSENotSupported('Invalid or unsupported EC Key Curve or OKP Key Sub Type');\n    }\n};\nconst genericImport = async (replace, keyFormat, pem, alg, options) => {\n    var _a;\n    let algorithm;\n    let keyUsages;\n    const keyData = new Uint8Array(atob(pem.replace(replace, ''))\n        .split('')\n        .map((c) => c.charCodeAt(0)));\n    const isPublic = keyFormat === 'spki';\n    switch (alg) {\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            algorithm = { name: 'RSA-PSS', hash: `SHA-${alg.slice(-3)}` };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${alg.slice(-3)}` };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            algorithm = {\n                name: 'RSA-OAEP',\n                hash: `SHA-${parseInt(alg.slice(-3), 10) || 1}`,\n            };\n            keyUsages = isPublic ? ['encrypt', 'wrapKey'] : ['decrypt', 'unwrapKey'];\n            break;\n        case 'ES256':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ES384':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ES512':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            const namedCurve = getNamedCurve(keyData);\n            algorithm = namedCurve.startsWith('P-') ? { name: 'ECDH', namedCurve } : { name: namedCurve };\n            keyUsages = isPublic ? [] : ['deriveBits'];\n            break;\n        }\n        case 'EdDSA':\n            algorithm = { name: getNamedCurve(keyData) };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        default:\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (Algorithm) value');\n    }\n    return crypto.subtle.importKey(keyFormat, keyData, algorithm, (_a = options === null || options === void 0 ? void 0 : options.extractable) !== null && _a !== void 0 ? _a : false, keyUsages);\n};\nexport const fromPKCS8 = (pem, alg, options) => {\n    return genericImport(/(?:-----(?:BEGIN|END) PRIVATE KEY-----|\\s)/g, 'pkcs8', pem, alg, options);\n};\nexport const fromSPKI = (pem, alg, options) => {\n    return genericImport(/(?:-----(?:BEGIN|END) PUBLIC KEY-----|\\s)/g, 'spki', pem, alg, options);\n};\nfunction getElement(seq) {\n    let result = [];\n    let next = 0;\n    while (next < seq.length) {\n        let nextPart = parseElement(seq.subarray(next));\n        result.push(nextPart);\n        next += nextPart.byteLength;\n    }\n    return result;\n}\nfunction parseElement(bytes) {\n    let position = 0;\n    let tag = bytes[0] & 0x1f;\n    position++;\n    if (tag === 0x1f) {\n        tag = 0;\n        while (bytes[position] >= 0x80) {\n            tag = tag * 128 + bytes[position] - 0x80;\n            position++;\n        }\n        tag = tag * 128 + bytes[position] - 0x80;\n        position++;\n    }\n    let length = 0;\n    if (bytes[position] < 0x80) {\n        length = bytes[position];\n        position++;\n    }\n    else if (length === 0x80) {\n        length = 0;\n        while (bytes[position + length] !== 0 || bytes[position + length + 1] !== 0) {\n            if (length > bytes.byteLength) {\n                throw new TypeError('invalid indefinite form length');\n            }\n            length++;\n        }\n        const byteLength = position + length + 2;\n        return {\n            byteLength,\n            contents: bytes.subarray(position, position + length),\n            raw: bytes.subarray(0, byteLength),\n        };\n    }\n    else {\n        let numberOfDigits = bytes[position] & 0x7f;\n        position++;\n        length = 0;\n        for (let i = 0; i < numberOfDigits; i++) {\n            length = length * 256 + bytes[position];\n            position++;\n        }\n    }\n    const byteLength = position + length;\n    return {\n        byteLength,\n        contents: bytes.subarray(position, byteLength),\n        raw: bytes.subarray(0, byteLength),\n    };\n}\nfunction spkiFromX509(buf) {\n    const tbsCertificate = getElement(getElement(parseElement(buf).contents)[0].contents);\n    return encodeBase64(tbsCertificate[tbsCertificate[0].raw[0] === 0xa0 ? 6 : 5].raw);\n}\nfunction getSPKI(x509) {\n    const pem = x509.replace(/(?:-----(?:BEGIN|END) CERTIFICATE-----|\\s)/g, '');\n    const raw = decodeBase64(pem);\n    return formatPEM(spkiFromX509(raw), 'PUBLIC KEY');\n}\nexport const fromX509 = (pem, alg, options) => {\n    let spki;\n    try {\n        spki = getSPKI(pem);\n    }\n    catch (cause) {\n        throw new TypeError('Failed to parse the X.509 certificate', { cause });\n    }\n    return fromSPKI(spki, alg, options);\n};\n","import crypto from './webcrypto.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { decode as base64url } from './base64url.js';\nfunction subtleMapping(jwk) {\n    let algorithm;\n    let keyUsages;\n    switch (jwk.kty) {\n        case 'oct': {\n            switch (jwk.alg) {\n                case 'HS256':\n                case 'HS384':\n                case 'HS512':\n                    algorithm = { name: 'HMAC', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = ['sign', 'verify'];\n                    break;\n                case 'A128CBC-HS256':\n                case 'A192CBC-HS384':\n                case 'A256CBC-HS512':\n                    throw new JOSENotSupported(`${jwk.alg} keys cannot be imported as CryptoKey instances`);\n                case 'A128GCM':\n                case 'A192GCM':\n                case 'A256GCM':\n                case 'A128GCMKW':\n                case 'A192GCMKW':\n                case 'A256GCMKW':\n                    algorithm = { name: 'AES-GCM' };\n                    keyUsages = ['encrypt', 'decrypt'];\n                    break;\n                case 'A128KW':\n                case 'A192KW':\n                case 'A256KW':\n                    algorithm = { name: 'AES-KW' };\n                    keyUsages = ['wrapKey', 'unwrapKey'];\n                    break;\n                case 'PBES2-HS256+A128KW':\n                case 'PBES2-HS384+A192KW':\n                case 'PBES2-HS512+A256KW':\n                    algorithm = { name: 'PBKDF2' };\n                    keyUsages = ['deriveBits'];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'RSA': {\n            switch (jwk.alg) {\n                case 'PS256':\n                case 'PS384':\n                case 'PS512':\n                    algorithm = { name: 'RSA-PSS', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RS256':\n                case 'RS384':\n                case 'RS512':\n                    algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RSA-OAEP':\n                case 'RSA-OAEP-256':\n                case 'RSA-OAEP-384':\n                case 'RSA-OAEP-512':\n                    algorithm = {\n                        name: 'RSA-OAEP',\n                        hash: `SHA-${parseInt(jwk.alg.slice(-3), 10) || 1}`,\n                    };\n                    keyUsages = jwk.d ? ['decrypt', 'unwrapKey'] : ['encrypt', 'wrapKey'];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'EC': {\n            switch (jwk.alg) {\n                case 'ES256':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES384':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES512':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: 'ECDH', namedCurve: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'OKP': {\n            switch (jwk.alg) {\n                case 'EdDSA':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"kty\" (Key Type) Parameter value');\n    }\n    return { algorithm, keyUsages };\n}\nconst parse = async (jwk) => {\n    var _a, _b;\n    if (!jwk.alg) {\n        throw new TypeError('\"alg\" argument is required when \"jwk.alg\" is not present');\n    }\n    const { algorithm, keyUsages } = subtleMapping(jwk);\n    const rest = [\n        algorithm,\n        (_a = jwk.ext) !== null && _a !== void 0 ? _a : false,\n        (_b = jwk.key_ops) !== null && _b !== void 0 ? _b : keyUsages,\n    ];\n    if (algorithm.name === 'PBKDF2') {\n        return crypto.subtle.importKey('raw', base64url(jwk.k), ...rest);\n    }\n    const keyData = { ...jwk };\n    delete keyData.alg;\n    delete keyData.use;\n    return crypto.subtle.importKey('jwk', keyData, ...rest);\n};\nexport default parse;\n","function isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nexport default function isObject(input) {\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== '[object Object]') {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n}\n","import { decode as decodeBase64URL } from '../runtime/base64url.js';\nimport { fromSPKI, fromPKCS8, fromX509 } from '../runtime/asn1.js';\nimport asKeyObject from '../runtime/jwk_to_key.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nexport async function importSPKI(spki, alg, options) {\n    if (typeof spki !== 'string' || spki.indexOf('-----BEGIN PUBLIC KEY-----') !== 0) {\n        throw new TypeError('\"spki\" must be SPKI formatted string');\n    }\n    return fromSPKI(spki, alg, options);\n}\nexport async function importX509(x509, alg, options) {\n    if (typeof x509 !== 'string' || x509.indexOf('-----BEGIN CERTIFICATE-----') !== 0) {\n        throw new TypeError('\"x509\" must be X.509 formatted string');\n    }\n    return fromX509(x509, alg, options);\n}\nexport async function importPKCS8(pkcs8, alg, options) {\n    if (typeof pkcs8 !== 'string' || pkcs8.indexOf('-----BEGIN PRIVATE KEY-----') !== 0) {\n        throw new TypeError('\"pkcs8\" must be PKCS#8 formatted string');\n    }\n    return fromPKCS8(pkcs8, alg, options);\n}\nexport async function importJWK(jwk, alg, octAsKeyObject) {\n    var _a;\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    alg || (alg = jwk.alg);\n    switch (jwk.kty) {\n        case 'oct':\n            if (typeof jwk.k !== 'string' || !jwk.k) {\n                throw new TypeError('missing \"k\" (Key Value) Parameter value');\n            }\n            octAsKeyObject !== null && octAsKeyObject !== void 0 ? octAsKeyObject : (octAsKeyObject = jwk.ext !== true);\n            if (octAsKeyObject) {\n                return asKeyObject({ ...jwk, alg, ext: (_a = jwk.ext) !== null && _a !== void 0 ? _a : false });\n            }\n            return decodeBase64URL(jwk.k);\n        case 'RSA':\n            if (jwk.oth !== undefined) {\n                throw new JOSENotSupported('RSA JWK \"oth\" (Other Primes Info) Parameter value is not supported');\n            }\n        case 'EC':\n        case 'OKP':\n            return asKeyObject({ ...jwk, alg });\n        default:\n            throw new JOSENotSupported('Unsupported \"kty\" (Key Type) Parameter value');\n    }\n}\n","import { concat, uint64be } from '../lib/buffer_utils.js';\nimport checkIvLength from '../lib/check_iv_length.js';\nimport checkCekLength from './check_cek_length.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { types } from './is_key_like.js';\nasync function cbcEncrypt(enc, plaintext, cek, iv, aad) {\n    if (!(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, 'Uint8Array'));\n    }\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const encKey = await crypto.subtle.importKey('raw', cek.subarray(keySize >> 3), 'AES-CBC', false, ['encrypt']);\n    const macKey = await crypto.subtle.importKey('raw', cek.subarray(0, keySize >> 3), {\n        hash: `SHA-${keySize << 1}`,\n        name: 'HMAC',\n    }, false, ['sign']);\n    const ciphertext = new Uint8Array(await crypto.subtle.encrypt({\n        iv,\n        name: 'AES-CBC',\n    }, encKey, plaintext));\n    const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\n    const tag = new Uint8Array((await crypto.subtle.sign('HMAC', macKey, macData)).slice(0, keySize >> 3));\n    return { ciphertext, tag };\n}\nasync function gcmEncrypt(enc, plaintext, cek, iv, aad) {\n    let encKey;\n    if (cek instanceof Uint8Array) {\n        encKey = await crypto.subtle.importKey('raw', cek, 'AES-GCM', false, ['encrypt']);\n    }\n    else {\n        checkEncCryptoKey(cek, enc, 'encrypt');\n        encKey = cek;\n    }\n    const encrypted = new Uint8Array(await crypto.subtle.encrypt({\n        additionalData: aad,\n        iv,\n        name: 'AES-GCM',\n        tagLength: 128,\n    }, encKey, plaintext));\n    const tag = encrypted.slice(-16);\n    const ciphertext = encrypted.slice(0, -16);\n    return { ciphertext, tag };\n}\nconst encrypt = async (enc, plaintext, cek, iv, aad) => {\n    if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, ...types, 'Uint8Array'));\n    }\n    checkIvLength(enc, iv);\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(-3), 10));\n            return cbcEncrypt(enc, plaintext, cek, iv, aad);\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(1, 4), 10));\n            return gcmEncrypt(enc, plaintext, cek, iv, aad);\n        default:\n            throw new JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n    }\n};\nexport default encrypt;\n","import encrypt from '../runtime/encrypt.js';\nimport decrypt from '../runtime/decrypt.js';\nimport generateIv from './iv.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nexport async function wrap(alg, key, cek, iv) {\n    const jweAlgorithm = alg.slice(0, 7);\n    iv || (iv = generateIv(jweAlgorithm));\n    const { ciphertext: encryptedKey, tag } = await encrypt(jweAlgorithm, cek, key, iv, new Uint8Array(0));\n    return { encryptedKey, iv: base64url(iv), tag: base64url(tag) };\n}\nexport async function unwrap(alg, key, encryptedKey, iv, tag) {\n    const jweAlgorithm = alg.slice(0, 7);\n    return decrypt(jweAlgorithm, key, encryptedKey, iv, tag, new Uint8Array(0));\n}\n","import { unwrap as aesKw } from '../runtime/aeskw.js';\nimport * as ECDH from '../runtime/ecdhes.js';\nimport { decrypt as pbes2Kw } from '../runtime/pbes2kw.js';\nimport { decrypt as rsaEs } from '../runtime/rsaes.js';\nimport { decode as base64url } from '../runtime/base64url.js';\nimport { JOSENotSupported, JWEInvalid } from '../util/errors.js';\nimport { bitLength as cekLength } from '../lib/cek.js';\nimport { importJWK } from '../key/import.js';\nimport checkKeyType from './check_key_type.js';\nimport isObject from './is_object.js';\nimport { unwrap as aesGcmKw } from './aesgcmkw.js';\nasync function decryptKeyManagement(alg, key, encryptedKey, joseHeader, options) {\n    checkKeyType(alg, key, 'decrypt');\n    switch (alg) {\n        case 'dir': {\n            if (encryptedKey !== undefined)\n                throw new JWEInvalid('Encountered unexpected JWE Encrypted Key');\n            return key;\n        }\n        case 'ECDH-ES':\n            if (encryptedKey !== undefined)\n                throw new JWEInvalid('Encountered unexpected JWE Encrypted Key');\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            if (!isObject(joseHeader.epk))\n                throw new JWEInvalid(`JOSE Header \"epk\" (Ephemeral Public Key) missing or invalid`);\n            if (!ECDH.ecdhAllowed(key))\n                throw new JOSENotSupported('ECDH with the provided key is not allowed or not supported by your javascript runtime');\n            const epk = await importJWK(joseHeader.epk, alg);\n            let partyUInfo;\n            let partyVInfo;\n            if (joseHeader.apu !== undefined) {\n                if (typeof joseHeader.apu !== 'string')\n                    throw new JWEInvalid(`JOSE Header \"apu\" (Agreement PartyUInfo) invalid`);\n                try {\n                    partyUInfo = base64url(joseHeader.apu);\n                }\n                catch (_a) {\n                    throw new JWEInvalid('Failed to base64url decode the apu');\n                }\n            }\n            if (joseHeader.apv !== undefined) {\n                if (typeof joseHeader.apv !== 'string')\n                    throw new JWEInvalid(`JOSE Header \"apv\" (Agreement PartyVInfo) invalid`);\n                try {\n                    partyVInfo = base64url(joseHeader.apv);\n                }\n                catch (_b) {\n                    throw new JWEInvalid('Failed to base64url decode the apv');\n                }\n            }\n            const sharedSecret = await ECDH.deriveKey(epk, key, alg === 'ECDH-ES' ? joseHeader.enc : alg, alg === 'ECDH-ES' ? cekLength(joseHeader.enc) : parseInt(alg.slice(-5, -2), 10), partyUInfo, partyVInfo);\n            if (alg === 'ECDH-ES')\n                return sharedSecret;\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            return aesKw(alg.slice(-6), sharedSecret, encryptedKey);\n        }\n        case 'RSA1_5':\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            return rsaEs(alg, key, encryptedKey);\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            if (typeof joseHeader.p2c !== 'number')\n                throw new JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) missing or invalid`);\n            const p2cLimit = (options === null || options === void 0 ? void 0 : options.maxPBES2Count) || 10000;\n            if (joseHeader.p2c > p2cLimit)\n                throw new JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) out is of acceptable bounds`);\n            if (typeof joseHeader.p2s !== 'string')\n                throw new JWEInvalid(`JOSE Header \"p2s\" (PBES2 Salt) missing or invalid`);\n            let p2s;\n            try {\n                p2s = base64url(joseHeader.p2s);\n            }\n            catch (_c) {\n                throw new JWEInvalid('Failed to base64url decode the p2s');\n            }\n            return pbes2Kw(alg, key, encryptedKey, joseHeader.p2c, p2s);\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            return aesKw(alg, key, encryptedKey);\n        }\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            if (typeof joseHeader.iv !== 'string')\n                throw new JWEInvalid(`JOSE Header \"iv\" (Initialization Vector) missing or invalid`);\n            if (typeof joseHeader.tag !== 'string')\n                throw new JWEInvalid(`JOSE Header \"tag\" (Authentication Tag) missing or invalid`);\n            let iv;\n            try {\n                iv = base64url(joseHeader.iv);\n            }\n            catch (_d) {\n                throw new JWEInvalid('Failed to base64url decode the iv');\n            }\n            let tag;\n            try {\n                tag = base64url(joseHeader.tag);\n            }\n            catch (_e) {\n                throw new JWEInvalid('Failed to base64url decode the tag');\n            }\n            return aesGcmKw(alg, key, encryptedKey, iv, tag);\n        }\n        default: {\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n        }\n    }\n}\nexport default decryptKeyManagement;\n","import { JOSENotSupported } from '../util/errors.js';\nfunction validateCrit(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {\n    if (joseHeader.crit !== undefined && protectedHeader.crit === undefined) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\n    }\n    if (!protectedHeader || protectedHeader.crit === undefined) {\n        return new Set();\n    }\n    if (!Array.isArray(protectedHeader.crit) ||\n        protectedHeader.crit.length === 0 ||\n        protectedHeader.crit.some((input) => typeof input !== 'string' || input.length === 0)) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\n    }\n    let recognized;\n    if (recognizedOption !== undefined) {\n        recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);\n    }\n    else {\n        recognized = recognizedDefault;\n    }\n    for (const parameter of protectedHeader.crit) {\n        if (!recognized.has(parameter)) {\n            throw new JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\n        }\n        if (joseHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\n        }\n        else if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\n        }\n    }\n    return new Set(protectedHeader.crit);\n}\nexport default validateCrit;\n","import { decode as base64url } from '../../runtime/base64url.js';\nimport decrypt from '../../runtime/decrypt.js';\nimport { inflate } from '../../runtime/zlib.js';\nimport { JOSEAlgNotAllowed, JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport decryptKeyManagement from '../../lib/decrypt_key_management.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport generateCek from '../../lib/cek.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nexport async function flattenedDecrypt(jwe, key, options) {\n    var _a;\n    if (!isObject(jwe)) {\n        throw new JWEInvalid('Flattened JWE must be an object');\n    }\n    if (jwe.protected === undefined && jwe.header === undefined && jwe.unprotected === undefined) {\n        throw new JWEInvalid('JOSE Header missing');\n    }\n    if (typeof jwe.iv !== 'string') {\n        throw new JWEInvalid('JWE Initialization Vector missing or incorrect type');\n    }\n    if (typeof jwe.ciphertext !== 'string') {\n        throw new JWEInvalid('JWE Ciphertext missing or incorrect type');\n    }\n    if (typeof jwe.tag !== 'string') {\n        throw new JWEInvalid('JWE Authentication Tag missing or incorrect type');\n    }\n    if (jwe.protected !== undefined && typeof jwe.protected !== 'string') {\n        throw new JWEInvalid('JWE Protected Header incorrect type');\n    }\n    if (jwe.encrypted_key !== undefined && typeof jwe.encrypted_key !== 'string') {\n        throw new JWEInvalid('JWE Encrypted Key incorrect type');\n    }\n    if (jwe.aad !== undefined && typeof jwe.aad !== 'string') {\n        throw new JWEInvalid('JWE AAD incorrect type');\n    }\n    if (jwe.header !== undefined && !isObject(jwe.header)) {\n        throw new JWEInvalid('JWE Shared Unprotected Header incorrect type');\n    }\n    if (jwe.unprotected !== undefined && !isObject(jwe.unprotected)) {\n        throw new JWEInvalid('JWE Per-Recipient Unprotected Header incorrect type');\n    }\n    let parsedProt;\n    if (jwe.protected) {\n        try {\n            const protectedHeader = base64url(jwe.protected);\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch (_b) {\n            throw new JWEInvalid('JWE Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jwe.header, jwe.unprotected)) {\n        throw new JWEInvalid('JWE Protected, JWE Unprotected Header, and JWE Per-Recipient Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jwe.header,\n        ...jwe.unprotected,\n    };\n    validateCrit(JWEInvalid, new Map(), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n    if (joseHeader.zip !== undefined) {\n        if (!parsedProt || !parsedProt.zip) {\n            throw new JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n        }\n        if (joseHeader.zip !== 'DEF') {\n            throw new JOSENotSupported('Unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n        }\n    }\n    const { alg, enc } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWEInvalid('missing JWE Algorithm (alg) in JWE Header');\n    }\n    if (typeof enc !== 'string' || !enc) {\n        throw new JWEInvalid('missing JWE Encryption Algorithm (enc) in JWE Header');\n    }\n    const keyManagementAlgorithms = options && validateAlgorithms('keyManagementAlgorithms', options.keyManagementAlgorithms);\n    const contentEncryptionAlgorithms = options &&\n        validateAlgorithms('contentEncryptionAlgorithms', options.contentEncryptionAlgorithms);\n    if (keyManagementAlgorithms && !keyManagementAlgorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n    }\n    if (contentEncryptionAlgorithms && !contentEncryptionAlgorithms.has(enc)) {\n        throw new JOSEAlgNotAllowed('\"enc\" (Encryption Algorithm) Header Parameter not allowed');\n    }\n    let encryptedKey;\n    if (jwe.encrypted_key !== undefined) {\n        try {\n            encryptedKey = base64url(jwe.encrypted_key);\n        }\n        catch (_c) {\n            throw new JWEInvalid('Failed to base64url decode the encrypted_key');\n        }\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jwe);\n        resolvedKey = true;\n    }\n    let cek;\n    try {\n        cek = await decryptKeyManagement(alg, key, encryptedKey, joseHeader, options);\n    }\n    catch (err) {\n        if (err instanceof TypeError || err instanceof JWEInvalid || err instanceof JOSENotSupported) {\n            throw err;\n        }\n        cek = generateCek(enc);\n    }\n    let iv;\n    let tag;\n    try {\n        iv = base64url(jwe.iv);\n    }\n    catch (_d) {\n        throw new JWEInvalid('Failed to base64url decode the iv');\n    }\n    try {\n        tag = base64url(jwe.tag);\n    }\n    catch (_e) {\n        throw new JWEInvalid('Failed to base64url decode the tag');\n    }\n    const protectedHeader = encoder.encode((_a = jwe.protected) !== null && _a !== void 0 ? _a : '');\n    let additionalData;\n    if (jwe.aad !== undefined) {\n        additionalData = concat(protectedHeader, encoder.encode('.'), encoder.encode(jwe.aad));\n    }\n    else {\n        additionalData = protectedHeader;\n    }\n    let ciphertext;\n    try {\n        ciphertext = base64url(jwe.ciphertext);\n    }\n    catch (_f) {\n        throw new JWEInvalid('Failed to base64url decode the ciphertext');\n    }\n    let plaintext = await decrypt(enc, cek, ciphertext, iv, tag, additionalData);\n    if (joseHeader.zip === 'DEF') {\n        plaintext = await ((options === null || options === void 0 ? void 0 : options.inflateRaw) || inflate)(plaintext);\n    }\n    const result = { plaintext };\n    if (jwe.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jwe.aad !== undefined) {\n        try {\n            result.additionalAuthenticatedData = base64url(jwe.aad);\n        }\n        catch (_g) {\n            throw new JWEInvalid('Failed to base64url decode the aad');\n        }\n    }\n    if (jwe.unprotected !== undefined) {\n        result.sharedUnprotectedHeader = jwe.unprotected;\n    }\n    if (jwe.header !== undefined) {\n        result.unprotectedHeader = jwe.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\n","import { flattenedDecrypt } from '../flattened/decrypt.js';\nimport { JWEInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactDecrypt(jwe, key, options) {\n    if (jwe instanceof Uint8Array) {\n        jwe = decoder.decode(jwe);\n    }\n    if (typeof jwe !== 'string') {\n        throw new JWEInvalid('Compact JWE must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: encryptedKey, 2: iv, 3: ciphertext, 4: tag, length, } = jwe.split('.');\n    if (length !== 5) {\n        throw new JWEInvalid('Invalid Compact JWE');\n    }\n    const decrypted = await flattenedDecrypt({\n        ciphertext,\n        iv: (iv || undefined),\n        protected: protectedHeader || undefined,\n        tag: (tag || undefined),\n        encrypted_key: encryptedKey || undefined,\n    }, key, options);\n    const result = { plaintext: decrypted.plaintext, protectedHeader: decrypted.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: decrypted.key };\n    }\n    return result;\n}\n","import { flattenedDecrypt } from '../flattened/decrypt.js';\nimport { JWEDecryptionFailed, JWEInvalid } from '../../util/errors.js';\nimport isObject from '../../lib/is_object.js';\nexport async function generalDecrypt(jwe, key, options) {\n    if (!isObject(jwe)) {\n        throw new JWEInvalid('General JWE must be an object');\n    }\n    if (!Array.isArray(jwe.recipients) || !jwe.recipients.every(isObject)) {\n        throw new JWEInvalid('JWE Recipients missing or incorrect type');\n    }\n    if (!jwe.recipients.length) {\n        throw new JWEInvalid('JWE Recipients has no members');\n    }\n    for (const recipient of jwe.recipients) {\n        try {\n            return await flattenedDecrypt({\n                aad: jwe.aad,\n                ciphertext: jwe.ciphertext,\n                encrypted_key: recipient.encrypted_key,\n                header: recipient.header,\n                iv: jwe.iv,\n                protected: jwe.protected,\n                tag: jwe.tag,\n                unprotected: jwe.unprotected,\n            }, key, options);\n        }\n        catch (_a) {\n        }\n    }\n    throw new JWEDecryptionFailed();\n}\n","import crypto, { isCryptoKey } from './webcrypto.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { encode as base64url } from './base64url.js';\nimport { types } from './is_key_like.js';\nconst keyToJWK = async (key) => {\n    if (key instanceof Uint8Array) {\n        return {\n            kty: 'oct',\n            k: base64url(key),\n        };\n    }\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n    }\n    if (!key.extractable) {\n        throw new TypeError('non-extractable CryptoKey cannot be exported as a JWK');\n    }\n    const { ext, key_ops, alg, use, ...jwk } = await crypto.subtle.exportKey('jwk', key);\n    return jwk;\n};\nexport default keyToJWK;\n","import { toSPKI as exportPublic } from '../runtime/asn1.js';\nimport { toPKCS8 as exportPrivate } from '../runtime/asn1.js';\nimport keyToJWK from '../runtime/key_to_jwk.js';\nexport async function exportSPKI(key) {\n    return exportPublic(key);\n}\nexport async function exportPKCS8(key) {\n    return exportPrivate(key);\n}\nexport async function exportJWK(key) {\n    return keyToJWK(key);\n}\n","import { wrap as aesKw } from '../runtime/aeskw.js';\nimport * as ECDH from '../runtime/ecdhes.js';\nimport { encrypt as pbes2Kw } from '../runtime/pbes2kw.js';\nimport { encrypt as rsaEs } from '../runtime/rsaes.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nimport generateCek, { bitLength as cekLength } from '../lib/cek.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { exportJWK } from '../key/export.js';\nimport checkKeyType from './check_key_type.js';\nimport { wrap as aesGcmKw } from './aesgcmkw.js';\nasync function encryptKeyManagement(alg, enc, key, providedCek, providedParameters = {}) {\n    let encryptedKey;\n    let parameters;\n    let cek;\n    checkKeyType(alg, key, 'encrypt');\n    switch (alg) {\n        case 'dir': {\n            cek = key;\n            break;\n        }\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            if (!ECDH.ecdhAllowed(key)) {\n                throw new JOSENotSupported('ECDH with the provided key is not allowed or not supported by your javascript runtime');\n            }\n            const { apu, apv } = providedParameters;\n            let { epk: ephemeralKey } = providedParameters;\n            ephemeralKey || (ephemeralKey = (await ECDH.generateEpk(key)).privateKey);\n            const { x, y, crv, kty } = await exportJWK(ephemeralKey);\n            const sharedSecret = await ECDH.deriveKey(key, ephemeralKey, alg === 'ECDH-ES' ? enc : alg, alg === 'ECDH-ES' ? cekLength(enc) : parseInt(alg.slice(-5, -2), 10), apu, apv);\n            parameters = { epk: { x, crv, kty } };\n            if (kty === 'EC')\n                parameters.epk.y = y;\n            if (apu)\n                parameters.apu = base64url(apu);\n            if (apv)\n                parameters.apv = base64url(apv);\n            if (alg === 'ECDH-ES') {\n                cek = sharedSecret;\n                break;\n            }\n            cek = providedCek || generateCek(enc);\n            const kwAlg = alg.slice(-6);\n            encryptedKey = await aesKw(kwAlg, sharedSecret, cek);\n            break;\n        }\n        case 'RSA1_5':\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            cek = providedCek || generateCek(enc);\n            encryptedKey = await rsaEs(alg, key, cek);\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW': {\n            cek = providedCek || generateCek(enc);\n            const { p2c, p2s } = providedParameters;\n            ({ encryptedKey, ...parameters } = await pbes2Kw(alg, key, cek, p2c, p2s));\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            cek = providedCek || generateCek(enc);\n            encryptedKey = await aesKw(alg, key, cek);\n            break;\n        }\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW': {\n            cek = providedCek || generateCek(enc);\n            const { iv } = providedParameters;\n            ({ encryptedKey, ...parameters } = await aesGcmKw(alg, key, cek, iv));\n            break;\n        }\n        default: {\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n        }\n    }\n    return { cek, encryptedKey, parameters };\n}\nexport default encryptKeyManagement;\n","import { encode as base64url } from '../../runtime/base64url.js';\nimport encrypt from '../../runtime/encrypt.js';\nimport { deflate } from '../../runtime/zlib.js';\nimport generateIv from '../../lib/iv.js';\nimport encryptKeyManagement from '../../lib/encrypt_key_management.js';\nimport { JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport validateCrit from '../../lib/validate_crit.js';\nexport const unprotected = Symbol();\nexport class FlattenedEncrypt {\n    constructor(plaintext) {\n        if (!(plaintext instanceof Uint8Array)) {\n            throw new TypeError('plaintext must be an instance of Uint8Array');\n        }\n        this._plaintext = plaintext;\n    }\n    setKeyManagementParameters(parameters) {\n        if (this._keyManagementParameters) {\n            throw new TypeError('setKeyManagementParameters can only be called once');\n        }\n        this._keyManagementParameters = parameters;\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n        if (this._sharedUnprotectedHeader) {\n            throw new TypeError('setSharedUnprotectedHeader can only be called once');\n        }\n        this._sharedUnprotectedHeader = sharedUnprotectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    setAdditionalAuthenticatedData(aad) {\n        this._aad = aad;\n        return this;\n    }\n    setContentEncryptionKey(cek) {\n        if (this._cek) {\n            throw new TypeError('setContentEncryptionKey can only be called once');\n        }\n        this._cek = cek;\n        return this;\n    }\n    setInitializationVector(iv) {\n        if (this._iv) {\n            throw new TypeError('setInitializationVector can only be called once');\n        }\n        this._iv = iv;\n        return this;\n    }\n    async encrypt(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader && !this._sharedUnprotectedHeader) {\n            throw new JWEInvalid('either setProtectedHeader, setUnprotectedHeader, or sharedUnprotectedHeader must be called before #encrypt()');\n        }\n        if (!isDisjoint(this._protectedHeader, this._unprotectedHeader, this._sharedUnprotectedHeader)) {\n            throw new JWEInvalid('JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader,\n            ...this._sharedUnprotectedHeader,\n        };\n        validateCrit(JWEInvalid, new Map(), options === null || options === void 0 ? void 0 : options.crit, this._protectedHeader, joseHeader);\n        if (joseHeader.zip !== undefined) {\n            if (!this._protectedHeader || !this._protectedHeader.zip) {\n                throw new JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n            }\n            if (joseHeader.zip !== 'DEF') {\n                throw new JOSENotSupported('Unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n            }\n        }\n        const { alg, enc } = joseHeader;\n        if (typeof alg !== 'string' || !alg) {\n            throw new JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        if (typeof enc !== 'string' || !enc) {\n            throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n        }\n        let encryptedKey;\n        if (alg === 'dir') {\n            if (this._cek) {\n                throw new TypeError('setContentEncryptionKey cannot be called when using Direct Encryption');\n            }\n        }\n        else if (alg === 'ECDH-ES') {\n            if (this._cek) {\n                throw new TypeError('setContentEncryptionKey cannot be called when using Direct Key Agreement');\n            }\n        }\n        let cek;\n        {\n            let parameters;\n            ({ cek, encryptedKey, parameters } = await encryptKeyManagement(alg, enc, key, this._cek, this._keyManagementParameters));\n            if (parameters) {\n                if (options && unprotected in options) {\n                    if (!this._unprotectedHeader) {\n                        this.setUnprotectedHeader(parameters);\n                    }\n                    else {\n                        this._unprotectedHeader = { ...this._unprotectedHeader, ...parameters };\n                    }\n                }\n                else {\n                    if (!this._protectedHeader) {\n                        this.setProtectedHeader(parameters);\n                    }\n                    else {\n                        this._protectedHeader = { ...this._protectedHeader, ...parameters };\n                    }\n                }\n            }\n        }\n        this._iv || (this._iv = generateIv(enc));\n        let additionalData;\n        let protectedHeader;\n        let aadMember;\n        if (this._protectedHeader) {\n            protectedHeader = encoder.encode(base64url(JSON.stringify(this._protectedHeader)));\n        }\n        else {\n            protectedHeader = encoder.encode('');\n        }\n        if (this._aad) {\n            aadMember = base64url(this._aad);\n            additionalData = concat(protectedHeader, encoder.encode('.'), encoder.encode(aadMember));\n        }\n        else {\n            additionalData = protectedHeader;\n        }\n        let ciphertext;\n        let tag;\n        if (joseHeader.zip === 'DEF') {\n            const deflated = await ((options === null || options === void 0 ? void 0 : options.deflateRaw) || deflate)(this._plaintext);\n            ({ ciphertext, tag } = await encrypt(enc, deflated, cek, this._iv, additionalData));\n        }\n        else {\n            ;\n            ({ ciphertext, tag } = await encrypt(enc, this._plaintext, cek, this._iv, additionalData));\n        }\n        const jwe = {\n            ciphertext: base64url(ciphertext),\n            iv: base64url(this._iv),\n            tag: base64url(tag),\n        };\n        if (encryptedKey) {\n            jwe.encrypted_key = base64url(encryptedKey);\n        }\n        if (aadMember) {\n            jwe.aad = aadMember;\n        }\n        if (this._protectedHeader) {\n            jwe.protected = decoder.decode(protectedHeader);\n        }\n        if (this._sharedUnprotectedHeader) {\n            jwe.unprotected = this._sharedUnprotectedHeader;\n        }\n        if (this._unprotectedHeader) {\n            jwe.header = this._unprotectedHeader;\n        }\n        return jwe;\n    }\n}\n","import { FlattenedEncrypt, unprotected } from '../flattened/encrypt.js';\nimport { JWEInvalid } from '../../util/errors.js';\nimport generateCek from '../../lib/cek.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport encryptKeyManagement from '../../lib/encrypt_key_management.js';\nimport { encode as base64url } from '../../runtime/base64url.js';\nimport validateCrit from '../../lib/validate_crit.js';\nclass IndividualRecipient {\n    constructor(enc, key, options) {\n        this.parent = enc;\n        this.key = key;\n        this.options = options;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this.unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this.unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    addRecipient(...args) {\n        return this.parent.addRecipient(...args);\n    }\n    encrypt(...args) {\n        return this.parent.encrypt(...args);\n    }\n    done() {\n        return this.parent;\n    }\n}\nexport class GeneralEncrypt {\n    constructor(plaintext) {\n        this._recipients = [];\n        this._plaintext = plaintext;\n    }\n    addRecipient(key, options) {\n        const recipient = new IndividualRecipient(this, key, { crit: options === null || options === void 0 ? void 0 : options.crit });\n        this._recipients.push(recipient);\n        return recipient;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setSharedUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = sharedUnprotectedHeader;\n        return this;\n    }\n    setAdditionalAuthenticatedData(aad) {\n        this._aad = aad;\n        return this;\n    }\n    async encrypt(options) {\n        var _a, _b, _c;\n        if (!this._recipients.length) {\n            throw new JWEInvalid('at least one recipient must be added');\n        }\n        options = { deflateRaw: options === null || options === void 0 ? void 0 : options.deflateRaw };\n        if (this._recipients.length === 1) {\n            const [recipient] = this._recipients;\n            const flattened = await new FlattenedEncrypt(this._plaintext)\n                .setAdditionalAuthenticatedData(this._aad)\n                .setProtectedHeader(this._protectedHeader)\n                .setSharedUnprotectedHeader(this._unprotectedHeader)\n                .setUnprotectedHeader(recipient.unprotectedHeader)\n                .encrypt(recipient.key, { ...recipient.options, ...options });\n            let jwe = {\n                ciphertext: flattened.ciphertext,\n                iv: flattened.iv,\n                recipients: [{}],\n                tag: flattened.tag,\n            };\n            if (flattened.aad)\n                jwe.aad = flattened.aad;\n            if (flattened.protected)\n                jwe.protected = flattened.protected;\n            if (flattened.unprotected)\n                jwe.unprotected = flattened.unprotected;\n            if (flattened.encrypted_key)\n                jwe.recipients[0].encrypted_key = flattened.encrypted_key;\n            if (flattened.header)\n                jwe.recipients[0].header = flattened.header;\n            return jwe;\n        }\n        let enc;\n        for (let i = 0; i < this._recipients.length; i++) {\n            const recipient = this._recipients[i];\n            if (!isDisjoint(this._protectedHeader, this._unprotectedHeader, recipient.unprotectedHeader)) {\n                throw new JWEInvalid('JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\n            }\n            const joseHeader = {\n                ...this._protectedHeader,\n                ...this._unprotectedHeader,\n                ...recipient.unprotectedHeader,\n            };\n            const { alg } = joseHeader;\n            if (typeof alg !== 'string' || !alg) {\n                throw new JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n            }\n            if (alg === 'dir' || alg === 'ECDH-ES') {\n                throw new JWEInvalid('\"dir\" and \"ECDH-ES\" alg may only be used with a single recipient');\n            }\n            if (typeof joseHeader.enc !== 'string' || !joseHeader.enc) {\n                throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n            }\n            if (!enc) {\n                enc = joseHeader.enc;\n            }\n            else if (enc !== joseHeader.enc) {\n                throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter must be the same for all recipients');\n            }\n            validateCrit(JWEInvalid, new Map(), recipient.options.crit, this._protectedHeader, joseHeader);\n            if (joseHeader.zip !== undefined) {\n                if (!this._protectedHeader || !this._protectedHeader.zip) {\n                    throw new JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n                }\n            }\n        }\n        const cek = generateCek(enc);\n        let jwe = {\n            ciphertext: '',\n            iv: '',\n            recipients: [],\n            tag: '',\n        };\n        for (let i = 0; i < this._recipients.length; i++) {\n            const recipient = this._recipients[i];\n            const target = {};\n            jwe.recipients.push(target);\n            const joseHeader = {\n                ...this._protectedHeader,\n                ...this._unprotectedHeader,\n                ...recipient.unprotectedHeader,\n            };\n            const p2c = joseHeader.alg.startsWith('PBES2') ? 2048 + i : undefined;\n            if (i === 0) {\n                const flattened = await new FlattenedEncrypt(this._plaintext)\n                    .setAdditionalAuthenticatedData(this._aad)\n                    .setContentEncryptionKey(cek)\n                    .setProtectedHeader(this._protectedHeader)\n                    .setSharedUnprotectedHeader(this._unprotectedHeader)\n                    .setUnprotectedHeader(recipient.unprotectedHeader)\n                    .setKeyManagementParameters({ p2c })\n                    .encrypt(recipient.key, {\n                    ...recipient.options,\n                    ...options,\n                    [unprotected]: true,\n                });\n                jwe.ciphertext = flattened.ciphertext;\n                jwe.iv = flattened.iv;\n                jwe.tag = flattened.tag;\n                if (flattened.aad)\n                    jwe.aad = flattened.aad;\n                if (flattened.protected)\n                    jwe.protected = flattened.protected;\n                if (flattened.unprotected)\n                    jwe.unprotected = flattened.unprotected;\n                target.encrypted_key = flattened.encrypted_key;\n                if (flattened.header)\n                    target.header = flattened.header;\n                continue;\n            }\n            const { encryptedKey, parameters } = await encryptKeyManagement(((_a = recipient.unprotectedHeader) === null || _a === void 0 ? void 0 : _a.alg) ||\n                ((_b = this._protectedHeader) === null || _b === void 0 ? void 0 : _b.alg) ||\n                ((_c = this._unprotectedHeader) === null || _c === void 0 ? void 0 : _c.alg), enc, recipient.key, cek, { p2c });\n            target.encrypted_key = base64url(encryptedKey);\n            if (recipient.unprotectedHeader || parameters)\n                target.header = { ...recipient.unprotectedHeader, ...parameters };\n        }\n        return jwe;\n    }\n}\n","import { JOSENotSupported } from '../util/errors.js';\nexport default function subtleDsa(alg, algorithm) {\n    const hash = `SHA-${alg.slice(-3)}`;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n            return { hash, name: 'HMAC' };\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            return { hash, name: 'RSA-PSS', saltLength: alg.slice(-3) >> 3 };\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            return { hash, name: 'RSASSA-PKCS1-v1_5' };\n        case 'ES256':\n        case 'ES384':\n        case 'ES512':\n            return { hash, name: 'ECDSA', namedCurve: algorithm.namedCurve };\n        case 'EdDSA':\n            return { name: algorithm.name };\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n","import subtleAlgorithm from './subtle_dsa.js';\nimport crypto from './webcrypto.js';\nimport checkKeyLength from './check_key_length.js';\nimport getVerifyKey from './get_sign_verify_key.js';\nconst verify = async (alg, key, signature, data) => {\n    const cryptoKey = await getVerifyKey(alg, key, 'verify');\n    checkKeyLength(alg, cryptoKey);\n    const algorithm = subtleAlgorithm(alg, cryptoKey.algorithm);\n    try {\n        return await crypto.subtle.verify(algorithm, cryptoKey, signature, data);\n    }\n    catch (_a) {\n        return false;\n    }\n};\nexport default verify;\n","import { decode as base64url } from '../../runtime/base64url.js';\nimport verify from '../../runtime/verify.js';\nimport { JOSEAlgNotAllowed, JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport { concat, encoder, decoder } from '../../lib/buffer_utils.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport checkKeyType from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nexport async function flattenedVerify(jws, key, options) {\n    var _a;\n    if (!isObject(jws)) {\n        throw new JWSInvalid('Flattened JWS must be an object');\n    }\n    if (jws.protected === undefined && jws.header === undefined) {\n        throw new JWSInvalid('Flattened JWS must have either of the \"protected\" or \"header\" members');\n    }\n    if (jws.protected !== undefined && typeof jws.protected !== 'string') {\n        throw new JWSInvalid('JWS Protected Header incorrect type');\n    }\n    if (jws.payload === undefined) {\n        throw new JWSInvalid('JWS Payload missing');\n    }\n    if (typeof jws.signature !== 'string') {\n        throw new JWSInvalid('JWS Signature missing or incorrect type');\n    }\n    if (jws.header !== undefined && !isObject(jws.header)) {\n        throw new JWSInvalid('JWS Unprotected Header incorrect type');\n    }\n    let parsedProt = {};\n    if (jws.protected) {\n        try {\n            const protectedHeader = base64url(jws.protected);\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch (_b) {\n            throw new JWSInvalid('JWS Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jws.header)) {\n        throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jws.header,\n    };\n    const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n    let b64 = true;\n    if (extensions.has('b64')) {\n        b64 = parsedProt.b64;\n        if (typeof b64 !== 'boolean') {\n            throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n        }\n    }\n    const { alg } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n    }\n    const algorithms = options && validateAlgorithms('algorithms', options.algorithms);\n    if (algorithms && !algorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n    }\n    if (b64) {\n        if (typeof jws.payload !== 'string') {\n            throw new JWSInvalid('JWS Payload must be a string');\n        }\n    }\n    else if (typeof jws.payload !== 'string' && !(jws.payload instanceof Uint8Array)) {\n        throw new JWSInvalid('JWS Payload must be a string or an Uint8Array instance');\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jws);\n        resolvedKey = true;\n    }\n    checkKeyType(alg, key, 'verify');\n    const data = concat(encoder.encode((_a = jws.protected) !== null && _a !== void 0 ? _a : ''), encoder.encode('.'), typeof jws.payload === 'string' ? encoder.encode(jws.payload) : jws.payload);\n    let signature;\n    try {\n        signature = base64url(jws.signature);\n    }\n    catch (_c) {\n        throw new JWSInvalid('Failed to base64url decode the signature');\n    }\n    const verified = await verify(alg, key, signature, data);\n    if (!verified) {\n        throw new JWSSignatureVerificationFailed();\n    }\n    let payload;\n    if (b64) {\n        try {\n            payload = base64url(jws.payload);\n        }\n        catch (_d) {\n            throw new JWSInvalid('Failed to base64url decode the payload');\n        }\n    }\n    else if (typeof jws.payload === 'string') {\n        payload = encoder.encode(jws.payload);\n    }\n    else {\n        payload = jws.payload;\n    }\n    const result = { payload };\n    if (jws.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jws.header !== undefined) {\n        result.unprotectedHeader = jws.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\n","import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactVerify(jws, key, options) {\n    if (jws instanceof Uint8Array) {\n        jws = decoder.decode(jws);\n    }\n    if (typeof jws !== 'string') {\n        throw new JWSInvalid('Compact JWS must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split('.');\n    if (length !== 3) {\n        throw new JWSInvalid('Invalid Compact JWS');\n    }\n    const verified = await flattenedVerify({ payload, protected: protectedHeader, signature }, key, options);\n    const result = { payload: verified.payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n","import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport isObject from '../../lib/is_object.js';\nexport async function generalVerify(jws, key, options) {\n    if (!isObject(jws)) {\n        throw new JWSInvalid('General JWS must be an object');\n    }\n    if (!Array.isArray(jws.signatures) || !jws.signatures.every(isObject)) {\n        throw new JWSInvalid('JWS Signatures missing or incorrect type');\n    }\n    for (const signature of jws.signatures) {\n        try {\n            return await flattenedVerify({\n                header: signature.header,\n                payload: jws.payload,\n                protected: signature.protected,\n                signature: signature.signature,\n            }, key, options);\n        }\n        catch (_a) {\n        }\n    }\n    throw new JWSSignatureVerificationFailed();\n}\n","const minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)$/i;\nexport default (str) => {\n    const matched = REGEX.exec(str);\n    if (!matched) {\n        throw new TypeError('Invalid time period format');\n    }\n    const value = parseFloat(matched[1]);\n    const unit = matched[2].toLowerCase();\n    switch (unit) {\n        case 'sec':\n        case 'secs':\n        case 'second':\n        case 'seconds':\n        case 's':\n            return Math.round(value);\n        case 'minute':\n        case 'minutes':\n        case 'min':\n        case 'mins':\n        case 'm':\n            return Math.round(value * minute);\n        case 'hour':\n        case 'hours':\n        case 'hr':\n        case 'hrs':\n        case 'h':\n            return Math.round(value * hour);\n        case 'day':\n        case 'days':\n        case 'd':\n            return Math.round(value * day);\n        case 'week':\n        case 'weeks':\n        case 'w':\n            return Math.round(value * week);\n        default:\n            return Math.round(value * year);\n    }\n};\n","import { JWTClaimValidationFailed, JWTExpired, JWTInvalid } from '../util/errors.js';\nimport { decoder } from './buffer_utils.js';\nimport epoch from './epoch.js';\nimport secs from './secs.js';\nimport isObject from './is_object.js';\nconst normalizeTyp = (value) => value.toLowerCase().replace(/^application\\//, '');\nconst checkAudiencePresence = (audPayload, audOption) => {\n    if (typeof audPayload === 'string') {\n        return audOption.includes(audPayload);\n    }\n    if (Array.isArray(audPayload)) {\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n    }\n    return false;\n};\nexport default (protectedHeader, encodedPayload, options = {}) => {\n    const { typ } = options;\n    if (typ &&\n        (typeof protectedHeader.typ !== 'string' ||\n            normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n        throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', 'typ', 'check_failed');\n    }\n    let payload;\n    try {\n        payload = JSON.parse(decoder.decode(encodedPayload));\n    }\n    catch (_a) {\n    }\n    if (!isObject(payload)) {\n        throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\n    }\n    const { requiredClaims = [], issuer, subject, audience, maxTokenAge } = options;\n    if (maxTokenAge !== undefined)\n        requiredClaims.push('iat');\n    if (audience !== undefined)\n        requiredClaims.push('aud');\n    if (subject !== undefined)\n        requiredClaims.push('sub');\n    if (issuer !== undefined)\n        requiredClaims.push('iss');\n    for (const claim of new Set(requiredClaims.reverse())) {\n        if (!(claim in payload)) {\n            throw new JWTClaimValidationFailed(`missing required \"${claim}\" claim`, claim, 'missing');\n        }\n    }\n    if (issuer && !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n        throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', 'iss', 'check_failed');\n    }\n    if (subject && payload.sub !== subject) {\n        throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', 'sub', 'check_failed');\n    }\n    if (audience &&\n        !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n        throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', 'aud', 'check_failed');\n    }\n    let tolerance;\n    switch (typeof options.clockTolerance) {\n        case 'string':\n            tolerance = secs(options.clockTolerance);\n            break;\n        case 'number':\n            tolerance = options.clockTolerance;\n            break;\n        case 'undefined':\n            tolerance = 0;\n            break;\n        default:\n            throw new TypeError('Invalid clockTolerance option type');\n    }\n    const { currentDate } = options;\n    const now = epoch(currentDate || new Date());\n    if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== 'number') {\n        throw new JWTClaimValidationFailed('\"iat\" claim must be a number', 'iat', 'invalid');\n    }\n    if (payload.nbf !== undefined) {\n        if (typeof payload.nbf !== 'number') {\n            throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', 'nbf', 'invalid');\n        }\n        if (payload.nbf > now + tolerance) {\n            throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', 'nbf', 'check_failed');\n        }\n    }\n    if (payload.exp !== undefined) {\n        if (typeof payload.exp !== 'number') {\n            throw new JWTClaimValidationFailed('\"exp\" claim must be a number', 'exp', 'invalid');\n        }\n        if (payload.exp <= now - tolerance) {\n            throw new JWTExpired('\"exp\" claim timestamp check failed', 'exp', 'check_failed');\n        }\n    }\n    if (maxTokenAge) {\n        const age = now - payload.iat;\n        const max = typeof maxTokenAge === 'number' ? maxTokenAge : secs(maxTokenAge);\n        if (age - tolerance > max) {\n            throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', 'iat', 'check_failed');\n        }\n        if (age < 0 - tolerance) {\n            throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', 'iat', 'check_failed');\n        }\n    }\n    return payload;\n};\n","import { compactVerify } from '../jws/compact/verify.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTInvalid } from '../util/errors.js';\nexport async function jwtVerify(jwt, key, options) {\n    var _a;\n    const verified = await compactVerify(jwt, key, options);\n    if (((_a = verified.protectedHeader.crit) === null || _a === void 0 ? void 0 : _a.includes('b64')) && verified.protectedHeader.b64 === false) {\n        throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n    }\n    const payload = jwtPayload(verified.protectedHeader, verified.payload, options);\n    const result = { payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n","import { compactDecrypt } from '../jwe/compact/decrypt.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTClaimValidationFailed } from '../util/errors.js';\nexport async function jwtDecrypt(jwt, key, options) {\n    const decrypted = await compactDecrypt(jwt, key, options);\n    const payload = jwtPayload(decrypted.protectedHeader, decrypted.plaintext, options);\n    const { protectedHeader } = decrypted;\n    if (protectedHeader.iss !== undefined && protectedHeader.iss !== payload.iss) {\n        throw new JWTClaimValidationFailed('replicated \"iss\" claim header parameter mismatch', 'iss', 'mismatch');\n    }\n    if (protectedHeader.sub !== undefined && protectedHeader.sub !== payload.sub) {\n        throw new JWTClaimValidationFailed('replicated \"sub\" claim header parameter mismatch', 'sub', 'mismatch');\n    }\n    if (protectedHeader.aud !== undefined &&\n        JSON.stringify(protectedHeader.aud) !== JSON.stringify(payload.aud)) {\n        throw new JWTClaimValidationFailed('replicated \"aud\" claim header parameter mismatch', 'aud', 'mismatch');\n    }\n    const result = { payload, protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: decrypted.key };\n    }\n    return result;\n}\n","import { FlattenedEncrypt } from '../flattened/encrypt.js';\nexport class CompactEncrypt {\n    constructor(plaintext) {\n        this._flattened = new FlattenedEncrypt(plaintext);\n    }\n    setContentEncryptionKey(cek) {\n        this._flattened.setContentEncryptionKey(cek);\n        return this;\n    }\n    setInitializationVector(iv) {\n        this._flattened.setInitializationVector(iv);\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    setKeyManagementParameters(parameters) {\n        this._flattened.setKeyManagementParameters(parameters);\n        return this;\n    }\n    async encrypt(key, options) {\n        const jwe = await this._flattened.encrypt(key, options);\n        return [jwe.protected, jwe.encrypted_key, jwe.iv, jwe.ciphertext, jwe.tag].join('.');\n    }\n}\n","import subtleAlgorithm from './subtle_dsa.js';\nimport crypto from './webcrypto.js';\nimport checkKeyLength from './check_key_length.js';\nimport getSignKey from './get_sign_verify_key.js';\nconst sign = async (alg, key, data) => {\n    const cryptoKey = await getSignKey(alg, key, 'sign');\n    checkKeyLength(alg, cryptoKey);\n    const signature = await crypto.subtle.sign(subtleAlgorithm(alg, cryptoKey.algorithm), cryptoKey, data);\n    return new Uint8Array(signature);\n};\nexport default sign;\n","import { encode as base64url } from '../../runtime/base64url.js';\nimport sign from '../../runtime/sign.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport checkKeyType from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nexport class FlattenedSign {\n    constructor(payload) {\n        if (!(payload instanceof Uint8Array)) {\n            throw new TypeError('payload must be an instance of Uint8Array');\n        }\n        this._payload = payload;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader) {\n            throw new JWSInvalid('either setProtectedHeader or setUnprotectedHeader must be called before #sign()');\n        }\n        if (!isDisjoint(this._protectedHeader, this._unprotectedHeader)) {\n            throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader,\n        };\n        const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options === null || options === void 0 ? void 0 : options.crit, this._protectedHeader, joseHeader);\n        let b64 = true;\n        if (extensions.has('b64')) {\n            b64 = this._protectedHeader.b64;\n            if (typeof b64 !== 'boolean') {\n                throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n            }\n        }\n        const { alg } = joseHeader;\n        if (typeof alg !== 'string' || !alg) {\n            throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        checkKeyType(alg, key, 'sign');\n        let payload = this._payload;\n        if (b64) {\n            payload = encoder.encode(base64url(payload));\n        }\n        let protectedHeader;\n        if (this._protectedHeader) {\n            protectedHeader = encoder.encode(base64url(JSON.stringify(this._protectedHeader)));\n        }\n        else {\n            protectedHeader = encoder.encode('');\n        }\n        const data = concat(protectedHeader, encoder.encode('.'), payload);\n        const signature = await sign(alg, key, data);\n        const jws = {\n            signature: base64url(signature),\n            payload: '',\n        };\n        if (b64) {\n            jws.payload = decoder.decode(payload);\n        }\n        if (this._unprotectedHeader) {\n            jws.header = this._unprotectedHeader;\n        }\n        if (this._protectedHeader) {\n            jws.protected = decoder.decode(protectedHeader);\n        }\n        return jws;\n    }\n}\n","import { FlattenedSign } from '../flattened/sign.js';\nexport class CompactSign {\n    constructor(payload) {\n        this._flattened = new FlattenedSign(payload);\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    async sign(key, options) {\n        const jws = await this._flattened.sign(key, options);\n        if (jws.payload === undefined) {\n            throw new TypeError('use the flattened module for creating JWS with b64: false');\n        }\n        return `${jws.protected}.${jws.payload}.${jws.signature}`;\n    }\n}\n","import { FlattenedSign } from '../flattened/sign.js';\nimport { JWSInvalid } from '../../util/errors.js';\nclass IndividualSignature {\n    constructor(sig, key, options) {\n        this.parent = sig;\n        this.key = key;\n        this.options = options;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this.protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this.protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this.unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this.unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    addSignature(...args) {\n        return this.parent.addSignature(...args);\n    }\n    sign(...args) {\n        return this.parent.sign(...args);\n    }\n    done() {\n        return this.parent;\n    }\n}\nexport class GeneralSign {\n    constructor(payload) {\n        this._signatures = [];\n        this._payload = payload;\n    }\n    addSignature(key, options) {\n        const signature = new IndividualSignature(this, key, options);\n        this._signatures.push(signature);\n        return signature;\n    }\n    async sign() {\n        if (!this._signatures.length) {\n            throw new JWSInvalid('at least one signature must be added');\n        }\n        const jws = {\n            signatures: [],\n            payload: '',\n        };\n        for (let i = 0; i < this._signatures.length; i++) {\n            const signature = this._signatures[i];\n            const flattened = new FlattenedSign(this._payload);\n            flattened.setProtectedHeader(signature.protectedHeader);\n            flattened.setUnprotectedHeader(signature.unprotectedHeader);\n            const { payload, ...rest } = await flattened.sign(signature.key, signature.options);\n            if (i === 0) {\n                jws.payload = payload;\n            }\n            else if (jws.payload !== payload) {\n                throw new JWSInvalid('inconsistent use of JWS Unencoded Payload (RFC7797)');\n            }\n            jws.signatures.push(rest);\n        }\n        return jws;\n    }\n}\n","import epoch from '../lib/epoch.js';\nimport isObject from '../lib/is_object.js';\nimport secs from '../lib/secs.js';\nexport class ProduceJWT {\n    constructor(payload) {\n        if (!isObject(payload)) {\n            throw new TypeError('JWT Claims Set MUST be an object');\n        }\n        this._payload = payload;\n    }\n    setIssuer(issuer) {\n        this._payload = { ...this._payload, iss: issuer };\n        return this;\n    }\n    setSubject(subject) {\n        this._payload = { ...this._payload, sub: subject };\n        return this;\n    }\n    setAudience(audience) {\n        this._payload = { ...this._payload, aud: audience };\n        return this;\n    }\n    setJti(jwtId) {\n        this._payload = { ...this._payload, jti: jwtId };\n        return this;\n    }\n    setNotBefore(input) {\n        if (typeof input === 'number') {\n            this._payload = { ...this._payload, nbf: input };\n        }\n        else {\n            this._payload = { ...this._payload, nbf: epoch(new Date()) + secs(input) };\n        }\n        return this;\n    }\n    setExpirationTime(input) {\n        if (typeof input === 'number') {\n            this._payload = { ...this._payload, exp: input };\n        }\n        else {\n            this._payload = { ...this._payload, exp: epoch(new Date()) + secs(input) };\n        }\n        return this;\n    }\n    setIssuedAt(input) {\n        if (typeof input === 'undefined') {\n            this._payload = { ...this._payload, iat: epoch(new Date()) };\n        }\n        else {\n            this._payload = { ...this._payload, iat: input };\n        }\n        return this;\n    }\n}\n","import { CompactSign } from '../jws/compact/sign.js';\nimport { JWTInvalid } from '../util/errors.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport { ProduceJWT } from './produce.js';\nexport class SignJWT extends ProduceJWT {\n    setProtectedHeader(protectedHeader) {\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        var _a;\n        const sig = new CompactSign(encoder.encode(JSON.stringify(this._payload)));\n        sig.setProtectedHeader(this._protectedHeader);\n        if (Array.isArray((_a = this._protectedHeader) === null || _a === void 0 ? void 0 : _a.crit) &&\n            this._protectedHeader.crit.includes('b64') &&\n            this._protectedHeader.b64 === false) {\n            throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n        }\n        return sig.sign(key, options);\n    }\n}\n","import { CompactEncrypt } from '../jwe/compact/encrypt.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport { ProduceJWT } from './produce.js';\nexport class EncryptJWT extends ProduceJWT {\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setKeyManagementParameters(parameters) {\n        if (this._keyManagementParameters) {\n            throw new TypeError('setKeyManagementParameters can only be called once');\n        }\n        this._keyManagementParameters = parameters;\n        return this;\n    }\n    setContentEncryptionKey(cek) {\n        if (this._cek) {\n            throw new TypeError('setContentEncryptionKey can only be called once');\n        }\n        this._cek = cek;\n        return this;\n    }\n    setInitializationVector(iv) {\n        if (this._iv) {\n            throw new TypeError('setInitializationVector can only be called once');\n        }\n        this._iv = iv;\n        return this;\n    }\n    replicateIssuerAsHeader() {\n        this._replicateIssuerAsHeader = true;\n        return this;\n    }\n    replicateSubjectAsHeader() {\n        this._replicateSubjectAsHeader = true;\n        return this;\n    }\n    replicateAudienceAsHeader() {\n        this._replicateAudienceAsHeader = true;\n        return this;\n    }\n    async encrypt(key, options) {\n        const enc = new CompactEncrypt(encoder.encode(JSON.stringify(this._payload)));\n        if (this._replicateIssuerAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, iss: this._payload.iss };\n        }\n        if (this._replicateSubjectAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, sub: this._payload.sub };\n        }\n        if (this._replicateAudienceAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, aud: this._payload.aud };\n        }\n        enc.setProtectedHeader(this._protectedHeader);\n        if (this._iv) {\n            enc.setInitializationVector(this._iv);\n        }\n        if (this._cek) {\n            enc.setContentEncryptionKey(this._cek);\n        }\n        if (this._keyManagementParameters) {\n            enc.setKeyManagementParameters(this._keyManagementParameters);\n        }\n        return enc.encrypt(key, options);\n    }\n}\n","import digest from '../runtime/digest.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nimport { JOSENotSupported, JWKInvalid } from '../util/errors.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nconst check = (value, description) => {\n    if (typeof value !== 'string' || !value) {\n        throw new JWKInvalid(`${description} missing or invalid`);\n    }\n};\nexport async function calculateJwkThumbprint(jwk, digestAlgorithm) {\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    digestAlgorithm !== null && digestAlgorithm !== void 0 ? digestAlgorithm : (digestAlgorithm = 'sha256');\n    if (digestAlgorithm !== 'sha256' &&\n        digestAlgorithm !== 'sha384' &&\n        digestAlgorithm !== 'sha512') {\n        throw new TypeError('digestAlgorithm must one of \"sha256\", \"sha384\", or \"sha512\"');\n    }\n    let components;\n    switch (jwk.kty) {\n        case 'EC':\n            check(jwk.crv, '\"crv\" (Curve) Parameter');\n            check(jwk.x, '\"x\" (X Coordinate) Parameter');\n            check(jwk.y, '\"y\" (Y Coordinate) Parameter');\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x, y: jwk.y };\n            break;\n        case 'OKP':\n            check(jwk.crv, '\"crv\" (Subtype of Key Pair) Parameter');\n            check(jwk.x, '\"x\" (Public Key) Parameter');\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x };\n            break;\n        case 'RSA':\n            check(jwk.e, '\"e\" (Exponent) Parameter');\n            check(jwk.n, '\"n\" (Modulus) Parameter');\n            components = { e: jwk.e, kty: jwk.kty, n: jwk.n };\n            break;\n        case 'oct':\n            check(jwk.k, '\"k\" (Key Value) Parameter');\n            components = { k: jwk.k, kty: jwk.kty };\n            break;\n        default:\n            throw new JOSENotSupported('\"kty\" (Key Type) Parameter missing or unsupported');\n    }\n    const data = encoder.encode(JSON.stringify(components));\n    return base64url(await digest(digestAlgorithm, data));\n}\nexport async function calculateJwkThumbprintUri(jwk, digestAlgorithm) {\n    digestAlgorithm !== null && digestAlgorithm !== void 0 ? digestAlgorithm : (digestAlgorithm = 'sha256');\n    const thumbprint = await calculateJwkThumbprint(jwk, digestAlgorithm);\n    return `urn:ietf:params:oauth:jwk-thumbprint:sha-${digestAlgorithm.slice(-3)}:${thumbprint}`;\n}\n","import { importJWK } from '../key/import.js';\nimport isObject from '../lib/is_object.js';\nimport { JWSInvalid } from '../util/errors.js';\nexport async function EmbeddedJWK(protectedHeader, token) {\n    const joseHeader = {\n        ...protectedHeader,\n        ...token === null || token === void 0 ? void 0 : token.header,\n    };\n    if (!isObject(joseHeader.jwk)) {\n        throw new JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a JSON object');\n    }\n    const key = await importJWK({ ...joseHeader.jwk, ext: true }, joseHeader.alg, true);\n    if (key instanceof Uint8Array || key.type !== 'public') {\n        throw new JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a public key');\n    }\n    return key;\n}\n","import { importJWK } from '../key/import.js';\nimport { JWKSInvalid, JOSENotSupported, JWKSNoMatchingKey, JWKSMultipleMatchingKeys, } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nfunction getKtyFromAlg(alg) {\n    switch (typeof alg === 'string' && alg.slice(0, 2)) {\n        case 'RS':\n        case 'PS':\n            return 'RSA';\n        case 'ES':\n            return 'EC';\n        case 'Ed':\n            return 'OKP';\n        default:\n            throw new JOSENotSupported('Unsupported \"alg\" value for a JSON Web Key Set');\n    }\n}\nexport function isJWKSLike(jwks) {\n    return (jwks &&\n        typeof jwks === 'object' &&\n        Array.isArray(jwks.keys) &&\n        jwks.keys.every(isJWKLike));\n}\nfunction isJWKLike(key) {\n    return isObject(key);\n}\nfunction clone(obj) {\n    if (typeof structuredClone === 'function') {\n        return structuredClone(obj);\n    }\n    return JSON.parse(JSON.stringify(obj));\n}\nexport class LocalJWKSet {\n    constructor(jwks) {\n        this._cached = new WeakMap();\n        if (!isJWKSLike(jwks)) {\n            throw new JWKSInvalid('JSON Web Key Set malformed');\n        }\n        this._jwks = clone(jwks);\n    }\n    async getKey(protectedHeader, token) {\n        const { alg, kid } = { ...protectedHeader, ...token === null || token === void 0 ? void 0 : token.header };\n        const kty = getKtyFromAlg(alg);\n        const candidates = this._jwks.keys.filter((jwk) => {\n            let candidate = kty === jwk.kty;\n            if (candidate && typeof kid === 'string') {\n                candidate = kid === jwk.kid;\n            }\n            if (candidate && typeof jwk.alg === 'string') {\n                candidate = alg === jwk.alg;\n            }\n            if (candidate && typeof jwk.use === 'string') {\n                candidate = jwk.use === 'sig';\n            }\n            if (candidate && Array.isArray(jwk.key_ops)) {\n                candidate = jwk.key_ops.includes('verify');\n            }\n            if (candidate && alg === 'EdDSA') {\n                candidate = jwk.crv === 'Ed25519' || jwk.crv === 'Ed448';\n            }\n            if (candidate) {\n                switch (alg) {\n                    case 'ES256':\n                        candidate = jwk.crv === 'P-256';\n                        break;\n                    case 'ES256K':\n                        candidate = jwk.crv === 'secp256k1';\n                        break;\n                    case 'ES384':\n                        candidate = jwk.crv === 'P-384';\n                        break;\n                    case 'ES512':\n                        candidate = jwk.crv === 'P-521';\n                        break;\n                }\n            }\n            return candidate;\n        });\n        const { 0: jwk, length } = candidates;\n        if (length === 0) {\n            throw new JWKSNoMatchingKey();\n        }\n        else if (length !== 1) {\n            const error = new JWKSMultipleMatchingKeys();\n            const { _cached } = this;\n            error[Symbol.asyncIterator] = async function* () {\n                for (const jwk of candidates) {\n                    try {\n                        yield await importWithAlgCache(_cached, jwk, alg);\n                    }\n                    catch (_a) {\n                        continue;\n                    }\n                }\n            };\n            throw error;\n        }\n        return importWithAlgCache(this._cached, jwk, alg);\n    }\n}\nasync function importWithAlgCache(cache, jwk, alg) {\n    const cached = cache.get(jwk) || cache.set(jwk, {}).get(jwk);\n    if (cached[alg] === undefined) {\n        const key = await importJWK({ ...jwk, ext: true }, alg);\n        if (key instanceof Uint8Array || key.type !== 'public') {\n            throw new JWKSInvalid('JSON Web Key Set members must be public keys');\n        }\n        cached[alg] = key;\n    }\n    return cached[alg];\n}\nexport function createLocalJWKSet(jwks) {\n    const set = new LocalJWKSet(jwks);\n    return async function (protectedHeader, token) {\n        return set.getKey(protectedHeader, token);\n    };\n}\n","import { JOSEError, JWKSTimeout } from '../util/errors.js';\nconst fetchJwks = async (url, timeout, options) => {\n    let controller;\n    let id;\n    let timedOut = false;\n    if (typeof AbortController === 'function') {\n        controller = new AbortController();\n        id = setTimeout(() => {\n            timedOut = true;\n            controller.abort();\n        }, timeout);\n    }\n    const response = await fetch(url.href, {\n        signal: controller ? controller.signal : undefined,\n        redirect: 'manual',\n        headers: options.headers,\n    }).catch((err) => {\n        if (timedOut)\n            throw new JWKSTimeout();\n        throw err;\n    });\n    if (id !== undefined)\n        clearTimeout(id);\n    if (response.status !== 200) {\n        throw new JOSEError('Expected 200 OK from the JSON Web Key Set HTTP response');\n    }\n    try {\n        return await response.json();\n    }\n    catch (_a) {\n        throw new JOSEError('Failed to parse the JSON Web Key Set HTTP response as JSON');\n    }\n};\nexport default fetchJwks;\n","import fetchJwks from '../runtime/fetch_jwks.js';\nimport { JWKSInvalid, JWKSNoMatchingKey } from '../util/errors.js';\nimport { isJWKSLike, LocalJWKSet } from './local.js';\nfunction isCloudflareWorkers() {\n    return (typeof WebSocketPair !== 'undefined' ||\n        (typeof navigator !== 'undefined' && navigator.userAgent === 'Cloudflare-Workers') ||\n        (typeof EdgeRuntime !== 'undefined' && EdgeRuntime === 'vercel'));\n}\nclass RemoteJWKSet extends LocalJWKSet {\n    constructor(url, options) {\n        super({ keys: [] });\n        this._jwks = undefined;\n        if (!(url instanceof URL)) {\n            throw new TypeError('url must be an instance of URL');\n        }\n        this._url = new URL(url.href);\n        this._options = { agent: options === null || options === void 0 ? void 0 : options.agent, headers: options === null || options === void 0 ? void 0 : options.headers };\n        this._timeoutDuration =\n            typeof (options === null || options === void 0 ? void 0 : options.timeoutDuration) === 'number' ? options === null || options === void 0 ? void 0 : options.timeoutDuration : 5000;\n        this._cooldownDuration =\n            typeof (options === null || options === void 0 ? void 0 : options.cooldownDuration) === 'number' ? options === null || options === void 0 ? void 0 : options.cooldownDuration : 30000;\n        this._cacheMaxAge = typeof (options === null || options === void 0 ? void 0 : options.cacheMaxAge) === 'number' ? options === null || options === void 0 ? void 0 : options.cacheMaxAge : 600000;\n    }\n    coolingDown() {\n        return typeof this._jwksTimestamp === 'number'\n            ? Date.now() < this._jwksTimestamp + this._cooldownDuration\n            : false;\n    }\n    fresh() {\n        return typeof this._jwksTimestamp === 'number'\n            ? Date.now() < this._jwksTimestamp + this._cacheMaxAge\n            : false;\n    }\n    async getKey(protectedHeader, token) {\n        if (!this._jwks || !this.fresh()) {\n            await this.reload();\n        }\n        try {\n            return await super.getKey(protectedHeader, token);\n        }\n        catch (err) {\n            if (err instanceof JWKSNoMatchingKey) {\n                if (this.coolingDown() === false) {\n                    await this.reload();\n                    return super.getKey(protectedHeader, token);\n                }\n            }\n            throw err;\n        }\n    }\n    async reload() {\n        if (this._pendingFetch && isCloudflareWorkers()) {\n            this._pendingFetch = undefined;\n        }\n        this._pendingFetch || (this._pendingFetch = fetchJwks(this._url, this._timeoutDuration, this._options)\n            .then((json) => {\n            if (!isJWKSLike(json)) {\n                throw new JWKSInvalid('JSON Web Key Set malformed');\n            }\n            this._jwks = { keys: json.keys };\n            this._jwksTimestamp = Date.now();\n            this._pendingFetch = undefined;\n        })\n            .catch((err) => {\n            this._pendingFetch = undefined;\n            throw err;\n        }));\n        await this._pendingFetch;\n    }\n}\nexport function createRemoteJWKSet(url, options) {\n    const set = new RemoteJWKSet(url, options);\n    return async function (protectedHeader, token) {\n        return set.getKey(protectedHeader, token);\n    };\n}\n","import * as base64url from '../runtime/base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport { JWTInvalid } from '../util/errors.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { ProduceJWT } from './produce.js';\nexport class UnsecuredJWT extends ProduceJWT {\n    encode() {\n        const header = base64url.encode(JSON.stringify({ alg: 'none' }));\n        const payload = base64url.encode(JSON.stringify(this._payload));\n        return `${header}.${payload}.`;\n    }\n    static decode(jwt, options) {\n        if (typeof jwt !== 'string') {\n            throw new JWTInvalid('Unsecured JWT must be a string');\n        }\n        const { 0: encodedHeader, 1: encodedPayload, 2: signature, length } = jwt.split('.');\n        if (length !== 3 || signature !== '') {\n            throw new JWTInvalid('Invalid Unsecured JWT');\n        }\n        let header;\n        try {\n            header = JSON.parse(decoder.decode(base64url.decode(encodedHeader)));\n            if (header.alg !== 'none')\n                throw new Error();\n        }\n        catch (_a) {\n            throw new JWTInvalid('Invalid Unsecured JWT');\n        }\n        const payload = jwtPayload(header, base64url.decode(encodedPayload), options);\n        return { payload, header };\n    }\n}\n","import * as base64url from '../runtime/base64url.js';\nexport const encode = base64url.encode;\nexport const decode = base64url.decode;\n","import { decode as base64url } from './base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nexport function decodeProtectedHeader(token) {\n    let protectedB64u;\n    if (typeof token === 'string') {\n        const parts = token.split('.');\n        if (parts.length === 3 || parts.length === 5) {\n            ;\n            [protectedB64u] = parts;\n        }\n    }\n    else if (typeof token === 'object' && token) {\n        if ('protected' in token) {\n            protectedB64u = token.protected;\n        }\n        else {\n            throw new TypeError('Token does not contain a Protected Header');\n        }\n    }\n    try {\n        if (typeof protectedB64u !== 'string' || !protectedB64u) {\n            throw new Error();\n        }\n        const result = JSON.parse(decoder.decode(base64url(protectedB64u)));\n        if (!isObject(result)) {\n            throw new Error();\n        }\n        return result;\n    }\n    catch (_a) {\n        throw new TypeError('Invalid Token or Protected Header formatting');\n    }\n}\n","import { decode as base64url } from './base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nimport { JWTInvalid } from './errors.js';\nexport function decodeJwt(jwt) {\n    if (typeof jwt !== 'string')\n        throw new JWTInvalid('JWTs must use Compact JWS serialization, JWT must be a string');\n    const { 1: payload, length } = jwt.split('.');\n    if (length === 5)\n        throw new JWTInvalid('Only JWTs using Compact JWS serialization can be decoded');\n    if (length !== 3)\n        throw new JWTInvalid('Invalid JWT');\n    if (!payload)\n        throw new JWTInvalid('JWTs must contain a payload');\n    let decoded;\n    try {\n        decoded = base64url(payload);\n    }\n    catch (_a) {\n        throw new JWTInvalid('Failed to base64url decode the payload');\n    }\n    let result;\n    try {\n        result = JSON.parse(decoder.decode(decoded));\n    }\n    catch (_b) {\n        throw new JWTInvalid('Failed to parse the decoded payload as JSON');\n    }\n    if (!isObject(result))\n        throw new JWTInvalid('Invalid JWT Claims Set');\n    return result;\n}\n","import crypto from './webcrypto.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport random from './random.js';\nexport async function generateSecret(alg, options) {\n    var _a;\n    let length;\n    let algorithm;\n    let keyUsages;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n            length = parseInt(alg.slice(-3), 10);\n            algorithm = { name: 'HMAC', hash: `SHA-${length}`, length };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            length = parseInt(alg.slice(-3), 10);\n            return random(new Uint8Array(length >> 3));\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW':\n            length = parseInt(alg.slice(1, 4), 10);\n            algorithm = { name: 'AES-KW', length };\n            keyUsages = ['wrapKey', 'unwrapKey'];\n            break;\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW':\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            length = parseInt(alg.slice(1, 4), 10);\n            algorithm = { name: 'AES-GCM', length };\n            keyUsages = ['encrypt', 'decrypt'];\n            break;\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n    }\n    return crypto.subtle.generateKey(algorithm, (_a = options === null || options === void 0 ? void 0 : options.extractable) !== null && _a !== void 0 ? _a : false, keyUsages);\n}\nfunction getModulusLengthOption(options) {\n    var _a;\n    const modulusLength = (_a = options === null || options === void 0 ? void 0 : options.modulusLength) !== null && _a !== void 0 ? _a : 2048;\n    if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n        throw new JOSENotSupported('Invalid or unsupported modulusLength option provided, 2048 bits or larger keys must be used');\n    }\n    return modulusLength;\n}\nexport async function generateKeyPair(alg, options) {\n    var _a, _b, _c;\n    let algorithm;\n    let keyUsages;\n    switch (alg) {\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            algorithm = {\n                name: 'RSA-PSS',\n                hash: `SHA-${alg.slice(-3)}`,\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                modulusLength: getModulusLengthOption(options),\n            };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            algorithm = {\n                name: 'RSASSA-PKCS1-v1_5',\n                hash: `SHA-${alg.slice(-3)}`,\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                modulusLength: getModulusLengthOption(options),\n            };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            algorithm = {\n                name: 'RSA-OAEP',\n                hash: `SHA-${parseInt(alg.slice(-3), 10) || 1}`,\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                modulusLength: getModulusLengthOption(options),\n            };\n            keyUsages = ['decrypt', 'unwrapKey', 'encrypt', 'wrapKey'];\n            break;\n        case 'ES256':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'ES384':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'ES512':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'EdDSA':\n            keyUsages = ['sign', 'verify'];\n            const crv = (_a = options === null || options === void 0 ? void 0 : options.crv) !== null && _a !== void 0 ? _a : 'Ed25519';\n            switch (crv) {\n                case 'Ed25519':\n                case 'Ed448':\n                    algorithm = { name: crv };\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported crv option provided');\n            }\n            break;\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            keyUsages = ['deriveKey', 'deriveBits'];\n            const crv = (_b = options === null || options === void 0 ? void 0 : options.crv) !== null && _b !== void 0 ? _b : 'P-256';\n            switch (crv) {\n                case 'P-256':\n                case 'P-384':\n                case 'P-521': {\n                    algorithm = { name: 'ECDH', namedCurve: crv };\n                    break;\n                }\n                case 'X25519':\n                case 'X448':\n                    algorithm = { name: crv };\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported crv option provided, supported values are P-256, P-384, P-521, X25519, and X448');\n            }\n            break;\n        }\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n    }\n    return (crypto.subtle.generateKey(algorithm, (_c = options === null || options === void 0 ? void 0 : options.extractable) !== null && _c !== void 0 ? _c : false, keyUsages));\n}\n","import { generateKeyPair as generate } from '../runtime/generate.js';\nexport async function generateKeyPair(alg, options) {\n    return generate(alg, options);\n}\n","import { generateSecret as generate } from '../runtime/generate.js';\nexport async function generateSecret(alg, options) {\n    return generate(alg, options);\n}\n","export { compactDecrypt } from './jwe/compact/decrypt.js';\nexport { flattenedDecrypt } from './jwe/flattened/decrypt.js';\nexport { generalDecrypt } from './jwe/general/decrypt.js';\nexport { GeneralEncrypt } from './jwe/general/encrypt.js';\nexport { compactVerify } from './jws/compact/verify.js';\nexport { flattenedVerify } from './jws/flattened/verify.js';\nexport { generalVerify } from './jws/general/verify.js';\nexport { jwtVerify } from './jwt/verify.js';\nexport { jwtDecrypt } from './jwt/decrypt.js';\nexport { CompactEncrypt } from './jwe/compact/encrypt.js';\nexport { FlattenedEncrypt } from './jwe/flattened/encrypt.js';\nexport { CompactSign } from './jws/compact/sign.js';\nexport { FlattenedSign } from './jws/flattened/sign.js';\nexport { GeneralSign } from './jws/general/sign.js';\nexport { SignJWT } from './jwt/sign.js';\nexport { EncryptJWT } from './jwt/encrypt.js';\nexport { calculateJwkThumbprint, calculateJwkThumbprintUri } from './jwk/thumbprint.js';\nexport { EmbeddedJWK } from './jwk/embedded.js';\nexport { createLocalJWKSet } from './jwks/local.js';\nexport { createRemoteJWKSet } from './jwks/remote.js';\nexport { UnsecuredJWT } from './jwt/unsecured.js';\nexport { exportPKCS8, exportSPKI, exportJWK } from './key/export.js';\nexport { importSPKI, importPKCS8, importX509, importJWK } from './key/import.js';\nexport { decodeProtectedHeader } from './util/decode_protected_header.js';\nexport { decodeJwt } from './util/decode_jwt.js';\nimport * as errors_1 from './util/errors.js';\nexport { errors_1 as errors };\nexport { generateKeyPair } from './key/generate_key_pair.js';\nexport { generateSecret } from './key/generate_secret.js';\nimport * as base64url_1 from './util/base64url.js';\nexport { base64url_1 as base64url };\nexport { default as cryptoRuntime } from './util/runtime.js';\n","var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\n\n// ../../node_modules/.pnpm/cookie@0.5.0/node_modules/cookie/index.js\nvar require_cookie = __commonJS({\n  \"../../node_modules/.pnpm/cookie@0.5.0/node_modules/cookie/index.js\"(exports) {\n    \"use strict\";\n    exports.parse = parse3;\n    exports.serialize = serialize3;\n    var __toString = Object.prototype.toString;\n    var fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n    function parse3(str, options) {\n      if (typeof str !== \"string\") {\n        throw new TypeError(\"argument str must be a string\");\n      }\n      var obj = {};\n      var opt = options || {};\n      var dec = opt.decode || decode;\n      var index = 0;\n      while (index < str.length) {\n        var eqIdx = str.indexOf(\"=\", index);\n        if (eqIdx === -1) {\n          break;\n        }\n        var endIdx = str.indexOf(\";\", index);\n        if (endIdx === -1) {\n          endIdx = str.length;\n        } else if (endIdx < eqIdx) {\n          index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n          continue;\n        }\n        var key = str.slice(index, eqIdx).trim();\n        if (void 0 === obj[key]) {\n          var val = str.slice(eqIdx + 1, endIdx).trim();\n          if (val.charCodeAt(0) === 34) {\n            val = val.slice(1, -1);\n          }\n          obj[key] = tryDecode(val, dec);\n        }\n        index = endIdx + 1;\n      }\n      return obj;\n    }\n    function serialize3(name, val, options) {\n      var opt = options || {};\n      var enc = opt.encode || encode;\n      if (typeof enc !== \"function\") {\n        throw new TypeError(\"option encode is invalid\");\n      }\n      if (!fieldContentRegExp.test(name)) {\n        throw new TypeError(\"argument name is invalid\");\n      }\n      var value = enc(val);\n      if (value && !fieldContentRegExp.test(value)) {\n        throw new TypeError(\"argument val is invalid\");\n      }\n      var str = name + \"=\" + value;\n      if (null != opt.maxAge) {\n        var maxAge = opt.maxAge - 0;\n        if (isNaN(maxAge) || !isFinite(maxAge)) {\n          throw new TypeError(\"option maxAge is invalid\");\n        }\n        str += \"; Max-Age=\" + Math.floor(maxAge);\n      }\n      if (opt.domain) {\n        if (!fieldContentRegExp.test(opt.domain)) {\n          throw new TypeError(\"option domain is invalid\");\n        }\n        str += \"; Domain=\" + opt.domain;\n      }\n      if (opt.path) {\n        if (!fieldContentRegExp.test(opt.path)) {\n          throw new TypeError(\"option path is invalid\");\n        }\n        str += \"; Path=\" + opt.path;\n      }\n      if (opt.expires) {\n        var expires = opt.expires;\n        if (!isDate(expires) || isNaN(expires.valueOf())) {\n          throw new TypeError(\"option expires is invalid\");\n        }\n        str += \"; Expires=\" + expires.toUTCString();\n      }\n      if (opt.httpOnly) {\n        str += \"; HttpOnly\";\n      }\n      if (opt.secure) {\n        str += \"; Secure\";\n      }\n      if (opt.priority) {\n        var priority = typeof opt.priority === \"string\" ? opt.priority.toLowerCase() : opt.priority;\n        switch (priority) {\n          case \"low\":\n            str += \"; Priority=Low\";\n            break;\n          case \"medium\":\n            str += \"; Priority=Medium\";\n            break;\n          case \"high\":\n            str += \"; Priority=High\";\n            break;\n          default:\n            throw new TypeError(\"option priority is invalid\");\n        }\n      }\n      if (opt.sameSite) {\n        var sameSite = typeof opt.sameSite === \"string\" ? opt.sameSite.toLowerCase() : opt.sameSite;\n        switch (sameSite) {\n          case true:\n            str += \"; SameSite=Strict\";\n            break;\n          case \"lax\":\n            str += \"; SameSite=Lax\";\n            break;\n          case \"strict\":\n            str += \"; SameSite=Strict\";\n            break;\n          case \"none\":\n            str += \"; SameSite=None\";\n            break;\n          default:\n            throw new TypeError(\"option sameSite is invalid\");\n        }\n      }\n      return str;\n    }\n    function decode(str) {\n      return str.indexOf(\"%\") !== -1 ? decodeURIComponent(str) : str;\n    }\n    function encode(val) {\n      return encodeURIComponent(val);\n    }\n    function isDate(val) {\n      return __toString.call(val) === \"[object Date]\" || val instanceof Date;\n    }\n    function tryDecode(str, decode2) {\n      try {\n        return decode2(str);\n      } catch (e) {\n        return str;\n      }\n    }\n  }\n});\n\n// src/browserCookieStorage.ts\nvar import_cookie2 = __toESM(require_cookie());\n\n// src/utils/cookies.ts\nvar import_cookie = __toESM(require_cookie());\nimport { base64url } from \"jose\";\nfunction parseSupabaseCookie(str) {\n  if (!str) {\n    return null;\n  }\n  try {\n    const session = JSON.parse(str);\n    if (!session) {\n      return null;\n    }\n    if (session.constructor.name === \"Object\") {\n      return session;\n    }\n    if (session.constructor.name !== \"Array\") {\n      throw new Error(`Unexpected format: ${session.constructor.name}`);\n    }\n    const [_header, payloadStr, _signature] = session[0].split(\".\");\n    const payload = base64url.decode(payloadStr);\n    const decoder = new TextDecoder();\n    const { exp, sub, ...user } = JSON.parse(decoder.decode(payload));\n    return {\n      expires_at: exp,\n      expires_in: exp - Math.round(Date.now() / 1e3),\n      token_type: \"bearer\",\n      access_token: session[0],\n      refresh_token: session[1],\n      provider_token: session[2],\n      provider_refresh_token: session[3],\n      user: {\n        id: sub,\n        factors: session[4],\n        ...user\n      }\n    };\n  } catch (err) {\n    console.warn(\"Failed to parse cookie string:\", err);\n    return null;\n  }\n}\nfunction stringifySupabaseSession(session) {\n  var _a;\n  return JSON.stringify([\n    session.access_token,\n    session.refresh_token,\n    session.provider_token,\n    session.provider_refresh_token,\n    ((_a = session.user) == null ? void 0 : _a.factors) ?? null\n  ]);\n}\n\n// src/utils/helpers.ts\nfunction isBrowser() {\n  return typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\n}\n\n// src/utils/constants.ts\nvar DEFAULT_COOKIE_OPTIONS = {\n  path: \"/\",\n  sameSite: \"lax\",\n  maxAge: 60 * 60 * 24 * 365 * 1e3\n};\n\n// src/chunker.ts\nfunction createChunkRegExp(chunkSize) {\n  return new RegExp(\".{1,\" + chunkSize + \"}\", \"g\");\n}\nvar MAX_CHUNK_SIZE = 3180;\nvar MAX_CHUNK_REGEXP = createChunkRegExp(MAX_CHUNK_SIZE);\nfunction createChunks(key, value, chunkSize) {\n  const re = chunkSize !== void 0 ? createChunkRegExp(chunkSize) : MAX_CHUNK_REGEXP;\n  const chunkCount = Math.ceil(value.length / (chunkSize ?? MAX_CHUNK_SIZE));\n  if (chunkCount === 1) {\n    return [{ name: key, value }];\n  }\n  const chunks = [];\n  const values = value.match(re);\n  values == null ? void 0 : values.forEach((value2, i) => {\n    const name = `${key}.${i}`;\n    chunks.push({ name, value: value2 });\n  });\n  return chunks;\n}\nfunction combineChunks(key, retrieveChunk = () => {\n  return null;\n}) {\n  let values = [];\n  for (let i = 0; ; i++) {\n    const chunkName = `${key}.${i}`;\n    const chunk = retrieveChunk(chunkName);\n    if (!chunk) {\n      break;\n    }\n    values.push(chunk);\n  }\n  return values.length ? values.join(\"\") : null;\n}\n\n// src/cookieAuthStorageAdapter.ts\nvar CookieAuthStorageAdapter = class {\n  constructor(cookieOptions) {\n    this.cookieOptions = {\n      ...DEFAULT_COOKIE_OPTIONS,\n      ...cookieOptions,\n      maxAge: DEFAULT_COOKIE_OPTIONS.maxAge\n    };\n  }\n  getItem(key) {\n    const value = this.getCookie(key);\n    if (key.endsWith(\"-code-verifier\") && value) {\n      return value;\n    }\n    if (value) {\n      return JSON.stringify(parseSupabaseCookie(value));\n    }\n    const chunks = combineChunks(key, (chunkName) => {\n      return this.getCookie(chunkName);\n    });\n    return chunks !== null ? JSON.stringify(parseSupabaseCookie(chunks)) : null;\n  }\n  setItem(key, value) {\n    if (key.endsWith(\"-code-verifier\")) {\n      this.setCookie(key, value);\n      return;\n    }\n    let session = JSON.parse(value);\n    const sessionStr = stringifySupabaseSession(session);\n    const sessionChunks = createChunks(key, sessionStr);\n    sessionChunks.forEach((sess) => {\n      this.setCookie(sess.name, sess.value);\n    });\n  }\n  removeItem(key) {\n    this._deleteSingleCookie(key);\n    this._deleteChunkedCookies(key);\n  }\n  _deleteSingleCookie(key) {\n    if (this.getCookie(key)) {\n      this.deleteCookie(key);\n    }\n  }\n  _deleteChunkedCookies(key, from = 0) {\n    for (let i = from; ; i++) {\n      const cookieName = `${key}.${i}`;\n      const value = this.getCookie(cookieName);\n      if (value === void 0) {\n        break;\n      }\n      this.deleteCookie(cookieName);\n    }\n  }\n};\n\n// src/browserCookieStorage.ts\nvar BrowserCookieAuthStorageAdapter = class extends CookieAuthStorageAdapter {\n  constructor(cookieOptions) {\n    super(cookieOptions);\n  }\n  getCookie(name) {\n    if (!isBrowser())\n      return null;\n    const cookies = (0, import_cookie2.parse)(document.cookie);\n    return cookies[name];\n  }\n  setCookie(name, value) {\n    if (!isBrowser())\n      return null;\n    document.cookie = (0, import_cookie2.serialize)(name, value, {\n      ...this.cookieOptions,\n      httpOnly: false\n    });\n  }\n  deleteCookie(name) {\n    if (!isBrowser())\n      return null;\n    document.cookie = (0, import_cookie2.serialize)(name, \"\", {\n      ...this.cookieOptions,\n      maxAge: 0,\n      httpOnly: false\n    });\n  }\n};\n\n// src/createClient.ts\nimport { createClient } from \"@supabase/supabase-js\";\nfunction createSupabaseClient(supabaseUrl, supabaseKey, options) {\n  var _a;\n  const browser = isBrowser();\n  return createClient(supabaseUrl, supabaseKey, {\n    ...options,\n    auth: {\n      flowType: \"pkce\",\n      autoRefreshToken: browser,\n      detectSessionInUrl: browser,\n      persistSession: true,\n      storage: options.auth.storage,\n      // fix this in supabase-js\n      ...((_a = options.auth) == null ? void 0 : _a.storageKey) ? {\n        storageKey: options.auth.storageKey\n      } : {}\n    }\n  });\n}\nvar export_parseCookies = import_cookie.parse;\nvar export_serializeCookie = import_cookie.serialize;\nexport {\n  BrowserCookieAuthStorageAdapter,\n  CookieAuthStorageAdapter,\n  DEFAULT_COOKIE_OPTIONS,\n  createSupabaseClient,\n  isBrowser,\n  export_parseCookies as parseCookies,\n  parseSupabaseCookie,\n  export_serializeCookie as serializeCookie,\n  stringifySupabaseSession\n};\n/*! Bundled license information:\n\ncookie/index.js:\n  (*!\n   * cookie\n   * Copyright(c) 2012-2014 Roman Shtylman\n   * Copyright(c) 2015 Douglas Christopher Wilson\n   * MIT Licensed\n   *)\n*/\n//# sourceMappingURL=index.mjs.map","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  RequestCookies: () => RequestCookies,\n  ResponseCookies: () => ResponseCookies,\n  parseCookie: () => parseCookie,\n  parseSetCookie: () => parseSetCookie,\n  stringifyCookie: () => stringifyCookie\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/serialize.ts\nfunction stringifyCookie(c) {\n  var _a;\n  const attrs = [\n    \"path\" in c && c.path && `Path=${c.path}`,\n    \"expires\" in c && (c.expires || c.expires === 0) && `Expires=${(typeof c.expires === \"number\" ? new Date(c.expires) : c.expires).toUTCString()}`,\n    \"maxAge\" in c && typeof c.maxAge === \"number\" && `Max-Age=${c.maxAge}`,\n    \"domain\" in c && c.domain && `Domain=${c.domain}`,\n    \"secure\" in c && c.secure && \"Secure\",\n    \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n    \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`,\n    \"partitioned\" in c && c.partitioned && \"Partitioned\",\n    \"priority\" in c && c.priority && `Priority=${c.priority}`\n  ].filter(Boolean);\n  const stringified = `${c.name}=${encodeURIComponent((_a = c.value) != null ? _a : \"\")}`;\n  return attrs.length === 0 ? stringified : `${stringified}; ${attrs.join(\"; \")}`;\n}\nfunction parseCookie(cookie) {\n  const map = /* @__PURE__ */ new Map();\n  for (const pair of cookie.split(/; */)) {\n    if (!pair)\n      continue;\n    const splitAt = pair.indexOf(\"=\");\n    if (splitAt === -1) {\n      map.set(pair, \"true\");\n      continue;\n    }\n    const [key, value] = [pair.slice(0, splitAt), pair.slice(splitAt + 1)];\n    try {\n      map.set(key, decodeURIComponent(value != null ? value : \"true\"));\n    } catch {\n    }\n  }\n  return map;\n}\nfunction parseSetCookie(setCookie) {\n  if (!setCookie) {\n    return void 0;\n  }\n  const [[name, value], ...attributes] = parseCookie(setCookie);\n  const {\n    domain,\n    expires,\n    httponly,\n    maxage,\n    path,\n    samesite,\n    secure,\n    partitioned,\n    priority\n  } = Object.fromEntries(\n    attributes.map(([key, value2]) => [\n      key.toLowerCase().replace(/-/g, \"\"),\n      value2\n    ])\n  );\n  const cookie = {\n    name,\n    value: decodeURIComponent(value),\n    domain,\n    ...expires && { expires: new Date(expires) },\n    ...httponly && { httpOnly: true },\n    ...typeof maxage === \"string\" && { maxAge: Number(maxage) },\n    path,\n    ...samesite && { sameSite: parseSameSite(samesite) },\n    ...secure && { secure: true },\n    ...priority && { priority: parsePriority(priority) },\n    ...partitioned && { partitioned: true }\n  };\n  return compact(cookie);\n}\nfunction compact(t) {\n  const newT = {};\n  for (const key in t) {\n    if (t[key]) {\n      newT[key] = t[key];\n    }\n  }\n  return newT;\n}\nvar SAME_SITE = [\"strict\", \"lax\", \"none\"];\nfunction parseSameSite(string) {\n  string = string.toLowerCase();\n  return SAME_SITE.includes(string) ? string : void 0;\n}\nvar PRIORITY = [\"low\", \"medium\", \"high\"];\nfunction parsePriority(string) {\n  string = string.toLowerCase();\n  return PRIORITY.includes(string) ? string : void 0;\n}\nfunction splitCookiesString(cookiesString) {\n  if (!cookiesString)\n    return [];\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        lastComma = pos;\n        pos += 1;\n        skipWhitespace();\n        nextStart = pos;\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          cookiesSeparatorFound = true;\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n  return cookiesStrings;\n}\n\n// src/request-cookies.ts\nvar RequestCookies = class {\n  constructor(requestHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    this._headers = requestHeaders;\n    const header = requestHeaders.get(\"cookie\");\n    if (header) {\n      const parsed = parseCookie(header);\n      for (const [name, value] of parsed) {\n        this._parsed.set(name, { name, value });\n      }\n    }\n  }\n  [Symbol.iterator]() {\n    return this._parsed[Symbol.iterator]();\n  }\n  /**\n   * The amount of cookies received from the client\n   */\n  get size() {\n    return this._parsed.size;\n  }\n  get(...args) {\n    const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(name);\n  }\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed);\n    if (!args.length) {\n      return all.map(([_, value]) => value);\n    }\n    const name = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter(([n]) => n === name).map(([_, value]) => value);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  set(...args) {\n    const [name, value] = args.length === 1 ? [args[0].name, args[0].value] : args;\n    const map = this._parsed;\n    map.set(name, { name, value });\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value2]) => stringifyCookie(value2)).join(\"; \")\n    );\n    return this;\n  }\n  /**\n   * Delete the cookies matching the passed name or names in the request.\n   */\n  delete(names) {\n    const map = this._parsed;\n    const result = !Array.isArray(names) ? map.delete(names) : names.map((name) => map.delete(name));\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value]) => stringifyCookie(value)).join(\"; \")\n    );\n    return result;\n  }\n  /**\n   * Delete all the cookies in the cookies in the request.\n   */\n  clear() {\n    this.delete(Array.from(this._parsed.keys()));\n    return this;\n  }\n  /**\n   * Format the cookies in the request as a string for logging\n   */\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map((v) => `${v.name}=${encodeURIComponent(v.value)}`).join(\"; \");\n  }\n};\n\n// src/response-cookies.ts\nvar ResponseCookies = class {\n  constructor(responseHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    var _a, _b, _c;\n    this._headers = responseHeaders;\n    const setCookie = (_c = (_b = (_a = responseHeaders.getSetCookie) == null ? void 0 : _a.call(responseHeaders)) != null ? _b : responseHeaders.get(\"set-cookie\")) != null ? _c : [];\n    const cookieStrings = Array.isArray(setCookie) ? setCookie : splitCookiesString(setCookie);\n    for (const cookieString of cookieStrings) {\n      const parsed = parseSetCookie(cookieString);\n      if (parsed)\n        this._parsed.set(parsed.name, parsed);\n    }\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-get CookieStore#get} without the Promise.\n   */\n  get(...args) {\n    const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(key);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-getAll CookieStore#getAll} without the Promise.\n   */\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed.values());\n    if (!args.length) {\n      return all;\n    }\n    const key = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter((c) => c.name === key);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-set CookieStore#set} without the Promise.\n   */\n  set(...args) {\n    const [name, value, cookie] = args.length === 1 ? [args[0].name, args[0].value, args[0]] : args;\n    const map = this._parsed;\n    map.set(name, normalizeCookie({ name, value, ...cookie }));\n    replace(map, this._headers);\n    return this;\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-delete CookieStore#delete} without the Promise.\n   */\n  delete(...args) {\n    const [name, options] = typeof args[0] === \"string\" ? [args[0]] : [args[0].name, args[0]];\n    return this.set({ ...options, name, value: \"\", expires: /* @__PURE__ */ new Date(0) });\n  }\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map(stringifyCookie).join(\"; \");\n  }\n};\nfunction replace(bag, headers) {\n  headers.delete(\"set-cookie\");\n  for (const [, value] of bag) {\n    const serialized = stringifyCookie(value);\n    headers.append(\"set-cookie\", serialized);\n  }\n}\nfunction normalizeCookie(cookie = { name: \"\", value: \"\" }) {\n  if (typeof cookie.expires === \"number\") {\n    cookie.expires = new Date(cookie.expires);\n  }\n  if (cookie.maxAge) {\n    cookie.expires = new Date(Date.now() + cookie.maxAge * 1e3);\n  }\n  if (cookie.path === null || cookie.path === void 0) {\n    cookie.path = \"/\";\n  }\n  return cookie;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  RequestCookies,\n  ResponseCookies,\n  parseCookie,\n  parseSetCookie,\n  stringifyCookie\n});\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// @ts-ignore\nconst node_fetch_1 = __importDefault(require(\"@supabase/node-fetch\"));\nconst PostgrestError_1 = __importDefault(require(\"./PostgrestError\"));\nclass PostgrestBuilder {\n    constructor(builder) {\n        this.shouldThrowOnError = false;\n        this.method = builder.method;\n        this.url = builder.url;\n        this.headers = builder.headers;\n        this.schema = builder.schema;\n        this.body = builder.body;\n        this.shouldThrowOnError = builder.shouldThrowOnError;\n        this.signal = builder.signal;\n        this.isMaybeSingle = builder.isMaybeSingle;\n        if (builder.fetch) {\n            this.fetch = builder.fetch;\n        }\n        else if (typeof fetch === 'undefined') {\n            this.fetch = node_fetch_1.default;\n        }\n        else {\n            this.fetch = fetch;\n        }\n    }\n    /**\n     * If there's an error with the query, throwOnError will reject the promise by\n     * throwing the error instead of returning it as part of a successful response.\n     *\n     * {@link https://github.com/supabase/supabase-js/issues/92}\n     */\n    throwOnError() {\n        this.shouldThrowOnError = true;\n        return this;\n    }\n    /**\n     * Set an HTTP header for the request.\n     */\n    setHeader(name, value) {\n        this.headers = Object.assign({}, this.headers);\n        this.headers[name] = value;\n        return this;\n    }\n    then(onfulfilled, onrejected) {\n        // https://postgrest.org/en/stable/api.html#switching-schemas\n        if (this.schema === undefined) {\n            // skip\n        }\n        else if (['GET', 'HEAD'].includes(this.method)) {\n            this.headers['Accept-Profile'] = this.schema;\n        }\n        else {\n            this.headers['Content-Profile'] = this.schema;\n        }\n        if (this.method !== 'GET' && this.method !== 'HEAD') {\n            this.headers['Content-Type'] = 'application/json';\n        }\n        // NOTE: Invoke w/o `this` to avoid illegal invocation error.\n        // https://github.com/supabase/postgrest-js/pull/247\n        const _fetch = this.fetch;\n        let res = _fetch(this.url.toString(), {\n            method: this.method,\n            headers: this.headers,\n            body: JSON.stringify(this.body),\n            signal: this.signal,\n        }).then(async (res) => {\n            var _a, _b, _c;\n            let error = null;\n            let data = null;\n            let count = null;\n            let status = res.status;\n            let statusText = res.statusText;\n            if (res.ok) {\n                if (this.method !== 'HEAD') {\n                    const body = await res.text();\n                    if (body === '') {\n                        // Prefer: return=minimal\n                    }\n                    else if (this.headers['Accept'] === 'text/csv') {\n                        data = body;\n                    }\n                    else if (this.headers['Accept'] &&\n                        this.headers['Accept'].includes('application/vnd.pgrst.plan+text')) {\n                        data = body;\n                    }\n                    else {\n                        data = JSON.parse(body);\n                    }\n                }\n                const countHeader = (_a = this.headers['Prefer']) === null || _a === void 0 ? void 0 : _a.match(/count=(exact|planned|estimated)/);\n                const contentRange = (_b = res.headers.get('content-range')) === null || _b === void 0 ? void 0 : _b.split('/');\n                if (countHeader && contentRange && contentRange.length > 1) {\n                    count = parseInt(contentRange[1]);\n                }\n                // Temporary partial fix for https://github.com/supabase/postgrest-js/issues/361\n                // Issue persists e.g. for `.insert([...]).select().maybeSingle()`\n                if (this.isMaybeSingle && this.method === 'GET' && Array.isArray(data)) {\n                    if (data.length > 1) {\n                        error = {\n                            // https://github.com/PostgREST/postgrest/blob/a867d79c42419af16c18c3fb019eba8df992626f/src/PostgREST/Error.hs#L553\n                            code: 'PGRST116',\n                            details: `Results contain ${data.length} rows, application/vnd.pgrst.object+json requires 1 row`,\n                            hint: null,\n                            message: 'JSON object requested, multiple (or no) rows returned',\n                        };\n                        data = null;\n                        count = null;\n                        status = 406;\n                        statusText = 'Not Acceptable';\n                    }\n                    else if (data.length === 1) {\n                        data = data[0];\n                    }\n                    else {\n                        data = null;\n                    }\n                }\n            }\n            else {\n                const body = await res.text();\n                try {\n                    error = JSON.parse(body);\n                    // Workaround for https://github.com/supabase/postgrest-js/issues/295\n                    if (Array.isArray(error) && res.status === 404) {\n                        data = [];\n                        error = null;\n                        status = 200;\n                        statusText = 'OK';\n                    }\n                }\n                catch (_d) {\n                    // Workaround for https://github.com/supabase/postgrest-js/issues/295\n                    if (res.status === 404 && body === '') {\n                        status = 204;\n                        statusText = 'No Content';\n                    }\n                    else {\n                        error = {\n                            message: body,\n                        };\n                    }\n                }\n                if (error && this.isMaybeSingle && ((_c = error === null || error === void 0 ? void 0 : error.details) === null || _c === void 0 ? void 0 : _c.includes('0 rows'))) {\n                    error = null;\n                    status = 200;\n                    statusText = 'OK';\n                }\n                if (error && this.shouldThrowOnError) {\n                    throw new PostgrestError_1.default(error);\n                }\n            }\n            const postgrestResponse = {\n                error,\n                data,\n                count,\n                status,\n                statusText,\n            };\n            return postgrestResponse;\n        });\n        if (!this.shouldThrowOnError) {\n            res = res.catch((fetchError) => {\n                var _a, _b, _c;\n                return ({\n                    error: {\n                        message: `${(_a = fetchError === null || fetchError === void 0 ? void 0 : fetchError.name) !== null && _a !== void 0 ? _a : 'FetchError'}: ${fetchError === null || fetchError === void 0 ? void 0 : fetchError.message}`,\n                        details: `${(_b = fetchError === null || fetchError === void 0 ? void 0 : fetchError.stack) !== null && _b !== void 0 ? _b : ''}`,\n                        hint: '',\n                        code: `${(_c = fetchError === null || fetchError === void 0 ? void 0 : fetchError.code) !== null && _c !== void 0 ? _c : ''}`,\n                    },\n                    data: null,\n                    count: null,\n                    status: 0,\n                    statusText: '',\n                });\n            });\n        }\n        return res.then(onfulfilled, onrejected);\n    }\n}\nexports.default = PostgrestBuilder;\n//# sourceMappingURL=PostgrestBuilder.js.map","/**\n * RouteModule is the base class for all route modules. This class should be\n * extended by all route modules.\n */ export class RouteModule {\n    constructor({ userland, definition }){\n        this.userland = userland;\n        this.definition = definition;\n    }\n}\n\n//# sourceMappingURL=route-module.js.map","/**\n * List of valid HTTP methods that can be implemented by Next.js's Custom App\n * Routes.\n */ export const HTTP_METHODS = [\n    'GET',\n    'HEAD',\n    'OPTIONS',\n    'POST',\n    'PUT',\n    'DELETE',\n    'PATCH'\n];\n/**\n * Checks to see if the passed string is an HTTP method. Note that this is case\n * sensitive.\n *\n * @param maybeMethod the string that may be an HTTP method\n * @returns true if the string is an HTTP method\n */ export function isHTTPMethod(maybeMethod) {\n    return HTTP_METHODS.includes(maybeMethod);\n}\n\n//# sourceMappingURL=http.js.map","/**\n * Get pathname from absolute path.\n *\n * @param absolutePath the absolute path\n * @returns the pathname\n */ export function getPathnameFromAbsolutePath(absolutePath) {\n    // Remove prefix including app dir\n    let appDir = '/app/';\n    if (!absolutePath.includes(appDir)) {\n        appDir = '\\\\app\\\\';\n    }\n    const [, ...parts] = absolutePath.split(appDir);\n    const relativePath = appDir[0] + parts.join(appDir);\n    // remove extension\n    const pathname = relativePath.split('.').slice(0, -1).join('.');\n    return pathname;\n}\n\n//# sourceMappingURL=get-pathname-from-absolute-path.js.map","// ISC License\n// Copyright (c) 2021 Alexey Raspopov, Kostiantyn Denysov, Anton Verinov\n// Permission to use, copy, modify, and/or distribute this software for any\n// purpose with or without fee is hereby granted, provided that the above\n// copyright notice and this permission notice appear in all copies.\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n//\n// https://github.com/alexeyraspopov/picocolors/blob/b6261487e7b81aaab2440e397a356732cad9e342/picocolors.js#L1\nvar _globalThis;\nconst { env, stdout } = ((_globalThis = globalThis) == null ? void 0 : _globalThis.process) ?? {};\nconst enabled = env && !env.NO_COLOR && (env.FORCE_COLOR || (stdout == null ? void 0 : stdout.isTTY) && !env.CI && env.TERM !== 'dumb');\nconst replaceClose = (str, close, replace, index)=>{\n    const start = str.substring(0, index) + replace;\n    const end = str.substring(index + close.length);\n    const nextIndex = end.indexOf(close);\n    return ~nextIndex ? start + replaceClose(end, close, replace, nextIndex) : start + end;\n};\nconst formatter = (open, close, replace = open)=>{\n    if (!enabled) return String;\n    return (input)=>{\n        const string = '' + input;\n        const index = string.indexOf(close, open.length);\n        return ~index ? open + replaceClose(string, close, replace, index) + close : open + string + close;\n    };\n};\nexport const reset = enabled ? (s)=>`\\x1b[0m${s}\\x1b[0m` : String;\nexport const bold = formatter('\\x1b[1m', '\\x1b[22m', '\\x1b[22m\\x1b[1m');\nexport const dim = formatter('\\x1b[2m', '\\x1b[22m', '\\x1b[22m\\x1b[2m');\nexport const italic = formatter('\\x1b[3m', '\\x1b[23m');\nexport const underline = formatter('\\x1b[4m', '\\x1b[24m');\nexport const inverse = formatter('\\x1b[7m', '\\x1b[27m');\nexport const hidden = formatter('\\x1b[8m', '\\x1b[28m');\nexport const strikethrough = formatter('\\x1b[9m', '\\x1b[29m');\nexport const black = formatter('\\x1b[30m', '\\x1b[39m');\nexport const red = formatter('\\x1b[31m', '\\x1b[39m');\nexport const green = formatter('\\x1b[32m', '\\x1b[39m');\nexport const yellow = formatter('\\x1b[33m', '\\x1b[39m');\nexport const blue = formatter('\\x1b[34m', '\\x1b[39m');\nexport const magenta = formatter('\\x1b[35m', '\\x1b[39m');\nexport const purple = formatter('\\x1b[38;2;173;127;168m', '\\x1b[39m');\nexport const cyan = formatter('\\x1b[36m', '\\x1b[39m');\nexport const white = formatter('\\x1b[37m', '\\x1b[39m');\nexport const gray = formatter('\\x1b[90m', '\\x1b[39m');\nexport const bgBlack = formatter('\\x1b[40m', '\\x1b[49m');\nexport const bgRed = formatter('\\x1b[41m', '\\x1b[49m');\nexport const bgGreen = formatter('\\x1b[42m', '\\x1b[49m');\nexport const bgYellow = formatter('\\x1b[43m', '\\x1b[49m');\nexport const bgBlue = formatter('\\x1b[44m', '\\x1b[49m');\nexport const bgMagenta = formatter('\\x1b[45m', '\\x1b[49m');\nexport const bgCyan = formatter('\\x1b[46m', '\\x1b[49m');\nexport const bgWhite = formatter('\\x1b[47m', '\\x1b[49m');\n\n//# sourceMappingURL=picocolors.js.map","import { bold, green, magenta, red, yellow, white } from '../../lib/picocolors';\nimport { LRUCache } from '../../server/lib/lru-cache';\nexport const prefixes = {\n    wait: white(bold('○')),\n    error: red(bold('⨯')),\n    warn: yellow(bold('⚠')),\n    ready: '▲',\n    info: white(bold(' ')),\n    event: green(bold('✓')),\n    trace: magenta(bold('»'))\n};\nconst LOGGING_METHOD = {\n    log: 'log',\n    warn: 'warn',\n    error: 'error'\n};\nfunction prefixedLog(prefixType, ...message) {\n    if ((message[0] === '' || message[0] === undefined) && message.length === 1) {\n        message.shift();\n    }\n    const consoleMethod = prefixType in LOGGING_METHOD ? LOGGING_METHOD[prefixType] : 'log';\n    const prefix = prefixes[prefixType];\n    // If there's no message, don't print the prefix but a new line\n    if (message.length === 0) {\n        console[consoleMethod]('');\n    } else {\n        // Ensure if there's ANSI escape codes it's concatenated into one string.\n        // Chrome DevTool can only handle color if it's in one string.\n        if (message.length === 1 && typeof message[0] === 'string') {\n            console[consoleMethod](' ' + prefix + ' ' + message[0]);\n        } else {\n            console[consoleMethod](' ' + prefix, ...message);\n        }\n    }\n}\nexport function bootstrap(...message) {\n    // logging format: ' <prefix> <message>'\n    // e.g. ' ✓ Compiled successfully'\n    // Add spaces to align with the indent of other logs\n    console.log('   ' + message.join(' '));\n}\nexport function wait(...message) {\n    prefixedLog('wait', ...message);\n}\nexport function error(...message) {\n    prefixedLog('error', ...message);\n}\nexport function warn(...message) {\n    prefixedLog('warn', ...message);\n}\nexport function ready(...message) {\n    prefixedLog('ready', ...message);\n}\nexport function info(...message) {\n    prefixedLog('info', ...message);\n}\nexport function event(...message) {\n    prefixedLog('event', ...message);\n}\nexport function trace(...message) {\n    prefixedLog('trace', ...message);\n}\nconst warnOnceCache = new LRUCache(10000, (value)=>value.length);\nexport function warnOnce(...message) {\n    const key = message.join(' ');\n    if (!warnOnceCache.has(key)) {\n        warnOnceCache.set(key, key);\n        warn(...message);\n    }\n}\n\n//# sourceMappingURL=log.js.map","import { HTTP_METHODS } from '../../../web/http';\nconst AUTOMATIC_ROUTE_METHODS = [\n    'HEAD',\n    'OPTIONS'\n];\nfunction handleMethodNotAllowedResponse() {\n    return new Response(null, {\n        status: 405\n    });\n}\nexport function autoImplementMethods(handlers) {\n    // Loop through all the HTTP methods to create the initial methods object.\n    // Each of the methods will be set to the 405 response handler.\n    const methods = HTTP_METHODS.reduce((acc, method)=>({\n            ...acc,\n            // If the userland module implements the method, then use it. Otherwise,\n            // use the 405 response handler.\n            [method]: handlers[method] ?? handleMethodNotAllowedResponse\n        }), {});\n    // Get all the methods that could be automatically implemented that were not\n    // implemented by the userland module.\n    const implemented = new Set(HTTP_METHODS.filter((method)=>handlers[method]));\n    const missing = AUTOMATIC_ROUTE_METHODS.filter((method)=>!implemented.has(method));\n    // Loop over the missing methods to automatically implement them if we can.\n    for (const method of missing){\n        // If the userland module doesn't implement the HEAD method, then\n        // we'll automatically implement it by calling the GET method (if it\n        // exists).\n        if (method === 'HEAD') {\n            if (handlers.GET) {\n                // Implement the HEAD method by calling the GET method.\n                methods.HEAD = handlers.GET;\n                // Mark it as implemented.\n                implemented.add('HEAD');\n            }\n            continue;\n        }\n        // If OPTIONS is not provided then implement it.\n        if (method === 'OPTIONS') {\n            // TODO: check if HEAD is implemented, if so, use it to add more headers\n            // Get all the methods that were implemented by the userland module.\n            const allow = [\n                'OPTIONS',\n                ...implemented\n            ];\n            // If the list of methods doesn't include HEAD, but it includes GET, then\n            // add HEAD as it's automatically implemented.\n            if (!implemented.has('HEAD') && implemented.has('GET')) {\n                allow.push('HEAD');\n            }\n            // Sort and join the list with commas to create the `Allow` header. See:\n            // https://httpwg.org/specs/rfc9110.html#field.allow\n            const headers = {\n                Allow: allow.sort().join(', ')\n            };\n            // Implement the OPTIONS method by returning a 204 response with the\n            // `Allow` header.\n            methods.OPTIONS = ()=>new Response(null, {\n                    status: 204,\n                    headers\n                });\n            // Mark this method as implemented.\n            implemented.add('OPTIONS');\n            continue;\n        }\n        throw Object.defineProperty(new Error(`Invariant: should handle all automatic implementable methods, got method: ${method}`), \"__NEXT_ERROR_CODE\", {\n            value: \"E211\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    return methods;\n}\n\n//# sourceMappingURL=auto-implement-methods.js.map","/**\n * Converts the query into params.\n *\n * @param query the query to convert to params\n * @returns the params\n */ export function parsedUrlQueryToParams(query) {\n    const params = {};\n    for (const [key, value] of Object.entries(query)){\n        if (typeof value === 'undefined') continue;\n        params[key] = value;\n    }\n    return params;\n}\n\n//# sourceMappingURL=parsed-url-query-to-params.js.map","// This has to be a shared module which is shared between client component error boundary and dynamic component\nconst BAILOUT_TO_CSR = 'BAILOUT_TO_CLIENT_SIDE_RENDERING'\n\n/** An error that should be thrown when we want to bail out to client-side rendering. */\nexport class BailoutToCSRError extends Error {\n  public readonly digest = BAILOUT_TO_CSR\n\n  constructor(public readonly reason: string) {\n    super(`Bail out to client-side rendering: ${reason}`)\n  }\n}\n\n/** Checks if a passed argument is an error that is thrown if we want to bail out to client-side rendering. */\nexport function isBailoutToCSRError(err: unknown): err is BailoutToCSRError {\n  if (typeof err !== 'object' || err === null || !('digest' in err)) {\n    return false\n  }\n\n  return err.digest === BAILOUT_TO_CSR\n}\n","export const HTTPAccessErrorStatus = {\n  NOT_FOUND: 404,\n  FORBIDDEN: 403,\n  UNAUTHORIZED: 401,\n}\n\nconst ALLOWED_CODES = new Set(Object.values(HTTPAccessErrorStatus))\n\nexport const HTTP_ERROR_FALLBACK_ERROR_CODE = 'NEXT_HTTP_ERROR_FALLBACK'\n\nexport type HTTPAccessFallbackError = Error & {\n  digest: `${typeof HTTP_ERROR_FALLBACK_ERROR_CODE};${string}`\n}\n\n/**\n * Checks an error to determine if it's an error generated by\n * the HTTP navigation APIs `notFound()`, `forbidden()` or `unauthorized()`.\n *\n * @param error the error that may reference a HTTP access error\n * @returns true if the error is a HTTP access error\n */\nexport function isHTTPAccessFallbackError(\n  error: unknown\n): error is HTTPAccessFallbackError {\n  if (\n    typeof error !== 'object' ||\n    error === null ||\n    !('digest' in error) ||\n    typeof error.digest !== 'string'\n  ) {\n    return false\n  }\n  const [prefix, httpStatus] = error.digest.split(';')\n\n  return (\n    prefix === HTTP_ERROR_FALLBACK_ERROR_CODE &&\n    ALLOWED_CODES.has(Number(httpStatus))\n  )\n}\n\nexport function getAccessFallbackHTTPStatus(\n  error: HTTPAccessFallbackError\n): number {\n  const httpStatus = error.digest.split(';')[1]\n  return Number(httpStatus)\n}\n\nexport function getAccessFallbackErrorTypeByStatus(\n  status: number\n): 'not-found' | 'forbidden' | 'unauthorized' | undefined {\n  switch (status) {\n    case 401:\n      return 'unauthorized'\n    case 403:\n      return 'forbidden'\n    case 404:\n      return 'not-found'\n    default:\n      return\n  }\n}\n","export enum RedirectStatusCode {\n  SeeOther = 303,\n  TemporaryRedirect = 307,\n  PermanentRedirect = 308,\n}\n","import { RedirectStatusCode } from './redirect-status-code'\n\nexport const REDIRECT_ERROR_CODE = 'NEXT_REDIRECT'\n\nexport enum RedirectType {\n  push = 'push',\n  replace = 'replace',\n}\n\nexport type RedirectError = Error & {\n  digest: `${typeof REDIRECT_ERROR_CODE};${RedirectType};${string};${RedirectStatusCode};`\n}\n\n/**\n * Checks an error to determine if it's an error generated by the\n * `redirect(url)` helper.\n *\n * @param error the error that may reference a redirect error\n * @returns true if the error is a redirect error\n */\nexport function isRedirectError(error: unknown): error is RedirectError {\n  if (\n    typeof error !== 'object' ||\n    error === null ||\n    !('digest' in error) ||\n    typeof error.digest !== 'string'\n  ) {\n    return false\n  }\n\n  const digest = error.digest.split(';')\n  const [errorCode, type] = digest\n  const destination = digest.slice(2, -2).join(';')\n  const status = digest.at(-2)\n\n  const statusCode = Number(status)\n\n  return (\n    errorCode === REDIRECT_ERROR_CODE &&\n    (type === 'replace' || type === 'push') &&\n    typeof destination === 'string' &&\n    !isNaN(statusCode) &&\n    statusCode in RedirectStatusCode\n  )\n}\n","import {\n  isHTTPAccessFallbackError,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\nimport { isRedirectError, type RedirectError } from './redirect-error'\n\n/**\n * Returns true if the error is a navigation signal error. These errors are\n * thrown by user code to perform navigation operations and interrupt the React\n * render.\n */\nexport function isNextRouterError(\n  error: unknown\n): error is RedirectError | HTTPAccessFallbackError {\n  return isRedirectError(error) || isHTTPAccessFallbackError(error)\n}\n","import stringHash from 'next/dist/compiled/string-hash';\nimport { formatServerError } from '../../lib/format-server-error';\nimport { SpanStatusCode, getTracer } from '../lib/trace/tracer';\nimport { isAbortError } from '../pipe-readable';\nimport { isBailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr';\nimport { isDynamicServerError } from '../../client/components/hooks-server-context';\nimport { isNextRouterError } from '../../client/components/is-next-router-error';\nimport { getProperError } from '../../lib/is-error';\nimport { createDigestWithErrorCode } from '../../lib/error-telemetry-utils';\n/**\n * Returns a digest for well-known Next.js errors, otherwise `undefined`. If a\n * digest is returned this also means that the error does not need to be\n * reported.\n */ export function getDigestForWellKnownError(error) {\n    // If we're bailing out to CSR, we don't need to log the error.\n    if (isBailoutToCSRError(error)) return error.digest;\n    // If this is a navigation error, we don't need to log the error.\n    if (isNextRouterError(error)) return error.digest;\n    // If this error occurs, we know that we should be stopping the static\n    // render. This is only thrown in static generation when PPR is not enabled,\n    // which causes the whole page to be marked as dynamic. We don't need to\n    // tell the user about this error, as it's not actionable.\n    if (isDynamicServerError(error)) return error.digest;\n    return undefined;\n}\nexport function createFlightReactServerErrorHandler(shouldFormatError, onReactServerRenderError) {\n    return (thrownValue)=>{\n        if (typeof thrownValue === 'string') {\n            // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n            return stringHash(thrownValue).toString();\n        }\n        // If the response was closed, we don't need to log the error.\n        if (isAbortError(thrownValue)) return;\n        const digest = getDigestForWellKnownError(thrownValue);\n        if (digest) {\n            return digest;\n        }\n        const err = getProperError(thrownValue);\n        // If the error already has a digest, respect the original digest,\n        // so it won't get re-generated into another new error.\n        if (!err.digest) {\n            // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n            err.digest = stringHash(err.message + err.stack || '').toString();\n        }\n        // Format server errors in development to add more helpful error messages\n        if (shouldFormatError) {\n            formatServerError(err);\n        }\n        // Record exception in an active span, if available.\n        const span = getTracer().getActiveScopeSpan();\n        if (span) {\n            span.recordException(err);\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: err.message\n            });\n        }\n        onReactServerRenderError(err);\n        return createDigestWithErrorCode(thrownValue, err.digest);\n    };\n}\nexport function createHTMLReactServerErrorHandler(shouldFormatError, isNextExport, reactServerErrors, silenceLogger, onReactServerRenderError) {\n    return (thrownValue)=>{\n        var _err_message;\n        if (typeof thrownValue === 'string') {\n            // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n            return stringHash(thrownValue).toString();\n        }\n        // If the response was closed, we don't need to log the error.\n        if (isAbortError(thrownValue)) return;\n        const digest = getDigestForWellKnownError(thrownValue);\n        if (digest) {\n            return digest;\n        }\n        const err = getProperError(thrownValue);\n        // If the error already has a digest, respect the original digest,\n        // so it won't get re-generated into another new error.\n        if (!err.digest) {\n            // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n            err.digest = stringHash(err.message + (err.stack || '')).toString();\n        }\n        // @TODO by putting this here and not at the top it is possible that\n        // we don't error the build in places we actually expect to\n        if (!reactServerErrors.has(err.digest)) {\n            reactServerErrors.set(err.digest, err);\n        }\n        // Format server errors in development to add more helpful error messages\n        if (shouldFormatError) {\n            formatServerError(err);\n        }\n        // Don't log the suppressed error during export\n        if (!(isNextExport && (err == null ? void 0 : (_err_message = err.message) == null ? void 0 : _err_message.includes('The specific message is omitted in production builds to avoid leaking sensitive details.')))) {\n            // Record exception in an active span, if available.\n            const span = getTracer().getActiveScopeSpan();\n            if (span) {\n                span.recordException(err);\n                span.setStatus({\n                    code: SpanStatusCode.ERROR,\n                    message: err.message\n                });\n            }\n            if (!silenceLogger) {\n                onReactServerRenderError == null ? void 0 : onReactServerRenderError(err);\n            }\n        }\n        return createDigestWithErrorCode(thrownValue, err.digest);\n    };\n}\nexport function createHTMLErrorHandler(shouldFormatError, isNextExport, reactServerErrors, allCapturedErrors, silenceLogger, onHTMLRenderSSRError) {\n    return (thrownValue, errorInfo)=>{\n        var _err_message;\n        let isSSRError = true;\n        allCapturedErrors.push(thrownValue);\n        // If the response was closed, we don't need to log the error.\n        if (isAbortError(thrownValue)) return;\n        const digest = getDigestForWellKnownError(thrownValue);\n        if (digest) {\n            return digest;\n        }\n        const err = getProperError(thrownValue);\n        // If the error already has a digest, respect the original digest,\n        // so it won't get re-generated into another new error.\n        if (err.digest) {\n            if (reactServerErrors.has(err.digest)) {\n                // This error is likely an obfuscated error from react-server.\n                // We recover the original error here.\n                thrownValue = reactServerErrors.get(err.digest);\n                isSSRError = false;\n            } else {\n            // The error is not from react-server but has a digest\n            // from other means so we don't need to produce a new one\n            }\n        } else {\n            err.digest = stringHash(err.message + ((errorInfo == null ? void 0 : errorInfo.componentStack) || err.stack || '')).toString();\n        }\n        // Format server errors in development to add more helpful error messages\n        if (shouldFormatError) {\n            formatServerError(err);\n        }\n        // Don't log the suppressed error during export\n        if (!(isNextExport && (err == null ? void 0 : (_err_message = err.message) == null ? void 0 : _err_message.includes('The specific message is omitted in production builds to avoid leaking sensitive details.')))) {\n            // Record exception in an active span, if available.\n            const span = getTracer().getActiveScopeSpan();\n            if (span) {\n                span.recordException(err);\n                span.setStatus({\n                    code: SpanStatusCode.ERROR,\n                    message: err.message\n                });\n            }\n            if (!silenceLogger && // HTML errors contain RSC errors as well, filter them out before reporting\n            isSSRError) {\n                onHTMLRenderSSRError(err, errorInfo);\n            }\n        }\n        return createDigestWithErrorCode(thrownValue, err.digest);\n    };\n}\nexport function isUserLandError(err) {\n    return !isAbortError(err) && !isBailoutToCSRError(err) && !isNextRouterError(err);\n}\n\n//# sourceMappingURL=create-error-handler.js.map","import { getDigestForWellKnownError } from './create-error-handler';\nexport function printDebugThrownValueForProspectiveRender(thrownValue, route) {\n    // We don't need to print well-known Next.js errors.\n    if (getDigestForWellKnownError(thrownValue)) {\n        return;\n    }\n    let message;\n    if (typeof thrownValue === 'object' && thrownValue !== null && typeof thrownValue.message === 'string') {\n        message = thrownValue.message;\n        if (typeof thrownValue.stack === 'string') {\n            const originalErrorStack = thrownValue.stack;\n            const stackStart = originalErrorStack.indexOf('\\n');\n            if (stackStart > -1) {\n                const error = Object.defineProperty(new Error(`Route ${route} errored during the prospective render. These errors are normally ignored and may not prevent the route from prerendering but are logged here because build debugging is enabled.\n          \nOriginal Error: ${message}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E362\",\n                    enumerable: false,\n                    configurable: true\n                });\n                error.stack = 'Error: ' + error.message + originalErrorStack.slice(stackStart);\n                console.error(error);\n                return;\n            }\n        }\n    } else if (typeof thrownValue === 'string') {\n        message = thrownValue;\n    }\n    if (message) {\n        console.error(`Route ${route} errored during the prospective render. These errors are normally ignored and may not prevent the route from prerendering but are logged here because build debugging is enabled. No stack was provided.\n          \nOriginal Message: ${message}`);\n        return;\n    }\n    console.error(`Route ${route} errored during the prospective render. These errors are normally ignored and may not prevent the route from prerendering but are logged here because build debugging is enabled. The thrown value is logged just following this message`);\n    console.error(thrownValue);\n    return;\n}\n\n//# sourceMappingURL=prospective-render-utils.js.map","'use client'\n\nimport type { FetchServerResponseResult } from '../../client/components/router-reducer/fetch-server-response'\nimport type {\n  FocusAndScrollRef,\n  PrefetchKind,\n} from '../../client/components/router-reducer/router-reducer-types'\nimport type {\n  FlightRouterState,\n  FlightSegmentPath,\n} from '../../server/app-render/types'\nimport React from 'react'\n\nexport type ChildSegmentMap = Map<string, CacheNode>\n\n/**\n * Cache node used in app-router / layout-router.\n */\nexport type CacheNode = ReadyCacheNode | LazyCacheNode\n\nexport type LoadingModuleData =\n  | [React.JSX.Element, React.ReactNode, React.ReactNode]\n  | null\n\n/** viewport metadata node */\nexport type HeadData = React.ReactNode\n\nexport type LazyCacheNode = {\n  /**\n   * When rsc is null, this is a lazily-initialized cache node.\n   *\n   * If the app attempts to render it, it triggers a lazy data fetch,\n   * postpones the render, and schedules an update to a new tree.\n   *\n   * TODO: This mechanism should not be used when PPR is enabled, though it\n   * currently is in some cases until we've implemented partial\n   * segment fetching.\n   */\n  rsc: null\n\n  /**\n   * A prefetched version of the segment data. See explanation in corresponding\n   * field of ReadyCacheNode (below).\n   *\n   * Since LazyCacheNode mostly only exists in the non-PPR implementation, this\n   * will usually be null, but it could have been cloned from a previous\n   * CacheNode that was created by the PPR implementation. Eventually we want\n   * to migrate everything away from LazyCacheNode entirely.\n   */\n  prefetchRsc: React.ReactNode\n\n  /**\n   * A pending response for the lazy data fetch. If this is not present\n   * during render, it is lazily created.\n   */\n  lazyData: Promise<FetchServerResponseResult> | null\n\n  prefetchHead: HeadData | null\n\n  head: HeadData\n\n  loading: LoadingModuleData | Promise<LoadingModuleData>\n\n  /**\n   * Child parallel routes.\n   */\n  parallelRoutes: Map<string, ChildSegmentMap>\n\n  /**\n   * The timestamp of the navigation that last updated the CacheNode's data. If\n   * a CacheNode is reused from a previous navigation, this value is not\n   * updated. Used to track the staleness of the data.\n   */\n  navigatedAt: number\n}\n\nexport type ReadyCacheNode = {\n  /**\n   * When rsc is not null, it represents the RSC data for the\n   * corresponding segment.\n   *\n   * `null` is a valid React Node but because segment data is always a\n   * <LayoutRouter> component, we can use `null` to represent empty.\n   *\n   * TODO: For additional type safety, update this type to\n   * Exclude<React.ReactNode, null>. Need to update createEmptyCacheNode to\n   * accept rsc as an argument, or just inline the callers.\n   */\n  rsc: React.ReactNode\n\n  /**\n   * Represents a static version of the segment that can be shown immediately,\n   * and may or may not contain dynamic holes. It's prefetched before a\n   * navigation occurs.\n   *\n   * During rendering, we will choose whether to render `rsc` or `prefetchRsc`\n   * with `useDeferredValue`. As with the `rsc` field, a value of `null` means\n   * no value was provided. In this case, the LayoutRouter will go straight to\n   * rendering the `rsc` value; if that one is also missing, it will suspend and\n   * trigger a lazy fetch.\n   */\n  prefetchRsc: React.ReactNode\n\n  /**\n   * There should never be a lazy data request in this case.\n   */\n  lazyData: null\n  prefetchHead: HeadData | null\n\n  head: HeadData\n\n  loading: LoadingModuleData | Promise<LoadingModuleData>\n\n  parallelRoutes: Map<string, ChildSegmentMap>\n\n  navigatedAt: number\n}\n\nexport interface NavigateOptions {\n  scroll?: boolean\n}\n\nexport interface PrefetchOptions {\n  kind: PrefetchKind\n}\n\nexport interface AppRouterInstance {\n  /**\n   * Navigate to the previous history entry.\n   */\n  back(): void\n  /**\n   * Navigate to the next history entry.\n   */\n  forward(): void\n  /**\n   * Refresh the current page.\n   */\n  refresh(): void\n  /**\n   * Refresh the current page. Use in development only.\n   * @internal\n   */\n  hmrRefresh(): void\n  /**\n   * Navigate to the provided href.\n   * Pushes a new history entry.\n   */\n  push(href: string, options?: NavigateOptions): void\n  /**\n   * Navigate to the provided href.\n   * Replaces the current history entry.\n   */\n  replace(href: string, options?: NavigateOptions): void\n  /**\n   * Prefetch the provided href.\n   */\n  prefetch(href: string, options?: PrefetchOptions): void\n}\n\nexport const AppRouterContext = React.createContext<AppRouterInstance | null>(\n  null\n)\nexport const LayoutRouterContext = React.createContext<{\n  parentTree: FlightRouterState\n  parentCacheNode: CacheNode\n  parentSegmentPath: FlightSegmentPath | null\n  url: string\n} | null>(null)\n\nexport const GlobalLayoutRouterContext = React.createContext<{\n  tree: FlightRouterState\n  focusAndScrollRef: FocusAndScrollRef\n  nextUrl: string | null\n}>(null as any)\n\nexport const TemplateContext = React.createContext<React.ReactNode>(null as any)\n\nif (process.env.NODE_ENV !== 'production') {\n  AppRouterContext.displayName = 'AppRouterContext'\n  LayoutRouterContext.displayName = 'LayoutRouterContext'\n  GlobalLayoutRouterContext.displayName = 'GlobalLayoutRouterContext'\n  TemplateContext.displayName = 'TemplateContext'\n}\n\nexport const MissingSlotContext = React.createContext<Set<string>>(new Set())\n","// the name of the export has to be the camelCase version of the file name (without the extension)\n// TODO: remove this. We need it because using notFound from next/navigation imports this file :(\nexport * as appRouterContext from '../../../shared/lib/app-router-context.shared-runtime';\n\n//# sourceMappingURL=shared-modules.js.map","import { ACTION_HEADER } from '../../client/components/app-router-headers';\nexport function getServerActionRequestMetadata(req) {\n    let actionId;\n    let contentType;\n    if (req.headers instanceof Headers) {\n        actionId = req.headers.get(ACTION_HEADER.toLowerCase()) ?? null;\n        contentType = req.headers.get('content-type');\n    } else {\n        actionId = req.headers[ACTION_HEADER.toLowerCase()] ?? null;\n        contentType = req.headers['content-type'] ?? null;\n    }\n    const isURLEncodedAction = Boolean(req.method === 'POST' && contentType === 'application/x-www-form-urlencoded');\n    const isMultipartAction = Boolean(req.method === 'POST' && (contentType == null ? void 0 : contentType.startsWith('multipart/form-data')));\n    const isFetchAction = Boolean(actionId !== undefined && typeof actionId === 'string' && req.method === 'POST');\n    const isPossibleServerAction = Boolean(isFetchAction || isURLEncodedAction || isMultipartAction);\n    return {\n        actionId,\n        isURLEncodedAction,\n        isMultipartAction,\n        isFetchAction,\n        isPossibleServerAction\n    };\n}\nexport function getIsPossibleServerAction(req) {\n    return getServerActionRequestMetadata(req).isPossibleServerAction;\n}\n\n//# sourceMappingURL=server-action-request-meta.js.map","/**\n * Cleans a URL by stripping the protocol, host, and search params.\n *\n * @param urlString the url to clean\n * @returns the cleaned url\n */ export function cleanURL(url) {\n    const u = new URL(url);\n    u.host = 'localhost:3000';\n    u.search = '';\n    u.protocol = 'http';\n    return u;\n}\n\n//# sourceMappingURL=clean-url.js.map","// route handlers are only statically optimized if they define\n// one of these top-level configs manually\n//   - dynamic = 'force-static'\n//   - dynamic = 'error'\n//   - revalidate > 0\n//   - revalidate = false\n//   - generateStaticParams\nexport function isStaticGenEnabled(mod) {\n    return mod.dynamic === 'force-static' || mod.dynamic === 'error' || mod.revalidate === false || mod.revalidate !== undefined && mod.revalidate > 0 || typeof mod.generateStaticParams == 'function';\n}\n\n//# sourceMappingURL=is-static-gen-enabled.js.map","/**\n * This class is used to detect when all cache reads for a given render are settled.\n * We do this to allow for cache warming the prerender without having to continue rendering\n * the remainder of the page. This feature is really only useful when the dynamicIO flag is on\n * and should only be used in codepaths gated with this feature.\n */ export class CacheSignal {\n    constructor(){\n        this.count = 0;\n        this.earlyListeners = [];\n        this.listeners = [];\n        this.tickPending = false;\n        this.taskPending = false;\n    }\n    noMorePendingCaches() {\n        if (!this.tickPending) {\n            this.tickPending = true;\n            process.nextTick(()=>{\n                this.tickPending = false;\n                if (this.count === 0) {\n                    for(let i = 0; i < this.earlyListeners.length; i++){\n                        this.earlyListeners[i]();\n                    }\n                    this.earlyListeners.length = 0;\n                }\n            });\n        }\n        if (!this.taskPending) {\n            this.taskPending = true;\n            setTimeout(()=>{\n                this.taskPending = false;\n                if (this.count === 0) {\n                    for(let i = 0; i < this.listeners.length; i++){\n                        this.listeners[i]();\n                    }\n                    this.listeners.length = 0;\n                }\n            }, 0);\n        }\n    }\n    /**\n   * This promise waits until there are no more in progress cache reads but no later.\n   * This allows for adding more cache reads after to delay cacheReady.\n   */ inputReady() {\n        return new Promise((resolve)=>{\n            this.earlyListeners.push(resolve);\n            if (this.count === 0) {\n                this.noMorePendingCaches();\n            }\n        });\n    }\n    /**\n   * If there are inflight cache reads this Promise can resolve in a microtask however\n   * if there are no inflight cache reads then we wait at least one task to allow initial\n   * cache reads to be initiated.\n   */ cacheReady() {\n        return new Promise((resolve)=>{\n            this.listeners.push(resolve);\n            if (this.count === 0) {\n                this.noMorePendingCaches();\n            }\n        });\n    }\n    beginRead() {\n        this.count++;\n    }\n    endRead() {\n        // If this is the last read we need to wait a task before we can claim the cache is settled.\n        // The cache read will likely ping a Server Component which can read from the cache again and this\n        // will play out in a microtask so we need to only resolve pending listeners if we're still at 0\n        // after at least one task.\n        // We only want one task scheduled at a time so when we hit count 1 we don't decrement the counter immediately.\n        // If intervening reads happen before the scheduled task runs they will never observe count 1 preventing reentrency\n        this.count--;\n        if (this.count === 0) {\n            this.noMorePendingCaches();\n        }\n    }\n}\n\n//# sourceMappingURL=cache-signal.js.map","// This regex will have fast negatives meaning valid identifiers may not pass\n// this test. However this is only used during static generation to provide hints\n// about why a page bailed out of some or all prerendering and we can use bracket notation\n// for example while `ಠ_ಠ` is a valid identifier it's ok to print `searchParams['ಠ_ಠ']`\n// even if this would have been fine too `searchParams.ಠ_ಠ`\nconst isDefinitelyAValidIdentifier = /^[A-Za-z_$][A-Za-z0-9_$]*$/\n\nexport function describeStringPropertyAccess(target: string, prop: string) {\n  if (isDefinitelyAValidIdentifier.test(prop)) {\n    return `\\`${target}.${prop}\\``\n  }\n  return `\\`${target}[${JSON.stringify(prop)}]\\``\n}\n\nexport function describeHasCheckingStringProperty(\n  target: string,\n  prop: string\n) {\n  const stringifiedProp = JSON.stringify(prop)\n  return `\\`Reflect.has(${target}, ${stringifiedProp})\\`, \\`${stringifiedProp} in ${target}\\`, or similar`\n}\n\nexport const wellKnownProperties = new Set([\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toString',\n  'valueOf',\n  'toLocaleString',\n\n  // Promise prototype\n  // fallthrough\n  'then',\n  'catch',\n  'finally',\n\n  // React Promise extension\n  // fallthrough\n  'status',\n\n  // React introspection\n  'displayName',\n\n  // Common tested properties\n  // fallthrough\n  'toJSON',\n  '$$typeof',\n  '__esModule',\n])\n","import { ReflectAdapter } from '../web/spec-extension/adapters/reflect';\nimport { abortAndThrowOnSynchronousRequestDataAccess, throwToInterruptStaticGeneration, postponeWithTracking, trackSynchronousRequestDataAccessInDev } from '../app-render/dynamic-rendering';\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nimport { describeStringPropertyAccess, wellKnownProperties } from '../../shared/lib/utils/reflect-utils';\nimport { makeHangingPromise } from '../dynamic-rendering-utils';\nimport { createDedupedByCallsiteServerErrorLoggerDev } from '../create-deduped-by-callsite-server-error-logger';\nimport { scheduleImmediate } from '../../lib/scheduler';\nexport function createParamsFromClient(underlyingParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createPrerenderParams(underlyingParams, workStore, workUnitStore);\n            default:\n        }\n    }\n    return createRenderParams(underlyingParams, workStore);\n}\nexport const createServerParamsForMetadata = createServerParamsForServerSegment;\n// routes always runs in RSC context so it is equivalent to a Server Page Component\nexport function createServerParamsForRoute(underlyingParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createPrerenderParams(underlyingParams, workStore, workUnitStore);\n            default:\n        }\n    }\n    return createRenderParams(underlyingParams, workStore);\n}\nexport function createServerParamsForServerSegment(underlyingParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createPrerenderParams(underlyingParams, workStore, workUnitStore);\n            default:\n        }\n    }\n    return createRenderParams(underlyingParams, workStore);\n}\nexport function createPrerenderParamsForClientSegment(underlyingParams, workStore) {\n    const prerenderStore = workUnitAsyncStorage.getStore();\n    if (prerenderStore && prerenderStore.type === 'prerender') {\n        const fallbackParams = workStore.fallbackRouteParams;\n        if (fallbackParams) {\n            for(let key in underlyingParams){\n                if (fallbackParams.has(key)) {\n                    // This params object has one of more fallback params so we need to consider\n                    // the awaiting of this params object \"dynamic\". Since we are in dynamicIO mode\n                    // we encode this as a promise that never resolves\n                    return makeHangingPromise(prerenderStore.renderSignal, '`params`');\n                }\n            }\n        }\n    }\n    // We're prerendering in a mode that does not abort. We resolve the promise without\n    // any tracking because we're just transporting a value from server to client where the tracking\n    // will be applied.\n    return Promise.resolve(underlyingParams);\n}\nfunction createPrerenderParams(underlyingParams, workStore, prerenderStore) {\n    const fallbackParams = workStore.fallbackRouteParams;\n    if (fallbackParams) {\n        let hasSomeFallbackParams = false;\n        for(const key in underlyingParams){\n            if (fallbackParams.has(key)) {\n                hasSomeFallbackParams = true;\n                break;\n            }\n        }\n        if (hasSomeFallbackParams) {\n            // params need to be treated as dynamic because we have at least one fallback param\n            if (prerenderStore.type === 'prerender') {\n                // We are in a dynamicIO (PPR or otherwise) prerender\n                return makeAbortingExoticParams(underlyingParams, workStore.route, prerenderStore);\n            }\n            // remaining cases are prerender-ppr and prerender-legacy\n            // We aren't in a dynamicIO prerender but we do have fallback params at this\n            // level so we need to make an erroring exotic params object which will postpone\n            // if you access the fallback params\n            return makeErroringExoticParams(underlyingParams, fallbackParams, workStore, prerenderStore);\n        }\n    }\n    // We don't have any fallback params so we have an entirely static safe params object\n    return makeUntrackedExoticParams(underlyingParams);\n}\nfunction createRenderParams(underlyingParams, workStore) {\n    if (process.env.NODE_ENV === 'development' && !workStore.isPrefetchRequest) {\n        return makeDynamicallyTrackedExoticParamsWithDevWarnings(underlyingParams, workStore);\n    } else {\n        return makeUntrackedExoticParams(underlyingParams);\n    }\n}\nconst CachedParams = new WeakMap();\nfunction makeAbortingExoticParams(underlyingParams, route, prerenderStore) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    const promise = makeHangingPromise(prerenderStore.renderSignal, '`params`');\n    CachedParams.set(underlyingParams, promise);\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n        // These properties cannot be shadowed because they need to be the\n        // true underlying value for Promises to work correctly at runtime\n        } else {\n            Object.defineProperty(promise, prop, {\n                get () {\n                    const expression = describeStringPropertyAccess('params', prop);\n                    const error = createParamsAccessError(route, expression);\n                    abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n                },\n                set (newValue) {\n                    Object.defineProperty(promise, prop, {\n                        value: newValue,\n                        writable: true,\n                        enumerable: true\n                    });\n                },\n                enumerable: true,\n                configurable: true\n            });\n        }\n    });\n    return promise;\n}\nfunction makeErroringExoticParams(underlyingParams, fallbackParams, workStore, prerenderStore) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    const augmentedUnderlying = {\n        ...underlyingParams\n    };\n    // We don't use makeResolvedReactPromise here because params\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = Promise.resolve(augmentedUnderlying);\n    CachedParams.set(underlyingParams, promise);\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n        // These properties cannot be shadowed because they need to be the\n        // true underlying value for Promises to work correctly at runtime\n        } else {\n            if (fallbackParams.has(prop)) {\n                Object.defineProperty(augmentedUnderlying, prop, {\n                    get () {\n                        const expression = describeStringPropertyAccess('params', prop);\n                        // In most dynamic APIs we also throw if `dynamic = \"error\"` however\n                        // for params is only dynamic when we're generating a fallback shell\n                        // and even when `dynamic = \"error\"` we still support generating dynamic\n                        // fallback shells\n                        // TODO remove this comment when dynamicIO is the default since there\n                        // will be no `dynamic = \"error\"`\n                        if (prerenderStore.type === 'prerender-ppr') {\n                            // PPR Prerender (no dynamicIO)\n                            postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                        } else {\n                            // Legacy Prerender\n                            throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                        }\n                    },\n                    enumerable: true\n                });\n                Object.defineProperty(promise, prop, {\n                    get () {\n                        const expression = describeStringPropertyAccess('params', prop);\n                        // In most dynamic APIs we also throw if `dynamic = \"error\"` however\n                        // for params is only dynamic when we're generating a fallback shell\n                        // and even when `dynamic = \"error\"` we still support generating dynamic\n                        // fallback shells\n                        // TODO remove this comment when dynamicIO is the default since there\n                        // will be no `dynamic = \"error\"`\n                        if (prerenderStore.type === 'prerender-ppr') {\n                            // PPR Prerender (no dynamicIO)\n                            postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                        } else {\n                            // Legacy Prerender\n                            throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                        }\n                    },\n                    set (newValue) {\n                        Object.defineProperty(promise, prop, {\n                            value: newValue,\n                            writable: true,\n                            enumerable: true\n                        });\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n            } else {\n                ;\n                promise[prop] = underlyingParams[prop];\n            }\n        }\n    });\n    return promise;\n}\nfunction makeUntrackedExoticParams(underlyingParams) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    // We don't use makeResolvedReactPromise here because params\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = Promise.resolve(underlyingParams);\n    CachedParams.set(underlyingParams, promise);\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n        // These properties cannot be shadowed because they need to be the\n        // true underlying value for Promises to work correctly at runtime\n        } else {\n            ;\n            promise[prop] = underlyingParams[prop];\n        }\n    });\n    return promise;\n}\nfunction makeDynamicallyTrackedExoticParamsWithDevWarnings(underlyingParams, store) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    // We don't use makeResolvedReactPromise here because params\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = new Promise((resolve)=>scheduleImmediate(()=>resolve(underlyingParams)));\n    const proxiedProperties = new Set();\n    const unproxiedProperties = [];\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n            // These properties cannot be shadowed because they need to be the\n            // true underlying value for Promises to work correctly at runtime\n            unproxiedProperties.push(prop);\n        } else {\n            proxiedProperties.add(prop);\n            promise[prop] = underlyingParams[prop];\n        }\n    });\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (typeof prop === 'string') {\n                if (// We are accessing a property that was proxied to the promise instance\n                proxiedProperties.has(prop)) {\n                    const expression = describeStringPropertyAccess('params', prop);\n                    syncIODev(store.route, expression);\n                }\n            }\n            return ReflectAdapter.get(target, prop, receiver);\n        },\n        set (target, prop, value, receiver) {\n            if (typeof prop === 'string') {\n                proxiedProperties.delete(prop);\n            }\n            return ReflectAdapter.set(target, prop, value, receiver);\n        },\n        ownKeys (target) {\n            const expression = '`...params` or similar expression';\n            syncIODev(store.route, expression, unproxiedProperties);\n            return Reflect.ownKeys(target);\n        }\n    });\n    CachedParams.set(underlyingParams, proxiedPromise);\n    return proxiedPromise;\n}\nfunction syncIODev(route, expression, missingProperties) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore && workUnitStore.type === 'request' && workUnitStore.prerenderPhase === true) {\n        // When we're rendering dynamically in dev we need to advance out of the\n        // Prerender environment when we read Request data synchronously\n        const requestStore = workUnitStore;\n        trackSynchronousRequestDataAccessInDev(requestStore);\n    }\n    // In all cases we warn normally\n    if (missingProperties && missingProperties.length > 0) {\n        warnForIncompleteEnumeration(route, expression, missingProperties);\n    } else {\n        warnForSyncAccess(route, expression);\n    }\n}\nconst warnForSyncAccess = createDedupedByCallsiteServerErrorLoggerDev(createParamsAccessError);\nconst warnForIncompleteEnumeration = createDedupedByCallsiteServerErrorLoggerDev(createIncompleteEnumerationError);\nfunction createParamsAccessError(route, expression) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return Object.defineProperty(new Error(`${prefix}used ${expression}. ` + `\\`params\\` should be awaited before using its properties. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`), \"__NEXT_ERROR_CODE\", {\n        value: \"E307\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction createIncompleteEnumerationError(route, expression, missingProperties) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return Object.defineProperty(new Error(`${prefix}used ${expression}. ` + `\\`params\\` should be awaited before using its properties. ` + `The following properties were not available through enumeration ` + `because they conflict with builtin property names: ` + `${describeListOfPropertyNames(missingProperties)}. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`), \"__NEXT_ERROR_CODE\", {\n        value: \"E482\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction describeListOfPropertyNames(properties) {\n    switch(properties.length){\n        case 0:\n            throw Object.defineProperty(new InvariantError('Expected describeListOfPropertyNames to be called with a non-empty list of strings.'), \"__NEXT_ERROR_CODE\", {\n                value: \"E531\",\n                enumerable: false,\n                configurable: true\n            });\n        case 1:\n            return `\\`${properties[0]}\\``;\n        case 2:\n            return `\\`${properties[0]}\\` and \\`${properties[1]}\\``;\n        default:\n            {\n                let description = '';\n                for(let i = 0; i < properties.length - 1; i++){\n                    description += `\\`${properties[i]}\\`, `;\n                }\n                description += `, and \\`${properties[properties.length - 1]}\\``;\n                return description;\n            }\n    }\n}\n\n//# sourceMappingURL=params.js.map","import { RedirectStatusCode } from './redirect-status-code'\nimport {\n  RedirectType,\n  type RedirectError,\n  isRedirectError,\n  REDIRECT_ERROR_CODE,\n} from './redirect-error'\n\nconst actionAsyncStorage =\n  typeof window === 'undefined'\n    ? (\n        require('../../server/app-render/action-async-storage.external') as typeof import('../../server/app-render/action-async-storage.external')\n      ).actionAsyncStorage\n    : undefined\n\nexport function getRedirectError(\n  url: string,\n  type: RedirectType,\n  statusCode: RedirectStatusCode = RedirectStatusCode.TemporaryRedirect\n): RedirectError {\n  const error = new Error(REDIRECT_ERROR_CODE) as RedirectError\n  error.digest = `${REDIRECT_ERROR_CODE};${type};${url};${statusCode};`\n  return error\n}\n\n/**\n * This function allows you to redirect the user to another URL. It can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a meta tag to redirect the user to the target page.\n * - In a Route Handler or Server Action, it will serve a 307/303 to the caller.\n * - In a Server Action, type defaults to 'push' and 'replace' elsewhere.\n *\n * Read more: [Next.js Docs: `redirect`](https://nextjs.org/docs/app/api-reference/functions/redirect)\n */\nexport function redirect(\n  /** The URL to redirect to */\n  url: string,\n  type?: RedirectType\n): never {\n  type ??= actionAsyncStorage?.getStore()?.isAction\n    ? RedirectType.push\n    : RedirectType.replace\n\n  throw getRedirectError(url, type, RedirectStatusCode.TemporaryRedirect)\n}\n\n/**\n * This function allows you to redirect the user to another URL. It can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a meta tag to redirect the user to the target page.\n * - In a Route Handler or Server Action, it will serve a 308/303 to the caller.\n *\n * Read more: [Next.js Docs: `redirect`](https://nextjs.org/docs/app/api-reference/functions/redirect)\n */\nexport function permanentRedirect(\n  /** The URL to redirect to */\n  url: string,\n  type: RedirectType = RedirectType.replace\n): never {\n  throw getRedirectError(url, type, RedirectStatusCode.PermanentRedirect)\n}\n\n/**\n * Returns the encoded URL from the error if it's a RedirectError, null\n * otherwise. Note that this does not validate the URL returned.\n *\n * @param error the error that may be a redirect error\n * @return the url if the error was a redirect error\n */\nexport function getURLFromRedirectError(error: RedirectError): string\nexport function getURLFromRedirectError(error: unknown): string | null {\n  if (!isRedirectError(error)) return null\n\n  // Slices off the beginning of the digest that contains the code and the\n  // separating ';'.\n  return error.digest.split(';').slice(2, -2).join(';')\n}\n\nexport function getRedirectTypeFromError(error: RedirectError): RedirectType {\n  if (!isRedirectError(error)) {\n    throw new Error('Not a redirect error')\n  }\n\n  return error.digest.split(';', 2)[1] as RedirectType\n}\n\nexport function getRedirectStatusCodeFromError(error: RedirectError): number {\n  if (!isRedirectError(error)) {\n    throw new Error('Not a redirect error')\n  }\n\n  return Number(error.digest.split(';').at(-2))\n}\n","import { RouteModule } from '../route-module';\nimport { createRequestStoreForAPI } from '../../async-storage/request-store';\nimport { createWorkStore } from '../../async-storage/work-store';\nimport { HTTP_METHODS, isHTTPMethod } from '../../web/http';\nimport { getImplicitTags } from '../../lib/implicit-tags';\nimport { patchFetch } from '../../lib/patch-fetch';\nimport { getTracer } from '../../lib/trace/tracer';\nimport { AppRouteRouteHandlersSpan } from '../../lib/trace/constants';\nimport { getPathnameFromAbsolutePath } from './helpers/get-pathname-from-absolute-path';\nimport * as Log from '../../../build/output/log';\nimport { autoImplementMethods } from './helpers/auto-implement-methods';\nimport { appendMutableCookies } from '../../web/spec-extension/adapters/request-cookies';\nimport { HeadersAdapter } from '../../web/spec-extension/adapters/headers';\nimport { RequestCookiesAdapter } from '../../web/spec-extension/adapters/request-cookies';\nimport { parsedUrlQueryToParams } from './helpers/parsed-url-query-to-params';\nimport { printDebugThrownValueForProspectiveRender } from '../../app-render/prospective-render-utils';\nimport * as serverHooks from '../../../client/components/hooks-server-context';\nimport { DynamicServerError } from '../../../client/components/hooks-server-context';\nimport { workAsyncStorage } from '../../app-render/work-async-storage.external';\nimport { workUnitAsyncStorage } from '../../app-render/work-unit-async-storage.external';\nimport { actionAsyncStorage } from '../../app-render/action-async-storage.external';\nimport * as sharedModules from './shared-modules';\nimport { getIsPossibleServerAction } from '../../lib/server-action-request-meta';\nimport { RequestCookies } from 'next/dist/compiled/@edge-runtime/cookies';\nimport { cleanURL } from './helpers/clean-url';\nimport { StaticGenBailoutError } from '../../../client/components/static-generation-bailout';\nimport { isStaticGenEnabled } from './helpers/is-static-gen-enabled';\nimport { abortAndThrowOnSynchronousRequestDataAccess, postponeWithTracking, createDynamicTrackingState, getFirstDynamicReason } from '../../app-render/dynamic-rendering';\nimport { ReflectAdapter } from '../../web/spec-extension/adapters/reflect';\nimport { CacheSignal } from '../../app-render/cache-signal';\nimport { scheduleImmediate } from '../../../lib/scheduler';\nimport { createServerParamsForRoute } from '../../request/params';\nimport { getRedirectStatusCodeFromError, getURLFromRedirectError } from '../../../client/components/redirect';\nimport { isRedirectError } from '../../../client/components/redirect-error';\nimport { getAccessFallbackHTTPStatus, isHTTPAccessFallbackError } from '../../../client/components/http-access-fallback/http-access-fallback';\nimport { RedirectStatusCode } from '../../../client/components/redirect-status-code';\nimport { INFINITE_CACHE } from '../../../lib/constants';\nimport { executeRevalidates } from '../../revalidation-utils';\nexport class WrappedNextRouterError {\n    constructor(error, headers){\n        this.error = error;\n        this.headers = headers;\n    }\n}\n/**\n * AppRouteRouteHandler is the handler for app routes.\n */ export class AppRouteRouteModule extends RouteModule {\n    static #_ = this.sharedModules = sharedModules;\n    constructor({ userland, definition, resolvedPagePath, nextConfigOutput }){\n        super({\n            userland,\n            definition\n        }), /**\n   * A reference to the request async storage.\n   */ this.workUnitAsyncStorage = workUnitAsyncStorage, /**\n   * A reference to the static generation async storage.\n   */ this.workAsyncStorage = workAsyncStorage, /**\n   * An interface to call server hooks which interact with the underlying\n   * storage.\n   */ this.serverHooks = serverHooks, /**\n   * A reference to the mutation related async storage, such as mutations of\n   * cookies.\n   */ this.actionAsyncStorage = actionAsyncStorage;\n        this.resolvedPagePath = resolvedPagePath;\n        this.nextConfigOutput = nextConfigOutput;\n        // Automatically implement some methods if they aren't implemented by the\n        // userland module.\n        this.methods = autoImplementMethods(userland);\n        // Get the non-static methods for this route.\n        this.hasNonStaticMethods = hasNonStaticMethods(userland);\n        // Get the dynamic property from the userland module.\n        this.dynamic = this.userland.dynamic;\n        if (this.nextConfigOutput === 'export') {\n            if (this.dynamic === 'force-dynamic') {\n                throw Object.defineProperty(new Error(`export const dynamic = \"force-dynamic\" on page \"${definition.pathname}\" cannot be used with \"output: export\". See more info here: https://nextjs.org/docs/advanced-features/static-html-export`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E278\",\n                    enumerable: false,\n                    configurable: true\n                });\n            } else if (!isStaticGenEnabled(this.userland) && this.userland['GET']) {\n                throw Object.defineProperty(new Error(`export const dynamic = \"force-static\"/export const revalidate not configured on route \"${definition.pathname}\" with \"output: export\". See more info here: https://nextjs.org/docs/advanced-features/static-html-export`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E301\",\n                    enumerable: false,\n                    configurable: true\n                });\n            } else {\n                this.dynamic = 'error';\n            }\n        }\n        // We only warn in development after here, so return if we're not in\n        // development.\n        if (process.env.NODE_ENV === 'development') {\n            // Print error in development if the exported handlers are in lowercase, only\n            // uppercase handlers are supported.\n            const lowercased = HTTP_METHODS.map((method)=>method.toLowerCase());\n            for (const method of lowercased){\n                if (method in this.userland) {\n                    Log.error(`Detected lowercase method '${method}' in '${this.resolvedPagePath}'. Export the uppercase '${method.toUpperCase()}' method name to fix this error.`);\n                }\n            }\n            // Print error if the module exports a default handler, they must use named\n            // exports for each HTTP method.\n            if ('default' in this.userland) {\n                Log.error(`Detected default export in '${this.resolvedPagePath}'. Export a named export for each HTTP method instead.`);\n            }\n            // If there is no methods exported by this module, then return a not found\n            // response.\n            if (!HTTP_METHODS.some((method)=>method in this.userland)) {\n                Log.error(`No HTTP methods exported in '${this.resolvedPagePath}'. Export a named export for each HTTP method.`);\n            }\n        }\n    }\n    /**\n   * Resolves the handler function for the given method.\n   *\n   * @param method the requested method\n   * @returns the handler function for the given method\n   */ resolve(method) {\n        // Ensure that the requested method is a valid method (to prevent RCE's).\n        if (!isHTTPMethod(method)) return ()=>new Response(null, {\n                status: 400\n            });\n        // Return the handler.\n        return this.methods[method];\n    }\n    async do(handler, actionStore, workStore, // @TODO refactor to not take this argument but instead construct the RequestStore\n    // inside this function. Right now we get passed a RequestStore even when\n    // we're going to do a prerender. We should probably just split do up into prexecute and execute\n    requestStore, implicitTags, request, context) {\n        var _context_renderOpts_experimental;\n        const isStaticGeneration = workStore.isStaticGeneration;\n        const dynamicIOEnabled = !!((_context_renderOpts_experimental = context.renderOpts.experimental) == null ? void 0 : _context_renderOpts_experimental.dynamicIO);\n        // Patch the global fetch.\n        patchFetch({\n            workAsyncStorage: this.workAsyncStorage,\n            workUnitAsyncStorage: this.workUnitAsyncStorage\n        });\n        const handlerContext = {\n            params: context.params ? createServerParamsForRoute(parsedUrlQueryToParams(context.params), workStore) : undefined\n        };\n        const resolvePendingRevalidations = ()=>{\n            context.renderOpts.pendingWaitUntil = executeRevalidates(workStore).finally(()=>{\n                if (process.env.NEXT_PRIVATE_DEBUG_CACHE) {\n                    console.log('pending revalidates promise finished for:', requestStore.url);\n                }\n            });\n        };\n        let prerenderStore = null;\n        let res;\n        try {\n            if (isStaticGeneration) {\n                const userlandRevalidate = this.userland.revalidate;\n                const defaultRevalidate = // If the static generation store does not have a revalidate value\n                // set, then we should set it the revalidate value from the userland\n                // module or default to false.\n                userlandRevalidate === false || userlandRevalidate === undefined ? INFINITE_CACHE : userlandRevalidate;\n                if (dynamicIOEnabled) {\n                    /**\n           * When we are attempting to statically prerender the GET handler of a route.ts module\n           * and dynamicIO is on we follow a similar pattern to rendering.\n           *\n           * We first run the handler letting caches fill. If something synchronously dynamic occurs\n           * during this prospective render then we can infer it will happen on every render and we\n           * just bail out of prerendering.\n           *\n           * Next we run the handler again and we check if we get a result back in a microtask.\n           * Next.js expects the return value to be a Response or a Thenable that resolves to a Response.\n           * Unfortunately Response's do not allow for accessing the response body synchronously or in\n           * a microtask so we need to allow one more task to unwrap the response body. This is a slightly\n           * different semantic than what we have when we render and it means that certain tasks can still\n           * execute before a prerender completes such as a carefully timed setImmediate.\n           *\n           * Functionally though IO should still take longer than the time it takes to unwrap the response body\n           * so our heuristic of excluding any IO should be preserved.\n           */ const prospectiveController = new AbortController();\n                    let prospectiveRenderIsDynamic = false;\n                    const cacheSignal = new CacheSignal();\n                    let dynamicTracking = createDynamicTrackingState(undefined);\n                    const prospectiveRoutePrerenderStore = prerenderStore = {\n                        type: 'prerender',\n                        phase: 'action',\n                        // This replicates prior behavior where rootParams is empty in routes\n                        // TODO we need to make this have the proper rootParams for this route\n                        rootParams: {},\n                        implicitTags,\n                        renderSignal: prospectiveController.signal,\n                        controller: prospectiveController,\n                        cacheSignal,\n                        // During prospective render we don't use a controller\n                        // because we need to let all caches fill.\n                        dynamicTracking,\n                        revalidate: defaultRevalidate,\n                        expire: INFINITE_CACHE,\n                        stale: INFINITE_CACHE,\n                        tags: [\n                            ...implicitTags.tags\n                        ],\n                        prerenderResumeDataCache: null,\n                        hmrRefreshHash: undefined\n                    };\n                    let prospectiveResult;\n                    try {\n                        prospectiveResult = this.workUnitAsyncStorage.run(prospectiveRoutePrerenderStore, handler, request, handlerContext);\n                    } catch (err) {\n                        if (prospectiveController.signal.aborted) {\n                            // the route handler called an API which is always dynamic\n                            // there is no need to try again\n                            prospectiveRenderIsDynamic = true;\n                        } else if (process.env.NEXT_DEBUG_BUILD || process.env.__NEXT_VERBOSE_LOGGING) {\n                            printDebugThrownValueForProspectiveRender(err, workStore.route);\n                        }\n                    }\n                    if (typeof prospectiveResult === 'object' && prospectiveResult !== null && typeof prospectiveResult.then === 'function') {\n                        // The handler returned a Thenable. We'll listen for rejections to determine\n                        // if the route is erroring for dynamic reasons.\n                        ;\n                        prospectiveResult.then(()=>{}, (err)=>{\n                            if (prospectiveController.signal.aborted) {\n                                // the route handler called an API which is always dynamic\n                                // there is no need to try again\n                                prospectiveRenderIsDynamic = true;\n                            } else if (process.env.NEXT_DEBUG_BUILD) {\n                                printDebugThrownValueForProspectiveRender(err, workStore.route);\n                            }\n                        });\n                    }\n                    await cacheSignal.cacheReady();\n                    if (prospectiveRenderIsDynamic) {\n                        // the route handler called an API which is always dynamic\n                        // there is no need to try again\n                        const dynamicReason = getFirstDynamicReason(dynamicTracking);\n                        if (dynamicReason) {\n                            throw Object.defineProperty(new DynamicServerError(`Route ${workStore.route} couldn't be rendered statically because it used \\`${dynamicReason}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`), \"__NEXT_ERROR_CODE\", {\n                                value: \"E558\",\n                                enumerable: false,\n                                configurable: true\n                            });\n                        } else {\n                            console.error('Expected Next.js to keep track of reason for opting out of static rendering but one was not found. This is a bug in Next.js');\n                            throw Object.defineProperty(new DynamicServerError(`Route ${workStore.route} couldn't be rendered statically because it used a dynamic API. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`), \"__NEXT_ERROR_CODE\", {\n                                value: \"E577\",\n                                enumerable: false,\n                                configurable: true\n                            });\n                        }\n                    }\n                    // TODO start passing this controller to the route handler. We should expose\n                    // it so the handler to abort inflight requests and other operations if we abort\n                    // the prerender.\n                    const finalController = new AbortController();\n                    dynamicTracking = createDynamicTrackingState(undefined);\n                    const finalRoutePrerenderStore = prerenderStore = {\n                        type: 'prerender',\n                        phase: 'action',\n                        rootParams: {},\n                        implicitTags,\n                        renderSignal: finalController.signal,\n                        controller: finalController,\n                        cacheSignal: null,\n                        dynamicTracking,\n                        revalidate: defaultRevalidate,\n                        expire: INFINITE_CACHE,\n                        stale: INFINITE_CACHE,\n                        tags: [\n                            ...implicitTags.tags\n                        ],\n                        prerenderResumeDataCache: null,\n                        hmrRefreshHash: undefined\n                    };\n                    let responseHandled = false;\n                    res = await new Promise((resolve, reject)=>{\n                        scheduleImmediate(async ()=>{\n                            try {\n                                const result = await this.workUnitAsyncStorage.run(finalRoutePrerenderStore, handler, request, handlerContext);\n                                if (responseHandled) {\n                                    // we already rejected in the followup task\n                                    return;\n                                } else if (!(result instanceof Response)) {\n                                    // This is going to error but we let that happen below\n                                    resolve(result);\n                                    return;\n                                }\n                                responseHandled = true;\n                                let bodyHandled = false;\n                                result.arrayBuffer().then((body)=>{\n                                    if (!bodyHandled) {\n                                        bodyHandled = true;\n                                        resolve(new Response(body, {\n                                            headers: result.headers,\n                                            status: result.status,\n                                            statusText: result.statusText\n                                        }));\n                                    }\n                                }, reject);\n                                scheduleImmediate(()=>{\n                                    if (!bodyHandled) {\n                                        bodyHandled = true;\n                                        finalController.abort();\n                                        reject(createDynamicIOError(workStore.route));\n                                    }\n                                });\n                            } catch (err) {\n                                reject(err);\n                            }\n                        });\n                        scheduleImmediate(()=>{\n                            if (!responseHandled) {\n                                responseHandled = true;\n                                finalController.abort();\n                                reject(createDynamicIOError(workStore.route));\n                            }\n                        });\n                    });\n                    if (finalController.signal.aborted) {\n                        // We aborted from within the execution\n                        throw createDynamicIOError(workStore.route);\n                    } else {\n                        // We didn't abort during the execution. We can abort now as a matter of semantics\n                        // though at the moment nothing actually consumes this signal so it won't halt any\n                        // inflight work.\n                        finalController.abort();\n                    }\n                } else {\n                    prerenderStore = {\n                        type: 'prerender-legacy',\n                        phase: 'action',\n                        rootParams: {},\n                        implicitTags,\n                        revalidate: defaultRevalidate,\n                        expire: INFINITE_CACHE,\n                        stale: INFINITE_CACHE,\n                        tags: [\n                            ...implicitTags.tags\n                        ]\n                    };\n                    res = await workUnitAsyncStorage.run(prerenderStore, handler, request, handlerContext);\n                }\n            } else {\n                res = await workUnitAsyncStorage.run(requestStore, handler, request, handlerContext);\n            }\n        } catch (err) {\n            if (isRedirectError(err)) {\n                const url = getURLFromRedirectError(err);\n                if (!url) {\n                    throw Object.defineProperty(new Error('Invariant: Unexpected redirect url format'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E399\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                // We need to capture any headers that should be sent on\n                // the response.\n                const headers = new Headers({\n                    Location: url\n                });\n                // Let's append any cookies that were added by the\n                // cookie API.\n                // TODO leaving the gate here b/c it indicates that we might not actually want to do this\n                // on every `do` call. During prerender there should be no mutableCookies because\n                if (requestStore.type === 'request') {\n                    appendMutableCookies(headers, requestStore.mutableCookies);\n                }\n                resolvePendingRevalidations();\n                // Return the redirect response.\n                return new Response(null, {\n                    // If we're in an action, we want to use a 303 redirect as we don't\n                    // want the POST request to follow the redirect, as it could result in\n                    // erroneous re-submissions.\n                    status: actionStore.isAction ? RedirectStatusCode.SeeOther : getRedirectStatusCodeFromError(err),\n                    headers\n                });\n            } else if (isHTTPAccessFallbackError(err)) {\n                const httpStatus = getAccessFallbackHTTPStatus(err);\n                return new Response(null, {\n                    status: httpStatus\n                });\n            }\n            throw err;\n        }\n        // Validate that the response is a valid response object.\n        if (!(res instanceof Response)) {\n            throw Object.defineProperty(new Error(`No response is returned from route handler '${this.resolvedPagePath}'. Ensure you return a \\`Response\\` or a \\`NextResponse\\` in all branches of your handler.`), \"__NEXT_ERROR_CODE\", {\n                value: \"E325\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        context.renderOpts.fetchMetrics = workStore.fetchMetrics;\n        resolvePendingRevalidations();\n        if (prerenderStore) {\n            var _prerenderStore_tags;\n            context.renderOpts.collectedTags = (_prerenderStore_tags = prerenderStore.tags) == null ? void 0 : _prerenderStore_tags.join(',');\n            context.renderOpts.collectedRevalidate = prerenderStore.revalidate;\n            context.renderOpts.collectedExpire = prerenderStore.expire;\n            context.renderOpts.collectedStale = prerenderStore.stale;\n        }\n        // It's possible cookies were set in the handler, so we need\n        // to merge the modified cookies and the returned response\n        // here.\n        const headers = new Headers(res.headers);\n        if (requestStore.type === 'request' && appendMutableCookies(headers, requestStore.mutableCookies)) {\n            return new Response(res.body, {\n                status: res.status,\n                statusText: res.statusText,\n                headers\n            });\n        }\n        return res;\n    }\n    async handle(req, context) {\n        // Get the handler function for the given method.\n        const handler = this.resolve(req.method);\n        // Get the context for the static generation.\n        const staticGenerationContext = {\n            // App Routes don't support unknown route params.\n            fallbackRouteParams: null,\n            page: this.definition.page,\n            renderOpts: context.renderOpts,\n            buildId: context.sharedContext.buildId,\n            previouslyRevalidatedTags: []\n        };\n        // Add the fetchCache option to the renderOpts.\n        staticGenerationContext.renderOpts.fetchCache = this.userland.fetchCache;\n        const actionStore = {\n            isAppRoute: true,\n            isAction: getIsPossibleServerAction(req)\n        };\n        const implicitTags = await getImplicitTags(this.definition.page, req.nextUrl, // App Routes don't support unknown route params.\n        null);\n        const requestStore = createRequestStoreForAPI(req, req.nextUrl, implicitTags, undefined, context.prerenderManifest.preview);\n        const workStore = createWorkStore(staticGenerationContext);\n        // Run the handler with the request AsyncLocalStorage to inject the helper\n        // support. We set this to `unknown` because the type is not known until\n        // runtime when we do a instanceof check below.\n        const response = await this.actionAsyncStorage.run(actionStore, ()=>this.workUnitAsyncStorage.run(requestStore, ()=>this.workAsyncStorage.run(workStore, async ()=>{\n                    // Check to see if we should bail out of static generation based on\n                    // having non-static methods.\n                    if (this.hasNonStaticMethods) {\n                        if (workStore.isStaticGeneration) {\n                            const err = Object.defineProperty(new DynamicServerError('Route is configured with methods that cannot be statically generated.'), \"__NEXT_ERROR_CODE\", {\n                                value: \"E582\",\n                                enumerable: false,\n                                configurable: true\n                            });\n                            workStore.dynamicUsageDescription = err.message;\n                            workStore.dynamicUsageStack = err.stack;\n                            throw err;\n                        }\n                    }\n                    // We assume we can pass the original request through however we may end up\n                    // proxying it in certain circumstances based on execution type and configuration\n                    let request = req;\n                    // Update the static generation store based on the dynamic property.\n                    switch(this.dynamic){\n                        case 'force-dynamic':\n                            {\n                                // Routes of generated paths should be dynamic\n                                workStore.forceDynamic = true;\n                                break;\n                            }\n                        case 'force-static':\n                            // The dynamic property is set to force-static, so we should\n                            // force the page to be static.\n                            workStore.forceStatic = true;\n                            // We also Proxy the request to replace dynamic data on the request\n                            // with empty stubs to allow for safely executing as static\n                            request = new Proxy(req, forceStaticRequestHandlers);\n                            break;\n                        case 'error':\n                            // The dynamic property is set to error, so we should throw an\n                            // error if the page is being statically generated.\n                            workStore.dynamicShouldError = true;\n                            if (workStore.isStaticGeneration) request = new Proxy(req, requireStaticRequestHandlers);\n                            break;\n                        default:\n                            // We proxy `NextRequest` to track dynamic access, and potentially bail out of static generation\n                            request = proxyNextRequest(req, workStore);\n                    }\n                    // TODO: propagate this pathname from route matcher\n                    const route = getPathnameFromAbsolutePath(this.resolvedPagePath);\n                    const tracer = getTracer();\n                    // Update the root span attribute for the route.\n                    tracer.setRootSpanAttribute('next.route', route);\n                    return tracer.trace(AppRouteRouteHandlersSpan.runHandler, {\n                        spanName: `executing api route (app) ${route}`,\n                        attributes: {\n                            'next.route': route\n                        }\n                    }, async ()=>this.do(handler, actionStore, workStore, requestStore, implicitTags, request, context));\n                })));\n        // If the handler did't return a valid response, then return the internal\n        // error response.\n        if (!(response instanceof Response)) {\n            // TODO: validate the correct handling behavior, maybe log something?\n            return new Response(null, {\n                status: 500\n            });\n        }\n        if (response.headers.has('x-middleware-rewrite')) {\n            throw Object.defineProperty(new Error('NextResponse.rewrite() was used in a app route handler, this is not currently supported. Please remove the invocation to continue.'), \"__NEXT_ERROR_CODE\", {\n                value: \"E374\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (response.headers.get('x-middleware-next') === '1') {\n            // TODO: move this error into the `NextResponse.next()` function.\n            throw Object.defineProperty(new Error('NextResponse.next() was used in a app route handler, this is not supported. See here for more info: https://nextjs.org/docs/messages/next-response-next-in-app-route-handler'), \"__NEXT_ERROR_CODE\", {\n                value: \"E385\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        return response;\n    }\n}\nexport default AppRouteRouteModule;\n/**\n * Gets all the method names for handlers that are not considered static.\n *\n * @param handlers the handlers from the userland module\n * @returns the method names that are not considered static or false if all\n *          methods are static\n */ export function hasNonStaticMethods(handlers) {\n    if (// Order these by how common they are to be used\n    handlers.POST || handlers.PUT || handlers.DELETE || handlers.PATCH || handlers.OPTIONS) {\n        return true;\n    }\n    return false;\n}\n// These symbols will be used to stash cached values on Proxied requests without requiring\n// additional closures or storage such as WeakMaps.\nconst nextURLSymbol = Symbol('nextUrl');\nconst requestCloneSymbol = Symbol('clone');\nconst urlCloneSymbol = Symbol('clone');\nconst searchParamsSymbol = Symbol('searchParams');\nconst hrefSymbol = Symbol('href');\nconst toStringSymbol = Symbol('toString');\nconst headersSymbol = Symbol('headers');\nconst cookiesSymbol = Symbol('cookies');\n/**\n * The general technique with these proxy handlers is to prioritize keeping them static\n * by stashing computed values on the Proxy itself. This is safe because the Proxy is\n * inaccessible to the consumer since all operations are forwarded\n */ const forceStaticRequestHandlers = {\n    get (target, prop, receiver) {\n        switch(prop){\n            case 'headers':\n                return target[headersSymbol] || (target[headersSymbol] = HeadersAdapter.seal(new Headers({})));\n            case 'cookies':\n                return target[cookiesSymbol] || (target[cookiesSymbol] = RequestCookiesAdapter.seal(new RequestCookies(new Headers({}))));\n            case 'nextUrl':\n                return target[nextURLSymbol] || (target[nextURLSymbol] = new Proxy(target.nextUrl, forceStaticNextUrlHandlers));\n            case 'url':\n                // we don't need to separately cache this we can just read the nextUrl\n                // and return the href since we know it will have been stripped of any\n                // dynamic parts. We access via the receiver to trigger the get trap\n                return receiver.nextUrl.href;\n            case 'geo':\n            case 'ip':\n                return undefined;\n            case 'clone':\n                return target[requestCloneSymbol] || (target[requestCloneSymbol] = ()=>new Proxy(// This is vaguely unsafe but it's required since NextRequest does not implement\n                    // clone. The reason we might expect this to work in this context is the Proxy will\n                    // respond with static-amenable values anyway somewhat restoring the interface.\n                    // @TODO we need to rethink NextRequest and NextURL because they are not sufficientlly\n                    // sophisticated to adequately represent themselves in all contexts. A better approach is\n                    // to probably embed the static generation logic into the class itself removing the need\n                    // for any kind of proxying\n                    target.clone(), forceStaticRequestHandlers));\n            default:\n                return ReflectAdapter.get(target, prop, receiver);\n        }\n    }\n};\nconst forceStaticNextUrlHandlers = {\n    get (target, prop, receiver) {\n        switch(prop){\n            // URL properties\n            case 'search':\n                return '';\n            case 'searchParams':\n                return target[searchParamsSymbol] || (target[searchParamsSymbol] = new URLSearchParams());\n            case 'href':\n                return target[hrefSymbol] || (target[hrefSymbol] = cleanURL(target.href).href);\n            case 'toJSON':\n            case 'toString':\n                return target[toStringSymbol] || (target[toStringSymbol] = ()=>receiver.href);\n            // NextUrl properties\n            case 'url':\n                // Currently nextURL does not expose url but our Docs indicate that it is an available property\n                // I am forcing this to undefined here to avoid accidentally exposing a dynamic value later if\n                // the underlying nextURL ends up adding this property\n                return undefined;\n            case 'clone':\n                return target[urlCloneSymbol] || (target[urlCloneSymbol] = ()=>new Proxy(target.clone(), forceStaticNextUrlHandlers));\n            default:\n                return ReflectAdapter.get(target, prop, receiver);\n        }\n    }\n};\nfunction proxyNextRequest(request, workStore) {\n    const nextUrlHandlers = {\n        get (target, prop, receiver) {\n            switch(prop){\n                case 'search':\n                case 'searchParams':\n                case 'url':\n                case 'href':\n                case 'toJSON':\n                case 'toString':\n                case 'origin':\n                    {\n                        const workUnitStore = workUnitAsyncStorage.getStore();\n                        trackDynamic(workStore, workUnitStore, `nextUrl.${prop}`);\n                        return ReflectAdapter.get(target, prop, receiver);\n                    }\n                case 'clone':\n                    return target[urlCloneSymbol] || (target[urlCloneSymbol] = ()=>new Proxy(target.clone(), nextUrlHandlers));\n                default:\n                    return ReflectAdapter.get(target, prop, receiver);\n            }\n        }\n    };\n    const nextRequestHandlers = {\n        get (target, prop) {\n            switch(prop){\n                case 'nextUrl':\n                    return target[nextURLSymbol] || (target[nextURLSymbol] = new Proxy(target.nextUrl, nextUrlHandlers));\n                case 'headers':\n                case 'cookies':\n                case 'url':\n                case 'body':\n                case 'blob':\n                case 'json':\n                case 'text':\n                case 'arrayBuffer':\n                case 'formData':\n                    {\n                        const workUnitStore = workUnitAsyncStorage.getStore();\n                        trackDynamic(workStore, workUnitStore, `request.${prop}`);\n                        // The receiver arg is intentionally the same as the target to fix an issue with\n                        // edge runtime, where attempting to access internal slots with the wrong `this` context\n                        // results in an error.\n                        return ReflectAdapter.get(target, prop, target);\n                    }\n                case 'clone':\n                    return target[requestCloneSymbol] || (target[requestCloneSymbol] = ()=>new Proxy(// This is vaguely unsafe but it's required since NextRequest does not implement\n                        // clone. The reason we might expect this to work in this context is the Proxy will\n                        // respond with static-amenable values anyway somewhat restoring the interface.\n                        // @TODO we need to rethink NextRequest and NextURL because they are not sufficientlly\n                        // sophisticated to adequately represent themselves in all contexts. A better approach is\n                        // to probably embed the static generation logic into the class itself removing the need\n                        // for any kind of proxying\n                        target.clone(), nextRequestHandlers));\n                default:\n                    // The receiver arg is intentionally the same as the target to fix an issue with\n                    // edge runtime, where attempting to access internal slots with the wrong `this` context\n                    // results in an error.\n                    return ReflectAdapter.get(target, prop, target);\n            }\n        }\n    };\n    return new Proxy(request, nextRequestHandlers);\n}\nconst requireStaticRequestHandlers = {\n    get (target, prop, receiver) {\n        switch(prop){\n            case 'nextUrl':\n                return target[nextURLSymbol] || (target[nextURLSymbol] = new Proxy(target.nextUrl, requireStaticNextUrlHandlers));\n            case 'headers':\n            case 'cookies':\n            case 'url':\n            case 'body':\n            case 'blob':\n            case 'json':\n            case 'text':\n            case 'arrayBuffer':\n            case 'formData':\n                throw Object.defineProperty(new StaticGenBailoutError(`Route ${target.nextUrl.pathname} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`request.${prop}\\`.`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E611\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'clone':\n                return target[requestCloneSymbol] || (target[requestCloneSymbol] = ()=>new Proxy(// This is vaguely unsafe but it's required since NextRequest does not implement\n                    // clone. The reason we might expect this to work in this context is the Proxy will\n                    // respond with static-amenable values anyway somewhat restoring the interface.\n                    // @TODO we need to rethink NextRequest and NextURL because they are not sufficientlly\n                    // sophisticated to adequately represent themselves in all contexts. A better approach is\n                    // to probably embed the static generation logic into the class itself removing the need\n                    // for any kind of proxying\n                    target.clone(), requireStaticRequestHandlers));\n            default:\n                return ReflectAdapter.get(target, prop, receiver);\n        }\n    }\n};\nconst requireStaticNextUrlHandlers = {\n    get (target, prop, receiver) {\n        switch(prop){\n            case 'search':\n            case 'searchParams':\n            case 'url':\n            case 'href':\n            case 'toJSON':\n            case 'toString':\n            case 'origin':\n                throw Object.defineProperty(new StaticGenBailoutError(`Route ${target.pathname} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`nextUrl.${prop}\\`.`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E575\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'clone':\n                return target[urlCloneSymbol] || (target[urlCloneSymbol] = ()=>new Proxy(target.clone(), requireStaticNextUrlHandlers));\n            default:\n                return ReflectAdapter.get(target, prop, receiver);\n        }\n    }\n};\nfunction createDynamicIOError(route) {\n    return Object.defineProperty(new DynamicServerError(`Route ${route} couldn't be rendered statically because it used IO that was not cached. See more info here: https://nextjs.org/docs/messages/dynamic-io`), \"__NEXT_ERROR_CODE\", {\n        value: \"E609\",\n        enumerable: false,\n        configurable: true\n    });\n}\nexport function trackDynamic(store, workUnitStore, expression) {\n    if (workUnitStore) {\n        if (workUnitStore.type === 'cache') {\n            throw Object.defineProperty(new Error(`Route ${store.route} used \"${expression}\" inside \"use cache\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"${expression}\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache`), \"__NEXT_ERROR_CODE\", {\n                value: \"E178\",\n                enumerable: false,\n                configurable: true\n            });\n        } else if (workUnitStore.type === 'unstable-cache') {\n            throw Object.defineProperty(new Error(`Route ${store.route} used \"${expression}\" inside a function cached with \"unstable_cache(...)\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"${expression}\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/app/api-reference/functions/unstable_cache`), \"__NEXT_ERROR_CODE\", {\n                value: \"E133\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n    }\n    if (store.dynamicShouldError) {\n        throw Object.defineProperty(new StaticGenBailoutError(`Route ${store.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`), \"__NEXT_ERROR_CODE\", {\n            value: \"E553\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    if (workUnitStore) {\n        if (workUnitStore.type === 'prerender') {\n            // dynamicIO Prerender\n            const error = Object.defineProperty(new Error(`Route ${store.route} used ${expression} without first calling \\`await connection()\\`. See more info here: https://nextjs.org/docs/messages/next-prerender-sync-request`), \"__NEXT_ERROR_CODE\", {\n                value: \"E261\",\n                enumerable: false,\n                configurable: true\n            });\n            abortAndThrowOnSynchronousRequestDataAccess(store.route, expression, error, workUnitStore);\n        } else if (workUnitStore.type === 'prerender-ppr') {\n            // PPR Prerender\n            postponeWithTracking(store.route, expression, workUnitStore.dynamicTracking);\n        } else if (workUnitStore.type === 'prerender-legacy') {\n            // legacy Prerender\n            workUnitStore.revalidate = 0;\n            const err = Object.defineProperty(new DynamicServerError(`Route ${store.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`), \"__NEXT_ERROR_CODE\", {\n                value: \"E558\",\n                enumerable: false,\n                configurable: true\n            });\n            store.dynamicUsageDescription = expression;\n            store.dynamicUsageStack = err.stack;\n            throw err;\n        } else if (process.env.NODE_ENV === 'development' && workUnitStore && workUnitStore.type === 'request') {\n            workUnitStore.usedDynamic = true;\n        }\n    }\n}\n\n//# sourceMappingURL=module.js.map","/**\n * Calls the given async function only when the returned promise-like object is\n * awaited. Afterwards, it provides the resolved value synchronously as `value`\n * property.\n */ export function createLazyResult(fn) {\n    let pendingResult;\n    const result = {\n        then (onfulfilled, onrejected) {\n            if (!pendingResult) {\n                pendingResult = fn();\n            }\n            pendingResult.then((value)=>{\n                result.value = value;\n            }).catch(()=>{\n            // The externally awaited result will be rejected via `onrejected`. We\n            // don't need to handle it here. But we do want to avoid an unhandled\n            // rejection.\n            });\n            return pendingResult.then(onfulfilled, onrejected);\n        }\n    };\n    return result;\n}\nexport function isResolvedLazyResult(result) {\n    return result.hasOwnProperty('value');\n}\n\n//# sourceMappingURL=lazy-result.js.map","export class LRUCache {\n    constructor(maxSize, calculateSize){\n        this.cache = new Map();\n        this.sizes = new Map();\n        this.totalSize = 0;\n        this.maxSize = maxSize;\n        this.calculateSize = calculateSize || (()=>1);\n    }\n    set(key, value) {\n        if (!key || !value) return;\n        const size = this.calculateSize(value);\n        if (size > this.maxSize) {\n            console.warn('Single item size exceeds maxSize');\n            return;\n        }\n        if (this.cache.has(key)) {\n            this.totalSize -= this.sizes.get(key) || 0;\n        }\n        this.cache.set(key, value);\n        this.sizes.set(key, size);\n        this.totalSize += size;\n        this.touch(key);\n    }\n    has(key) {\n        if (!key) return false;\n        this.touch(key);\n        return Boolean(this.cache.get(key));\n    }\n    get(key) {\n        if (!key) return;\n        const value = this.cache.get(key);\n        if (value === undefined) {\n            return undefined;\n        }\n        this.touch(key);\n        return value;\n    }\n    touch(key) {\n        const value = this.cache.get(key);\n        if (value !== undefined) {\n            this.cache.delete(key);\n            this.cache.set(key, value);\n            this.evictIfNecessary();\n        }\n    }\n    evictIfNecessary() {\n        while(this.totalSize > this.maxSize && this.cache.size > 0){\n            this.evictLeastRecentlyUsed();\n        }\n    }\n    evictLeastRecentlyUsed() {\n        const lruKey = this.cache.keys().next().value;\n        if (lruKey !== undefined) {\n            const lruSize = this.sizes.get(lruKey) || 0;\n            this.totalSize -= lruSize;\n            this.cache.delete(lruKey);\n            this.sizes.delete(lruKey);\n        }\n    }\n    reset() {\n        this.cache.clear();\n        this.sizes.clear();\n        this.totalSize = 0;\n    }\n    keys() {\n        return [\n            ...this.cache.keys()\n        ];\n    }\n    remove(key) {\n        if (this.cache.has(key)) {\n            this.totalSize -= this.sizes.get(key) || 0;\n            this.cache.delete(key);\n            this.sizes.delete(key);\n        }\n    }\n    clear() {\n        this.cache.clear();\n        this.sizes.clear();\n        this.totalSize = 0;\n    }\n    get size() {\n        return this.cache.size;\n    }\n    get currentSize() {\n        return this.totalSize;\n    }\n}\n\n//# sourceMappingURL=lru-cache.js.map","(function(){var e={452:function(e){\"use strict\";e.exports=require(\"next/dist/compiled/querystring-es3\")}};var t={};function __nccwpck_require__(o){var a=t[o];if(a!==undefined){return a.exports}var s=t[o]={exports:{}};var n=true;try{e[o](s,s.exports,__nccwpck_require__);n=false}finally{if(n)delete t[o]}return s.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var o={};!function(){var e=o;var t,a=(t=__nccwpck_require__(452))&&\"object\"==typeof t&&\"default\"in t?t.default:t,s=/https?|ftp|gopher|file/;function r(e){\"string\"==typeof e&&(e=d(e));var t=function(e,t,o){var a=e.auth,s=e.hostname,n=e.protocol||\"\",p=e.pathname||\"\",c=e.hash||\"\",i=e.query||\"\",u=!1;a=a?encodeURIComponent(a).replace(/%3A/i,\":\")+\"@\":\"\",e.host?u=a+e.host:s&&(u=a+(~s.indexOf(\":\")?\"[\"+s+\"]\":s),e.port&&(u+=\":\"+e.port)),i&&\"object\"==typeof i&&(i=t.encode(i));var f=e.search||i&&\"?\"+i||\"\";return n&&\":\"!==n.substr(-1)&&(n+=\":\"),e.slashes||(!n||o.test(n))&&!1!==u?(u=\"//\"+(u||\"\"),p&&\"/\"!==p[0]&&(p=\"/\"+p)):u||(u=\"\"),c&&\"#\"!==c[0]&&(c=\"#\"+c),f&&\"?\"!==f[0]&&(f=\"?\"+f),{protocol:n,host:u,pathname:p=p.replace(/[?#]/g,encodeURIComponent),search:f=f.replace(\"#\",\"%23\"),hash:c}}(e,a,s);return\"\"+t.protocol+t.host+t.pathname+t.search+t.hash}var n=\"http://\",p=\"w.w\",c=n+p,i=/^([a-z0-9.+-]*:\\/\\/\\/)([a-z0-9.+-]:\\/*)?/i,u=/https?|ftp|gopher|file/;function h(e,t){var o=\"string\"==typeof e?d(e):e;e=\"object\"==typeof e?r(e):e;var a=d(t),s=\"\";o.protocol&&!o.slashes&&(s=o.protocol,e=e.replace(o.protocol,\"\"),s+=\"/\"===t[0]||\"/\"===e[0]?\"/\":\"\"),s&&a.protocol&&(s=\"\",a.slashes||(s=a.protocol,t=t.replace(a.protocol,\"\")));var p=e.match(i);p&&!a.protocol&&(e=e.substr((s=p[1]+(p[2]||\"\")).length),/^\\/\\/[^/]/.test(t)&&(s=s.slice(0,-1)));var f=new URL(e,c+\"/\"),m=new URL(t,f).toString().replace(c,\"\"),v=a.protocol||o.protocol;return v+=o.slashes||a.slashes?\"//\":\"\",!s&&v?m=m.replace(n,v):s&&(m=m.replace(n,\"\")),u.test(m)||~t.indexOf(\".\")||\"/\"===e.slice(-1)||\"/\"===t.slice(-1)||\"/\"!==m.slice(-1)||(m=m.slice(0,-1)),s&&(m=s+(\"/\"===m[0]?m.substr(1):m)),m}function l(){}l.prototype.parse=d,l.prototype.format=r,l.prototype.resolve=h,l.prototype.resolveObject=h;var f=/^https?|ftp|gopher|file/,m=/^(.*?)([#?].*)/,v=/^([a-z0-9.+-]*:)(\\/{0,3})(.*)/i,_=/^([a-z0-9.+-]*:)?\\/\\/\\/*/i,b=/^([a-z0-9.+-]*:)(\\/{0,2})\\[(.*)\\]$/i;function d(e,t,o){if(void 0===t&&(t=!1),void 0===o&&(o=!1),e&&\"object\"==typeof e&&e instanceof l)return e;var s=(e=e.trim()).match(m);e=s?s[1].replace(/\\\\/g,\"/\")+s[2]:e.replace(/\\\\/g,\"/\"),b.test(e)&&\"/\"!==e.slice(-1)&&(e+=\"/\");var n=!/(^javascript)/.test(e)&&e.match(v),i=_.test(e),u=\"\";n&&(f.test(n[1])||(u=n[1].toLowerCase(),e=\"\"+n[2]+n[3]),n[2]||(i=!1,f.test(n[1])?(u=n[1],e=\"\"+n[3]):e=\"//\"+n[3]),3!==n[2].length&&1!==n[2].length||(u=n[1],e=\"/\"+n[3]));var g,y=(s?s[1]:e).match(/^https?:\\/\\/[^/]+(:[0-9]+)(?=\\/|$)/),w=y&&y[1],x=new l,C=\"\",U=\"\";try{g=new URL(e)}catch(t){C=t,u||o||!/^\\/\\//.test(e)||/^\\/\\/.+[@.]/.test(e)||(U=\"/\",e=e.substr(1));try{g=new URL(e,c)}catch(e){return x.protocol=u,x.href=u,x}}x.slashes=i&&!U,x.host=g.host===p?\"\":g.host,x.hostname=g.hostname===p?\"\":g.hostname.replace(/(\\[|\\])/g,\"\"),x.protocol=C?u||null:g.protocol,x.search=g.search.replace(/\\\\/g,\"%5C\"),x.hash=g.hash.replace(/\\\\/g,\"%5C\");var j=e.split(\"#\");!x.search&&~j[0].indexOf(\"?\")&&(x.search=\"?\"),x.hash||\"\"!==j[1]||(x.hash=\"#\"),x.query=t?a.decode(g.search.substr(1)):x.search.substr(1),x.pathname=U+(n?function(e){return e.replace(/['^|`]/g,(function(e){return\"%\"+e.charCodeAt().toString(16).toUpperCase()})).replace(/((?:%[0-9A-F]{2})+)/g,(function(e,t){try{return decodeURIComponent(t).split(\"\").map((function(e){var t=e.charCodeAt();return t>256||/^[a-z0-9]$/i.test(e)?e:\"%\"+t.toString(16).toUpperCase()})).join(\"\")}catch(e){return t}}))}(g.pathname):g.pathname),\"about:\"===x.protocol&&\"blank\"===x.pathname&&(x.protocol=\"\",x.pathname=\"\"),C&&\"/\"!==e[0]&&(x.pathname=x.pathname.substr(1)),u&&!f.test(u)&&\"/\"!==e.slice(-1)&&\"/\"===x.pathname&&(x.pathname=\"\"),x.path=x.pathname+x.search,x.auth=[g.username,g.password].map(decodeURIComponent).filter(Boolean).join(\":\"),x.port=g.port,w&&!x.host.endsWith(w)&&(x.host+=w,x.port=w.slice(1)),x.href=U?\"\"+x.pathname+x.search+x.hash:r(x);var q=/^(file)/.test(x.href)?[\"host\",\"hostname\"]:[];return Object.keys(x).forEach((function(e){~q.indexOf(e)||(x[e]=x[e]||null)})),x}e.parse=d,e.format=r,e.resolve=h,e.resolveObject=function(e,t){return d(h(e,t))},e.Url=l}();module.exports=o})();","import { createAsyncLocalStorage } from './async-local-storage';\nexport const actionAsyncStorageInstance = createAsyncLocalStorage();\n\n//# sourceMappingURL=action-async-storage-instance.js.map","// Share the instance module in the next-shared layer\nimport { actionAsyncStorageInstance } from './action-async-storage-instance' with {\n    'turbopack-transition': 'next-shared'\n};\nexport { actionAsyncStorageInstance as actionAsyncStorage };\n\n//# sourceMappingURL=action-async-storage.external.js.map","import { createAsyncLocalStorage } from './async-local-storage';\nexport const workAsyncStorageInstance = createAsyncLocalStorage();\n\n//# sourceMappingURL=work-async-storage-instance.js.map",null,"\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst PostgrestBuilder_1 = __importDefault(require(\"./PostgrestBuilder\"));\nclass PostgrestTransformBuilder extends PostgrestBuilder_1.default {\n    /**\n     * Perform a SELECT on the query result.\n     *\n     * By default, `.insert()`, `.update()`, `.upsert()`, and `.delete()` do not\n     * return modified rows. By calling this method, modified rows are returned in\n     * `data`.\n     *\n     * @param columns - The columns to retrieve, separated by commas\n     */\n    select(columns) {\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = (columns !== null && columns !== void 0 ? columns : '*')\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        if (this.headers['Prefer']) {\n            this.headers['Prefer'] += ',';\n        }\n        this.headers['Prefer'] += 'return=representation';\n        return this;\n    }\n    /**\n     * Order the query result by `column`.\n     *\n     * You can call this method multiple times to order by multiple columns.\n     *\n     * You can order referenced tables, but it only affects the ordering of the\n     * parent table if you use `!inner` in the query.\n     *\n     * @param column - The column to order by\n     * @param options - Named parameters\n     * @param options.ascending - If `true`, the result will be in ascending order\n     * @param options.nullsFirst - If `true`, `null`s appear first. If `false`,\n     * `null`s appear last.\n     * @param options.referencedTable - Set this to order a referenced table by\n     * its columns\n     * @param options.foreignTable - Deprecated, use `options.referencedTable`\n     * instead\n     */\n    order(column, { ascending = true, nullsFirst, foreignTable, referencedTable = foreignTable, } = {}) {\n        const key = referencedTable ? `${referencedTable}.order` : 'order';\n        const existingOrder = this.url.searchParams.get(key);\n        this.url.searchParams.set(key, `${existingOrder ? `${existingOrder},` : ''}${column}.${ascending ? 'asc' : 'desc'}${nullsFirst === undefined ? '' : nullsFirst ? '.nullsfirst' : '.nullslast'}`);\n        return this;\n    }\n    /**\n     * Limit the query result by `count`.\n     *\n     * @param count - The maximum number of rows to return\n     * @param options - Named parameters\n     * @param options.referencedTable - Set this to limit rows of referenced\n     * tables instead of the parent table\n     * @param options.foreignTable - Deprecated, use `options.referencedTable`\n     * instead\n     */\n    limit(count, { foreignTable, referencedTable = foreignTable, } = {}) {\n        const key = typeof referencedTable === 'undefined' ? 'limit' : `${referencedTable}.limit`;\n        this.url.searchParams.set(key, `${count}`);\n        return this;\n    }\n    /**\n     * Limit the query result by starting at an offset `from` and ending at the offset `to`.\n     * Only records within this range are returned.\n     * This respects the query order and if there is no order clause the range could behave unexpectedly.\n     * The `from` and `to` values are 0-based and inclusive: `range(1, 3)` will include the second, third\n     * and fourth rows of the query.\n     *\n     * @param from - The starting index from which to limit the result\n     * @param to - The last index to which to limit the result\n     * @param options - Named parameters\n     * @param options.referencedTable - Set this to limit rows of referenced\n     * tables instead of the parent table\n     * @param options.foreignTable - Deprecated, use `options.referencedTable`\n     * instead\n     */\n    range(from, to, { foreignTable, referencedTable = foreignTable, } = {}) {\n        const keyOffset = typeof referencedTable === 'undefined' ? 'offset' : `${referencedTable}.offset`;\n        const keyLimit = typeof referencedTable === 'undefined' ? 'limit' : `${referencedTable}.limit`;\n        this.url.searchParams.set(keyOffset, `${from}`);\n        // Range is inclusive, so add 1\n        this.url.searchParams.set(keyLimit, `${to - from + 1}`);\n        return this;\n    }\n    /**\n     * Set the AbortSignal for the fetch request.\n     *\n     * @param signal - The AbortSignal to use for the fetch request\n     */\n    abortSignal(signal) {\n        this.signal = signal;\n        return this;\n    }\n    /**\n     * Return `data` as a single object instead of an array of objects.\n     *\n     * Query result must be one row (e.g. using `.limit(1)`), otherwise this\n     * returns an error.\n     */\n    single() {\n        this.headers['Accept'] = 'application/vnd.pgrst.object+json';\n        return this;\n    }\n    /**\n     * Return `data` as a single object instead of an array of objects.\n     *\n     * Query result must be zero or one row (e.g. using `.limit(1)`), otherwise\n     * this returns an error.\n     */\n    maybeSingle() {\n        // Temporary partial fix for https://github.com/supabase/postgrest-js/issues/361\n        // Issue persists e.g. for `.insert([...]).select().maybeSingle()`\n        if (this.method === 'GET') {\n            this.headers['Accept'] = 'application/json';\n        }\n        else {\n            this.headers['Accept'] = 'application/vnd.pgrst.object+json';\n        }\n        this.isMaybeSingle = true;\n        return this;\n    }\n    /**\n     * Return `data` as a string in CSV format.\n     */\n    csv() {\n        this.headers['Accept'] = 'text/csv';\n        return this;\n    }\n    /**\n     * Return `data` as an object in [GeoJSON](https://geojson.org) format.\n     */\n    geojson() {\n        this.headers['Accept'] = 'application/geo+json';\n        return this;\n    }\n    /**\n     * Return `data` as the EXPLAIN plan for the query.\n     *\n     * You need to enable the\n     * [db_plan_enabled](https://supabase.com/docs/guides/database/debugging-performance#enabling-explain)\n     * setting before using this method.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.analyze - If `true`, the query will be executed and the\n     * actual run time will be returned\n     *\n     * @param options.verbose - If `true`, the query identifier will be returned\n     * and `data` will include the output columns of the query\n     *\n     * @param options.settings - If `true`, include information on configuration\n     * parameters that affect query planning\n     *\n     * @param options.buffers - If `true`, include information on buffer usage\n     *\n     * @param options.wal - If `true`, include information on WAL record generation\n     *\n     * @param options.format - The format of the output, can be `\"text\"` (default)\n     * or `\"json\"`\n     */\n    explain({ analyze = false, verbose = false, settings = false, buffers = false, wal = false, format = 'text', } = {}) {\n        var _a;\n        const options = [\n            analyze ? 'analyze' : null,\n            verbose ? 'verbose' : null,\n            settings ? 'settings' : null,\n            buffers ? 'buffers' : null,\n            wal ? 'wal' : null,\n        ]\n            .filter(Boolean)\n            .join('|');\n        // An Accept header can carry multiple media types but postgrest-js always sends one\n        const forMediatype = (_a = this.headers['Accept']) !== null && _a !== void 0 ? _a : 'application/json';\n        this.headers['Accept'] = `application/vnd.pgrst.plan+${format}; for=\"${forMediatype}\"; options=${options};`;\n        if (format === 'json')\n            return this;\n        else\n            return this;\n    }\n    /**\n     * Rollback the query.\n     *\n     * `data` will still be returned, but the query is not committed.\n     */\n    rollback() {\n        var _a;\n        if (((_a = this.headers['Prefer']) !== null && _a !== void 0 ? _a : '').trim().length > 0) {\n            this.headers['Prefer'] += ',tx=rollback';\n        }\n        else {\n            this.headers['Prefer'] = 'tx=rollback';\n        }\n        return this;\n    }\n    /**\n     * Override the type of the returned `data`.\n     *\n     * @typeParam NewResult - The new result type to override with\n     */\n    returns() {\n        return this;\n    }\n}\nexports.default = PostgrestTransformBuilder;\n//# sourceMappingURL=PostgrestTransformBuilder.js.map","if (process.env.NEXT_RUNTIME === 'edge') {\n    module.exports = require('next/dist/server/route-modules/app-route/module.js');\n} else {\n    if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n        if (process.env.NODE_ENV === 'development') {\n            if (process.env.TURBOPACK) {\n                module.exports = require('next/dist/compiled/next-server/app-route-turbo-experimental.runtime.dev.js');\n            } else {\n                module.exports = require('next/dist/compiled/next-server/app-route-experimental.runtime.dev.js');\n            }\n        } else {\n            if (process.env.TURBOPACK) {\n                module.exports = require('next/dist/compiled/next-server/app-route-turbo-experimental.runtime.prod.js');\n            } else {\n                module.exports = require('next/dist/compiled/next-server/app-route-experimental.runtime.prod.js');\n            }\n        }\n    } else {\n        if (process.env.NODE_ENV === 'development') {\n            if (process.env.TURBOPACK) {\n                module.exports = require('next/dist/compiled/next-server/app-route-turbo.runtime.dev.js');\n            } else {\n                module.exports = require('next/dist/compiled/next-server/app-route.runtime.dev.js');\n            }\n        } else {\n            if (process.env.TURBOPACK) {\n                module.exports = require('next/dist/compiled/next-server/app-route-turbo.runtime.prod.js');\n            } else {\n                module.exports = require('next/dist/compiled/next-server/app-route.runtime.prod.js');\n            }\n        }\n    }\n}\n\n//# sourceMappingURL=module.compiled.js.map","import { createAsyncLocalStorage } from './async-local-storage';\nexport const workUnitAsyncStorageInstance = createAsyncLocalStorage();\n\n//# sourceMappingURL=work-unit-async-storage-instance.js.map","(()=>{\"use strict\";if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e={};(()=>{var r=e;\n/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */r.parse=parse;r.serialize=serialize;var i=decodeURIComponent;var t=encodeURIComponent;var a=/; */;var n=/^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;function parse(e,r){if(typeof e!==\"string\"){throw new TypeError(\"argument str must be a string\")}var t={};var n=r||{};var o=e.split(a);var s=n.decode||i;for(var p=0;p<o.length;p++){var f=o[p];var u=f.indexOf(\"=\");if(u<0){continue}var v=f.substr(0,u).trim();var c=f.substr(++u,f.length).trim();if('\"'==c[0]){c=c.slice(1,-1)}if(undefined==t[v]){t[v]=tryDecode(c,s)}}return t}function serialize(e,r,i){var a=i||{};var o=a.encode||t;if(typeof o!==\"function\"){throw new TypeError(\"option encode is invalid\")}if(!n.test(e)){throw new TypeError(\"argument name is invalid\")}var s=o(r);if(s&&!n.test(s)){throw new TypeError(\"argument val is invalid\")}var p=e+\"=\"+s;if(null!=a.maxAge){var f=a.maxAge-0;if(isNaN(f)||!isFinite(f)){throw new TypeError(\"option maxAge is invalid\")}p+=\"; Max-Age=\"+Math.floor(f)}if(a.domain){if(!n.test(a.domain)){throw new TypeError(\"option domain is invalid\")}p+=\"; Domain=\"+a.domain}if(a.path){if(!n.test(a.path)){throw new TypeError(\"option path is invalid\")}p+=\"; Path=\"+a.path}if(a.expires){if(typeof a.expires.toUTCString!==\"function\"){throw new TypeError(\"option expires is invalid\")}p+=\"; Expires=\"+a.expires.toUTCString()}if(a.httpOnly){p+=\"; HttpOnly\"}if(a.secure){p+=\"; Secure\"}if(a.sameSite){var u=typeof a.sameSite===\"string\"?a.sameSite.toLowerCase():a.sameSite;switch(u){case true:p+=\"; SameSite=Strict\";break;case\"lax\":p+=\"; SameSite=Lax\";break;case\"strict\":p+=\"; SameSite=Strict\";break;case\"none\":p+=\"; SameSite=None\";break;default:throw new TypeError(\"option sameSite is invalid\")}}return p}function tryDecode(e,r){try{return r(e)}catch(r){return e}}})();module.exports=e})();","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    interceptTestApis: null,\n    wrapRequestHandler: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    interceptTestApis: function() {\n        return interceptTestApis;\n    },\n    wrapRequestHandler: function() {\n        return wrapRequestHandler;\n    }\n});\nconst _context = require(\"./context\");\nconst _fetch = require(\"./fetch\");\nfunction interceptTestApis() {\n    return (0, _fetch.interceptFetch)(global.fetch);\n}\nfunction wrapRequestHandler(handler) {\n    return (req, fn)=>(0, _context.withRequest)(req, _fetch.reader, ()=>handler(req, fn));\n}\n\n//# sourceMappingURL=server-edge.js.map","(()=>{\"use strict\";var e={993:e=>{var t=Object.prototype.hasOwnProperty,n=\"~\";function Events(){}if(Object.create){Events.prototype=Object.create(null);if(!(new Events).__proto__)n=false}function EE(e,t,n){this.fn=e;this.context=t;this.once=n||false}function addListener(e,t,r,i,s){if(typeof r!==\"function\"){throw new TypeError(\"The listener must be a function\")}var o=new EE(r,i||e,s),u=n?n+t:t;if(!e._events[u])e._events[u]=o,e._eventsCount++;else if(!e._events[u].fn)e._events[u].push(o);else e._events[u]=[e._events[u],o];return e}function clearEvent(e,t){if(--e._eventsCount===0)e._events=new Events;else delete e._events[t]}function EventEmitter(){this._events=new Events;this._eventsCount=0}EventEmitter.prototype.eventNames=function eventNames(){var e=[],r,i;if(this._eventsCount===0)return e;for(i in r=this._events){if(t.call(r,i))e.push(n?i.slice(1):i)}if(Object.getOwnPropertySymbols){return e.concat(Object.getOwnPropertySymbols(r))}return e};EventEmitter.prototype.listeners=function listeners(e){var t=n?n+e:e,r=this._events[t];if(!r)return[];if(r.fn)return[r.fn];for(var i=0,s=r.length,o=new Array(s);i<s;i++){o[i]=r[i].fn}return o};EventEmitter.prototype.listenerCount=function listenerCount(e){var t=n?n+e:e,r=this._events[t];if(!r)return 0;if(r.fn)return 1;return r.length};EventEmitter.prototype.emit=function emit(e,t,r,i,s,o){var u=n?n+e:e;if(!this._events[u])return false;var a=this._events[u],l=arguments.length,c,h;if(a.fn){if(a.once)this.removeListener(e,a.fn,undefined,true);switch(l){case 1:return a.fn.call(a.context),true;case 2:return a.fn.call(a.context,t),true;case 3:return a.fn.call(a.context,t,r),true;case 4:return a.fn.call(a.context,t,r,i),true;case 5:return a.fn.call(a.context,t,r,i,s),true;case 6:return a.fn.call(a.context,t,r,i,s,o),true}for(h=1,c=new Array(l-1);h<l;h++){c[h-1]=arguments[h]}a.fn.apply(a.context,c)}else{var _=a.length,f;for(h=0;h<_;h++){if(a[h].once)this.removeListener(e,a[h].fn,undefined,true);switch(l){case 1:a[h].fn.call(a[h].context);break;case 2:a[h].fn.call(a[h].context,t);break;case 3:a[h].fn.call(a[h].context,t,r);break;case 4:a[h].fn.call(a[h].context,t,r,i);break;default:if(!c)for(f=1,c=new Array(l-1);f<l;f++){c[f-1]=arguments[f]}a[h].fn.apply(a[h].context,c)}}}return true};EventEmitter.prototype.on=function on(e,t,n){return addListener(this,e,t,n,false)};EventEmitter.prototype.once=function once(e,t,n){return addListener(this,e,t,n,true)};EventEmitter.prototype.removeListener=function removeListener(e,t,r,i){var s=n?n+e:e;if(!this._events[s])return this;if(!t){clearEvent(this,s);return this}var o=this._events[s];if(o.fn){if(o.fn===t&&(!i||o.once)&&(!r||o.context===r)){clearEvent(this,s)}}else{for(var u=0,a=[],l=o.length;u<l;u++){if(o[u].fn!==t||i&&!o[u].once||r&&o[u].context!==r){a.push(o[u])}}if(a.length)this._events[s]=a.length===1?a[0]:a;else clearEvent(this,s)}return this};EventEmitter.prototype.removeAllListeners=function removeAllListeners(e){var t;if(e){t=n?n+e:e;if(this._events[t])clearEvent(this,t)}else{this._events=new Events;this._eventsCount=0}return this};EventEmitter.prototype.off=EventEmitter.prototype.removeListener;EventEmitter.prototype.addListener=EventEmitter.prototype.on;EventEmitter.prefixed=n;EventEmitter.EventEmitter=EventEmitter;if(true){e.exports=EventEmitter}},213:e=>{e.exports=(e,t)=>{t=t||(()=>{});return e.then((e=>new Promise((e=>{e(t())})).then((()=>e))),(e=>new Promise((e=>{e(t())})).then((()=>{throw e}))))}},574:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});function lowerBound(e,t,n){let r=0;let i=e.length;while(i>0){const s=i/2|0;let o=r+s;if(n(e[o],t)<=0){r=++o;i-=s+1}else{i=s}}return r}t[\"default\"]=lowerBound},821:(e,t,n)=>{Object.defineProperty(t,\"__esModule\",{value:true});const r=n(574);class PriorityQueue{constructor(){this._queue=[]}enqueue(e,t){t=Object.assign({priority:0},t);const n={priority:t.priority,run:e};if(this.size&&this._queue[this.size-1].priority>=t.priority){this._queue.push(n);return}const i=r.default(this._queue,n,((e,t)=>t.priority-e.priority));this._queue.splice(i,0,n)}dequeue(){const e=this._queue.shift();return e===null||e===void 0?void 0:e.run}filter(e){return this._queue.filter((t=>t.priority===e.priority)).map((e=>e.run))}get size(){return this._queue.length}}t[\"default\"]=PriorityQueue},816:(e,t,n)=>{const r=n(213);class TimeoutError extends Error{constructor(e){super(e);this.name=\"TimeoutError\"}}const pTimeout=(e,t,n)=>new Promise(((i,s)=>{if(typeof t!==\"number\"||t<0){throw new TypeError(\"Expected `milliseconds` to be a positive number\")}if(t===Infinity){i(e);return}const o=setTimeout((()=>{if(typeof n===\"function\"){try{i(n())}catch(e){s(e)}return}const r=typeof n===\"string\"?n:`Promise timed out after ${t} milliseconds`;const o=n instanceof Error?n:new TimeoutError(r);if(typeof e.cancel===\"function\"){e.cancel()}s(o)}),t);r(e.then(i,s),(()=>{clearTimeout(o)}))}));e.exports=pTimeout;e.exports[\"default\"]=pTimeout;e.exports.TimeoutError=TimeoutError}};var t={};function __nccwpck_require__(n){var r=t[n];if(r!==undefined){return r.exports}var i=t[n]={exports:{}};var s=true;try{e[n](i,i.exports,__nccwpck_require__);s=false}finally{if(s)delete t[n]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var n={};(()=>{var e=n;Object.defineProperty(e,\"__esModule\",{value:true});const t=__nccwpck_require__(993);const r=__nccwpck_require__(816);const i=__nccwpck_require__(821);const empty=()=>{};const s=new r.TimeoutError;class PQueue extends t{constructor(e){var t,n,r,s;super();this._intervalCount=0;this._intervalEnd=0;this._pendingCount=0;this._resolveEmpty=empty;this._resolveIdle=empty;e=Object.assign({carryoverConcurrencyCount:false,intervalCap:Infinity,interval:0,concurrency:Infinity,autoStart:true,queueClass:i.default},e);if(!(typeof e.intervalCap===\"number\"&&e.intervalCap>=1)){throw new TypeError(`Expected \\`intervalCap\\` to be a number from 1 and up, got \\`${(n=(t=e.intervalCap)===null||t===void 0?void 0:t.toString())!==null&&n!==void 0?n:\"\"}\\` (${typeof e.intervalCap})`)}if(e.interval===undefined||!(Number.isFinite(e.interval)&&e.interval>=0)){throw new TypeError(`Expected \\`interval\\` to be a finite number >= 0, got \\`${(s=(r=e.interval)===null||r===void 0?void 0:r.toString())!==null&&s!==void 0?s:\"\"}\\` (${typeof e.interval})`)}this._carryoverConcurrencyCount=e.carryoverConcurrencyCount;this._isIntervalIgnored=e.intervalCap===Infinity||e.interval===0;this._intervalCap=e.intervalCap;this._interval=e.interval;this._queue=new e.queueClass;this._queueClass=e.queueClass;this.concurrency=e.concurrency;this._timeout=e.timeout;this._throwOnTimeout=e.throwOnTimeout===true;this._isPaused=e.autoStart===false}get _doesIntervalAllowAnother(){return this._isIntervalIgnored||this._intervalCount<this._intervalCap}get _doesConcurrentAllowAnother(){return this._pendingCount<this._concurrency}_next(){this._pendingCount--;this._tryToStartAnother();this.emit(\"next\")}_resolvePromises(){this._resolveEmpty();this._resolveEmpty=empty;if(this._pendingCount===0){this._resolveIdle();this._resolveIdle=empty;this.emit(\"idle\")}}_onResumeInterval(){this._onInterval();this._initializeIntervalIfNeeded();this._timeoutId=undefined}_isIntervalPaused(){const e=Date.now();if(this._intervalId===undefined){const t=this._intervalEnd-e;if(t<0){this._intervalCount=this._carryoverConcurrencyCount?this._pendingCount:0}else{if(this._timeoutId===undefined){this._timeoutId=setTimeout((()=>{this._onResumeInterval()}),t)}return true}}return false}_tryToStartAnother(){if(this._queue.size===0){if(this._intervalId){clearInterval(this._intervalId)}this._intervalId=undefined;this._resolvePromises();return false}if(!this._isPaused){const e=!this._isIntervalPaused();if(this._doesIntervalAllowAnother&&this._doesConcurrentAllowAnother){const t=this._queue.dequeue();if(!t){return false}this.emit(\"active\");t();if(e){this._initializeIntervalIfNeeded()}return true}}return false}_initializeIntervalIfNeeded(){if(this._isIntervalIgnored||this._intervalId!==undefined){return}this._intervalId=setInterval((()=>{this._onInterval()}),this._interval);this._intervalEnd=Date.now()+this._interval}_onInterval(){if(this._intervalCount===0&&this._pendingCount===0&&this._intervalId){clearInterval(this._intervalId);this._intervalId=undefined}this._intervalCount=this._carryoverConcurrencyCount?this._pendingCount:0;this._processQueue()}_processQueue(){while(this._tryToStartAnother()){}}get concurrency(){return this._concurrency}set concurrency(e){if(!(typeof e===\"number\"&&e>=1)){throw new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${e}\\` (${typeof e})`)}this._concurrency=e;this._processQueue()}async add(e,t={}){return new Promise(((n,i)=>{const run=async()=>{this._pendingCount++;this._intervalCount++;try{const o=this._timeout===undefined&&t.timeout===undefined?e():r.default(Promise.resolve(e()),t.timeout===undefined?this._timeout:t.timeout,(()=>{if(t.throwOnTimeout===undefined?this._throwOnTimeout:t.throwOnTimeout){i(s)}return undefined}));n(await o)}catch(e){i(e)}this._next()};this._queue.enqueue(run,t);this._tryToStartAnother();this.emit(\"add\")}))}async addAll(e,t){return Promise.all(e.map((async e=>this.add(e,t))))}start(){if(!this._isPaused){return this}this._isPaused=false;this._processQueue();return this}pause(){this._isPaused=true}clear(){this._queue=new this._queueClass}async onEmpty(){if(this._queue.size===0){return}return new Promise((e=>{const t=this._resolveEmpty;this._resolveEmpty=()=>{t();e()}}))}async onIdle(){if(this._pendingCount===0&&this._queue.size===0){return}return new Promise((e=>{const t=this._resolveIdle;this._resolveIdle=()=>{t();e()}}))}get size(){return this._queue.size}sizeBy(e){return this._queue.filter(e).length}get pending(){return this._pendingCount}get isPaused(){return this._isPaused}get timeout(){return this._timeout}set timeout(e){this._timeout=e}}e[\"default\"]=PQueue})();module.exports=n})();","const sharedAsyncLocalStorageNotAvailableError = Object.defineProperty(new Error('Invariant: AsyncLocalStorage accessed in runtime where it is not available'), \"__NEXT_ERROR_CODE\", {\n    value: \"E504\",\n    enumerable: false,\n    configurable: true\n});\nclass FakeAsyncLocalStorage {\n    disable() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    getStore() {\n        // This fake implementation of AsyncLocalStorage always returns `undefined`.\n        return undefined;\n    }\n    run() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    exit() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    enterWith() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    static bind(fn) {\n        return fn;\n    }\n}\nconst maybeGlobalAsyncLocalStorage = typeof globalThis !== 'undefined' && globalThis.AsyncLocalStorage;\nexport function createAsyncLocalStorage() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return new maybeGlobalAsyncLocalStorage();\n    }\n    return new FakeAsyncLocalStorage();\n}\nexport function bindSnapshot(fn) {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.bind(fn);\n    }\n    return FakeAsyncLocalStorage.bind(fn);\n}\nexport function createSnapshot() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.snapshot();\n    }\n    return function(fn, ...args) {\n        return fn(...args);\n    };\n}\n\n//# sourceMappingURL=async-local-storage.js.map","export function isHangingPromiseRejectionError(err) {\n    if (typeof err !== 'object' || err === null || !('digest' in err)) {\n        return false;\n    }\n    return err.digest === HANGING_PROMISE_REJECTION;\n}\nconst HANGING_PROMISE_REJECTION = 'HANGING_PROMISE_REJECTION';\nclass HangingPromiseRejectionError extends Error {\n    constructor(expression){\n        super(`During prerendering, ${expression} rejects when the prerender is complete. Typically these errors are handled by React but if you move ${expression} to a different context by using \\`setTimeout\\`, \\`after\\`, or similar functions you may observe this error and you should handle it in that context.`), this.expression = expression, this.digest = HANGING_PROMISE_REJECTION;\n    }\n}\nconst abortListenersBySignal = new WeakMap();\n/**\n * This function constructs a promise that will never resolve. This is primarily\n * useful for dynamicIO where we use promise resolution timing to determine which\n * parts of a render can be included in a prerender.\n *\n * @internal\n */ export function makeHangingPromise(signal, expression) {\n    if (signal.aborted) {\n        return Promise.reject(new HangingPromiseRejectionError(expression));\n    } else {\n        const hangingPromise = new Promise((_, reject)=>{\n            const boundRejection = reject.bind(null, new HangingPromiseRejectionError(expression));\n            let currentListeners = abortListenersBySignal.get(signal);\n            if (currentListeners) {\n                currentListeners.push(boundRejection);\n            } else {\n                const listeners = [\n                    boundRejection\n                ];\n                abortListenersBySignal.set(signal, listeners);\n                signal.addEventListener('abort', ()=>{\n                    for(let i = 0; i < listeners.length; i++){\n                        listeners[i]();\n                    }\n                }, {\n                    once: true\n                });\n            }\n        });\n        // We are fine if no one actually awaits this promise. We shouldn't consider this an unhandled rejection so\n        // we attach a noop catch handler here to suppress this warning. If you actually await somewhere or construct\n        // your own promise out of it you'll need to ensure you handle the error when it rejects.\n        hangingPromise.catch(ignoreReject);\n        return hangingPromise;\n    }\n}\nfunction ignoreReject() {}\n\n//# sourceMappingURL=dynamic-rendering-utils.js.map","export const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = (...args) => import('@supabase/node-fetch').then(({ default: fetch }) => fetch(...args));\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\n//# sourceMappingURL=helper.js.map","export class FunctionsError extends Error {\n    constructor(message, name = 'FunctionsError', context) {\n        super(message);\n        this.name = name;\n        this.context = context;\n    }\n}\nexport class FunctionsFetchError extends FunctionsError {\n    constructor(context) {\n        super('Failed to send a request to the Edge Function', 'FunctionsFetchError', context);\n    }\n}\nexport class FunctionsRelayError extends FunctionsError {\n    constructor(context) {\n        super('Relay Error invoking the Edge Function', 'FunctionsRelayError', context);\n    }\n}\nexport class FunctionsHttpError extends FunctionsError {\n    constructor(context) {\n        super('Edge Function returned a non-2xx status code', 'FunctionsHttpError', context);\n    }\n}\n// Define the enum for the 'region' property\nexport var FunctionRegion;\n(function (FunctionRegion) {\n    FunctionRegion[\"Any\"] = \"any\";\n    FunctionRegion[\"ApNortheast1\"] = \"ap-northeast-1\";\n    FunctionRegion[\"ApNortheast2\"] = \"ap-northeast-2\";\n    FunctionRegion[\"ApSouth1\"] = \"ap-south-1\";\n    FunctionRegion[\"ApSoutheast1\"] = \"ap-southeast-1\";\n    FunctionRegion[\"ApSoutheast2\"] = \"ap-southeast-2\";\n    FunctionRegion[\"CaCentral1\"] = \"ca-central-1\";\n    FunctionRegion[\"EuCentral1\"] = \"eu-central-1\";\n    FunctionRegion[\"EuWest1\"] = \"eu-west-1\";\n    FunctionRegion[\"EuWest2\"] = \"eu-west-2\";\n    FunctionRegion[\"EuWest3\"] = \"eu-west-3\";\n    FunctionRegion[\"SaEast1\"] = \"sa-east-1\";\n    FunctionRegion[\"UsEast1\"] = \"us-east-1\";\n    FunctionRegion[\"UsWest1\"] = \"us-west-1\";\n    FunctionRegion[\"UsWest2\"] = \"us-west-2\";\n})(FunctionRegion || (FunctionRegion = {}));\n//# sourceMappingURL=types.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { resolveFetch } from './helper';\nimport { FunctionsFetchError, FunctionsHttpError, FunctionsRelayError, FunctionRegion, } from './types';\nexport class FunctionsClient {\n    constructor(url, { headers = {}, customFetch, region = FunctionRegion.Any, } = {}) {\n        this.url = url;\n        this.headers = headers;\n        this.region = region;\n        this.fetch = resolveFetch(customFetch);\n    }\n    /**\n     * Updates the authorization header\n     * @param token - the new jwt token sent in the authorisation header\n     */\n    setAuth(token) {\n        this.headers.Authorization = `Bearer ${token}`;\n    }\n    /**\n     * Invokes a function\n     * @param functionName - The name of the Function to invoke.\n     * @param options - Options for invoking the Function.\n     */\n    invoke(functionName, options = {}) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { headers, method, body: functionArgs } = options;\n                let _headers = {};\n                let { region } = options;\n                if (!region) {\n                    region = this.region;\n                }\n                if (region && region !== 'any') {\n                    _headers['x-region'] = region;\n                }\n                let body;\n                if (functionArgs &&\n                    ((headers && !Object.prototype.hasOwnProperty.call(headers, 'Content-Type')) || !headers)) {\n                    if ((typeof Blob !== 'undefined' && functionArgs instanceof Blob) ||\n                        functionArgs instanceof ArrayBuffer) {\n                        // will work for File as File inherits Blob\n                        // also works for ArrayBuffer as it is the same underlying structure as a Blob\n                        _headers['Content-Type'] = 'application/octet-stream';\n                        body = functionArgs;\n                    }\n                    else if (typeof functionArgs === 'string') {\n                        // plain string\n                        _headers['Content-Type'] = 'text/plain';\n                        body = functionArgs;\n                    }\n                    else if (typeof FormData !== 'undefined' && functionArgs instanceof FormData) {\n                        // don't set content-type headers\n                        // Request will automatically add the right boundary value\n                        body = functionArgs;\n                    }\n                    else {\n                        // default, assume this is JSON\n                        _headers['Content-Type'] = 'application/json';\n                        body = JSON.stringify(functionArgs);\n                    }\n                }\n                const response = yield this.fetch(`${this.url}/${functionName}`, {\n                    method: method || 'POST',\n                    // headers priority is (high to low):\n                    // 1. invoke-level headers\n                    // 2. client-level headers\n                    // 3. default Content-Type header\n                    headers: Object.assign(Object.assign(Object.assign({}, _headers), this.headers), headers),\n                    body,\n                }).catch((fetchError) => {\n                    throw new FunctionsFetchError(fetchError);\n                });\n                const isRelayError = response.headers.get('x-relay-error');\n                if (isRelayError && isRelayError === 'true') {\n                    throw new FunctionsRelayError(response);\n                }\n                if (!response.ok) {\n                    throw new FunctionsHttpError(response);\n                }\n                let responseType = ((_a = response.headers.get('Content-Type')) !== null && _a !== void 0 ? _a : 'text/plain').split(';')[0].trim();\n                let data;\n                if (responseType === 'application/json') {\n                    data = yield response.json();\n                }\n                else if (responseType === 'application/octet-stream') {\n                    data = yield response.blob();\n                }\n                else if (responseType === 'text/event-stream') {\n                    data = response;\n                }\n                else if (responseType === 'multipart/form-data') {\n                    data = yield response.formData();\n                }\n                else {\n                    // default to text\n                    data = yield response.text();\n                }\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n}\n//# sourceMappingURL=FunctionsClient.js.map","import index from '../cjs/index.js'\nconst {\n  PostgrestClient,\n  PostgrestQueryBuilder,\n  PostgrestFilterBuilder,\n  PostgrestTransformBuilder,\n  PostgrestBuilder,\n  PostgrestError,\n} = index\n\nexport {\n  PostgrestBuilder,\n  PostgrestClient,\n  PostgrestFilterBuilder,\n  PostgrestQueryBuilder,\n  PostgrestTransformBuilder,\n  PostgrestError,\n}\n\n// compatibility with CJS output\nexport default {\n  PostgrestClient,\n  PostgrestQueryBuilder,\n  PostgrestFilterBuilder,\n  PostgrestTransformBuilder,\n  PostgrestBuilder,\n  PostgrestError,\n}\n","export const version = '2.11.2';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `realtime-js/${version}` };\nexport const VSN = '1.0.0';\nexport const DEFAULT_TIMEOUT = 10000;\nexport const WS_CLOSE_NORMAL = 1000;\nexport var SOCKET_STATES;\n(function (SOCKET_STATES) {\n    SOCKET_STATES[SOCKET_STATES[\"connecting\"] = 0] = \"connecting\";\n    SOCKET_STATES[SOCKET_STATES[\"open\"] = 1] = \"open\";\n    SOCKET_STATES[SOCKET_STATES[\"closing\"] = 2] = \"closing\";\n    SOCKET_STATES[SOCKET_STATES[\"closed\"] = 3] = \"closed\";\n})(SOCKET_STATES || (SOCKET_STATES = {}));\nexport var CHANNEL_STATES;\n(function (CHANNEL_STATES) {\n    CHANNEL_STATES[\"closed\"] = \"closed\";\n    CHANNEL_STATES[\"errored\"] = \"errored\";\n    CHANNEL_STATES[\"joined\"] = \"joined\";\n    CHANNEL_STATES[\"joining\"] = \"joining\";\n    CHANNEL_STATES[\"leaving\"] = \"leaving\";\n})(CHANNEL_STATES || (CHANNEL_STATES = {}));\nexport var CHANNEL_EVENTS;\n(function (CHANNEL_EVENTS) {\n    CHANNEL_EVENTS[\"close\"] = \"phx_close\";\n    CHANNEL_EVENTS[\"error\"] = \"phx_error\";\n    CHANNEL_EVENTS[\"join\"] = \"phx_join\";\n    CHANNEL_EVENTS[\"reply\"] = \"phx_reply\";\n    CHANNEL_EVENTS[\"leave\"] = \"phx_leave\";\n    CHANNEL_EVENTS[\"access_token\"] = \"access_token\";\n})(CHANNEL_EVENTS || (CHANNEL_EVENTS = {}));\nexport var TRANSPORTS;\n(function (TRANSPORTS) {\n    TRANSPORTS[\"websocket\"] = \"websocket\";\n})(TRANSPORTS || (TRANSPORTS = {}));\nexport var CONNECTION_STATE;\n(function (CONNECTION_STATE) {\n    CONNECTION_STATE[\"Connecting\"] = \"connecting\";\n    CONNECTION_STATE[\"Open\"] = \"open\";\n    CONNECTION_STATE[\"Closing\"] = \"closing\";\n    CONNECTION_STATE[\"Closed\"] = \"closed\";\n})(CONNECTION_STATE || (CONNECTION_STATE = {}));\n//# sourceMappingURL=constants.js.map","// This file draws heavily from https://github.com/phoenixframework/phoenix/commit/cf098e9cf7a44ee6479d31d911a97d3c7430c6fe\n// License: https://github.com/phoenixframework/phoenix/blob/master/LICENSE.md\nexport default class Serializer {\n    constructor() {\n        this.HEADER_LENGTH = 1;\n    }\n    decode(rawPayload, callback) {\n        if (rawPayload.constructor === ArrayBuffer) {\n            return callback(this._binaryDecode(rawPayload));\n        }\n        if (typeof rawPayload === 'string') {\n            return callback(JSON.parse(rawPayload));\n        }\n        return callback({});\n    }\n    _binaryDecode(buffer) {\n        const view = new DataView(buffer);\n        const decoder = new TextDecoder();\n        return this._decodeBroadcast(buffer, view, decoder);\n    }\n    _decodeBroadcast(buffer, view, decoder) {\n        const topicSize = view.getUint8(1);\n        const eventSize = view.getUint8(2);\n        let offset = this.HEADER_LENGTH + 2;\n        const topic = decoder.decode(buffer.slice(offset, offset + topicSize));\n        offset = offset + topicSize;\n        const event = decoder.decode(buffer.slice(offset, offset + eventSize));\n        offset = offset + eventSize;\n        const data = JSON.parse(decoder.decode(buffer.slice(offset, buffer.byteLength)));\n        return { ref: null, topic: topic, event: event, payload: data };\n    }\n}\n//# sourceMappingURL=serializer.js.map","/**\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\n *\n * @example\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *      return [1000, 5000, 10000][tries - 1] || 10000\n *    })\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n *    reconnectTimer.scheduleTimeout() // fires after 5000\n *    reconnectTimer.reset()\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n */\nexport default class Timer {\n    constructor(callback, timerCalc) {\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n        this.timer = undefined;\n        this.tries = 0;\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n    }\n    reset() {\n        this.tries = 0;\n        clearTimeout(this.timer);\n    }\n    // Cancels any previous scheduleTimeout and schedules callback\n    scheduleTimeout() {\n        clearTimeout(this.timer);\n        this.timer = setTimeout(() => {\n            this.tries = this.tries + 1;\n            this.callback();\n        }, this.timerCalc(this.tries + 1));\n    }\n}\n//# sourceMappingURL=timer.js.map","/**\n * Helpers to convert the change Payload into native JS types.\n */\n// Adapted from epgsql (src/epgsql_binary.erl), this module licensed under\n// 3-clause BSD found here: https://raw.githubusercontent.com/epgsql/epgsql/devel/LICENSE\nexport var PostgresTypes;\n(function (PostgresTypes) {\n    PostgresTypes[\"abstime\"] = \"abstime\";\n    PostgresTypes[\"bool\"] = \"bool\";\n    PostgresTypes[\"date\"] = \"date\";\n    PostgresTypes[\"daterange\"] = \"daterange\";\n    PostgresTypes[\"float4\"] = \"float4\";\n    PostgresTypes[\"float8\"] = \"float8\";\n    PostgresTypes[\"int2\"] = \"int2\";\n    PostgresTypes[\"int4\"] = \"int4\";\n    PostgresTypes[\"int4range\"] = \"int4range\";\n    PostgresTypes[\"int8\"] = \"int8\";\n    PostgresTypes[\"int8range\"] = \"int8range\";\n    PostgresTypes[\"json\"] = \"json\";\n    PostgresTypes[\"jsonb\"] = \"jsonb\";\n    PostgresTypes[\"money\"] = \"money\";\n    PostgresTypes[\"numeric\"] = \"numeric\";\n    PostgresTypes[\"oid\"] = \"oid\";\n    PostgresTypes[\"reltime\"] = \"reltime\";\n    PostgresTypes[\"text\"] = \"text\";\n    PostgresTypes[\"time\"] = \"time\";\n    PostgresTypes[\"timestamp\"] = \"timestamp\";\n    PostgresTypes[\"timestamptz\"] = \"timestamptz\";\n    PostgresTypes[\"timetz\"] = \"timetz\";\n    PostgresTypes[\"tsrange\"] = \"tsrange\";\n    PostgresTypes[\"tstzrange\"] = \"tstzrange\";\n})(PostgresTypes || (PostgresTypes = {}));\n/**\n * Takes an array of columns and an object of string values then converts each string value\n * to its mapped type.\n *\n * @param {{name: String, type: String}[]} columns\n * @param {Object} record\n * @param {Object} options The map of various options that can be applied to the mapper\n * @param {Array} options.skipTypes The array of types that should not be converted\n *\n * @example convertChangeData([{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age:'33'}, {})\n * //=>{ first_name: 'Paul', age: 33 }\n */\nexport const convertChangeData = (columns, record, options = {}) => {\n    var _a;\n    const skipTypes = (_a = options.skipTypes) !== null && _a !== void 0 ? _a : [];\n    return Object.keys(record).reduce((acc, rec_key) => {\n        acc[rec_key] = convertColumn(rec_key, columns, record, skipTypes);\n        return acc;\n    }, {});\n};\n/**\n * Converts the value of an individual column.\n *\n * @param {String} columnName The column that you want to convert\n * @param {{name: String, type: String}[]} columns All of the columns\n * @param {Object} record The map of string values\n * @param {Array} skipTypes An array of types that should not be converted\n * @return {object} Useless information\n *\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, [])\n * //=> 33\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, ['int4'])\n * //=> \"33\"\n */\nexport const convertColumn = (columnName, columns, record, skipTypes) => {\n    const column = columns.find((x) => x.name === columnName);\n    const colType = column === null || column === void 0 ? void 0 : column.type;\n    const value = record[columnName];\n    if (colType && !skipTypes.includes(colType)) {\n        return convertCell(colType, value);\n    }\n    return noop(value);\n};\n/**\n * If the value of the cell is `null`, returns null.\n * Otherwise converts the string value to the correct type.\n * @param {String} type A postgres column type\n * @param {String} value The cell value\n *\n * @example convertCell('bool', 't')\n * //=> true\n * @example convertCell('int8', '10')\n * //=> 10\n * @example convertCell('_int4', '{1,2,3,4}')\n * //=> [1,2,3,4]\n */\nexport const convertCell = (type, value) => {\n    // if data type is an array\n    if (type.charAt(0) === '_') {\n        const dataType = type.slice(1, type.length);\n        return toArray(value, dataType);\n    }\n    // If not null, convert to correct type.\n    switch (type) {\n        case PostgresTypes.bool:\n            return toBoolean(value);\n        case PostgresTypes.float4:\n        case PostgresTypes.float8:\n        case PostgresTypes.int2:\n        case PostgresTypes.int4:\n        case PostgresTypes.int8:\n        case PostgresTypes.numeric:\n        case PostgresTypes.oid:\n            return toNumber(value);\n        case PostgresTypes.json:\n        case PostgresTypes.jsonb:\n            return toJson(value);\n        case PostgresTypes.timestamp:\n            return toTimestampString(value); // Format to be consistent with PostgREST\n        case PostgresTypes.abstime: // To allow users to cast it based on Timezone\n        case PostgresTypes.date: // To allow users to cast it based on Timezone\n        case PostgresTypes.daterange:\n        case PostgresTypes.int4range:\n        case PostgresTypes.int8range:\n        case PostgresTypes.money:\n        case PostgresTypes.reltime: // To allow users to cast it based on Timezone\n        case PostgresTypes.text:\n        case PostgresTypes.time: // To allow users to cast it based on Timezone\n        case PostgresTypes.timestamptz: // To allow users to cast it based on Timezone\n        case PostgresTypes.timetz: // To allow users to cast it based on Timezone\n        case PostgresTypes.tsrange:\n        case PostgresTypes.tstzrange:\n            return noop(value);\n        default:\n            // Return the value for remaining types\n            return noop(value);\n    }\n};\nconst noop = (value) => {\n    return value;\n};\nexport const toBoolean = (value) => {\n    switch (value) {\n        case 't':\n            return true;\n        case 'f':\n            return false;\n        default:\n            return value;\n    }\n};\nexport const toNumber = (value) => {\n    if (typeof value === 'string') {\n        const parsedValue = parseFloat(value);\n        if (!Number.isNaN(parsedValue)) {\n            return parsedValue;\n        }\n    }\n    return value;\n};\nexport const toJson = (value) => {\n    if (typeof value === 'string') {\n        try {\n            return JSON.parse(value);\n        }\n        catch (error) {\n            console.log(`JSON parse error: ${error}`);\n            return value;\n        }\n    }\n    return value;\n};\n/**\n * Converts a Postgres Array into a native JS array\n *\n * @example toArray('{}', 'int4')\n * //=> []\n * @example toArray('{\"[2021-01-01,2021-12-31)\",\"(2021-01-01,2021-12-32]\"}', 'daterange')\n * //=> ['[2021-01-01,2021-12-31)', '(2021-01-01,2021-12-32]']\n * @example toArray([1,2,3,4], 'int4')\n * //=> [1,2,3,4]\n */\nexport const toArray = (value, type) => {\n    if (typeof value !== 'string') {\n        return value;\n    }\n    const lastIdx = value.length - 1;\n    const closeBrace = value[lastIdx];\n    const openBrace = value[0];\n    // Confirm value is a Postgres array by checking curly brackets\n    if (openBrace === '{' && closeBrace === '}') {\n        let arr;\n        const valTrim = value.slice(1, lastIdx);\n        // TODO: find a better solution to separate Postgres array data\n        try {\n            arr = JSON.parse('[' + valTrim + ']');\n        }\n        catch (_) {\n            // WARNING: splitting on comma does not cover all edge cases\n            arr = valTrim ? valTrim.split(',') : [];\n        }\n        return arr.map((val) => convertCell(type, val));\n    }\n    return value;\n};\n/**\n * Fixes timestamp to be ISO-8601. Swaps the space between the date and time for a 'T'\n * See https://github.com/supabase/supabase/issues/18\n *\n * @example toTimestampString('2019-09-10 00:00:00')\n * //=> '2019-09-10T00:00:00'\n */\nexport const toTimestampString = (value) => {\n    if (typeof value === 'string') {\n        return value.replace(' ', 'T');\n    }\n    return value;\n};\nexport const httpEndpointURL = (socketUrl) => {\n    let url = socketUrl;\n    url = url.replace(/^ws/i, 'http');\n    url = url.replace(/(\\/socket\\/websocket|\\/socket|\\/websocket)\\/?$/i, '');\n    return url.replace(/\\/+$/, '');\n};\n//# sourceMappingURL=transformers.js.map","import { DEFAULT_TIMEOUT } from '../lib/constants';\nexport default class Push {\n    /**\n     * Initializes the Push\n     *\n     * @param channel The Channel\n     * @param event The event, for example `\"phx_join\"`\n     * @param payload The payload, for example `{user_id: 123}`\n     * @param timeout The push timeout in milliseconds\n     */\n    constructor(channel, event, payload = {}, timeout = DEFAULT_TIMEOUT) {\n        this.channel = channel;\n        this.event = event;\n        this.payload = payload;\n        this.timeout = timeout;\n        this.sent = false;\n        this.timeoutTimer = undefined;\n        this.ref = '';\n        this.receivedResp = null;\n        this.recHooks = [];\n        this.refEvent = null;\n    }\n    resend(timeout) {\n        this.timeout = timeout;\n        this._cancelRefEvent();\n        this.ref = '';\n        this.refEvent = null;\n        this.receivedResp = null;\n        this.sent = false;\n        this.send();\n    }\n    send() {\n        if (this._hasReceived('timeout')) {\n            return;\n        }\n        this.startTimeout();\n        this.sent = true;\n        this.channel.socket.push({\n            topic: this.channel.topic,\n            event: this.event,\n            payload: this.payload,\n            ref: this.ref,\n            join_ref: this.channel._joinRef(),\n        });\n    }\n    updatePayload(payload) {\n        this.payload = Object.assign(Object.assign({}, this.payload), payload);\n    }\n    receive(status, callback) {\n        var _a;\n        if (this._hasReceived(status)) {\n            callback((_a = this.receivedResp) === null || _a === void 0 ? void 0 : _a.response);\n        }\n        this.recHooks.push({ status, callback });\n        return this;\n    }\n    startTimeout() {\n        if (this.timeoutTimer) {\n            return;\n        }\n        this.ref = this.channel.socket._makeRef();\n        this.refEvent = this.channel._replyEventName(this.ref);\n        const callback = (payload) => {\n            this._cancelRefEvent();\n            this._cancelTimeout();\n            this.receivedResp = payload;\n            this._matchReceive(payload);\n        };\n        this.channel._on(this.refEvent, {}, callback);\n        this.timeoutTimer = setTimeout(() => {\n            this.trigger('timeout', {});\n        }, this.timeout);\n    }\n    trigger(status, response) {\n        if (this.refEvent)\n            this.channel._trigger(this.refEvent, { status, response });\n    }\n    destroy() {\n        this._cancelRefEvent();\n        this._cancelTimeout();\n    }\n    _cancelRefEvent() {\n        if (!this.refEvent) {\n            return;\n        }\n        this.channel._off(this.refEvent, {});\n    }\n    _cancelTimeout() {\n        clearTimeout(this.timeoutTimer);\n        this.timeoutTimer = undefined;\n    }\n    _matchReceive({ status, response, }) {\n        this.recHooks\n            .filter((h) => h.status === status)\n            .forEach((h) => h.callback(response));\n    }\n    _hasReceived(status) {\n        return this.receivedResp && this.receivedResp.status === status;\n    }\n}\n//# sourceMappingURL=push.js.map","/*\n  This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\n  License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\n*/\nexport var REALTIME_PRESENCE_LISTEN_EVENTS;\n(function (REALTIME_PRESENCE_LISTEN_EVENTS) {\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"SYNC\"] = \"sync\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"JOIN\"] = \"join\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"LEAVE\"] = \"leave\";\n})(REALTIME_PRESENCE_LISTEN_EVENTS || (REALTIME_PRESENCE_LISTEN_EVENTS = {}));\nexport default class RealtimePresence {\n    /**\n     * Initializes the Presence.\n     *\n     * @param channel - The RealtimeChannel\n     * @param opts - The options,\n     *        for example `{events: {state: 'state', diff: 'diff'}}`\n     */\n    constructor(channel, opts) {\n        this.channel = channel;\n        this.state = {};\n        this.pendingDiffs = [];\n        this.joinRef = null;\n        this.caller = {\n            onJoin: () => { },\n            onLeave: () => { },\n            onSync: () => { },\n        };\n        const events = (opts === null || opts === void 0 ? void 0 : opts.events) || {\n            state: 'presence_state',\n            diff: 'presence_diff',\n        };\n        this.channel._on(events.state, {}, (newState) => {\n            const { onJoin, onLeave, onSync } = this.caller;\n            this.joinRef = this.channel._joinRef();\n            this.state = RealtimePresence.syncState(this.state, newState, onJoin, onLeave);\n            this.pendingDiffs.forEach((diff) => {\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n            });\n            this.pendingDiffs = [];\n            onSync();\n        });\n        this.channel._on(events.diff, {}, (diff) => {\n            const { onJoin, onLeave, onSync } = this.caller;\n            if (this.inPendingSyncState()) {\n                this.pendingDiffs.push(diff);\n            }\n            else {\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n                onSync();\n            }\n        });\n        this.onJoin((key, currentPresences, newPresences) => {\n            this.channel._trigger('presence', {\n                event: 'join',\n                key,\n                currentPresences,\n                newPresences,\n            });\n        });\n        this.onLeave((key, currentPresences, leftPresences) => {\n            this.channel._trigger('presence', {\n                event: 'leave',\n                key,\n                currentPresences,\n                leftPresences,\n            });\n        });\n        this.onSync(() => {\n            this.channel._trigger('presence', { event: 'sync' });\n        });\n    }\n    /**\n     * Used to sync the list of presences on the server with the\n     * client's state.\n     *\n     * An optional `onJoin` and `onLeave` callback can be provided to\n     * react to changes in the client's local presences across\n     * disconnects and reconnects with the server.\n     *\n     * @internal\n     */\n    static syncState(currentState, newState, onJoin, onLeave) {\n        const state = this.cloneDeep(currentState);\n        const transformedState = this.transformState(newState);\n        const joins = {};\n        const leaves = {};\n        this.map(state, (key, presences) => {\n            if (!transformedState[key]) {\n                leaves[key] = presences;\n            }\n        });\n        this.map(transformedState, (key, newPresences) => {\n            const currentPresences = state[key];\n            if (currentPresences) {\n                const newPresenceRefs = newPresences.map((m) => m.presence_ref);\n                const curPresenceRefs = currentPresences.map((m) => m.presence_ref);\n                const joinedPresences = newPresences.filter((m) => curPresenceRefs.indexOf(m.presence_ref) < 0);\n                const leftPresences = currentPresences.filter((m) => newPresenceRefs.indexOf(m.presence_ref) < 0);\n                if (joinedPresences.length > 0) {\n                    joins[key] = joinedPresences;\n                }\n                if (leftPresences.length > 0) {\n                    leaves[key] = leftPresences;\n                }\n            }\n            else {\n                joins[key] = newPresences;\n            }\n        });\n        return this.syncDiff(state, { joins, leaves }, onJoin, onLeave);\n    }\n    /**\n     * Used to sync a diff of presence join and leave events from the\n     * server, as they happen.\n     *\n     * Like `syncState`, `syncDiff` accepts optional `onJoin` and\n     * `onLeave` callbacks to react to a user joining or leaving from a\n     * device.\n     *\n     * @internal\n     */\n    static syncDiff(state, diff, onJoin, onLeave) {\n        const { joins, leaves } = {\n            joins: this.transformState(diff.joins),\n            leaves: this.transformState(diff.leaves),\n        };\n        if (!onJoin) {\n            onJoin = () => { };\n        }\n        if (!onLeave) {\n            onLeave = () => { };\n        }\n        this.map(joins, (key, newPresences) => {\n            var _a;\n            const currentPresences = (_a = state[key]) !== null && _a !== void 0 ? _a : [];\n            state[key] = this.cloneDeep(newPresences);\n            if (currentPresences.length > 0) {\n                const joinedPresenceRefs = state[key].map((m) => m.presence_ref);\n                const curPresences = currentPresences.filter((m) => joinedPresenceRefs.indexOf(m.presence_ref) < 0);\n                state[key].unshift(...curPresences);\n            }\n            onJoin(key, currentPresences, newPresences);\n        });\n        this.map(leaves, (key, leftPresences) => {\n            let currentPresences = state[key];\n            if (!currentPresences)\n                return;\n            const presenceRefsToRemove = leftPresences.map((m) => m.presence_ref);\n            currentPresences = currentPresences.filter((m) => presenceRefsToRemove.indexOf(m.presence_ref) < 0);\n            state[key] = currentPresences;\n            onLeave(key, currentPresences, leftPresences);\n            if (currentPresences.length === 0)\n                delete state[key];\n        });\n        return state;\n    }\n    /** @internal */\n    static map(obj, func) {\n        return Object.getOwnPropertyNames(obj).map((key) => func(key, obj[key]));\n    }\n    /**\n     * Remove 'metas' key\n     * Change 'phx_ref' to 'presence_ref'\n     * Remove 'phx_ref' and 'phx_ref_prev'\n     *\n     * @example\n     * // returns {\n     *  abc123: [\n     *    { presence_ref: '2', user_id: 1 },\n     *    { presence_ref: '3', user_id: 2 }\n     *  ]\n     * }\n     * RealtimePresence.transformState({\n     *  abc123: {\n     *    metas: [\n     *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\n     *      { phx_ref: '3', user_id: 2 }\n     *    ]\n     *  }\n     * })\n     *\n     * @internal\n     */\n    static transformState(state) {\n        state = this.cloneDeep(state);\n        return Object.getOwnPropertyNames(state).reduce((newState, key) => {\n            const presences = state[key];\n            if ('metas' in presences) {\n                newState[key] = presences.metas.map((presence) => {\n                    presence['presence_ref'] = presence['phx_ref'];\n                    delete presence['phx_ref'];\n                    delete presence['phx_ref_prev'];\n                    return presence;\n                });\n            }\n            else {\n                newState[key] = presences;\n            }\n            return newState;\n        }, {});\n    }\n    /** @internal */\n    static cloneDeep(obj) {\n        return JSON.parse(JSON.stringify(obj));\n    }\n    /** @internal */\n    onJoin(callback) {\n        this.caller.onJoin = callback;\n    }\n    /** @internal */\n    onLeave(callback) {\n        this.caller.onLeave = callback;\n    }\n    /** @internal */\n    onSync(callback) {\n        this.caller.onSync = callback;\n    }\n    /** @internal */\n    inPendingSyncState() {\n        return !this.joinRef || this.joinRef !== this.channel._joinRef();\n    }\n}\n//# sourceMappingURL=RealtimePresence.js.map","import { CHANNEL_EVENTS, CHANNEL_STATES } from './lib/constants';\nimport Push from './lib/push';\nimport Timer from './lib/timer';\nimport RealtimePresence from './RealtimePresence';\nimport * as Transformers from './lib/transformers';\nimport { httpEndpointURL } from './lib/transformers';\nexport var REALTIME_POSTGRES_CHANGES_LISTEN_EVENT;\n(function (REALTIME_POSTGRES_CHANGES_LISTEN_EVENT) {\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"ALL\"] = \"*\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"INSERT\"] = \"INSERT\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"UPDATE\"] = \"UPDATE\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"DELETE\"] = \"DELETE\";\n})(REALTIME_POSTGRES_CHANGES_LISTEN_EVENT || (REALTIME_POSTGRES_CHANGES_LISTEN_EVENT = {}));\nexport var REALTIME_LISTEN_TYPES;\n(function (REALTIME_LISTEN_TYPES) {\n    REALTIME_LISTEN_TYPES[\"BROADCAST\"] = \"broadcast\";\n    REALTIME_LISTEN_TYPES[\"PRESENCE\"] = \"presence\";\n    REALTIME_LISTEN_TYPES[\"POSTGRES_CHANGES\"] = \"postgres_changes\";\n    REALTIME_LISTEN_TYPES[\"SYSTEM\"] = \"system\";\n})(REALTIME_LISTEN_TYPES || (REALTIME_LISTEN_TYPES = {}));\nexport var REALTIME_SUBSCRIBE_STATES;\n(function (REALTIME_SUBSCRIBE_STATES) {\n    REALTIME_SUBSCRIBE_STATES[\"SUBSCRIBED\"] = \"SUBSCRIBED\";\n    REALTIME_SUBSCRIBE_STATES[\"TIMED_OUT\"] = \"TIMED_OUT\";\n    REALTIME_SUBSCRIBE_STATES[\"CLOSED\"] = \"CLOSED\";\n    REALTIME_SUBSCRIBE_STATES[\"CHANNEL_ERROR\"] = \"CHANNEL_ERROR\";\n})(REALTIME_SUBSCRIBE_STATES || (REALTIME_SUBSCRIBE_STATES = {}));\nexport const REALTIME_CHANNEL_STATES = CHANNEL_STATES;\n/** A channel is the basic building block of Realtime\n * and narrows the scope of data flow to subscribed clients.\n * You can think of a channel as a chatroom where participants are able to see who's online\n * and send and receive messages.\n */\nexport default class RealtimeChannel {\n    constructor(\n    /** Topic name can be any string. */\n    topic, params = { config: {} }, socket) {\n        this.topic = topic;\n        this.params = params;\n        this.socket = socket;\n        this.bindings = {};\n        this.state = CHANNEL_STATES.closed;\n        this.joinedOnce = false;\n        this.pushBuffer = [];\n        this.subTopic = topic.replace(/^realtime:/i, '');\n        this.params.config = Object.assign({\n            broadcast: { ack: false, self: false },\n            presence: { key: '' },\n            private: false,\n        }, params.config);\n        this.timeout = this.socket.timeout;\n        this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n        this.rejoinTimer = new Timer(() => this._rejoinUntilConnected(), this.socket.reconnectAfterMs);\n        this.joinPush.receive('ok', () => {\n            this.state = CHANNEL_STATES.joined;\n            this.rejoinTimer.reset();\n            this.pushBuffer.forEach((pushEvent) => pushEvent.send());\n            this.pushBuffer = [];\n        });\n        this._onClose(() => {\n            this.rejoinTimer.reset();\n            this.socket.log('channel', `close ${this.topic} ${this._joinRef()}`);\n            this.state = CHANNEL_STATES.closed;\n            this.socket._remove(this);\n        });\n        this._onError((reason) => {\n            if (this._isLeaving() || this._isClosed()) {\n                return;\n            }\n            this.socket.log('channel', `error ${this.topic}`, reason);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.joinPush.receive('timeout', () => {\n            if (!this._isJoining()) {\n                return;\n            }\n            this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this._on(CHANNEL_EVENTS.reply, {}, (payload, ref) => {\n            this._trigger(this._replyEventName(ref), payload);\n        });\n        this.presence = new RealtimePresence(this);\n        this.broadcastEndpointURL =\n            httpEndpointURL(this.socket.endPoint) + '/api/broadcast';\n        this.private = this.params.config.private || false;\n    }\n    /** Subscribe registers your client with the server */\n    subscribe(callback, timeout = this.timeout) {\n        var _a, _b;\n        if (!this.socket.isConnected()) {\n            this.socket.connect();\n        }\n        if (this.joinedOnce) {\n            throw `tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance`;\n        }\n        else {\n            const { config: { broadcast, presence, private: isPrivate }, } = this.params;\n            this._onError((e) => callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.CHANNEL_ERROR, e));\n            this._onClose(() => callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.CLOSED));\n            const accessTokenPayload = {};\n            const config = {\n                broadcast,\n                presence,\n                postgres_changes: (_b = (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.map((r) => r.filter)) !== null && _b !== void 0 ? _b : [],\n                private: isPrivate,\n            };\n            if (this.socket.accessTokenValue) {\n                accessTokenPayload.access_token = this.socket.accessTokenValue;\n            }\n            this.updateJoinPayload(Object.assign({ config }, accessTokenPayload));\n            this.joinedOnce = true;\n            this._rejoin(timeout);\n            this.joinPush\n                .receive('ok', async ({ postgres_changes }) => {\n                var _a;\n                this.socket.setAuth();\n                if (postgres_changes === undefined) {\n                    callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.SUBSCRIBED);\n                    return;\n                }\n                else {\n                    const clientPostgresBindings = this.bindings.postgres_changes;\n                    const bindingsLen = (_a = clientPostgresBindings === null || clientPostgresBindings === void 0 ? void 0 : clientPostgresBindings.length) !== null && _a !== void 0 ? _a : 0;\n                    const newPostgresBindings = [];\n                    for (let i = 0; i < bindingsLen; i++) {\n                        const clientPostgresBinding = clientPostgresBindings[i];\n                        const { filter: { event, schema, table, filter }, } = clientPostgresBinding;\n                        const serverPostgresFilter = postgres_changes && postgres_changes[i];\n                        if (serverPostgresFilter &&\n                            serverPostgresFilter.event === event &&\n                            serverPostgresFilter.schema === schema &&\n                            serverPostgresFilter.table === table &&\n                            serverPostgresFilter.filter === filter) {\n                            newPostgresBindings.push(Object.assign(Object.assign({}, clientPostgresBinding), { id: serverPostgresFilter.id }));\n                        }\n                        else {\n                            this.unsubscribe();\n                            callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.CHANNEL_ERROR, new Error('mismatch between server and client bindings for postgres changes'));\n                            return;\n                        }\n                    }\n                    this.bindings.postgres_changes = newPostgresBindings;\n                    callback && callback(REALTIME_SUBSCRIBE_STATES.SUBSCRIBED);\n                    return;\n                }\n            })\n                .receive('error', (error) => {\n                callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.CHANNEL_ERROR, new Error(JSON.stringify(Object.values(error).join(', ') || 'error')));\n                return;\n            })\n                .receive('timeout', () => {\n                callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.TIMED_OUT);\n                return;\n            });\n        }\n        return this;\n    }\n    presenceState() {\n        return this.presence.state;\n    }\n    async track(payload, opts = {}) {\n        return await this.send({\n            type: 'presence',\n            event: 'track',\n            payload,\n        }, opts.timeout || this.timeout);\n    }\n    async untrack(opts = {}) {\n        return await this.send({\n            type: 'presence',\n            event: 'untrack',\n        }, opts);\n    }\n    on(type, filter, callback) {\n        return this._on(type, filter, callback);\n    }\n    /**\n     * Sends a message into the channel.\n     *\n     * @param args Arguments to send to channel\n     * @param args.type The type of event to send\n     * @param args.event The name of the event being sent\n     * @param args.payload Payload to be sent\n     * @param opts Options to be used during the send process\n     */\n    async send(args, opts = {}) {\n        var _a, _b;\n        if (!this._canPush() && args.type === 'broadcast') {\n            const { event, payload: endpoint_payload } = args;\n            const authorization = this.socket.accessTokenValue\n                ? `Bearer ${this.socket.accessTokenValue}`\n                : '';\n            const options = {\n                method: 'POST',\n                headers: {\n                    Authorization: authorization,\n                    apikey: this.socket.apiKey ? this.socket.apiKey : '',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    messages: [\n                        {\n                            topic: this.subTopic,\n                            event,\n                            payload: endpoint_payload,\n                            private: this.private,\n                        },\n                    ],\n                }),\n            };\n            try {\n                const response = await this._fetchWithTimeout(this.broadcastEndpointURL, options, (_a = opts.timeout) !== null && _a !== void 0 ? _a : this.timeout);\n                await ((_b = response.body) === null || _b === void 0 ? void 0 : _b.cancel());\n                return response.ok ? 'ok' : 'error';\n            }\n            catch (error) {\n                if (error.name === 'AbortError') {\n                    return 'timed out';\n                }\n                else {\n                    return 'error';\n                }\n            }\n        }\n        else {\n            return new Promise((resolve) => {\n                var _a, _b, _c;\n                const push = this._push(args.type, args, opts.timeout || this.timeout);\n                if (args.type === 'broadcast' && !((_c = (_b = (_a = this.params) === null || _a === void 0 ? void 0 : _a.config) === null || _b === void 0 ? void 0 : _b.broadcast) === null || _c === void 0 ? void 0 : _c.ack)) {\n                    resolve('ok');\n                }\n                push.receive('ok', () => resolve('ok'));\n                push.receive('error', () => resolve('error'));\n                push.receive('timeout', () => resolve('timed out'));\n            });\n        }\n    }\n    updateJoinPayload(payload) {\n        this.joinPush.updatePayload(payload);\n    }\n    /**\n     * Leaves the channel.\n     *\n     * Unsubscribes from server events, and instructs channel to terminate on server.\n     * Triggers onClose() hooks.\n     *\n     * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n     * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n     */\n    unsubscribe(timeout = this.timeout) {\n        this.state = CHANNEL_STATES.leaving;\n        const onClose = () => {\n            this.socket.log('channel', `leave ${this.topic}`);\n            this._trigger(CHANNEL_EVENTS.close, 'leave', this._joinRef());\n        };\n        this.rejoinTimer.reset();\n        // Destroy joinPush to avoid connection timeouts during unscription phase\n        this.joinPush.destroy();\n        return new Promise((resolve) => {\n            const leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);\n            leavePush\n                .receive('ok', () => {\n                onClose();\n                resolve('ok');\n            })\n                .receive('timeout', () => {\n                onClose();\n                resolve('timed out');\n            })\n                .receive('error', () => {\n                resolve('error');\n            });\n            leavePush.send();\n            if (!this._canPush()) {\n                leavePush.trigger('ok', {});\n            }\n        });\n    }\n    /** @internal */\n    async _fetchWithTimeout(url, options, timeout) {\n        const controller = new AbortController();\n        const id = setTimeout(() => controller.abort(), timeout);\n        const response = await this.socket.fetch(url, Object.assign(Object.assign({}, options), { signal: controller.signal }));\n        clearTimeout(id);\n        return response;\n    }\n    /** @internal */\n    _push(event, payload, timeout = this.timeout) {\n        if (!this.joinedOnce) {\n            throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;\n        }\n        let pushEvent = new Push(this, event, payload, timeout);\n        if (this._canPush()) {\n            pushEvent.send();\n        }\n        else {\n            pushEvent.startTimeout();\n            this.pushBuffer.push(pushEvent);\n        }\n        return pushEvent;\n    }\n    /**\n     * Overridable message hook\n     *\n     * Receives all events for specialized message handling before dispatching to the channel callbacks.\n     * Must return the payload, modified or unmodified.\n     *\n     * @internal\n     */\n    _onMessage(_event, payload, _ref) {\n        return payload;\n    }\n    /** @internal */\n    _isMember(topic) {\n        return this.topic === topic;\n    }\n    /** @internal */\n    _joinRef() {\n        return this.joinPush.ref;\n    }\n    /** @internal */\n    _trigger(type, payload, ref) {\n        var _a, _b;\n        const typeLower = type.toLocaleLowerCase();\n        const { close, error, leave, join } = CHANNEL_EVENTS;\n        const events = [close, error, leave, join];\n        if (ref && events.indexOf(typeLower) >= 0 && ref !== this._joinRef()) {\n            return;\n        }\n        let handledPayload = this._onMessage(typeLower, payload, ref);\n        if (payload && !handledPayload) {\n            throw 'channel onMessage callbacks must return the payload, modified or unmodified';\n        }\n        if (['insert', 'update', 'delete'].includes(typeLower)) {\n            (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.filter((bind) => {\n                var _a, _b, _c;\n                return (((_a = bind.filter) === null || _a === void 0 ? void 0 : _a.event) === '*' ||\n                    ((_c = (_b = bind.filter) === null || _b === void 0 ? void 0 : _b.event) === null || _c === void 0 ? void 0 : _c.toLocaleLowerCase()) === typeLower);\n            }).map((bind) => bind.callback(handledPayload, ref));\n        }\n        else {\n            (_b = this.bindings[typeLower]) === null || _b === void 0 ? void 0 : _b.filter((bind) => {\n                var _a, _b, _c, _d, _e, _f;\n                if (['broadcast', 'presence', 'postgres_changes'].includes(typeLower)) {\n                    if ('id' in bind) {\n                        const bindId = bind.id;\n                        const bindEvent = (_a = bind.filter) === null || _a === void 0 ? void 0 : _a.event;\n                        return (bindId &&\n                            ((_b = payload.ids) === null || _b === void 0 ? void 0 : _b.includes(bindId)) &&\n                            (bindEvent === '*' ||\n                                (bindEvent === null || bindEvent === void 0 ? void 0 : bindEvent.toLocaleLowerCase()) ===\n                                    ((_c = payload.data) === null || _c === void 0 ? void 0 : _c.type.toLocaleLowerCase())));\n                    }\n                    else {\n                        const bindEvent = (_e = (_d = bind === null || bind === void 0 ? void 0 : bind.filter) === null || _d === void 0 ? void 0 : _d.event) === null || _e === void 0 ? void 0 : _e.toLocaleLowerCase();\n                        return (bindEvent === '*' ||\n                            bindEvent === ((_f = payload === null || payload === void 0 ? void 0 : payload.event) === null || _f === void 0 ? void 0 : _f.toLocaleLowerCase()));\n                    }\n                }\n                else {\n                    return bind.type.toLocaleLowerCase() === typeLower;\n                }\n            }).map((bind) => {\n                if (typeof handledPayload === 'object' && 'ids' in handledPayload) {\n                    const postgresChanges = handledPayload.data;\n                    const { schema, table, commit_timestamp, type, errors } = postgresChanges;\n                    const enrichedPayload = {\n                        schema: schema,\n                        table: table,\n                        commit_timestamp: commit_timestamp,\n                        eventType: type,\n                        new: {},\n                        old: {},\n                        errors: errors,\n                    };\n                    handledPayload = Object.assign(Object.assign({}, enrichedPayload), this._getPayloadRecords(postgresChanges));\n                }\n                bind.callback(handledPayload, ref);\n            });\n        }\n    }\n    /** @internal */\n    _isClosed() {\n        return this.state === CHANNEL_STATES.closed;\n    }\n    /** @internal */\n    _isJoined() {\n        return this.state === CHANNEL_STATES.joined;\n    }\n    /** @internal */\n    _isJoining() {\n        return this.state === CHANNEL_STATES.joining;\n    }\n    /** @internal */\n    _isLeaving() {\n        return this.state === CHANNEL_STATES.leaving;\n    }\n    /** @internal */\n    _replyEventName(ref) {\n        return `chan_reply_${ref}`;\n    }\n    /** @internal */\n    _on(type, filter, callback) {\n        const typeLower = type.toLocaleLowerCase();\n        const binding = {\n            type: typeLower,\n            filter: filter,\n            callback: callback,\n        };\n        if (this.bindings[typeLower]) {\n            this.bindings[typeLower].push(binding);\n        }\n        else {\n            this.bindings[typeLower] = [binding];\n        }\n        return this;\n    }\n    /** @internal */\n    _off(type, filter) {\n        const typeLower = type.toLocaleLowerCase();\n        this.bindings[typeLower] = this.bindings[typeLower].filter((bind) => {\n            var _a;\n            return !(((_a = bind.type) === null || _a === void 0 ? void 0 : _a.toLocaleLowerCase()) === typeLower &&\n                RealtimeChannel.isEqual(bind.filter, filter));\n        });\n        return this;\n    }\n    /** @internal */\n    static isEqual(obj1, obj2) {\n        if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n            return false;\n        }\n        for (const k in obj1) {\n            if (obj1[k] !== obj2[k]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /** @internal */\n    _rejoinUntilConnected() {\n        this.rejoinTimer.scheduleTimeout();\n        if (this.socket.isConnected()) {\n            this._rejoin();\n        }\n    }\n    /**\n     * Registers a callback that will be executed when the channel closes.\n     *\n     * @internal\n     */\n    _onClose(callback) {\n        this._on(CHANNEL_EVENTS.close, {}, callback);\n    }\n    /**\n     * Registers a callback that will be executed when the channel encounteres an error.\n     *\n     * @internal\n     */\n    _onError(callback) {\n        this._on(CHANNEL_EVENTS.error, {}, (reason) => callback(reason));\n    }\n    /**\n     * Returns `true` if the socket is connected and the channel has been joined.\n     *\n     * @internal\n     */\n    _canPush() {\n        return this.socket.isConnected() && this._isJoined();\n    }\n    /** @internal */\n    _rejoin(timeout = this.timeout) {\n        if (this._isLeaving()) {\n            return;\n        }\n        this.socket._leaveOpenTopic(this.topic);\n        this.state = CHANNEL_STATES.joining;\n        this.joinPush.resend(timeout);\n    }\n    /** @internal */\n    _getPayloadRecords(payload) {\n        const records = {\n            new: {},\n            old: {},\n        };\n        if (payload.type === 'INSERT' || payload.type === 'UPDATE') {\n            records.new = Transformers.convertChangeData(payload.columns, payload.record);\n        }\n        if (payload.type === 'UPDATE' || payload.type === 'DELETE') {\n            records.old = Transformers.convertChangeData(payload.columns, payload.old_record);\n        }\n        return records;\n    }\n}\n//# sourceMappingURL=RealtimeChannel.js.map","import { CHANNEL_EVENTS, CONNECTION_STATE, DEFAULT_HEADERS, DEFAULT_TIMEOUT, SOCKET_STATES, TRANSPORTS, VSN, WS_CLOSE_NORMAL, } from './lib/constants';\nimport Serializer from './lib/serializer';\nimport Timer from './lib/timer';\nimport { httpEndpointURL } from './lib/transformers';\nimport RealtimeChannel from './RealtimeChannel';\nconst noop = () => { };\nconst NATIVE_WEBSOCKET_AVAILABLE = typeof WebSocket !== 'undefined';\nconst WORKER_SCRIPT = `\n  addEventListener(\"message\", (e) => {\n    if (e.data.event === \"start\") {\n      setInterval(() => postMessage({ event: \"keepAlive\" }), e.data.interval);\n    }\n  });`;\nexport default class RealtimeClient {\n    /**\n     * Initializes the Socket.\n     *\n     * @param endPoint The string WebSocket endpoint, ie, \"ws://example.com/socket\", \"wss://example.com\", \"/socket\" (inherited host & protocol)\n     * @param httpEndpoint The string HTTP endpoint, ie, \"https://example.com\", \"/\" (inherited host & protocol)\n     * @param options.transport The Websocket Transport, for example WebSocket.\n     * @param options.timeout The default timeout in milliseconds to trigger push timeouts.\n     * @param options.params The optional params to pass when connecting.\n     * @param options.headers The optional headers to pass when connecting.\n     * @param options.heartbeatIntervalMs The millisec interval to send a heartbeat message.\n     * @param options.logger The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n     * @param options.encode The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))\n     * @param options.decode The function to decode incoming messages. Defaults to Serializer's decode.\n     * @param options.reconnectAfterMs he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off.\n     * @param options.worker Use Web Worker to set a side flow. Defaults to false.\n     * @param options.workerUrl The URL of the worker script. Defaults to https://realtime.supabase.com/worker.js that includes a heartbeat event call to keep the connection alive.\n     */\n    constructor(endPoint, options) {\n        var _a;\n        this.accessTokenValue = null;\n        this.apiKey = null;\n        this.channels = [];\n        this.endPoint = '';\n        this.httpEndpoint = '';\n        this.headers = DEFAULT_HEADERS;\n        this.params = {};\n        this.timeout = DEFAULT_TIMEOUT;\n        this.heartbeatIntervalMs = 30000;\n        this.heartbeatTimer = undefined;\n        this.pendingHeartbeatRef = null;\n        this.ref = 0;\n        this.logger = noop;\n        this.conn = null;\n        this.sendBuffer = [];\n        this.serializer = new Serializer();\n        this.stateChangeCallbacks = {\n            open: [],\n            close: [],\n            error: [],\n            message: [],\n        };\n        this.accessToken = null;\n        /**\n         * Use either custom fetch, if provided, or default fetch to make HTTP requests\n         *\n         * @internal\n         */\n        this._resolveFetch = (customFetch) => {\n            let _fetch;\n            if (customFetch) {\n                _fetch = customFetch;\n            }\n            else if (typeof fetch === 'undefined') {\n                _fetch = (...args) => import('@supabase/node-fetch').then(({ default: fetch }) => fetch(...args));\n            }\n            else {\n                _fetch = fetch;\n            }\n            return (...args) => _fetch(...args);\n        };\n        this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`;\n        this.httpEndpoint = httpEndpointURL(endPoint);\n        if (options === null || options === void 0 ? void 0 : options.transport) {\n            this.transport = options.transport;\n        }\n        else {\n            this.transport = null;\n        }\n        if (options === null || options === void 0 ? void 0 : options.params)\n            this.params = options.params;\n        if (options === null || options === void 0 ? void 0 : options.headers)\n            this.headers = Object.assign(Object.assign({}, this.headers), options.headers);\n        if (options === null || options === void 0 ? void 0 : options.timeout)\n            this.timeout = options.timeout;\n        if (options === null || options === void 0 ? void 0 : options.logger)\n            this.logger = options.logger;\n        if (options === null || options === void 0 ? void 0 : options.heartbeatIntervalMs)\n            this.heartbeatIntervalMs = options.heartbeatIntervalMs;\n        const accessTokenValue = (_a = options === null || options === void 0 ? void 0 : options.params) === null || _a === void 0 ? void 0 : _a.apikey;\n        if (accessTokenValue) {\n            this.accessTokenValue = accessTokenValue;\n            this.apiKey = accessTokenValue;\n        }\n        this.reconnectAfterMs = (options === null || options === void 0 ? void 0 : options.reconnectAfterMs)\n            ? options.reconnectAfterMs\n            : (tries) => {\n                return [1000, 2000, 5000, 10000][tries - 1] || 10000;\n            };\n        this.encode = (options === null || options === void 0 ? void 0 : options.encode)\n            ? options.encode\n            : (payload, callback) => {\n                return callback(JSON.stringify(payload));\n            };\n        this.decode = (options === null || options === void 0 ? void 0 : options.decode)\n            ? options.decode\n            : this.serializer.decode.bind(this.serializer);\n        this.reconnectTimer = new Timer(async () => {\n            this.disconnect();\n            this.connect();\n        }, this.reconnectAfterMs);\n        this.fetch = this._resolveFetch(options === null || options === void 0 ? void 0 : options.fetch);\n        if (options === null || options === void 0 ? void 0 : options.worker) {\n            if (typeof window !== 'undefined' && !window.Worker) {\n                throw new Error('Web Worker is not supported');\n            }\n            this.worker = (options === null || options === void 0 ? void 0 : options.worker) || false;\n            this.workerUrl = options === null || options === void 0 ? void 0 : options.workerUrl;\n        }\n        this.accessToken = (options === null || options === void 0 ? void 0 : options.accessToken) || null;\n    }\n    /**\n     * Connects the socket, unless already connected.\n     */\n    connect() {\n        if (this.conn) {\n            return;\n        }\n        if (this.transport) {\n            this.conn = new this.transport(this.endpointURL(), undefined, {\n                headers: this.headers,\n            });\n            return;\n        }\n        if (NATIVE_WEBSOCKET_AVAILABLE) {\n            this.conn = new WebSocket(this.endpointURL());\n            this.setupConnection();\n            return;\n        }\n        this.conn = new WSWebSocketDummy(this.endpointURL(), undefined, {\n            close: () => {\n                this.conn = null;\n            },\n        });\n        import('ws').then(({ default: WS }) => {\n            this.conn = new WS(this.endpointURL(), undefined, {\n                headers: this.headers,\n            });\n            this.setupConnection();\n        });\n    }\n    /**\n     * Returns the URL of the websocket.\n     * @returns string The URL of the websocket.\n     */\n    endpointURL() {\n        return this._appendParams(this.endPoint, Object.assign({}, this.params, { vsn: VSN }));\n    }\n    /**\n     * Disconnects the socket.\n     *\n     * @param code A numeric status code to send on disconnect.\n     * @param reason A custom reason for the disconnect.\n     */\n    disconnect(code, reason) {\n        if (this.conn) {\n            this.conn.onclose = function () { }; // noop\n            if (code) {\n                this.conn.close(code, reason !== null && reason !== void 0 ? reason : '');\n            }\n            else {\n                this.conn.close();\n            }\n            this.conn = null;\n            // remove open handles\n            this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n            this.reconnectTimer.reset();\n        }\n    }\n    /**\n     * Returns all created channels\n     */\n    getChannels() {\n        return this.channels;\n    }\n    /**\n     * Unsubscribes and removes a single channel\n     * @param channel A RealtimeChannel instance\n     */\n    async removeChannel(channel) {\n        const status = await channel.unsubscribe();\n        if (this.channels.length === 0) {\n            this.disconnect();\n        }\n        return status;\n    }\n    /**\n     * Unsubscribes and removes all channels\n     */\n    async removeAllChannels() {\n        const values_1 = await Promise.all(this.channels.map((channel) => channel.unsubscribe()));\n        this.disconnect();\n        return values_1;\n    }\n    /**\n     * Logs the message.\n     *\n     * For customized logging, `this.logger` can be overridden.\n     */\n    log(kind, msg, data) {\n        this.logger(kind, msg, data);\n    }\n    /**\n     * Returns the current state of the socket.\n     */\n    connectionState() {\n        switch (this.conn && this.conn.readyState) {\n            case SOCKET_STATES.connecting:\n                return CONNECTION_STATE.Connecting;\n            case SOCKET_STATES.open:\n                return CONNECTION_STATE.Open;\n            case SOCKET_STATES.closing:\n                return CONNECTION_STATE.Closing;\n            default:\n                return CONNECTION_STATE.Closed;\n        }\n    }\n    /**\n     * Returns `true` is the connection is open.\n     */\n    isConnected() {\n        return this.connectionState() === CONNECTION_STATE.Open;\n    }\n    channel(topic, params = { config: {} }) {\n        const chan = new RealtimeChannel(`realtime:${topic}`, params, this);\n        this.channels.push(chan);\n        return chan;\n    }\n    /**\n     * Push out a message if the socket is connected.\n     *\n     * If the socket is not connected, the message gets enqueued within a local buffer, and sent out when a connection is next established.\n     */\n    push(data) {\n        const { topic, event, payload, ref } = data;\n        const callback = () => {\n            this.encode(data, (result) => {\n                var _a;\n                (_a = this.conn) === null || _a === void 0 ? void 0 : _a.send(result);\n            });\n        };\n        this.log('push', `${topic} ${event} (${ref})`, payload);\n        if (this.isConnected()) {\n            callback();\n        }\n        else {\n            this.sendBuffer.push(callback);\n        }\n    }\n    /**\n     * Sets the JWT access token used for channel subscription authorization and Realtime RLS.\n     *\n     * If param is null it will use the `accessToken` callback function or the token set on the client.\n     *\n     * On callback used, it will set the value of the token internal to the client.\n     *\n     * @param token A JWT string to override the token set on the client.\n     */\n    async setAuth(token = null) {\n        let tokenToSend = token ||\n            (this.accessToken && (await this.accessToken())) ||\n            this.accessTokenValue;\n        if (tokenToSend) {\n            let parsed = null;\n            try {\n                parsed = JSON.parse(atob(tokenToSend.split('.')[1]));\n            }\n            catch (_error) { }\n            if (parsed && parsed.exp) {\n                let now = Math.floor(Date.now() / 1000);\n                let valid = now - parsed.exp < 0;\n                if (!valid) {\n                    this.log('auth', `InvalidJWTToken: Invalid value for JWT claim \"exp\" with value ${parsed.exp}`);\n                    return Promise.reject(`InvalidJWTToken: Invalid value for JWT claim \"exp\" with value ${parsed.exp}`);\n                }\n            }\n            this.accessTokenValue = tokenToSend;\n            this.channels.forEach((channel) => {\n                tokenToSend && channel.updateJoinPayload({ access_token: tokenToSend });\n                if (channel.joinedOnce && channel._isJoined()) {\n                    channel._push(CHANNEL_EVENTS.access_token, {\n                        access_token: tokenToSend,\n                    });\n                }\n            });\n        }\n    }\n    /**\n     * Sends a heartbeat message if the socket is connected.\n     */\n    async sendHeartbeat() {\n        var _a;\n        if (!this.isConnected()) {\n            return;\n        }\n        if (this.pendingHeartbeatRef) {\n            this.pendingHeartbeatRef = null;\n            this.log('transport', 'heartbeat timeout. Attempting to re-establish connection');\n            (_a = this.conn) === null || _a === void 0 ? void 0 : _a.close(WS_CLOSE_NORMAL, 'hearbeat timeout');\n            return;\n        }\n        this.pendingHeartbeatRef = this._makeRef();\n        this.push({\n            topic: 'phoenix',\n            event: 'heartbeat',\n            payload: {},\n            ref: this.pendingHeartbeatRef,\n        });\n        this.setAuth();\n    }\n    /**\n     * Flushes send buffer\n     */\n    flushSendBuffer() {\n        if (this.isConnected() && this.sendBuffer.length > 0) {\n            this.sendBuffer.forEach((callback) => callback());\n            this.sendBuffer = [];\n        }\n    }\n    /**\n     * Return the next message ref, accounting for overflows\n     *\n     * @internal\n     */\n    _makeRef() {\n        let newRef = this.ref + 1;\n        if (newRef === this.ref) {\n            this.ref = 0;\n        }\n        else {\n            this.ref = newRef;\n        }\n        return this.ref.toString();\n    }\n    /**\n     * Unsubscribe from channels with the specified topic.\n     *\n     * @internal\n     */\n    _leaveOpenTopic(topic) {\n        let dupChannel = this.channels.find((c) => c.topic === topic && (c._isJoined() || c._isJoining()));\n        if (dupChannel) {\n            this.log('transport', `leaving duplicate topic \"${topic}\"`);\n            dupChannel.unsubscribe();\n        }\n    }\n    /**\n     * Removes a subscription from the socket.\n     *\n     * @param channel An open subscription.\n     *\n     * @internal\n     */\n    _remove(channel) {\n        this.channels = this.channels.filter((c) => c._joinRef() !== channel._joinRef());\n    }\n    /**\n     * Sets up connection handlers.\n     *\n     * @internal\n     */\n    setupConnection() {\n        if (this.conn) {\n            this.conn.binaryType = 'arraybuffer';\n            this.conn.onopen = () => this._onConnOpen();\n            this.conn.onerror = (error) => this._onConnError(error);\n            this.conn.onmessage = (event) => this._onConnMessage(event);\n            this.conn.onclose = (event) => this._onConnClose(event);\n        }\n    }\n    /** @internal */\n    _onConnMessage(rawMessage) {\n        this.decode(rawMessage.data, (msg) => {\n            let { topic, event, payload, ref } = msg;\n            if (ref && ref === this.pendingHeartbeatRef) {\n                this.pendingHeartbeatRef = null;\n            }\n            this.log('receive', `${payload.status || ''} ${topic} ${event} ${(ref && '(' + ref + ')') || ''}`, payload);\n            this.channels\n                .filter((channel) => channel._isMember(topic))\n                .forEach((channel) => channel._trigger(event, payload, ref));\n            this.stateChangeCallbacks.message.forEach((callback) => callback(msg));\n        });\n    }\n    /** @internal */\n    async _onConnOpen() {\n        this.log('transport', `connected to ${this.endpointURL()}`);\n        this.flushSendBuffer();\n        this.reconnectTimer.reset();\n        if (!this.worker) {\n            this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n            this.heartbeatTimer = setInterval(() => this.sendHeartbeat(), this.heartbeatIntervalMs);\n        }\n        else {\n            if (this.workerUrl) {\n                this.log('worker', `starting worker for from ${this.workerUrl}`);\n            }\n            else {\n                this.log('worker', `starting default worker`);\n            }\n            const objectUrl = this._workerObjectUrl(this.workerUrl);\n            this.workerRef = new Worker(objectUrl);\n            this.workerRef.onerror = (error) => {\n                this.log('worker', 'worker error', error.message);\n                this.workerRef.terminate();\n            };\n            this.workerRef.onmessage = (event) => {\n                if (event.data.event === 'keepAlive') {\n                    this.sendHeartbeat();\n                }\n            };\n            this.workerRef.postMessage({\n                event: 'start',\n                interval: this.heartbeatIntervalMs,\n            });\n        }\n        this.stateChangeCallbacks.open.forEach((callback) => callback());\n    }\n    /** @internal */\n    _onConnClose(event) {\n        this.log('transport', 'close', event);\n        this._triggerChanError();\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.reconnectTimer.scheduleTimeout();\n        this.stateChangeCallbacks.close.forEach((callback) => callback(event));\n    }\n    /** @internal */\n    _onConnError(error) {\n        this.log('transport', error.message);\n        this._triggerChanError();\n        this.stateChangeCallbacks.error.forEach((callback) => callback(error));\n    }\n    /** @internal */\n    _triggerChanError() {\n        this.channels.forEach((channel) => channel._trigger(CHANNEL_EVENTS.error));\n    }\n    /** @internal */\n    _appendParams(url, params) {\n        if (Object.keys(params).length === 0) {\n            return url;\n        }\n        const prefix = url.match(/\\?/) ? '&' : '?';\n        const query = new URLSearchParams(params);\n        return `${url}${prefix}${query}`;\n    }\n    _workerObjectUrl(url) {\n        let result_url;\n        if (url) {\n            result_url = url;\n        }\n        else {\n            const blob = new Blob([WORKER_SCRIPT], { type: 'application/javascript' });\n            result_url = URL.createObjectURL(blob);\n        }\n        return result_url;\n    }\n}\nclass WSWebSocketDummy {\n    constructor(address, _protocols, options) {\n        this.binaryType = 'arraybuffer';\n        this.onclose = () => { };\n        this.onerror = () => { };\n        this.onmessage = () => { };\n        this.onopen = () => { };\n        this.readyState = SOCKET_STATES.connecting;\n        this.send = () => { };\n        this.url = null;\n        this.url = address;\n        this.close = options.close;\n    }\n}\n//# sourceMappingURL=RealtimeClient.js.map","import RealtimeClient from './RealtimeClient';\nimport RealtimeChannel, { REALTIME_LISTEN_TYPES, REALTIME_POSTGRES_CHANGES_LISTEN_EVENT, REALTIME_SUBSCRIBE_STATES, REALTIME_CHANNEL_STATES, } from './RealtimeChannel';\nimport RealtimePresence, { REALTIME_PRESENCE_LISTEN_EVENTS, } from './RealtimePresence';\nexport { RealtimePresence, RealtimeChannel, RealtimeClient, REALTIME_LISTEN_TYPES, REALTIME_POSTGRES_CHANGES_LISTEN_EVENT, REALTIME_PRESENCE_LISTEN_EVENTS, REALTIME_SUBSCRIBE_STATES, REALTIME_CHANNEL_STATES, };\n//# sourceMappingURL=index.js.map","export class StorageError extends Error {\n    constructor(message) {\n        super(message);\n        this.__isStorageError = true;\n        this.name = 'StorageError';\n    }\n}\nexport function isStorageError(error) {\n    return typeof error === 'object' && error !== null && '__isStorageError' in error;\n}\nexport class StorageApiError extends StorageError {\n    constructor(message, status) {\n        super(message);\n        this.name = 'StorageApiError';\n        this.status = status;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n        };\n    }\n}\nexport class StorageUnknownError extends StorageError {\n    constructor(message, originalError) {\n        super(message);\n        this.name = 'StorageUnknownError';\n        this.originalError = originalError;\n    }\n}\n//# sourceMappingURL=errors.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = (...args) => import('@supabase/node-fetch').then(({ default: fetch }) => fetch(...args));\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\nexport const resolveResponse = () => __awaiter(void 0, void 0, void 0, function* () {\n    if (typeof Response === 'undefined') {\n        // @ts-ignore\n        return (yield import('@supabase/node-fetch')).Response;\n    }\n    return Response;\n});\nexport const recursiveToCamel = (item) => {\n    if (Array.isArray(item)) {\n        return item.map((el) => recursiveToCamel(el));\n    }\n    else if (typeof item === 'function' || item !== Object(item)) {\n        return item;\n    }\n    const result = {};\n    Object.entries(item).forEach(([key, value]) => {\n        const newKey = key.replace(/([-_][a-z])/gi, (c) => c.toUpperCase().replace(/[-_]/g, ''));\n        result[newKey] = recursiveToCamel(value);\n    });\n    return result;\n};\n//# sourceMappingURL=helpers.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { StorageApiError, StorageUnknownError } from './errors';\nimport { resolveResponse } from './helpers';\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst handleError = (error, reject, options) => __awaiter(void 0, void 0, void 0, function* () {\n    const Res = yield resolveResponse();\n    if (error instanceof Res && !(options === null || options === void 0 ? void 0 : options.noResolveJson)) {\n        error\n            .json()\n            .then((err) => {\n            reject(new StorageApiError(_getErrorMessage(err), error.status || 500));\n        })\n            .catch((err) => {\n            reject(new StorageUnknownError(_getErrorMessage(err), err));\n        });\n    }\n    else {\n        reject(new StorageUnknownError(_getErrorMessage(error), error));\n    }\n});\nconst _getRequestParams = (method, options, parameters, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'application/json' }, options === null || options === void 0 ? void 0 : options.headers);\n    if (body) {\n        params.body = JSON.stringify(body);\n    }\n    return Object.assign(Object.assign({}, params), parameters);\n};\nfunction _handleRequest(fetcher, method, url, options, parameters, body) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            fetcher(url, _getRequestParams(method, options, parameters, body))\n                .then((result) => {\n                if (!result.ok)\n                    throw result;\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\n                    return result;\n                return result.json();\n            })\n                .then((data) => resolve(data))\n                .catch((error) => handleError(error, reject, options));\n        });\n    });\n}\nexport function get(fetcher, url, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'GET', url, options, parameters);\n    });\n}\nexport function post(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'POST', url, options, parameters, body);\n    });\n}\nexport function put(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'PUT', url, options, parameters, body);\n    });\n}\nexport function head(fetcher, url, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'HEAD', url, Object.assign(Object.assign({}, options), { noResolveJson: true }), parameters);\n    });\n}\nexport function remove(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'DELETE', url, options, parameters, body);\n    });\n}\n//# sourceMappingURL=fetch.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { isStorageError, StorageError, StorageUnknownError } from '../lib/errors';\nimport { get, head, post, remove } from '../lib/fetch';\nimport { recursiveToCamel, resolveFetch } from '../lib/helpers';\nconst DEFAULT_SEARCH_OPTIONS = {\n    limit: 100,\n    offset: 0,\n    sortBy: {\n        column: 'name',\n        order: 'asc',\n    },\n};\nconst DEFAULT_FILE_OPTIONS = {\n    cacheControl: '3600',\n    contentType: 'text/plain;charset=UTF-8',\n    upsert: false,\n};\nexport default class StorageFileApi {\n    constructor(url, headers = {}, bucketId, fetch) {\n        this.url = url;\n        this.headers = headers;\n        this.bucketId = bucketId;\n        this.fetch = resolveFetch(fetch);\n    }\n    /**\n     * Uploads a file to an existing bucket or replaces an existing file at the specified path with a new one.\n     *\n     * @param method HTTP method.\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    uploadOrUpdate(method, path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let body;\n                const options = Object.assign(Object.assign({}, DEFAULT_FILE_OPTIONS), fileOptions);\n                let headers = Object.assign(Object.assign({}, this.headers), (method === 'POST' && { 'x-upsert': String(options.upsert) }));\n                const metadata = options.metadata;\n                if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\n                    body = new FormData();\n                    body.append('cacheControl', options.cacheControl);\n                    if (metadata) {\n                        body.append('metadata', this.encodeMetadata(metadata));\n                    }\n                    body.append('', fileBody);\n                }\n                else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\n                    body = fileBody;\n                    body.append('cacheControl', options.cacheControl);\n                    if (metadata) {\n                        body.append('metadata', this.encodeMetadata(metadata));\n                    }\n                }\n                else {\n                    body = fileBody;\n                    headers['cache-control'] = `max-age=${options.cacheControl}`;\n                    headers['content-type'] = options.contentType;\n                    if (metadata) {\n                        headers['x-metadata'] = this.toBase64(this.encodeMetadata(metadata));\n                    }\n                }\n                if (fileOptions === null || fileOptions === void 0 ? void 0 : fileOptions.headers) {\n                    headers = Object.assign(Object.assign({}, headers), fileOptions.headers);\n                }\n                const cleanPath = this._removeEmptyFolders(path);\n                const _path = this._getFinalPath(cleanPath);\n                const res = yield this.fetch(`${this.url}/object/${_path}`, Object.assign({ method, body: body, headers }, ((options === null || options === void 0 ? void 0 : options.duplex) ? { duplex: options.duplex } : {})));\n                const data = yield res.json();\n                if (res.ok) {\n                    return {\n                        data: { path: cleanPath, id: data.Id, fullPath: data.Key },\n                        error: null,\n                    };\n                }\n                else {\n                    const error = data;\n                    return { data: null, error };\n                }\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Uploads a file to an existing bucket.\n     *\n     * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    upload(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.uploadOrUpdate('POST', path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Upload a file with a token generated from `createSignedUploadUrl`.\n     * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param token The token generated from `createSignedUploadUrl`\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    uploadToSignedUrl(path, token, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const cleanPath = this._removeEmptyFolders(path);\n            const _path = this._getFinalPath(cleanPath);\n            const url = new URL(this.url + `/object/upload/sign/${_path}`);\n            url.searchParams.set('token', token);\n            try {\n                let body;\n                const options = Object.assign({ upsert: DEFAULT_FILE_OPTIONS.upsert }, fileOptions);\n                const headers = Object.assign(Object.assign({}, this.headers), { 'x-upsert': String(options.upsert) });\n                if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\n                    body = new FormData();\n                    body.append('cacheControl', options.cacheControl);\n                    body.append('', fileBody);\n                }\n                else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\n                    body = fileBody;\n                    body.append('cacheControl', options.cacheControl);\n                }\n                else {\n                    body = fileBody;\n                    headers['cache-control'] = `max-age=${options.cacheControl}`;\n                    headers['content-type'] = options.contentType;\n                }\n                const res = yield this.fetch(url.toString(), {\n                    method: 'PUT',\n                    body: body,\n                    headers,\n                });\n                const data = yield res.json();\n                if (res.ok) {\n                    return {\n                        data: { path: cleanPath, fullPath: data.Key },\n                        error: null,\n                    };\n                }\n                else {\n                    const error = data;\n                    return { data: null, error };\n                }\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates a signed upload URL.\n     * Signed upload URLs can be used to upload files to the bucket without further authentication.\n     * They are valid for 2 hours.\n     * @param path The file path, including the current file name. For example `folder/image.png`.\n     * @param options.upsert If set to true, allows the file to be overwritten if it already exists.\n     */\n    createSignedUploadUrl(path, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let _path = this._getFinalPath(path);\n                const headers = Object.assign({}, this.headers);\n                if (options === null || options === void 0 ? void 0 : options.upsert) {\n                    headers['x-upsert'] = 'true';\n                }\n                const data = yield post(this.fetch, `${this.url}/object/upload/sign/${_path}`, {}, { headers });\n                const url = new URL(this.url + data.url);\n                const token = url.searchParams.get('token');\n                if (!token) {\n                    throw new StorageError('No token returned by API');\n                }\n                return { data: { signedUrl: url.toString(), path, token }, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Replaces an existing file at the specified path with a new one.\n     *\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to update.\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    update(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.uploadOrUpdate('PUT', path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Moves an existing file to a new path in the same bucket.\n     *\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n     * @param toPath The new file path, including the new file name. For example `folder/image-new.png`.\n     * @param options The destination options.\n     */\n    move(fromPath, toPath, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/move`, {\n                    bucketId: this.bucketId,\n                    sourceKey: fromPath,\n                    destinationKey: toPath,\n                    destinationBucket: options === null || options === void 0 ? void 0 : options.destinationBucket,\n                }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Copies an existing file to a new path in the same bucket.\n     *\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n     * @param toPath The new file path, including the new file name. For example `folder/image-copy.png`.\n     * @param options The destination options.\n     */\n    copy(fromPath, toPath, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/copy`, {\n                    bucketId: this.bucketId,\n                    sourceKey: fromPath,\n                    destinationKey: toPath,\n                    destinationBucket: options === null || options === void 0 ? void 0 : options.destinationBucket,\n                }, { headers: this.headers });\n                return { data: { path: data.Key }, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates a signed URL. Use a signed URL to share a file for a fixed amount of time.\n     *\n     * @param path The file path, including the current file name. For example `folder/image.png`.\n     * @param expiresIn The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute.\n     * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n     * @param options.transform Transform the asset before serving it to the client.\n     */\n    createSignedUrl(path, expiresIn, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let _path = this._getFinalPath(path);\n                let data = yield post(this.fetch, `${this.url}/object/sign/${_path}`, Object.assign({ expiresIn }, ((options === null || options === void 0 ? void 0 : options.transform) ? { transform: options.transform } : {})), { headers: this.headers });\n                const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\n                    ? `&download=${options.download === true ? '' : options.download}`\n                    : '';\n                const signedUrl = encodeURI(`${this.url}${data.signedURL}${downloadQueryParam}`);\n                data = { signedUrl };\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates multiple signed URLs. Use a signed URL to share a file for a fixed amount of time.\n     *\n     * @param paths The file paths to be downloaded, including the current file names. For example `['folder/image.png', 'folder2/image2.png']`.\n     * @param expiresIn The number of seconds until the signed URLs expire. For example, `60` for URLs which are valid for one minute.\n     * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n     */\n    createSignedUrls(paths, expiresIn, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/sign/${this.bucketId}`, { expiresIn, paths }, { headers: this.headers });\n                const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\n                    ? `&download=${options.download === true ? '' : options.download}`\n                    : '';\n                return {\n                    data: data.map((datum) => (Object.assign(Object.assign({}, datum), { signedUrl: datum.signedURL\n                            ? encodeURI(`${this.url}${datum.signedURL}${downloadQueryParam}`)\n                            : null }))),\n                    error: null,\n                };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Downloads a file from a private bucket. For public buckets, make a request to the URL returned from `getPublicUrl` instead.\n     *\n     * @param path The full path and file name of the file to be downloaded. For example `folder/image.png`.\n     * @param options.transform Transform the asset before serving it to the client.\n     */\n    download(path, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const wantsTransformation = typeof (options === null || options === void 0 ? void 0 : options.transform) !== 'undefined';\n            const renderPath = wantsTransformation ? 'render/image/authenticated' : 'object';\n            const transformationQuery = this.transformOptsToQueryString((options === null || options === void 0 ? void 0 : options.transform) || {});\n            const queryString = transformationQuery ? `?${transformationQuery}` : '';\n            try {\n                const _path = this._getFinalPath(path);\n                const res = yield get(this.fetch, `${this.url}/${renderPath}/${_path}${queryString}`, {\n                    headers: this.headers,\n                    noResolveJson: true,\n                });\n                const data = yield res.blob();\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves the details of an existing file.\n     * @param path\n     */\n    info(path) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const _path = this._getFinalPath(path);\n            try {\n                const data = yield get(this.fetch, `${this.url}/object/info/${_path}`, {\n                    headers: this.headers,\n                });\n                return { data: recursiveToCamel(data), error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Checks the existence of a file.\n     * @param path\n     */\n    exists(path) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const _path = this._getFinalPath(path);\n            try {\n                yield head(this.fetch, `${this.url}/object/${_path}`, {\n                    headers: this.headers,\n                });\n                return { data: true, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error) && error instanceof StorageUnknownError) {\n                    const originalError = error.originalError;\n                    if ([400, 404].includes(originalError === null || originalError === void 0 ? void 0 : originalError.status)) {\n                        return { data: false, error };\n                    }\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * A simple convenience function to get the URL for an asset in a public bucket. If you do not want to use this function, you can construct the public URL by concatenating the bucket URL with the path to the asset.\n     * This function does not verify if the bucket is public. If a public URL is created for a bucket which is not public, you will not be able to download the asset.\n     *\n     * @param path The path and name of the file to generate the public URL for. For example `folder/image.png`.\n     * @param options.download Triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n     * @param options.transform Transform the asset before serving it to the client.\n     */\n    getPublicUrl(path, options) {\n        const _path = this._getFinalPath(path);\n        const _queryString = [];\n        const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\n            ? `download=${options.download === true ? '' : options.download}`\n            : '';\n        if (downloadQueryParam !== '') {\n            _queryString.push(downloadQueryParam);\n        }\n        const wantsTransformation = typeof (options === null || options === void 0 ? void 0 : options.transform) !== 'undefined';\n        const renderPath = wantsTransformation ? 'render/image' : 'object';\n        const transformationQuery = this.transformOptsToQueryString((options === null || options === void 0 ? void 0 : options.transform) || {});\n        if (transformationQuery !== '') {\n            _queryString.push(transformationQuery);\n        }\n        let queryString = _queryString.join('&');\n        if (queryString !== '') {\n            queryString = `?${queryString}`;\n        }\n        return {\n            data: { publicUrl: encodeURI(`${this.url}/${renderPath}/public/${_path}${queryString}`) },\n        };\n    }\n    /**\n     * Deletes files within the same bucket\n     *\n     * @param paths An array of files to delete, including the path and file name. For example [`'folder/image.png'`].\n     */\n    remove(paths) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/object/${this.bucketId}`, { prefixes: paths }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Get file metadata\n     * @param id the file id to retrieve metadata\n     */\n    // async getMetadata(\n    //   id: string\n    // ): Promise<\n    //   | {\n    //       data: Metadata\n    //       error: null\n    //     }\n    //   | {\n    //       data: null\n    //       error: StorageError\n    //     }\n    // > {\n    //   try {\n    //     const data = await get(this.fetch, `${this.url}/metadata/${id}`, { headers: this.headers })\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     if (isStorageError(error)) {\n    //       return { data: null, error }\n    //     }\n    //     throw error\n    //   }\n    // }\n    /**\n     * Update file metadata\n     * @param id the file id to update metadata\n     * @param meta the new file metadata\n     */\n    // async updateMetadata(\n    //   id: string,\n    //   meta: Metadata\n    // ): Promise<\n    //   | {\n    //       data: Metadata\n    //       error: null\n    //     }\n    //   | {\n    //       data: null\n    //       error: StorageError\n    //     }\n    // > {\n    //   try {\n    //     const data = await post(\n    //       this.fetch,\n    //       `${this.url}/metadata/${id}`,\n    //       { ...meta },\n    //       { headers: this.headers }\n    //     )\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     if (isStorageError(error)) {\n    //       return { data: null, error }\n    //     }\n    //     throw error\n    //   }\n    // }\n    /**\n     * Lists all the files within a bucket.\n     * @param path The folder path.\n     */\n    list(path, options, parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const body = Object.assign(Object.assign(Object.assign({}, DEFAULT_SEARCH_OPTIONS), options), { prefix: path || '' });\n                const data = yield post(this.fetch, `${this.url}/object/list/${this.bucketId}`, body, { headers: this.headers }, parameters);\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    encodeMetadata(metadata) {\n        return JSON.stringify(metadata);\n    }\n    toBase64(data) {\n        if (typeof Buffer !== 'undefined') {\n            return Buffer.from(data).toString('base64');\n        }\n        return btoa(data);\n    }\n    _getFinalPath(path) {\n        return `${this.bucketId}/${path}`;\n    }\n    _removeEmptyFolders(path) {\n        return path.replace(/^\\/|\\/$/g, '').replace(/\\/+/g, '/');\n    }\n    transformOptsToQueryString(transform) {\n        const params = [];\n        if (transform.width) {\n            params.push(`width=${transform.width}`);\n        }\n        if (transform.height) {\n            params.push(`height=${transform.height}`);\n        }\n        if (transform.resize) {\n            params.push(`resize=${transform.resize}`);\n        }\n        if (transform.format) {\n            params.push(`format=${transform.format}`);\n        }\n        if (transform.quality) {\n            params.push(`quality=${transform.quality}`);\n        }\n        return params.join('&');\n    }\n}\n//# sourceMappingURL=StorageFileApi.js.map","// generated by genversion\nexport const version = '2.7.1';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `storage-js/${version}` };\n//# sourceMappingURL=constants.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DEFAULT_HEADERS } from '../lib/constants';\nimport { isStorageError } from '../lib/errors';\nimport { get, post, put, remove } from '../lib/fetch';\nimport { resolveFetch } from '../lib/helpers';\nexport default class StorageBucketApi {\n    constructor(url, headers = {}, fetch) {\n        this.url = url;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), headers);\n        this.fetch = resolveFetch(fetch);\n    }\n    /**\n     * Retrieves the details of all Storage buckets within an existing project.\n     */\n    listBuckets() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/bucket`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves the details of an existing Storage bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to retrieve.\n     */\n    getBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/bucket/${id}`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates a new Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are creating.\n     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private.\n     * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\n     * The global file size limit takes precedence over this value.\n     * The default value is null, which doesn't set a per bucket file size limit.\n     * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\n     * The default value is null, which allows files with all mime types to be uploaded.\n     * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n     * @returns newly created bucket id\n     */\n    createBucket(id, options = {\n        public: false,\n    }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/bucket`, {\n                    id,\n                    name: id,\n                    public: options.public,\n                    file_size_limit: options.fileSizeLimit,\n                    allowed_mime_types: options.allowedMimeTypes,\n                }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Updates a Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are updating.\n     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations.\n     * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\n     * The global file size limit takes precedence over this value.\n     * The default value is null, which doesn't set a per bucket file size limit.\n     * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\n     * The default value is null, which allows files with all mime types to be uploaded.\n     * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n     */\n    updateBucket(id, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield put(this.fetch, `${this.url}/bucket/${id}`, {\n                    id,\n                    name: id,\n                    public: options.public,\n                    file_size_limit: options.fileSizeLimit,\n                    allowed_mime_types: options.allowedMimeTypes,\n                }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Removes all objects inside a single bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to empty.\n     */\n    emptyBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/bucket/${id}/empty`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\n     * You must first `empty()` the bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to delete.\n     */\n    deleteBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/bucket/${id}`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n}\n//# sourceMappingURL=StorageBucketApi.js.map","import StorageFileApi from './packages/StorageFileApi';\nimport StorageBucketApi from './packages/StorageBucketApi';\nexport class StorageClient extends StorageBucketApi {\n    constructor(url, headers = {}, fetch) {\n        super(url, headers, fetch);\n    }\n    /**\n     * Perform file operation in a bucket.\n     *\n     * @param id The bucket id to operate on.\n     */\n    from(id) {\n        return new StorageFileApi(this.url, this.headers, id, this.fetch);\n    }\n}\n//# sourceMappingURL=StorageClient.js.map","export const version = '2.48.1';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nlet JS_ENV = '';\n// @ts-ignore\nif (typeof Deno !== 'undefined') {\n    JS_ENV = 'deno';\n}\nelse if (typeof document !== 'undefined') {\n    JS_ENV = 'web';\n}\nelse if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    JS_ENV = 'react-native';\n}\nelse {\n    JS_ENV = 'node';\n}\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `supabase-js-${JS_ENV}/${version}` };\nexport const DEFAULT_GLOBAL_OPTIONS = {\n    headers: DEFAULT_HEADERS,\n};\nexport const DEFAULT_DB_OPTIONS = {\n    schema: 'public',\n};\nexport const DEFAULT_AUTH_OPTIONS = {\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    flowType: 'implicit',\n};\nexport const DEFAULT_REALTIME_OPTIONS = {};\n//# sourceMappingURL=constants.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// @ts-ignore\nimport nodeFetch, { Headers as NodeFetchHeaders } from '@supabase/node-fetch';\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = nodeFetch;\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\nexport const resolveHeadersConstructor = () => {\n    if (typeof Headers === 'undefined') {\n        return NodeFetchHeaders;\n    }\n    return Headers;\n};\nexport const fetchWithAuth = (supabaseKey, getAccessToken, customFetch) => {\n    const fetch = resolveFetch(customFetch);\n    const HeadersConstructor = resolveHeadersConstructor();\n    return (input, init) => __awaiter(void 0, void 0, void 0, function* () {\n        var _a;\n        const accessToken = (_a = (yield getAccessToken())) !== null && _a !== void 0 ? _a : supabaseKey;\n        let headers = new HeadersConstructor(init === null || init === void 0 ? void 0 : init.headers);\n        if (!headers.has('apikey')) {\n            headers.set('apikey', supabaseKey);\n        }\n        if (!headers.has('Authorization')) {\n            headers.set('Authorization', `Bearer ${accessToken}`);\n        }\n        return fetch(input, Object.assign(Object.assign({}, init), { headers }));\n    });\n};\n//# sourceMappingURL=fetch.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexport function stripTrailingSlash(url) {\n    return url.replace(/\\/$/, '');\n}\nexport const isBrowser = () => typeof window !== 'undefined';\nexport function applySettingDefaults(options, defaults) {\n    const { db: dbOptions, auth: authOptions, realtime: realtimeOptions, global: globalOptions, } = options;\n    const { db: DEFAULT_DB_OPTIONS, auth: DEFAULT_AUTH_OPTIONS, realtime: DEFAULT_REALTIME_OPTIONS, global: DEFAULT_GLOBAL_OPTIONS, } = defaults;\n    const result = {\n        db: Object.assign(Object.assign({}, DEFAULT_DB_OPTIONS), dbOptions),\n        auth: Object.assign(Object.assign({}, DEFAULT_AUTH_OPTIONS), authOptions),\n        realtime: Object.assign(Object.assign({}, DEFAULT_REALTIME_OPTIONS), realtimeOptions),\n        global: Object.assign(Object.assign({}, DEFAULT_GLOBAL_OPTIONS), globalOptions),\n        accessToken: () => __awaiter(this, void 0, void 0, function* () { return ''; }),\n    };\n    if (options.accessToken) {\n        result.accessToken = options.accessToken;\n    }\n    else {\n        // hack around Required<>\n        delete result.accessToken;\n    }\n    return result;\n}\n//# sourceMappingURL=helpers.js.map","export const version = '2.67.3';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const GOTRUE_URL = 'http://localhost:9999';\nexport const STORAGE_KEY = 'supabase.auth.token';\nexport const AUDIENCE = '';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `gotrue-js/${version}` };\nexport const EXPIRY_MARGIN = 10; // in seconds\nexport const NETWORK_FAILURE = {\n    MAX_RETRIES: 10,\n    RETRY_INTERVAL: 2, // in deciseconds\n};\nexport const API_VERSION_HEADER_NAME = 'X-Supabase-Api-Version';\nexport const API_VERSIONS = {\n    '2024-01-01': {\n        timestamp: Date.parse('2024-01-01T00:00:00.0Z'),\n        name: '2024-01-01',\n    },\n};\n//# sourceMappingURL=constants.js.map","import { API_VERSION_HEADER_NAME } from './constants';\nexport function expiresAt(expiresIn) {\n    const timeNow = Math.round(Date.now() / 1000);\n    return timeNow + expiresIn;\n}\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        const r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexport const isBrowser = () => typeof window !== 'undefined' && typeof document !== 'undefined';\nconst localStorageWriteTests = {\n    tested: false,\n    writable: false,\n};\n/**\n * Checks whether localStorage is supported on this browser.\n */\nexport const supportsLocalStorage = () => {\n    if (!isBrowser()) {\n        return false;\n    }\n    try {\n        if (typeof globalThis.localStorage !== 'object') {\n            return false;\n        }\n    }\n    catch (e) {\n        // DOM exception when accessing `localStorage`\n        return false;\n    }\n    if (localStorageWriteTests.tested) {\n        return localStorageWriteTests.writable;\n    }\n    const randomKey = `lswt-${Math.random()}${Math.random()}`;\n    try {\n        globalThis.localStorage.setItem(randomKey, randomKey);\n        globalThis.localStorage.removeItem(randomKey);\n        localStorageWriteTests.tested = true;\n        localStorageWriteTests.writable = true;\n    }\n    catch (e) {\n        // localStorage can't be written to\n        // https://www.chromium.org/for-testers/bug-reporting-guidelines/uncaught-securityerror-failed-to-read-the-localstorage-property-from-window-access-is-denied-for-this-document\n        localStorageWriteTests.tested = true;\n        localStorageWriteTests.writable = false;\n    }\n    return localStorageWriteTests.writable;\n};\n/**\n * Extracts parameters encoded in the URL both in the query and fragment.\n */\nexport function parseParametersFromURL(href) {\n    const result = {};\n    const url = new URL(href);\n    if (url.hash && url.hash[0] === '#') {\n        try {\n            const hashSearchParams = new URLSearchParams(url.hash.substring(1));\n            hashSearchParams.forEach((value, key) => {\n                result[key] = value;\n            });\n        }\n        catch (e) {\n            // hash is not a query string\n        }\n    }\n    // search parameters take precedence over hash parameters\n    url.searchParams.forEach((value, key) => {\n        result[key] = value;\n    });\n    return result;\n}\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = (...args) => import('@supabase/node-fetch').then(({ default: fetch }) => fetch(...args));\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\nexport const looksLikeFetchResponse = (maybeResponse) => {\n    return (typeof maybeResponse === 'object' &&\n        maybeResponse !== null &&\n        'status' in maybeResponse &&\n        'ok' in maybeResponse &&\n        'json' in maybeResponse &&\n        typeof maybeResponse.json === 'function');\n};\n// Storage helpers\nexport const setItemAsync = async (storage, key, data) => {\n    await storage.setItem(key, JSON.stringify(data));\n};\nexport const getItemAsync = async (storage, key) => {\n    const value = await storage.getItem(key);\n    if (!value) {\n        return null;\n    }\n    try {\n        return JSON.parse(value);\n    }\n    catch (_a) {\n        return value;\n    }\n};\nexport const removeItemAsync = async (storage, key) => {\n    await storage.removeItem(key);\n};\nexport function decodeBase64URL(value) {\n    const key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    let base64 = '';\n    let chr1, chr2, chr3;\n    let enc1, enc2, enc3, enc4;\n    let i = 0;\n    value = value.replace('-', '+').replace('_', '/');\n    while (i < value.length) {\n        enc1 = key.indexOf(value.charAt(i++));\n        enc2 = key.indexOf(value.charAt(i++));\n        enc3 = key.indexOf(value.charAt(i++));\n        enc4 = key.indexOf(value.charAt(i++));\n        chr1 = (enc1 << 2) | (enc2 >> 4);\n        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n        chr3 = ((enc3 & 3) << 6) | enc4;\n        base64 = base64 + String.fromCharCode(chr1);\n        if (enc3 != 64 && chr2 != 0) {\n            base64 = base64 + String.fromCharCode(chr2);\n        }\n        if (enc4 != 64 && chr3 != 0) {\n            base64 = base64 + String.fromCharCode(chr3);\n        }\n    }\n    return base64;\n}\n/**\n * A deferred represents some asynchronous work that is not yet finished, which\n * may or may not culminate in a value.\n * Taken from: https://github.com/mike-north/types/blob/master/src/async.ts\n */\nexport class Deferred {\n    constructor() {\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\n        ;\n        this.promise = new Deferred.promiseConstructor((res, rej) => {\n            // eslint-disable-next-line @typescript-eslint/no-extra-semi\n            ;\n            this.resolve = res;\n            this.reject = rej;\n        });\n    }\n}\nDeferred.promiseConstructor = Promise;\n// Taken from: https://stackoverflow.com/questions/38552003/how-to-decode-jwt-token-in-javascript-without-using-a-library\nexport function decodeJWTPayload(token) {\n    // Regex checks for base64url format\n    const base64UrlRegex = /^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}=?$|[a-z0-9_-]{2}(==)?$)$/i;\n    const parts = token.split('.');\n    if (parts.length !== 3) {\n        throw new Error('JWT is not valid: not a JWT structure');\n    }\n    if (!base64UrlRegex.test(parts[1])) {\n        throw new Error('JWT is not valid: payload is not in base64url format');\n    }\n    const base64Url = parts[1];\n    return JSON.parse(decodeBase64URL(base64Url));\n}\n/**\n * Creates a promise that resolves to null after some time.\n */\nexport async function sleep(time) {\n    return await new Promise((accept) => {\n        setTimeout(() => accept(null), time);\n    });\n}\n/**\n * Converts the provided async function into a retryable function. Each result\n * or thrown error is sent to the isRetryable function which should return true\n * if the function should run again.\n */\nexport function retryable(fn, isRetryable) {\n    const promise = new Promise((accept, reject) => {\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\n        ;\n        (async () => {\n            for (let attempt = 0; attempt < Infinity; attempt++) {\n                try {\n                    const result = await fn(attempt);\n                    if (!isRetryable(attempt, null, result)) {\n                        accept(result);\n                        return;\n                    }\n                }\n                catch (e) {\n                    if (!isRetryable(attempt, e)) {\n                        reject(e);\n                        return;\n                    }\n                }\n            }\n        })();\n    });\n    return promise;\n}\nfunction dec2hex(dec) {\n    return ('0' + dec.toString(16)).substr(-2);\n}\n// Functions below taken from: https://stackoverflow.com/questions/63309409/creating-a-code-verifier-and-challenge-for-pkce-auth-on-spotify-api-in-reactjs\nexport function generatePKCEVerifier() {\n    const verifierLength = 56;\n    const array = new Uint32Array(verifierLength);\n    if (typeof crypto === 'undefined') {\n        const charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\n        const charSetLen = charSet.length;\n        let verifier = '';\n        for (let i = 0; i < verifierLength; i++) {\n            verifier += charSet.charAt(Math.floor(Math.random() * charSetLen));\n        }\n        return verifier;\n    }\n    crypto.getRandomValues(array);\n    return Array.from(array, dec2hex).join('');\n}\nasync function sha256(randomString) {\n    const encoder = new TextEncoder();\n    const encodedData = encoder.encode(randomString);\n    const hash = await crypto.subtle.digest('SHA-256', encodedData);\n    const bytes = new Uint8Array(hash);\n    return Array.from(bytes)\n        .map((c) => String.fromCharCode(c))\n        .join('');\n}\nfunction base64urlencode(str) {\n    return btoa(str).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\nexport async function generatePKCEChallenge(verifier) {\n    const hasCryptoSupport = typeof crypto !== 'undefined' &&\n        typeof crypto.subtle !== 'undefined' &&\n        typeof TextEncoder !== 'undefined';\n    if (!hasCryptoSupport) {\n        console.warn('WebCrypto API is not supported. Code challenge method will default to use plain instead of sha256.');\n        return verifier;\n    }\n    const hashed = await sha256(verifier);\n    return base64urlencode(hashed);\n}\nexport async function getCodeChallengeAndMethod(storage, storageKey, isPasswordRecovery = false) {\n    const codeVerifier = generatePKCEVerifier();\n    let storedCodeVerifier = codeVerifier;\n    if (isPasswordRecovery) {\n        storedCodeVerifier += '/PASSWORD_RECOVERY';\n    }\n    await setItemAsync(storage, `${storageKey}-code-verifier`, storedCodeVerifier);\n    const codeChallenge = await generatePKCEChallenge(codeVerifier);\n    const codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\n    return [codeChallenge, codeChallengeMethod];\n}\n/** Parses the API version which is 2YYY-MM-DD. */\nconst API_VERSION_REGEX = /^2[0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])$/i;\nexport function parseResponseAPIVersion(response) {\n    const apiVersion = response.headers.get(API_VERSION_HEADER_NAME);\n    if (!apiVersion) {\n        return null;\n    }\n    if (!apiVersion.match(API_VERSION_REGEX)) {\n        return null;\n    }\n    try {\n        const date = new Date(`${apiVersion}T00:00:00.0Z`);\n        return date;\n    }\n    catch (e) {\n        return null;\n    }\n}\n//# sourceMappingURL=helpers.js.map","export class AuthError extends Error {\n    constructor(message, status, code) {\n        super(message);\n        this.__isAuthError = true;\n        this.name = 'AuthError';\n        this.status = status;\n        this.code = code;\n    }\n}\nexport function isAuthError(error) {\n    return typeof error === 'object' && error !== null && '__isAuthError' in error;\n}\nexport class AuthApiError extends AuthError {\n    constructor(message, status, code) {\n        super(message, status, code);\n        this.name = 'AuthApiError';\n        this.status = status;\n        this.code = code;\n    }\n}\nexport function isAuthApiError(error) {\n    return isAuthError(error) && error.name === 'AuthApiError';\n}\nexport class AuthUnknownError extends AuthError {\n    constructor(message, originalError) {\n        super(message);\n        this.name = 'AuthUnknownError';\n        this.originalError = originalError;\n    }\n}\nexport class CustomAuthError extends AuthError {\n    constructor(message, name, status, code) {\n        super(message, status, code);\n        this.name = name;\n        this.status = status;\n    }\n}\nexport class AuthSessionMissingError extends CustomAuthError {\n    constructor() {\n        super('Auth session missing!', 'AuthSessionMissingError', 400, undefined);\n    }\n}\nexport function isAuthSessionMissingError(error) {\n    return isAuthError(error) && error.name === 'AuthSessionMissingError';\n}\nexport class AuthInvalidTokenResponseError extends CustomAuthError {\n    constructor() {\n        super('Auth session or user missing', 'AuthInvalidTokenResponseError', 500, undefined);\n    }\n}\nexport class AuthInvalidCredentialsError extends CustomAuthError {\n    constructor(message) {\n        super(message, 'AuthInvalidCredentialsError', 400, undefined);\n    }\n}\nexport class AuthImplicitGrantRedirectError extends CustomAuthError {\n    constructor(message, details = null) {\n        super(message, 'AuthImplicitGrantRedirectError', 500, undefined);\n        this.details = null;\n        this.details = details;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n            details: this.details,\n        };\n    }\n}\nexport function isAuthImplicitGrantRedirectError(error) {\n    return isAuthError(error) && error.name === 'AuthImplicitGrantRedirectError';\n}\nexport class AuthPKCEGrantCodeExchangeError extends CustomAuthError {\n    constructor(message, details = null) {\n        super(message, 'AuthPKCEGrantCodeExchangeError', 500, undefined);\n        this.details = null;\n        this.details = details;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n            details: this.details,\n        };\n    }\n}\nexport class AuthRetryableFetchError extends CustomAuthError {\n    constructor(message, status) {\n        super(message, 'AuthRetryableFetchError', status, undefined);\n    }\n}\nexport function isAuthRetryableFetchError(error) {\n    return isAuthError(error) && error.name === 'AuthRetryableFetchError';\n}\n/**\n * This error is thrown on certain methods when the password used is deemed\n * weak. Inspect the reasons to identify what password strength rules are\n * inadequate.\n */\nexport class AuthWeakPasswordError extends CustomAuthError {\n    constructor(message, status, reasons) {\n        super(message, 'AuthWeakPasswordError', status, 'weak_password');\n        this.reasons = reasons;\n    }\n}\nexport function isAuthWeakPasswordError(error) {\n    return isAuthError(error) && error.name === 'AuthWeakPasswordError';\n}\n//# sourceMappingURL=errors.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { API_VERSIONS, API_VERSION_HEADER_NAME } from './constants';\nimport { expiresAt, looksLikeFetchResponse, parseResponseAPIVersion } from './helpers';\nimport { AuthApiError, AuthRetryableFetchError, AuthWeakPasswordError, AuthUnknownError, AuthSessionMissingError, } from './errors';\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst NETWORK_ERROR_CODES = [502, 503, 504];\nexport async function handleError(error) {\n    var _a;\n    if (!looksLikeFetchResponse(error)) {\n        throw new AuthRetryableFetchError(_getErrorMessage(error), 0);\n    }\n    if (NETWORK_ERROR_CODES.includes(error.status)) {\n        // status in 500...599 range - server had an error, request might be retryed.\n        throw new AuthRetryableFetchError(_getErrorMessage(error), error.status);\n    }\n    let data;\n    try {\n        data = await error.json();\n    }\n    catch (e) {\n        throw new AuthUnknownError(_getErrorMessage(e), e);\n    }\n    let errorCode = undefined;\n    const responseAPIVersion = parseResponseAPIVersion(error);\n    if (responseAPIVersion &&\n        responseAPIVersion.getTime() >= API_VERSIONS['2024-01-01'].timestamp &&\n        typeof data === 'object' &&\n        data &&\n        typeof data.code === 'string') {\n        errorCode = data.code;\n    }\n    else if (typeof data === 'object' && data && typeof data.error_code === 'string') {\n        errorCode = data.error_code;\n    }\n    if (!errorCode) {\n        // Legacy support for weak password errors, when there were no error codes\n        if (typeof data === 'object' &&\n            data &&\n            typeof data.weak_password === 'object' &&\n            data.weak_password &&\n            Array.isArray(data.weak_password.reasons) &&\n            data.weak_password.reasons.length &&\n            data.weak_password.reasons.reduce((a, i) => a && typeof i === 'string', true)) {\n            throw new AuthWeakPasswordError(_getErrorMessage(data), error.status, data.weak_password.reasons);\n        }\n    }\n    else if (errorCode === 'weak_password') {\n        throw new AuthWeakPasswordError(_getErrorMessage(data), error.status, ((_a = data.weak_password) === null || _a === void 0 ? void 0 : _a.reasons) || []);\n    }\n    else if (errorCode === 'session_not_found') {\n        // The `session_id` inside the JWT does not correspond to a row in the\n        // `sessions` table. This usually means the user has signed out, has been\n        // deleted, or their session has somehow been terminated.\n        throw new AuthSessionMissingError();\n    }\n    throw new AuthApiError(_getErrorMessage(data), error.status || 500, errorCode);\n}\nconst _getRequestParams = (method, options, parameters, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'application/json;charset=UTF-8' }, options === null || options === void 0 ? void 0 : options.headers);\n    params.body = JSON.stringify(body);\n    return Object.assign(Object.assign({}, params), parameters);\n};\nexport async function _request(fetcher, method, url, options) {\n    var _a;\n    const headers = Object.assign({}, options === null || options === void 0 ? void 0 : options.headers);\n    if (!headers[API_VERSION_HEADER_NAME]) {\n        headers[API_VERSION_HEADER_NAME] = API_VERSIONS['2024-01-01'].name;\n    }\n    if (options === null || options === void 0 ? void 0 : options.jwt) {\n        headers['Authorization'] = `Bearer ${options.jwt}`;\n    }\n    const qs = (_a = options === null || options === void 0 ? void 0 : options.query) !== null && _a !== void 0 ? _a : {};\n    if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n        qs['redirect_to'] = options.redirectTo;\n    }\n    const queryString = Object.keys(qs).length ? '?' + new URLSearchParams(qs).toString() : '';\n    const data = await _handleRequest(fetcher, method, url + queryString, {\n        headers,\n        noResolveJson: options === null || options === void 0 ? void 0 : options.noResolveJson,\n    }, {}, options === null || options === void 0 ? void 0 : options.body);\n    return (options === null || options === void 0 ? void 0 : options.xform) ? options === null || options === void 0 ? void 0 : options.xform(data) : { data: Object.assign({}, data), error: null };\n}\nasync function _handleRequest(fetcher, method, url, options, parameters, body) {\n    const requestParams = _getRequestParams(method, options, parameters, body);\n    let result;\n    try {\n        result = await fetcher(url, Object.assign({}, requestParams));\n    }\n    catch (e) {\n        console.error(e);\n        // fetch failed, likely due to a network or CORS error\n        throw new AuthRetryableFetchError(_getErrorMessage(e), 0);\n    }\n    if (!result.ok) {\n        await handleError(result);\n    }\n    if (options === null || options === void 0 ? void 0 : options.noResolveJson) {\n        return result;\n    }\n    try {\n        return await result.json();\n    }\n    catch (e) {\n        await handleError(e);\n    }\n}\nexport function _sessionResponse(data) {\n    var _a;\n    let session = null;\n    if (hasSession(data)) {\n        session = Object.assign({}, data);\n        if (!data.expires_at) {\n            session.expires_at = expiresAt(data.expires_in);\n        }\n    }\n    const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\n    return { data: { session, user }, error: null };\n}\nexport function _sessionResponsePassword(data) {\n    const response = _sessionResponse(data);\n    if (!response.error &&\n        data.weak_password &&\n        typeof data.weak_password === 'object' &&\n        Array.isArray(data.weak_password.reasons) &&\n        data.weak_password.reasons.length &&\n        data.weak_password.message &&\n        typeof data.weak_password.message === 'string' &&\n        data.weak_password.reasons.reduce((a, i) => a && typeof i === 'string', true)) {\n        response.data.weak_password = data.weak_password;\n    }\n    return response;\n}\nexport function _userResponse(data) {\n    var _a;\n    const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\n    return { data: { user }, error: null };\n}\nexport function _ssoResponse(data) {\n    return { data, error: null };\n}\nexport function _generateLinkResponse(data) {\n    const { action_link, email_otp, hashed_token, redirect_to, verification_type } = data, rest = __rest(data, [\"action_link\", \"email_otp\", \"hashed_token\", \"redirect_to\", \"verification_type\"]);\n    const properties = {\n        action_link,\n        email_otp,\n        hashed_token,\n        redirect_to,\n        verification_type,\n    };\n    const user = Object.assign({}, rest);\n    return {\n        data: {\n            properties,\n            user,\n        },\n        error: null,\n    };\n}\nexport function _noResolveJsonResponse(data) {\n    return data;\n}\n/**\n * hasSession checks if the response object contains a valid session\n * @param data A response object\n * @returns true if a session is in the response\n */\nfunction hasSession(data) {\n    return data.access_token && data.refresh_token && data.expires_in;\n}\n//# sourceMappingURL=fetch.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { _generateLinkResponse, _noResolveJsonResponse, _request, _userResponse, } from './lib/fetch';\nimport { resolveFetch } from './lib/helpers';\nimport { isAuthError } from './lib/errors';\nexport default class GoTrueAdminApi {\n    constructor({ url = '', headers = {}, fetch, }) {\n        this.url = url;\n        this.headers = headers;\n        this.fetch = resolveFetch(fetch);\n        this.mfa = {\n            listFactors: this._listFactors.bind(this),\n            deleteFactor: this._deleteFactor.bind(this),\n        };\n    }\n    /**\n     * Removes a logged-in session.\n     * @param jwt A valid, logged-in JWT.\n     * @param scope The logout sope.\n     */\n    async signOut(jwt, scope = 'global') {\n        try {\n            await _request(this.fetch, 'POST', `${this.url}/logout?scope=${scope}`, {\n                headers: this.headers,\n                jwt,\n                noResolveJson: true,\n            });\n            return { data: null, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Sends an invite link to an email address.\n     * @param email The email address of the user.\n     * @param options Additional options to be included when inviting.\n     */\n    async inviteUserByEmail(email, options = {}) {\n        try {\n            return await _request(this.fetch, 'POST', `${this.url}/invite`, {\n                body: { email, data: options.data },\n                headers: this.headers,\n                redirectTo: options.redirectTo,\n                xform: _userResponse,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Generates email links and OTPs to be sent via a custom email provider.\n     * @param email The user's email.\n     * @param options.password User password. For signup only.\n     * @param options.data Optional user metadata. For signup only.\n     * @param options.redirectTo The redirect url which should be appended to the generated link\n     */\n    async generateLink(params) {\n        try {\n            const { options } = params, rest = __rest(params, [\"options\"]);\n            const body = Object.assign(Object.assign({}, rest), options);\n            if ('newEmail' in rest) {\n                // replace newEmail with new_email in request body\n                body.new_email = rest === null || rest === void 0 ? void 0 : rest.newEmail;\n                delete body['newEmail'];\n            }\n            return await _request(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\n                body: body,\n                headers: this.headers,\n                xform: _generateLinkResponse,\n                redirectTo: options === null || options === void 0 ? void 0 : options.redirectTo,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return {\n                    data: {\n                        properties: null,\n                        user: null,\n                    },\n                    error,\n                };\n            }\n            throw error;\n        }\n    }\n    // User Admin API\n    /**\n     * Creates a new user.\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async createUser(attributes) {\n        try {\n            return await _request(this.fetch, 'POST', `${this.url}/admin/users`, {\n                body: attributes,\n                headers: this.headers,\n                xform: _userResponse,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Get a list of users.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n     */\n    async listUsers(params) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        try {\n            const pagination = { nextPage: null, lastPage: 0, total: 0 };\n            const response = await _request(this.fetch, 'GET', `${this.url}/admin/users`, {\n                headers: this.headers,\n                noResolveJson: true,\n                query: {\n                    page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '',\n                    per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : '',\n                },\n                xform: _noResolveJsonResponse,\n            });\n            if (response.error)\n                throw response.error;\n            const users = await response.json();\n            const total = (_e = response.headers.get('x-total-count')) !== null && _e !== void 0 ? _e : 0;\n            const links = (_g = (_f = response.headers.get('link')) === null || _f === void 0 ? void 0 : _f.split(',')) !== null && _g !== void 0 ? _g : [];\n            if (links.length > 0) {\n                links.forEach((link) => {\n                    const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1));\n                    const rel = JSON.parse(link.split(';')[1].split('=')[1]);\n                    pagination[`${rel}Page`] = page;\n                });\n                pagination.total = parseInt(total);\n            }\n            return { data: Object.assign(Object.assign({}, users), pagination), error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { users: [] }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Get user by id.\n     *\n     * @param uid The user's unique identifier\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async getUserById(uid) {\n        try {\n            return await _request(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\n                headers: this.headers,\n                xform: _userResponse,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Updates the user data.\n     *\n     * @param attributes The data you want to update.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async updateUserById(uid, attributes) {\n        try {\n            return await _request(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\n                body: attributes,\n                headers: this.headers,\n                xform: _userResponse,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Delete a user. Requires a `service_role` key.\n     *\n     * @param id The user id you want to remove.\n     * @param shouldSoftDelete If true, then the user will be soft-deleted from the auth schema. Soft deletion allows user identification from the hashed user ID but is not reversible.\n     * Defaults to false for backward compatibility.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async deleteUser(id, shouldSoftDelete = false) {\n        try {\n            return await _request(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\n                headers: this.headers,\n                body: {\n                    should_soft_delete: shouldSoftDelete,\n                },\n                xform: _userResponse,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    async _listFactors(params) {\n        try {\n            const { data, error } = await _request(this.fetch, 'GET', `${this.url}/admin/users/${params.userId}/factors`, {\n                headers: this.headers,\n                xform: (factors) => {\n                    return { data: { factors }, error: null };\n                },\n            });\n            return { data, error };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    async _deleteFactor(params) {\n        try {\n            const data = await _request(this.fetch, 'DELETE', `${this.url}/admin/users/${params.userId}/factors/${params.id}`, {\n                headers: this.headers,\n            });\n            return { data, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n}\n//# sourceMappingURL=GoTrueAdminApi.js.map","import { supportsLocalStorage } from './helpers';\n/**\n * Provides safe access to the globalThis.localStorage property.\n */\nexport const localStorageAdapter = {\n    getItem: (key) => {\n        if (!supportsLocalStorage()) {\n            return null;\n        }\n        return globalThis.localStorage.getItem(key);\n    },\n    setItem: (key, value) => {\n        if (!supportsLocalStorage()) {\n            return;\n        }\n        globalThis.localStorage.setItem(key, value);\n    },\n    removeItem: (key) => {\n        if (!supportsLocalStorage()) {\n            return;\n        }\n        globalThis.localStorage.removeItem(key);\n    },\n};\n/**\n * Returns a localStorage-like object that stores the key-value pairs in\n * memory.\n */\nexport function memoryLocalStorageAdapter(store = {}) {\n    return {\n        getItem: (key) => {\n            return store[key] || null;\n        },\n        setItem: (key, value) => {\n            store[key] = value;\n        },\n        removeItem: (key) => {\n            delete store[key];\n        },\n    };\n}\n//# sourceMappingURL=local-storage.js.map","/**\n * https://mathiasbynens.be/notes/globalthis\n */\nexport function polyfillGlobalThis() {\n    if (typeof globalThis === 'object')\n        return;\n    try {\n        Object.defineProperty(Object.prototype, '__magic__', {\n            get: function () {\n                return this;\n            },\n            configurable: true,\n        });\n        // @ts-expect-error 'Allow access to magic'\n        __magic__.globalThis = __magic__;\n        // @ts-expect-error 'Allow access to magic'\n        delete Object.prototype.__magic__;\n    }\n    catch (e) {\n        if (typeof self !== 'undefined') {\n            // @ts-expect-error 'Allow access to globals'\n            self.globalThis = self;\n        }\n    }\n}\n//# sourceMappingURL=polyfills.js.map","import { supportsLocalStorage } from './helpers';\n/**\n * @experimental\n */\nexport const internals = {\n    /**\n     * @experimental\n     */\n    debug: !!(globalThis &&\n        supportsLocalStorage() &&\n        globalThis.localStorage &&\n        globalThis.localStorage.getItem('supabase.gotrue-js.locks.debug') === 'true'),\n};\n/**\n * An error thrown when a lock cannot be acquired after some amount of time.\n *\n * Use the {@link #isAcquireTimeout} property instead of checking with `instanceof`.\n */\nexport class LockAcquireTimeoutError extends Error {\n    constructor(message) {\n        super(message);\n        this.isAcquireTimeout = true;\n    }\n}\nexport class NavigatorLockAcquireTimeoutError extends LockAcquireTimeoutError {\n}\nexport class ProcessLockAcquireTimeoutError extends LockAcquireTimeoutError {\n}\n/**\n * Implements a global exclusive lock using the Navigator LockManager API. It\n * is available on all browsers released after 2022-03-15 with Safari being the\n * last one to release support. If the API is not available, this function will\n * throw. Make sure you check availablility before configuring {@link\n * GoTrueClient}.\n *\n * You can turn on debugging by setting the `supabase.gotrue-js.locks.debug`\n * local storage item to `true`.\n *\n * Internals:\n *\n * Since the LockManager API does not preserve stack traces for the async\n * function passed in the `request` method, a trick is used where acquiring the\n * lock releases a previously started promise to run the operation in the `fn`\n * function. The lock waits for that promise to finish (with or without error),\n * while the function will finally wait for the result anyway.\n *\n * @param name Name of the lock to be acquired.\n * @param acquireTimeout If negative, no timeout. If 0 an error is thrown if\n *                       the lock can't be acquired without waiting. If positive, the lock acquire\n *                       will time out after so many milliseconds. An error is\n *                       a timeout if it has `isAcquireTimeout` set to true.\n * @param fn The operation to run once the lock is acquired.\n */\nexport async function navigatorLock(name, acquireTimeout, fn) {\n    if (internals.debug) {\n        console.log('@supabase/gotrue-js: navigatorLock: acquire lock', name, acquireTimeout);\n    }\n    const abortController = new globalThis.AbortController();\n    if (acquireTimeout > 0) {\n        setTimeout(() => {\n            abortController.abort();\n            if (internals.debug) {\n                console.log('@supabase/gotrue-js: navigatorLock acquire timed out', name);\n            }\n        }, acquireTimeout);\n    }\n    // MDN article: https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request\n    // Wrapping navigator.locks.request() with a plain Promise is done as some\n    // libraries like zone.js patch the Promise object to track the execution\n    // context. However, it appears that most browsers use an internal promise\n    // implementation when using the navigator.locks.request() API causing them\n    // to lose context and emit confusing log messages or break certain features.\n    // This wrapping is believed to help zone.js track the execution context\n    // better.\n    return await Promise.resolve().then(() => globalThis.navigator.locks.request(name, acquireTimeout === 0\n        ? {\n            mode: 'exclusive',\n            ifAvailable: true,\n        }\n        : {\n            mode: 'exclusive',\n            signal: abortController.signal,\n        }, async (lock) => {\n        if (lock) {\n            if (internals.debug) {\n                console.log('@supabase/gotrue-js: navigatorLock: acquired', name, lock.name);\n            }\n            try {\n                return await fn();\n            }\n            finally {\n                if (internals.debug) {\n                    console.log('@supabase/gotrue-js: navigatorLock: released', name, lock.name);\n                }\n            }\n        }\n        else {\n            if (acquireTimeout === 0) {\n                if (internals.debug) {\n                    console.log('@supabase/gotrue-js: navigatorLock: not immediately available', name);\n                }\n                throw new NavigatorLockAcquireTimeoutError(`Acquiring an exclusive Navigator LockManager lock \"${name}\" immediately failed`);\n            }\n            else {\n                if (internals.debug) {\n                    try {\n                        const result = await globalThis.navigator.locks.query();\n                        console.log('@supabase/gotrue-js: Navigator LockManager state', JSON.stringify(result, null, '  '));\n                    }\n                    catch (e) {\n                        console.warn('@supabase/gotrue-js: Error when querying Navigator LockManager state', e);\n                    }\n                }\n                // Browser is not following the Navigator LockManager spec, it\n                // returned a null lock when we didn't use ifAvailable. So we can\n                // pretend the lock is acquired in the name of backward compatibility\n                // and user experience and just run the function.\n                console.warn('@supabase/gotrue-js: Navigator LockManager returned a null lock when using #request without ifAvailable set to true, it appears this browser is not following the LockManager spec https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request');\n                return await fn();\n            }\n        }\n    }));\n}\nconst PROCESS_LOCKS = {};\n/**\n * Implements a global exclusive lock that works only in the current process.\n * Useful for environments like React Native or other non-browser\n * single-process (i.e. no concept of \"tabs\") environments.\n *\n * Use {@link #navigatorLock} in browser environments.\n *\n * @param name Name of the lock to be acquired.\n * @param acquireTimeout If negative, no timeout. If 0 an error is thrown if\n *                       the lock can't be acquired without waiting. If positive, the lock acquire\n *                       will time out after so many milliseconds. An error is\n *                       a timeout if it has `isAcquireTimeout` set to true.\n * @param fn The operation to run once the lock is acquired.\n */\nexport async function processLock(name, acquireTimeout, fn) {\n    var _a;\n    const previousOperation = (_a = PROCESS_LOCKS[name]) !== null && _a !== void 0 ? _a : Promise.resolve();\n    const currentOperation = Promise.race([\n        previousOperation.catch(() => {\n            // ignore error of previous operation that we're waiting to finish\n            return null;\n        }),\n        acquireTimeout >= 0\n            ? new Promise((_, reject) => {\n                setTimeout(() => {\n                    reject(new ProcessLockAcquireTimeoutError(`Acquring process lock with name \"${name}\" timed out`));\n                }, acquireTimeout);\n            })\n            : null,\n    ].filter((x) => x))\n        .catch((e) => {\n        if (e && e.isAcquireTimeout) {\n            throw e;\n        }\n        return null;\n    })\n        .then(async () => {\n        // previous operations finished and we didn't get a race on the acquire\n        // timeout, so the current operation can finally start\n        return await fn();\n    });\n    PROCESS_LOCKS[name] = currentOperation.catch(async (e) => {\n        if (e && e.isAcquireTimeout) {\n            // if the current operation timed out, it doesn't mean that the previous\n            // operation finished, so we need contnue waiting for it to finish\n            await previousOperation;\n            return null;\n        }\n        throw e;\n    });\n    // finally wait for the current operation to finish successfully, with an\n    // error or with an acquire timeout error\n    return await currentOperation;\n}\n//# sourceMappingURL=locks.js.map","import GoTrueAdminApi from './GoTrueAdminApi';\nimport { DEFAULT_HEADERS, EXPIRY_MARGIN, GOTRUE_URL, STORAGE_KEY } from './lib/constants';\nimport { AuthImplicitGrantRedirectError, AuthPKCEGrantCodeExchangeError, AuthInvalidCredentialsError, AuthSessionMissingError, AuthInvalidTokenResponseError, AuthUnknownError, isAuthApiError, isAuthError, isAuthRetryableFetchError, isAuthSessionMissingError, isAuthImplicitGrantRedirectError, } from './lib/errors';\nimport { _request, _sessionResponse, _sessionResponsePassword, _userResponse, _ssoResponse, } from './lib/fetch';\nimport { decodeJWTPayload, Deferred, getItemAsync, isBrowser, removeItemAsync, resolveFetch, setItemAsync, uuid, retryable, sleep, supportsLocalStorage, parseParametersFromURL, getCodeChallengeAndMethod, } from './lib/helpers';\nimport { localStorageAdapter, memoryLocalStorageAdapter } from './lib/local-storage';\nimport { polyfillGlobalThis } from './lib/polyfills';\nimport { version } from './lib/version';\nimport { LockAcquireTimeoutError, navigatorLock } from './lib/locks';\npolyfillGlobalThis(); // Make \"globalThis\" available\nconst DEFAULT_OPTIONS = {\n    url: GOTRUE_URL,\n    storageKey: STORAGE_KEY,\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    headers: DEFAULT_HEADERS,\n    flowType: 'implicit',\n    debug: false,\n    hasCustomAuthorizationHeader: false,\n};\n/** Current session will be checked for refresh at this interval. */\nconst AUTO_REFRESH_TICK_DURATION = 30 * 1000;\n/**\n * A token refresh will be attempted this many ticks before the current session expires. */\nconst AUTO_REFRESH_TICK_THRESHOLD = 3;\nasync function lockNoOp(name, acquireTimeout, fn) {\n    return await fn();\n}\nexport default class GoTrueClient {\n    /**\n     * Create a new client for use in the browser.\n     */\n    constructor(options) {\n        var _a, _b;\n        this.memoryStorage = null;\n        this.stateChangeEmitters = new Map();\n        this.autoRefreshTicker = null;\n        this.visibilityChangedCallback = null;\n        this.refreshingDeferred = null;\n        /**\n         * Keeps track of the async client initialization.\n         * When null or not yet resolved the auth state is `unknown`\n         * Once resolved the the auth state is known and it's save to call any further client methods.\n         * Keep extra care to never reject or throw uncaught errors\n         */\n        this.initializePromise = null;\n        this.detectSessionInUrl = true;\n        this.hasCustomAuthorizationHeader = false;\n        this.suppressGetSessionWarning = false;\n        this.lockAcquired = false;\n        this.pendingInLock = [];\n        /**\n         * Used to broadcast state change events to other tabs listening.\n         */\n        this.broadcastChannel = null;\n        this.logger = console.log;\n        this.instanceID = GoTrueClient.nextInstanceID;\n        GoTrueClient.nextInstanceID += 1;\n        if (this.instanceID > 0 && isBrowser()) {\n            console.warn('Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.');\n        }\n        const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n        this.logDebugMessages = !!settings.debug;\n        if (typeof settings.debug === 'function') {\n            this.logger = settings.debug;\n        }\n        this.persistSession = settings.persistSession;\n        this.storageKey = settings.storageKey;\n        this.autoRefreshToken = settings.autoRefreshToken;\n        this.admin = new GoTrueAdminApi({\n            url: settings.url,\n            headers: settings.headers,\n            fetch: settings.fetch,\n        });\n        this.url = settings.url;\n        this.headers = settings.headers;\n        this.fetch = resolveFetch(settings.fetch);\n        this.lock = settings.lock || lockNoOp;\n        this.detectSessionInUrl = settings.detectSessionInUrl;\n        this.flowType = settings.flowType;\n        this.hasCustomAuthorizationHeader = settings.hasCustomAuthorizationHeader;\n        if (settings.lock) {\n            this.lock = settings.lock;\n        }\n        else if (isBrowser() && ((_a = globalThis === null || globalThis === void 0 ? void 0 : globalThis.navigator) === null || _a === void 0 ? void 0 : _a.locks)) {\n            this.lock = navigatorLock;\n        }\n        else {\n            this.lock = lockNoOp;\n        }\n        this.mfa = {\n            verify: this._verify.bind(this),\n            enroll: this._enroll.bind(this),\n            unenroll: this._unenroll.bind(this),\n            challenge: this._challenge.bind(this),\n            listFactors: this._listFactors.bind(this),\n            challengeAndVerify: this._challengeAndVerify.bind(this),\n            getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this),\n        };\n        if (this.persistSession) {\n            if (settings.storage) {\n                this.storage = settings.storage;\n            }\n            else {\n                if (supportsLocalStorage()) {\n                    this.storage = localStorageAdapter;\n                }\n                else {\n                    this.memoryStorage = {};\n                    this.storage = memoryLocalStorageAdapter(this.memoryStorage);\n                }\n            }\n        }\n        else {\n            this.memoryStorage = {};\n            this.storage = memoryLocalStorageAdapter(this.memoryStorage);\n        }\n        if (isBrowser() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\n            try {\n                this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey);\n            }\n            catch (e) {\n                console.error('Failed to create a new BroadcastChannel, multi-tab state changes will not be available', e);\n            }\n            (_b = this.broadcastChannel) === null || _b === void 0 ? void 0 : _b.addEventListener('message', async (event) => {\n                this._debug('received broadcast notification from other tab or client', event);\n                await this._notifyAllSubscribers(event.data.event, event.data.session, false); // broadcast = false so we don't get an endless loop of messages\n            });\n        }\n        this.initialize();\n    }\n    _debug(...args) {\n        if (this.logDebugMessages) {\n            this.logger(`GoTrueClient@${this.instanceID} (${version}) ${new Date().toISOString()}`, ...args);\n        }\n        return this;\n    }\n    /**\n     * Initializes the client session either from the url or from storage.\n     * This method is automatically called when instantiating the client, but should also be called\n     * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\n     */\n    async initialize() {\n        if (this.initializePromise) {\n            return await this.initializePromise;\n        }\n        this.initializePromise = (async () => {\n            return await this._acquireLock(-1, async () => {\n                return await this._initialize();\n            });\n        })();\n        return await this.initializePromise;\n    }\n    /**\n     * IMPORTANT:\n     * 1. Never throw in this method, as it is called from the constructor\n     * 2. Never return a session from this method as it would be cached over\n     *    the whole lifetime of the client\n     */\n    async _initialize() {\n        var _a;\n        try {\n            const params = parseParametersFromURL(window.location.href);\n            let callbackUrlType = 'none';\n            if (this._isImplicitGrantCallback(params)) {\n                callbackUrlType = 'implicit';\n            }\n            else if (await this._isPKCECallback(params)) {\n                callbackUrlType = 'pkce';\n            }\n            /**\n             * Attempt to get the session from the URL only if these conditions are fulfilled\n             *\n             * Note: If the URL isn't one of the callback url types (implicit or pkce),\n             * then there could be an existing session so we don't want to prematurely remove it\n             */\n            if (isBrowser() && this.detectSessionInUrl && callbackUrlType !== 'none') {\n                const { data, error } = await this._getSessionFromURL(params, callbackUrlType);\n                if (error) {\n                    this._debug('#_initialize()', 'error detecting session from URL', error);\n                    if (isAuthImplicitGrantRedirectError(error)) {\n                        const errorCode = (_a = error.details) === null || _a === void 0 ? void 0 : _a.code;\n                        if (errorCode === 'identity_already_exists' ||\n                            errorCode === 'identity_not_found' ||\n                            errorCode === 'single_identity_not_deletable') {\n                            return { error };\n                        }\n                    }\n                    // failed login attempt via url,\n                    // remove old session as in verifyOtp, signUp and signInWith*\n                    await this._removeSession();\n                    return { error };\n                }\n                const { session, redirectType } = data;\n                this._debug('#_initialize()', 'detected session in URL', session, 'redirect type', redirectType);\n                await this._saveSession(session);\n                setTimeout(async () => {\n                    if (redirectType === 'recovery') {\n                        await this._notifyAllSubscribers('PASSWORD_RECOVERY', session);\n                    }\n                    else {\n                        await this._notifyAllSubscribers('SIGNED_IN', session);\n                    }\n                }, 0);\n                return { error: null };\n            }\n            // no login attempt via callback url try to recover session from storage\n            await this._recoverAndRefresh();\n            return { error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { error };\n            }\n            return {\n                error: new AuthUnknownError('Unexpected error during initialization', error),\n            };\n        }\n        finally {\n            await this._handleVisibilityChange();\n            this._debug('#_initialize()', 'end');\n        }\n    }\n    /**\n     * Creates a new anonymous user.\n     *\n     * @returns A session where the is_anonymous claim in the access token JWT set to true\n     */\n    async signInAnonymously(credentials) {\n        var _a, _b, _c;\n        try {\n            const res = await _request(this.fetch, 'POST', `${this.url}/signup`, {\n                headers: this.headers,\n                body: {\n                    data: (_b = (_a = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _a === void 0 ? void 0 : _a.data) !== null && _b !== void 0 ? _b : {},\n                    gotrue_meta_security: { captcha_token: (_c = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _c === void 0 ? void 0 : _c.captchaToken },\n                },\n                xform: _sessionResponse,\n            });\n            const { data, error } = res;\n            if (error || !data) {\n                return { data: { user: null, session: null }, error: error };\n            }\n            const session = data.session;\n            const user = data.user;\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n            return { data: { user, session }, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Creates a new user.\n     *\n     * Be aware that if a user account exists in the system you may get back an\n     * error message that attempts to hide this information from the user.\n     * This method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\n     *\n     * @returns A logged-in session if the server has \"autoconfirm\" ON\n     * @returns A user if the server has \"autoconfirm\" OFF\n     */\n    async signUp(credentials) {\n        var _a, _b, _c;\n        try {\n            let res;\n            if ('email' in credentials) {\n                const { email, password, options } = credentials;\n                let codeChallenge = null;\n                let codeChallengeMethod = null;\n                if (this.flowType === 'pkce') {\n                    ;\n                    [codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(this.storage, this.storageKey);\n                }\n                res = await _request(this.fetch, 'POST', `${this.url}/signup`, {\n                    headers: this.headers,\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                    body: {\n                        email,\n                        password,\n                        data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        code_challenge: codeChallenge,\n                        code_challenge_method: codeChallengeMethod,\n                    },\n                    xform: _sessionResponse,\n                });\n            }\n            else if ('phone' in credentials) {\n                const { phone, password, options } = credentials;\n                res = await _request(this.fetch, 'POST', `${this.url}/signup`, {\n                    headers: this.headers,\n                    body: {\n                        phone,\n                        password,\n                        data: (_b = options === null || options === void 0 ? void 0 : options.data) !== null && _b !== void 0 ? _b : {},\n                        channel: (_c = options === null || options === void 0 ? void 0 : options.channel) !== null && _c !== void 0 ? _c : 'sms',\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                    },\n                    xform: _sessionResponse,\n                });\n            }\n            else {\n                throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n            }\n            const { data, error } = res;\n            if (error || !data) {\n                return { data: { user: null, session: null }, error: error };\n            }\n            const session = data.session;\n            const user = data.user;\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n            return { data: { user, session }, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Log in an existing user with an email and password or phone and password.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or that the\n     * email/phone and password combination is wrong or that the account can only\n     * be accessed via social login.\n     */\n    async signInWithPassword(credentials) {\n        try {\n            let res;\n            if ('email' in credentials) {\n                const { email, password, options } = credentials;\n                res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                    headers: this.headers,\n                    body: {\n                        email,\n                        password,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                    },\n                    xform: _sessionResponsePassword,\n                });\n            }\n            else if ('phone' in credentials) {\n                const { phone, password, options } = credentials;\n                res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                    headers: this.headers,\n                    body: {\n                        phone,\n                        password,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                    },\n                    xform: _sessionResponsePassword,\n                });\n            }\n            else {\n                throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n            }\n            const { data, error } = res;\n            if (error) {\n                return { data: { user: null, session: null }, error };\n            }\n            else if (!data || !data.session || !data.user) {\n                return { data: { user: null, session: null }, error: new AuthInvalidTokenResponseError() };\n            }\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return {\n                data: Object.assign({ user: data.user, session: data.session }, (data.weak_password ? { weakPassword: data.weak_password } : null)),\n                error,\n            };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Log in an existing user via a third-party provider.\n     * This method supports the PKCE flow.\n     */\n    async signInWithOAuth(credentials) {\n        var _a, _b, _c, _d;\n        return await this._handleProviderSignIn(credentials.provider, {\n            redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n            scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n            queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n            skipBrowserRedirect: (_d = credentials.options) === null || _d === void 0 ? void 0 : _d.skipBrowserRedirect,\n        });\n    }\n    /**\n     * Log in an existing user by exchanging an Auth Code issued during the PKCE flow.\n     */\n    async exchangeCodeForSession(authCode) {\n        await this.initializePromise;\n        return this._acquireLock(-1, async () => {\n            return this._exchangeCodeForSession(authCode);\n        });\n    }\n    async _exchangeCodeForSession(authCode) {\n        const storageItem = await getItemAsync(this.storage, `${this.storageKey}-code-verifier`);\n        const [codeVerifier, redirectType] = (storageItem !== null && storageItem !== void 0 ? storageItem : '').split('/');\n        try {\n            const { data, error } = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=pkce`, {\n                headers: this.headers,\n                body: {\n                    auth_code: authCode,\n                    code_verifier: codeVerifier,\n                },\n                xform: _sessionResponse,\n            });\n            await removeItemAsync(this.storage, `${this.storageKey}-code-verifier`);\n            if (error) {\n                throw error;\n            }\n            if (!data || !data.session || !data.user) {\n                return {\n                    data: { user: null, session: null, redirectType: null },\n                    error: new AuthInvalidTokenResponseError(),\n                };\n            }\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return { data: Object.assign(Object.assign({}, data), { redirectType: redirectType !== null && redirectType !== void 0 ? redirectType : null }), error };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null, redirectType: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Allows signing in with an OIDC ID token. The authentication provider used\n     * should be enabled and configured.\n     */\n    async signInWithIdToken(credentials) {\n        try {\n            const { options, provider, token, access_token, nonce } = credentials;\n            const res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\n                headers: this.headers,\n                body: {\n                    provider,\n                    id_token: token,\n                    access_token,\n                    nonce,\n                    gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                },\n                xform: _sessionResponse,\n            });\n            const { data, error } = res;\n            if (error) {\n                return { data: { user: null, session: null }, error };\n            }\n            else if (!data || !data.session || !data.user) {\n                return {\n                    data: { user: null, session: null },\n                    error: new AuthInvalidTokenResponseError(),\n                };\n            }\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return { data, error };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Log in a user using magiclink or a one-time password (OTP).\n     *\n     * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\n     * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\n     * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or, that the account\n     * can only be accessed via social login.\n     *\n     * Do note that you will need to configure a Whatsapp sender on Twilio\n     * if you are using phone sign in with the 'whatsapp' channel. The whatsapp\n     * channel is not supported on other providers\n     * at this time.\n     * This method supports PKCE when an email is passed.\n     */\n    async signInWithOtp(credentials) {\n        var _a, _b, _c, _d, _e;\n        try {\n            if ('email' in credentials) {\n                const { email, options } = credentials;\n                let codeChallenge = null;\n                let codeChallengeMethod = null;\n                if (this.flowType === 'pkce') {\n                    ;\n                    [codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(this.storage, this.storageKey);\n                }\n                const { error } = await _request(this.fetch, 'POST', `${this.url}/otp`, {\n                    headers: this.headers,\n                    body: {\n                        email,\n                        data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                        create_user: (_b = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _b !== void 0 ? _b : true,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        code_challenge: codeChallenge,\n                        code_challenge_method: codeChallengeMethod,\n                    },\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                });\n                return { data: { user: null, session: null }, error };\n            }\n            if ('phone' in credentials) {\n                const { phone, options } = credentials;\n                const { data, error } = await _request(this.fetch, 'POST', `${this.url}/otp`, {\n                    headers: this.headers,\n                    body: {\n                        phone,\n                        data: (_c = options === null || options === void 0 ? void 0 : options.data) !== null && _c !== void 0 ? _c : {},\n                        create_user: (_d = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _d !== void 0 ? _d : true,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        channel: (_e = options === null || options === void 0 ? void 0 : options.channel) !== null && _e !== void 0 ? _e : 'sms',\n                    },\n                });\n                return { data: { user: null, session: null, messageId: data === null || data === void 0 ? void 0 : data.message_id }, error };\n            }\n            throw new AuthInvalidCredentialsError('You must provide either an email or phone number.');\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Log in a user given a User supplied OTP or TokenHash received through mobile or email.\n     */\n    async verifyOtp(params) {\n        var _a, _b;\n        try {\n            let redirectTo = undefined;\n            let captchaToken = undefined;\n            if ('options' in params) {\n                redirectTo = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo;\n                captchaToken = (_b = params.options) === null || _b === void 0 ? void 0 : _b.captchaToken;\n            }\n            const { data, error } = await _request(this.fetch, 'POST', `${this.url}/verify`, {\n                headers: this.headers,\n                body: Object.assign(Object.assign({}, params), { gotrue_meta_security: { captcha_token: captchaToken } }),\n                redirectTo,\n                xform: _sessionResponse,\n            });\n            if (error) {\n                throw error;\n            }\n            if (!data) {\n                throw new Error('An error occurred on token verification.');\n            }\n            const session = data.session;\n            const user = data.user;\n            if (session === null || session === void 0 ? void 0 : session.access_token) {\n                await this._saveSession(session);\n                await this._notifyAllSubscribers(params.type == 'recovery' ? 'PASSWORD_RECOVERY' : 'SIGNED_IN', session);\n            }\n            return { data: { user, session }, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Attempts a single-sign on using an enterprise Identity Provider. A\n     * successful SSO attempt will redirect the current page to the identity\n     * provider authorization page. The redirect URL is implementation and SSO\n     * protocol specific.\n     *\n     * You can use it by providing a SSO domain. Typically you can extract this\n     * domain by asking users for their email address. If this domain is\n     * registered on the Auth instance the redirect will use that organization's\n     * currently active SSO Identity Provider for the login.\n     *\n     * If you have built an organization-specific login page, you can use the\n     * organization's SSO Identity Provider UUID directly instead.\n     */\n    async signInWithSSO(params) {\n        var _a, _b, _c;\n        try {\n            let codeChallenge = null;\n            let codeChallengeMethod = null;\n            if (this.flowType === 'pkce') {\n                ;\n                [codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(this.storage, this.storageKey);\n            }\n            return await _request(this.fetch, 'POST', `${this.url}/sso`, {\n                body: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, ('providerId' in params ? { provider_id: params.providerId } : null)), ('domain' in params ? { domain: params.domain } : null)), { redirect_to: (_b = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo) !== null && _b !== void 0 ? _b : undefined }), (((_c = params === null || params === void 0 ? void 0 : params.options) === null || _c === void 0 ? void 0 : _c.captchaToken)\n                    ? { gotrue_meta_security: { captcha_token: params.options.captchaToken } }\n                    : null)), { skip_http_redirect: true, code_challenge: codeChallenge, code_challenge_method: codeChallengeMethod }),\n                headers: this.headers,\n                xform: _ssoResponse,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Sends a reauthentication OTP to the user's email or phone number.\n     * Requires the user to be signed-in.\n     */\n    async reauthenticate() {\n        await this.initializePromise;\n        return await this._acquireLock(-1, async () => {\n            return await this._reauthenticate();\n        });\n    }\n    async _reauthenticate() {\n        try {\n            return await this._useSession(async (result) => {\n                const { data: { session }, error: sessionError, } = result;\n                if (sessionError)\n                    throw sessionError;\n                if (!session)\n                    throw new AuthSessionMissingError();\n                const { error } = await _request(this.fetch, 'GET', `${this.url}/reauthenticate`, {\n                    headers: this.headers,\n                    jwt: session.access_token,\n                });\n                return { data: { user: null, session: null }, error };\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP.\n     */\n    async resend(credentials) {\n        try {\n            const endpoint = `${this.url}/resend`;\n            if ('email' in credentials) {\n                const { email, type, options } = credentials;\n                const { error } = await _request(this.fetch, 'POST', endpoint, {\n                    headers: this.headers,\n                    body: {\n                        email,\n                        type,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                    },\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                });\n                return { data: { user: null, session: null }, error };\n            }\n            else if ('phone' in credentials) {\n                const { phone, type, options } = credentials;\n                const { data, error } = await _request(this.fetch, 'POST', endpoint, {\n                    headers: this.headers,\n                    body: {\n                        phone,\n                        type,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                    },\n                });\n                return { data: { user: null, session: null, messageId: data === null || data === void 0 ? void 0 : data.message_id }, error };\n            }\n            throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a type');\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Returns the session, refreshing it if necessary.\n     *\n     * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n     *\n     * **IMPORTANT:** This method loads values directly from the storage attached\n     * to the client. If that storage is based on request cookies for example,\n     * the values in it may not be authentic and therefore it's strongly advised\n     * against using this method and its results in such circumstances. A warning\n     * will be emitted if this is detected. Use {@link #getUser()} instead.\n     */\n    async getSession() {\n        await this.initializePromise;\n        const result = await this._acquireLock(-1, async () => {\n            return this._useSession(async (result) => {\n                return result;\n            });\n        });\n        return result;\n    }\n    /**\n     * Acquires a global lock based on the storage key.\n     */\n    async _acquireLock(acquireTimeout, fn) {\n        this._debug('#_acquireLock', 'begin', acquireTimeout);\n        try {\n            if (this.lockAcquired) {\n                const last = this.pendingInLock.length\n                    ? this.pendingInLock[this.pendingInLock.length - 1]\n                    : Promise.resolve();\n                const result = (async () => {\n                    await last;\n                    return await fn();\n                })();\n                this.pendingInLock.push((async () => {\n                    try {\n                        await result;\n                    }\n                    catch (e) {\n                        // we just care if it finished\n                    }\n                })());\n                return result;\n            }\n            return await this.lock(`lock:${this.storageKey}`, acquireTimeout, async () => {\n                this._debug('#_acquireLock', 'lock acquired for storage key', this.storageKey);\n                try {\n                    this.lockAcquired = true;\n                    const result = fn();\n                    this.pendingInLock.push((async () => {\n                        try {\n                            await result;\n                        }\n                        catch (e) {\n                            // we just care if it finished\n                        }\n                    })());\n                    await result;\n                    // keep draining the queue until there's nothing to wait on\n                    while (this.pendingInLock.length) {\n                        const waitOn = [...this.pendingInLock];\n                        await Promise.all(waitOn);\n                        this.pendingInLock.splice(0, waitOn.length);\n                    }\n                    return await result;\n                }\n                finally {\n                    this._debug('#_acquireLock', 'lock released for storage key', this.storageKey);\n                    this.lockAcquired = false;\n                }\n            });\n        }\n        finally {\n            this._debug('#_acquireLock', 'end');\n        }\n    }\n    /**\n     * Use instead of {@link #getSession} inside the library. It is\n     * semantically usually what you want, as getting a session involves some\n     * processing afterwards that requires only one client operating on the\n     * session at once across multiple tabs or processes.\n     */\n    async _useSession(fn) {\n        this._debug('#_useSession', 'begin');\n        try {\n            // the use of __loadSession here is the only correct use of the function!\n            const result = await this.__loadSession();\n            return await fn(result);\n        }\n        finally {\n            this._debug('#_useSession', 'end');\n        }\n    }\n    /**\n     * NEVER USE DIRECTLY!\n     *\n     * Always use {@link #_useSession}.\n     */\n    async __loadSession() {\n        this._debug('#__loadSession()', 'begin');\n        if (!this.lockAcquired) {\n            this._debug('#__loadSession()', 'used outside of an acquired lock!', new Error().stack);\n        }\n        try {\n            let currentSession = null;\n            const maybeSession = await getItemAsync(this.storage, this.storageKey);\n            this._debug('#getSession()', 'session from storage', maybeSession);\n            if (maybeSession !== null) {\n                if (this._isValidSession(maybeSession)) {\n                    currentSession = maybeSession;\n                }\n                else {\n                    this._debug('#getSession()', 'session from storage is not valid');\n                    await this._removeSession();\n                }\n            }\n            if (!currentSession) {\n                return { data: { session: null }, error: null };\n            }\n            const hasExpired = currentSession.expires_at\n                ? currentSession.expires_at <= Date.now() / 1000\n                : false;\n            this._debug('#__loadSession()', `session has${hasExpired ? '' : ' not'} expired`, 'expires_at', currentSession.expires_at);\n            if (!hasExpired) {\n                if (this.storage.isServer) {\n                    let suppressWarning = this.suppressGetSessionWarning;\n                    const proxySession = new Proxy(currentSession, {\n                        get: (target, prop, receiver) => {\n                            if (!suppressWarning && prop === 'user') {\n                                // only show warning when the user object is being accessed from the server\n                                console.warn('Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and may not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server.');\n                                suppressWarning = true; // keeps this proxy instance from logging additional warnings\n                                this.suppressGetSessionWarning = true; // keeps this client's future proxy instances from warning\n                            }\n                            return Reflect.get(target, prop, receiver);\n                        },\n                    });\n                    currentSession = proxySession;\n                }\n                return { data: { session: currentSession }, error: null };\n            }\n            const { session, error } = await this._callRefreshToken(currentSession.refresh_token);\n            if (error) {\n                return { data: { session: null }, error };\n            }\n            return { data: { session }, error: null };\n        }\n        finally {\n            this._debug('#__loadSession()', 'end');\n        }\n    }\n    /**\n     * Gets the current user details if there is an existing session. This method\n     * performs a network request to the Supabase Auth server, so the returned\n     * value is authentic and can be used to base authorization rules on.\n     *\n     * @param jwt Takes in an optional access token JWT. If no JWT is provided, the JWT from the current session is used.\n     */\n    async getUser(jwt) {\n        if (jwt) {\n            return await this._getUser(jwt);\n        }\n        await this.initializePromise;\n        const result = await this._acquireLock(-1, async () => {\n            return await this._getUser();\n        });\n        return result;\n    }\n    async _getUser(jwt) {\n        try {\n            if (jwt) {\n                return await _request(this.fetch, 'GET', `${this.url}/user`, {\n                    headers: this.headers,\n                    jwt: jwt,\n                    xform: _userResponse,\n                });\n            }\n            return await this._useSession(async (result) => {\n                var _a, _b, _c;\n                const { data, error } = result;\n                if (error) {\n                    throw error;\n                }\n                // returns an error if there is no access_token or custom authorization header\n                if (!((_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) && !this.hasCustomAuthorizationHeader) {\n                    return { data: { user: null }, error: new AuthSessionMissingError() };\n                }\n                return await _request(this.fetch, 'GET', `${this.url}/user`, {\n                    headers: this.headers,\n                    jwt: (_c = (_b = data.session) === null || _b === void 0 ? void 0 : _b.access_token) !== null && _c !== void 0 ? _c : undefined,\n                    xform: _userResponse,\n                });\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                if (isAuthSessionMissingError(error)) {\n                    // JWT contains a `session_id` which does not correspond to an active\n                    // session in the database, indicating the user is signed out.\n                    await this._removeSession();\n                    await removeItemAsync(this.storage, `${this.storageKey}-code-verifier`);\n                }\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Updates user data for a logged in user.\n     */\n    async updateUser(attributes, options = {}) {\n        await this.initializePromise;\n        return await this._acquireLock(-1, async () => {\n            return await this._updateUser(attributes, options);\n        });\n    }\n    async _updateUser(attributes, options = {}) {\n        try {\n            return await this._useSession(async (result) => {\n                const { data: sessionData, error: sessionError } = result;\n                if (sessionError) {\n                    throw sessionError;\n                }\n                if (!sessionData.session) {\n                    throw new AuthSessionMissingError();\n                }\n                const session = sessionData.session;\n                let codeChallenge = null;\n                let codeChallengeMethod = null;\n                if (this.flowType === 'pkce' && attributes.email != null) {\n                    ;\n                    [codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(this.storage, this.storageKey);\n                }\n                const { data, error: userError } = await _request(this.fetch, 'PUT', `${this.url}/user`, {\n                    headers: this.headers,\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                    body: Object.assign(Object.assign({}, attributes), { code_challenge: codeChallenge, code_challenge_method: codeChallengeMethod }),\n                    jwt: session.access_token,\n                    xform: _userResponse,\n                });\n                if (userError)\n                    throw userError;\n                session.user = data.user;\n                await this._saveSession(session);\n                await this._notifyAllSubscribers('USER_UPDATED', session);\n                return { data: { user: session.user }, error: null };\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Decodes a JWT (without performing any validation).\n     */\n    _decodeJWT(jwt) {\n        return decodeJWTPayload(jwt);\n    }\n    /**\n     * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\n     * If the refresh token or access token in the current session is invalid, an error will be thrown.\n     * @param currentSession The current session that minimally contains an access token and refresh token.\n     */\n    async setSession(currentSession) {\n        await this.initializePromise;\n        return await this._acquireLock(-1, async () => {\n            return await this._setSession(currentSession);\n        });\n    }\n    async _setSession(currentSession) {\n        try {\n            if (!currentSession.access_token || !currentSession.refresh_token) {\n                throw new AuthSessionMissingError();\n            }\n            const timeNow = Date.now() / 1000;\n            let expiresAt = timeNow;\n            let hasExpired = true;\n            let session = null;\n            const payload = decodeJWTPayload(currentSession.access_token);\n            if (payload.exp) {\n                expiresAt = payload.exp;\n                hasExpired = expiresAt <= timeNow;\n            }\n            if (hasExpired) {\n                const { session: refreshedSession, error } = await this._callRefreshToken(currentSession.refresh_token);\n                if (error) {\n                    return { data: { user: null, session: null }, error: error };\n                }\n                if (!refreshedSession) {\n                    return { data: { user: null, session: null }, error: null };\n                }\n                session = refreshedSession;\n            }\n            else {\n                const { data, error } = await this._getUser(currentSession.access_token);\n                if (error) {\n                    throw error;\n                }\n                session = {\n                    access_token: currentSession.access_token,\n                    refresh_token: currentSession.refresh_token,\n                    user: data.user,\n                    token_type: 'bearer',\n                    expires_in: expiresAt - timeNow,\n                    expires_at: expiresAt,\n                };\n                await this._saveSession(session);\n                await this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n            return { data: { user: session.user, session }, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { session: null, user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Returns a new session, regardless of expiry status.\n     * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\n     * If the current session's refresh token is invalid, an error will be thrown.\n     * @param currentSession The current session. If passed in, it must contain a refresh token.\n     */\n    async refreshSession(currentSession) {\n        await this.initializePromise;\n        return await this._acquireLock(-1, async () => {\n            return await this._refreshSession(currentSession);\n        });\n    }\n    async _refreshSession(currentSession) {\n        try {\n            return await this._useSession(async (result) => {\n                var _a;\n                if (!currentSession) {\n                    const { data, error } = result;\n                    if (error) {\n                        throw error;\n                    }\n                    currentSession = (_a = data.session) !== null && _a !== void 0 ? _a : undefined;\n                }\n                if (!(currentSession === null || currentSession === void 0 ? void 0 : currentSession.refresh_token)) {\n                    throw new AuthSessionMissingError();\n                }\n                const { session, error } = await this._callRefreshToken(currentSession.refresh_token);\n                if (error) {\n                    return { data: { user: null, session: null }, error: error };\n                }\n                if (!session) {\n                    return { data: { user: null, session: null }, error: null };\n                }\n                return { data: { user: session.user, session }, error: null };\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Gets the session data from a URL string\n     */\n    async _getSessionFromURL(params, callbackUrlType) {\n        try {\n            if (!isBrowser())\n                throw new AuthImplicitGrantRedirectError('No browser detected.');\n            // If there's an error in the URL, it doesn't matter what flow it is, we just return the error.\n            if (params.error || params.error_description || params.error_code) {\n                // The error class returned implies that the redirect is from an implicit grant flow\n                // but it could also be from a redirect error from a PKCE flow.\n                throw new AuthImplicitGrantRedirectError(params.error_description || 'Error in URL with unspecified error_description', {\n                    error: params.error || 'unspecified_error',\n                    code: params.error_code || 'unspecified_code',\n                });\n            }\n            // Checks for mismatches between the flowType initialised in the client and the URL parameters\n            switch (callbackUrlType) {\n                case 'implicit':\n                    if (this.flowType === 'pkce') {\n                        throw new AuthPKCEGrantCodeExchangeError('Not a valid PKCE flow url.');\n                    }\n                    break;\n                case 'pkce':\n                    if (this.flowType === 'implicit') {\n                        throw new AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.');\n                    }\n                    break;\n                default:\n                // there's no mismatch so we continue\n            }\n            // Since this is a redirect for PKCE, we attempt to retrieve the code from the URL for the code exchange\n            if (callbackUrlType === 'pkce') {\n                this._debug('#_initialize()', 'begin', 'is PKCE flow', true);\n                if (!params.code)\n                    throw new AuthPKCEGrantCodeExchangeError('No code detected.');\n                const { data, error } = await this._exchangeCodeForSession(params.code);\n                if (error)\n                    throw error;\n                const url = new URL(window.location.href);\n                url.searchParams.delete('code');\n                window.history.replaceState(window.history.state, '', url.toString());\n                return { data: { session: data.session, redirectType: null }, error: null };\n            }\n            const { provider_token, provider_refresh_token, access_token, refresh_token, expires_in, expires_at, token_type, } = params;\n            if (!access_token || !expires_in || !refresh_token || !token_type) {\n                throw new AuthImplicitGrantRedirectError('No session defined in URL');\n            }\n            const timeNow = Math.round(Date.now() / 1000);\n            const expiresIn = parseInt(expires_in);\n            let expiresAt = timeNow + expiresIn;\n            if (expires_at) {\n                expiresAt = parseInt(expires_at);\n            }\n            const actuallyExpiresIn = expiresAt - timeNow;\n            if (actuallyExpiresIn * 1000 <= AUTO_REFRESH_TICK_DURATION) {\n                console.warn(`@supabase/gotrue-js: Session as retrieved from URL expires in ${actuallyExpiresIn}s, should have been closer to ${expiresIn}s`);\n            }\n            const issuedAt = expiresAt - expiresIn;\n            if (timeNow - issuedAt >= 120) {\n                console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued over 120s ago, URL could be stale', issuedAt, expiresAt, timeNow);\n            }\n            else if (timeNow - issuedAt < 0) {\n                console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued in the future? Check the device clock for skew', issuedAt, expiresAt, timeNow);\n            }\n            const { data, error } = await this._getUser(access_token);\n            if (error)\n                throw error;\n            const session = {\n                provider_token,\n                provider_refresh_token,\n                access_token,\n                expires_in: expiresIn,\n                expires_at: expiresAt,\n                refresh_token,\n                token_type,\n                user: data.user,\n            };\n            // Remove tokens from URL\n            window.location.hash = '';\n            this._debug('#_getSessionFromURL()', 'clearing window.location.hash');\n            return { data: { session, redirectType: params.type }, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { session: null, redirectType: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\n     */\n    _isImplicitGrantCallback(params) {\n        return Boolean(params.access_token || params.error_description);\n    }\n    /**\n     * Checks if the current URL and backing storage contain parameters given by a PKCE flow\n     */\n    async _isPKCECallback(params) {\n        const currentStorageContent = await getItemAsync(this.storage, `${this.storageKey}-code-verifier`);\n        return !!(params.code && currentStorageContent);\n    }\n    /**\n     * Inside a browser context, `signOut()` will remove the logged in user from the browser session and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\n     *\n     * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\n     * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n     *\n     * If using `others` scope, no `SIGNED_OUT` event is fired!\n     */\n    async signOut(options = { scope: 'global' }) {\n        await this.initializePromise;\n        return await this._acquireLock(-1, async () => {\n            return await this._signOut(options);\n        });\n    }\n    async _signOut({ scope } = { scope: 'global' }) {\n        return await this._useSession(async (result) => {\n            var _a;\n            const { data, error: sessionError } = result;\n            if (sessionError) {\n                return { error: sessionError };\n            }\n            const accessToken = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token;\n            if (accessToken) {\n                const { error } = await this.admin.signOut(accessToken, scope);\n                if (error) {\n                    // ignore 404s since user might not exist anymore\n                    // ignore 401s since an invalid or expired JWT should sign out the current session\n                    if (!(isAuthApiError(error) &&\n                        (error.status === 404 || error.status === 401 || error.status === 403))) {\n                        return { error };\n                    }\n                }\n            }\n            if (scope !== 'others') {\n                await this._removeSession();\n                await removeItemAsync(this.storage, `${this.storageKey}-code-verifier`);\n            }\n            return { error: null };\n        });\n    }\n    /**\n     * Receive a notification every time an auth event happens.\n     * @param callback A callback function to be invoked when an auth event happens.\n     */\n    onAuthStateChange(callback) {\n        const id = uuid();\n        const subscription = {\n            id,\n            callback,\n            unsubscribe: () => {\n                this._debug('#unsubscribe()', 'state change callback with id removed', id);\n                this.stateChangeEmitters.delete(id);\n            },\n        };\n        this._debug('#onAuthStateChange()', 'registered callback with id', id);\n        this.stateChangeEmitters.set(id, subscription);\n        (async () => {\n            await this.initializePromise;\n            await this._acquireLock(-1, async () => {\n                this._emitInitialSession(id);\n            });\n        })();\n        return { data: { subscription } };\n    }\n    async _emitInitialSession(id) {\n        return await this._useSession(async (result) => {\n            var _a, _b;\n            try {\n                const { data: { session }, error, } = result;\n                if (error)\n                    throw error;\n                await ((_a = this.stateChangeEmitters.get(id)) === null || _a === void 0 ? void 0 : _a.callback('INITIAL_SESSION', session));\n                this._debug('INITIAL_SESSION', 'callback id', id, 'session', session);\n            }\n            catch (err) {\n                await ((_b = this.stateChangeEmitters.get(id)) === null || _b === void 0 ? void 0 : _b.callback('INITIAL_SESSION', null));\n                this._debug('INITIAL_SESSION', 'callback id', id, 'error', err);\n                console.error(err);\n            }\n        });\n    }\n    /**\n     * Sends a password reset request to an email address. This method supports the PKCE flow.\n     *\n     * @param email The email address of the user.\n     * @param options.redirectTo The URL to send the user to after they click the password reset link.\n     * @param options.captchaToken Verification token received when the user completes the captcha on the site.\n     */\n    async resetPasswordForEmail(email, options = {}) {\n        let codeChallenge = null;\n        let codeChallengeMethod = null;\n        if (this.flowType === 'pkce') {\n            ;\n            [codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(this.storage, this.storageKey, true // isPasswordRecovery\n            );\n        }\n        try {\n            return await _request(this.fetch, 'POST', `${this.url}/recover`, {\n                body: {\n                    email,\n                    code_challenge: codeChallenge,\n                    code_challenge_method: codeChallengeMethod,\n                    gotrue_meta_security: { captcha_token: options.captchaToken },\n                },\n                headers: this.headers,\n                redirectTo: options.redirectTo,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Gets all the identities linked to a user.\n     */\n    async getUserIdentities() {\n        var _a;\n        try {\n            const { data, error } = await this.getUser();\n            if (error)\n                throw error;\n            return { data: { identities: (_a = data.user.identities) !== null && _a !== void 0 ? _a : [] }, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Links an oauth identity to an existing user.\n     * This method supports the PKCE flow.\n     */\n    async linkIdentity(credentials) {\n        var _a;\n        try {\n            const { data, error } = await this._useSession(async (result) => {\n                var _a, _b, _c, _d, _e;\n                const { data, error } = result;\n                if (error)\n                    throw error;\n                const url = await this._getUrlForProvider(`${this.url}/user/identities/authorize`, credentials.provider, {\n                    redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n                    scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n                    queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n                    skipBrowserRedirect: true,\n                });\n                return await _request(this.fetch, 'GET', url, {\n                    headers: this.headers,\n                    jwt: (_e = (_d = data.session) === null || _d === void 0 ? void 0 : _d.access_token) !== null && _e !== void 0 ? _e : undefined,\n                });\n            });\n            if (error)\n                throw error;\n            if (isBrowser() && !((_a = credentials.options) === null || _a === void 0 ? void 0 : _a.skipBrowserRedirect)) {\n                window.location.assign(data === null || data === void 0 ? void 0 : data.url);\n            }\n            return { data: { provider: credentials.provider, url: data === null || data === void 0 ? void 0 : data.url }, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { provider: credentials.provider, url: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Unlinks an identity from a user by deleting it. The user will no longer be able to sign in with that identity once it's unlinked.\n     */\n    async unlinkIdentity(identity) {\n        try {\n            return await this._useSession(async (result) => {\n                var _a, _b;\n                const { data, error } = result;\n                if (error) {\n                    throw error;\n                }\n                return await _request(this.fetch, 'DELETE', `${this.url}/user/identities/${identity.identity_id}`, {\n                    headers: this.headers,\n                    jwt: (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined,\n                });\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Generates a new JWT.\n     * @param refreshToken A valid refresh token that was returned on login.\n     */\n    async _refreshAccessToken(refreshToken) {\n        const debugName = `#_refreshAccessToken(${refreshToken.substring(0, 5)}...)`;\n        this._debug(debugName, 'begin');\n        try {\n            const startedAt = Date.now();\n            // will attempt to refresh the token with exponential backoff\n            return await retryable(async (attempt) => {\n                if (attempt > 0) {\n                    await sleep(200 * Math.pow(2, attempt - 1)); // 200, 400, 800, ...\n                }\n                this._debug(debugName, 'refreshing attempt', attempt);\n                return await _request(this.fetch, 'POST', `${this.url}/token?grant_type=refresh_token`, {\n                    body: { refresh_token: refreshToken },\n                    headers: this.headers,\n                    xform: _sessionResponse,\n                });\n            }, (attempt, error) => {\n                const nextBackOffInterval = 200 * Math.pow(2, attempt);\n                return (error &&\n                    isAuthRetryableFetchError(error) &&\n                    // retryable only if the request can be sent before the backoff overflows the tick duration\n                    Date.now() + nextBackOffInterval - startedAt < AUTO_REFRESH_TICK_DURATION);\n            });\n        }\n        catch (error) {\n            this._debug(debugName, 'error', error);\n            if (isAuthError(error)) {\n                return { data: { session: null, user: null }, error };\n            }\n            throw error;\n        }\n        finally {\n            this._debug(debugName, 'end');\n        }\n    }\n    _isValidSession(maybeSession) {\n        const isValidSession = typeof maybeSession === 'object' &&\n            maybeSession !== null &&\n            'access_token' in maybeSession &&\n            'refresh_token' in maybeSession &&\n            'expires_at' in maybeSession;\n        return isValidSession;\n    }\n    async _handleProviderSignIn(provider, options) {\n        const url = await this._getUrlForProvider(`${this.url}/authorize`, provider, {\n            redirectTo: options.redirectTo,\n            scopes: options.scopes,\n            queryParams: options.queryParams,\n        });\n        this._debug('#_handleProviderSignIn()', 'provider', provider, 'options', options, 'url', url);\n        // try to open on the browser\n        if (isBrowser() && !options.skipBrowserRedirect) {\n            window.location.assign(url);\n        }\n        return { data: { provider, url }, error: null };\n    }\n    /**\n     * Recovers the session from LocalStorage and refreshes the token\n     * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n     */\n    async _recoverAndRefresh() {\n        var _a;\n        const debugName = '#_recoverAndRefresh()';\n        this._debug(debugName, 'begin');\n        try {\n            const currentSession = await getItemAsync(this.storage, this.storageKey);\n            this._debug(debugName, 'session from storage', currentSession);\n            if (!this._isValidSession(currentSession)) {\n                this._debug(debugName, 'session is not valid');\n                if (currentSession !== null) {\n                    await this._removeSession();\n                }\n                return;\n            }\n            const timeNow = Math.round(Date.now() / 1000);\n            const expiresWithMargin = ((_a = currentSession.expires_at) !== null && _a !== void 0 ? _a : Infinity) < timeNow + EXPIRY_MARGIN;\n            this._debug(debugName, `session has${expiresWithMargin ? '' : ' not'} expired with margin of ${EXPIRY_MARGIN}s`);\n            if (expiresWithMargin) {\n                if (this.autoRefreshToken && currentSession.refresh_token) {\n                    const { error } = await this._callRefreshToken(currentSession.refresh_token);\n                    if (error) {\n                        console.error(error);\n                        if (!isAuthRetryableFetchError(error)) {\n                            this._debug(debugName, 'refresh failed with a non-retryable error, removing the session', error);\n                            await this._removeSession();\n                        }\n                    }\n                }\n            }\n            else {\n                // no need to persist currentSession again, as we just loaded it from\n                // local storage; persisting it again may overwrite a value saved by\n                // another client with access to the same local storage\n                await this._notifyAllSubscribers('SIGNED_IN', currentSession);\n            }\n        }\n        catch (err) {\n            this._debug(debugName, 'error', err);\n            console.error(err);\n            return;\n        }\n        finally {\n            this._debug(debugName, 'end');\n        }\n    }\n    async _callRefreshToken(refreshToken) {\n        var _a, _b;\n        if (!refreshToken) {\n            throw new AuthSessionMissingError();\n        }\n        // refreshing is already in progress\n        if (this.refreshingDeferred) {\n            return this.refreshingDeferred.promise;\n        }\n        const debugName = `#_callRefreshToken(${refreshToken.substring(0, 5)}...)`;\n        this._debug(debugName, 'begin');\n        try {\n            this.refreshingDeferred = new Deferred();\n            const { data, error } = await this._refreshAccessToken(refreshToken);\n            if (error)\n                throw error;\n            if (!data.session)\n                throw new AuthSessionMissingError();\n            await this._saveSession(data.session);\n            await this._notifyAllSubscribers('TOKEN_REFRESHED', data.session);\n            const result = { session: data.session, error: null };\n            this.refreshingDeferred.resolve(result);\n            return result;\n        }\n        catch (error) {\n            this._debug(debugName, 'error', error);\n            if (isAuthError(error)) {\n                const result = { session: null, error };\n                if (!isAuthRetryableFetchError(error)) {\n                    await this._removeSession();\n                }\n                (_a = this.refreshingDeferred) === null || _a === void 0 ? void 0 : _a.resolve(result);\n                return result;\n            }\n            (_b = this.refreshingDeferred) === null || _b === void 0 ? void 0 : _b.reject(error);\n            throw error;\n        }\n        finally {\n            this.refreshingDeferred = null;\n            this._debug(debugName, 'end');\n        }\n    }\n    async _notifyAllSubscribers(event, session, broadcast = true) {\n        const debugName = `#_notifyAllSubscribers(${event})`;\n        this._debug(debugName, 'begin', session, `broadcast = ${broadcast}`);\n        try {\n            if (this.broadcastChannel && broadcast) {\n                this.broadcastChannel.postMessage({ event, session });\n            }\n            const errors = [];\n            const promises = Array.from(this.stateChangeEmitters.values()).map(async (x) => {\n                try {\n                    await x.callback(event, session);\n                }\n                catch (e) {\n                    errors.push(e);\n                }\n            });\n            await Promise.all(promises);\n            if (errors.length > 0) {\n                for (let i = 0; i < errors.length; i += 1) {\n                    console.error(errors[i]);\n                }\n                throw errors[0];\n            }\n        }\n        finally {\n            this._debug(debugName, 'end');\n        }\n    }\n    /**\n     * set currentSession and currentUser\n     * process to _startAutoRefreshToken if possible\n     */\n    async _saveSession(session) {\n        this._debug('#_saveSession()', session);\n        // _saveSession is always called whenever a new session has been acquired\n        // so we can safely suppress the warning returned by future getSession calls\n        this.suppressGetSessionWarning = true;\n        await setItemAsync(this.storage, this.storageKey, session);\n    }\n    async _removeSession() {\n        this._debug('#_removeSession()');\n        await removeItemAsync(this.storage, this.storageKey);\n        await this._notifyAllSubscribers('SIGNED_OUT', null);\n    }\n    /**\n     * Removes any registered visibilitychange callback.\n     *\n     * {@see #startAutoRefresh}\n     * {@see #stopAutoRefresh}\n     */\n    _removeVisibilityChangedCallback() {\n        this._debug('#_removeVisibilityChangedCallback()');\n        const callback = this.visibilityChangedCallback;\n        this.visibilityChangedCallback = null;\n        try {\n            if (callback && isBrowser() && (window === null || window === void 0 ? void 0 : window.removeEventListener)) {\n                window.removeEventListener('visibilitychange', callback);\n            }\n        }\n        catch (e) {\n            console.error('removing visibilitychange callback failed', e);\n        }\n    }\n    /**\n     * This is the private implementation of {@link #startAutoRefresh}. Use this\n     * within the library.\n     */\n    async _startAutoRefresh() {\n        await this._stopAutoRefresh();\n        this._debug('#_startAutoRefresh()');\n        const ticker = setInterval(() => this._autoRefreshTokenTick(), AUTO_REFRESH_TICK_DURATION);\n        this.autoRefreshTicker = ticker;\n        if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\n            // ticker is a NodeJS Timeout object that has an `unref` method\n            // https://nodejs.org/api/timers.html#timeoutunref\n            // When auto refresh is used in NodeJS (like for testing) the\n            // `setInterval` is preventing the process from being marked as\n            // finished and tests run endlessly. This can be prevented by calling\n            // `unref()` on the returned object.\n            ticker.unref();\n            // @ts-expect-error TS has no context of Deno\n        }\n        else if (typeof Deno !== 'undefined' && typeof Deno.unrefTimer === 'function') {\n            // similar like for NodeJS, but with the Deno API\n            // https://deno.land/api@latest?unstable&s=Deno.unrefTimer\n            // @ts-expect-error TS has no context of Deno\n            Deno.unrefTimer(ticker);\n        }\n        // run the tick immediately, but in the next pass of the event loop so that\n        // #_initialize can be allowed to complete without recursively waiting on\n        // itself\n        setTimeout(async () => {\n            await this.initializePromise;\n            await this._autoRefreshTokenTick();\n        }, 0);\n    }\n    /**\n     * This is the private implementation of {@link #stopAutoRefresh}. Use this\n     * within the library.\n     */\n    async _stopAutoRefresh() {\n        this._debug('#_stopAutoRefresh()');\n        const ticker = this.autoRefreshTicker;\n        this.autoRefreshTicker = null;\n        if (ticker) {\n            clearInterval(ticker);\n        }\n    }\n    /**\n     * Starts an auto-refresh process in the background. The session is checked\n     * every few seconds. Close to the time of expiration a process is started to\n     * refresh the session. If refreshing fails it will be retried for as long as\n     * necessary.\n     *\n     * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\n     * to call this function, it will be called for you.\n     *\n     * On browsers the refresh process works only when the tab/window is in the\n     * foreground to conserve resources as well as prevent race conditions and\n     * flooding auth with requests. If you call this method any managed\n     * visibility change callback will be removed and you must manage visibility\n     * changes on your own.\n     *\n     * On non-browser platforms the refresh process works *continuously* in the\n     * background, which may not be desirable. You should hook into your\n     * platform's foreground indication mechanism and call these methods\n     * appropriately to conserve resources.\n     *\n     * {@see #stopAutoRefresh}\n     */\n    async startAutoRefresh() {\n        this._removeVisibilityChangedCallback();\n        await this._startAutoRefresh();\n    }\n    /**\n     * Stops an active auto refresh process running in the background (if any).\n     *\n     * If you call this method any managed visibility change callback will be\n     * removed and you must manage visibility changes on your own.\n     *\n     * See {@link #startAutoRefresh} for more details.\n     */\n    async stopAutoRefresh() {\n        this._removeVisibilityChangedCallback();\n        await this._stopAutoRefresh();\n    }\n    /**\n     * Runs the auto refresh token tick.\n     */\n    async _autoRefreshTokenTick() {\n        this._debug('#_autoRefreshTokenTick()', 'begin');\n        try {\n            await this._acquireLock(0, async () => {\n                try {\n                    const now = Date.now();\n                    try {\n                        return await this._useSession(async (result) => {\n                            const { data: { session }, } = result;\n                            if (!session || !session.refresh_token || !session.expires_at) {\n                                this._debug('#_autoRefreshTokenTick()', 'no session');\n                                return;\n                            }\n                            // session will expire in this many ticks (or has already expired if <= 0)\n                            const expiresInTicks = Math.floor((session.expires_at * 1000 - now) / AUTO_REFRESH_TICK_DURATION);\n                            this._debug('#_autoRefreshTokenTick()', `access token expires in ${expiresInTicks} ticks, a tick lasts ${AUTO_REFRESH_TICK_DURATION}ms, refresh threshold is ${AUTO_REFRESH_TICK_THRESHOLD} ticks`);\n                            if (expiresInTicks <= AUTO_REFRESH_TICK_THRESHOLD) {\n                                await this._callRefreshToken(session.refresh_token);\n                            }\n                        });\n                    }\n                    catch (e) {\n                        console.error('Auto refresh tick failed with error. This is likely a transient error.', e);\n                    }\n                }\n                finally {\n                    this._debug('#_autoRefreshTokenTick()', 'end');\n                }\n            });\n        }\n        catch (e) {\n            if (e.isAcquireTimeout || e instanceof LockAcquireTimeoutError) {\n                this._debug('auto refresh token tick lock not available');\n            }\n            else {\n                throw e;\n            }\n        }\n    }\n    /**\n     * Registers callbacks on the browser / platform, which in-turn run\n     * algorithms when the browser window/tab are in foreground. On non-browser\n     * platforms it assumes always foreground.\n     */\n    async _handleVisibilityChange() {\n        this._debug('#_handleVisibilityChange()');\n        if (!isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n            if (this.autoRefreshToken) {\n                // in non-browser environments the refresh token ticker runs always\n                this.startAutoRefresh();\n            }\n            return false;\n        }\n        try {\n            this.visibilityChangedCallback = async () => await this._onVisibilityChanged(false);\n            window === null || window === void 0 ? void 0 : window.addEventListener('visibilitychange', this.visibilityChangedCallback);\n            // now immediately call the visbility changed callback to setup with the\n            // current visbility state\n            await this._onVisibilityChanged(true); // initial call\n        }\n        catch (error) {\n            console.error('_handleVisibilityChange', error);\n        }\n    }\n    /**\n     * Callback registered with `window.addEventListener('visibilitychange')`.\n     */\n    async _onVisibilityChanged(calledFromInitialize) {\n        const methodName = `#_onVisibilityChanged(${calledFromInitialize})`;\n        this._debug(methodName, 'visibilityState', document.visibilityState);\n        if (document.visibilityState === 'visible') {\n            if (this.autoRefreshToken) {\n                // in browser environments the refresh token ticker runs only on focused tabs\n                // which prevents race conditions\n                this._startAutoRefresh();\n            }\n            if (!calledFromInitialize) {\n                // called when the visibility has changed, i.e. the browser\n                // transitioned from hidden -> visible so we need to see if the session\n                // should be recovered immediately... but to do that we need to acquire\n                // the lock first asynchronously\n                await this.initializePromise;\n                await this._acquireLock(-1, async () => {\n                    if (document.visibilityState !== 'visible') {\n                        this._debug(methodName, 'acquired the lock to recover the session, but the browser visibilityState is no longer visible, aborting');\n                        // visibility has changed while waiting for the lock, abort\n                        return;\n                    }\n                    // recover the session\n                    await this._recoverAndRefresh();\n                });\n            }\n        }\n        else if (document.visibilityState === 'hidden') {\n            if (this.autoRefreshToken) {\n                this._stopAutoRefresh();\n            }\n        }\n    }\n    /**\n     * Generates the relevant login URL for a third-party provider.\n     * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param options.scopes A space-separated list of scopes granted to the OAuth application.\n     * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\n     */\n    async _getUrlForProvider(url, provider, options) {\n        const urlParams = [`provider=${encodeURIComponent(provider)}`];\n        if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n            urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`);\n        }\n        if (options === null || options === void 0 ? void 0 : options.scopes) {\n            urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`);\n        }\n        if (this.flowType === 'pkce') {\n            const [codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(this.storage, this.storageKey);\n            const flowParams = new URLSearchParams({\n                code_challenge: `${encodeURIComponent(codeChallenge)}`,\n                code_challenge_method: `${encodeURIComponent(codeChallengeMethod)}`,\n            });\n            urlParams.push(flowParams.toString());\n        }\n        if (options === null || options === void 0 ? void 0 : options.queryParams) {\n            const query = new URLSearchParams(options.queryParams);\n            urlParams.push(query.toString());\n        }\n        if (options === null || options === void 0 ? void 0 : options.skipBrowserRedirect) {\n            urlParams.push(`skip_http_redirect=${options.skipBrowserRedirect}`);\n        }\n        return `${url}?${urlParams.join('&')}`;\n    }\n    async _unenroll(params) {\n        try {\n            return await this._useSession(async (result) => {\n                var _a;\n                const { data: sessionData, error: sessionError } = result;\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                return await _request(this.fetch, 'DELETE', `${this.url}/factors/${params.factorId}`, {\n                    headers: this.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                });\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    async _enroll(params) {\n        try {\n            return await this._useSession(async (result) => {\n                var _a, _b;\n                const { data: sessionData, error: sessionError } = result;\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                const body = Object.assign({ friendly_name: params.friendlyName, factor_type: params.factorType }, (params.factorType === 'phone' ? { phone: params.phone } : { issuer: params.issuer }));\n                const { data, error } = await _request(this.fetch, 'POST', `${this.url}/factors`, {\n                    body,\n                    headers: this.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                });\n                if (error) {\n                    return { data: null, error };\n                }\n                if (params.factorType === 'totp' && ((_b = data === null || data === void 0 ? void 0 : data.totp) === null || _b === void 0 ? void 0 : _b.qr_code)) {\n                    data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`;\n                }\n                return { data, error: null };\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * {@see GoTrueMFAApi#verify}\n     */\n    async _verify(params) {\n        return this._acquireLock(-1, async () => {\n            try {\n                return await this._useSession(async (result) => {\n                    var _a;\n                    const { data: sessionData, error: sessionError } = result;\n                    if (sessionError) {\n                        return { data: null, error: sessionError };\n                    }\n                    const { data, error } = await _request(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/verify`, {\n                        body: { code: params.code, challenge_id: params.challengeId },\n                        headers: this.headers,\n                        jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                    });\n                    if (error) {\n                        return { data: null, error };\n                    }\n                    await this._saveSession(Object.assign({ expires_at: Math.round(Date.now() / 1000) + data.expires_in }, data));\n                    await this._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data);\n                    return { data, error };\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#challenge}\n     */\n    async _challenge(params) {\n        return this._acquireLock(-1, async () => {\n            try {\n                return await this._useSession(async (result) => {\n                    var _a;\n                    const { data: sessionData, error: sessionError } = result;\n                    if (sessionError) {\n                        return { data: null, error: sessionError };\n                    }\n                    return await _request(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/challenge`, {\n                        body: { channel: params.channel },\n                        headers: this.headers,\n                        jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                    });\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#challengeAndVerify}\n     */\n    async _challengeAndVerify(params) {\n        // both _challenge and _verify independently acquire the lock, so no need\n        // to acquire it here\n        const { data: challengeData, error: challengeError } = await this._challenge({\n            factorId: params.factorId,\n        });\n        if (challengeError) {\n            return { data: null, error: challengeError };\n        }\n        return await this._verify({\n            factorId: params.factorId,\n            challengeId: challengeData.id,\n            code: params.code,\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#listFactors}\n     */\n    async _listFactors() {\n        // use #getUser instead of #_getUser as the former acquires a lock\n        const { data: { user }, error: userError, } = await this.getUser();\n        if (userError) {\n            return { data: null, error: userError };\n        }\n        const factors = (user === null || user === void 0 ? void 0 : user.factors) || [];\n        const totp = factors.filter((factor) => factor.factor_type === 'totp' && factor.status === 'verified');\n        const phone = factors.filter((factor) => factor.factor_type === 'phone' && factor.status === 'verified');\n        return {\n            data: {\n                all: factors,\n                totp,\n                phone,\n            },\n            error: null,\n        };\n    }\n    /**\n     * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n     */\n    async _getAuthenticatorAssuranceLevel() {\n        return this._acquireLock(-1, async () => {\n            return await this._useSession(async (result) => {\n                var _a, _b;\n                const { data: { session }, error: sessionError, } = result;\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                if (!session) {\n                    return {\n                        data: { currentLevel: null, nextLevel: null, currentAuthenticationMethods: [] },\n                        error: null,\n                    };\n                }\n                const payload = this._decodeJWT(session.access_token);\n                let currentLevel = null;\n                if (payload.aal) {\n                    currentLevel = payload.aal;\n                }\n                let nextLevel = currentLevel;\n                const verifiedFactors = (_b = (_a = session.user.factors) === null || _a === void 0 ? void 0 : _a.filter((factor) => factor.status === 'verified')) !== null && _b !== void 0 ? _b : [];\n                if (verifiedFactors.length > 0) {\n                    nextLevel = 'aal2';\n                }\n                const currentAuthenticationMethods = payload.amr || [];\n                return { data: { currentLevel, nextLevel, currentAuthenticationMethods }, error: null };\n            });\n        });\n    }\n}\nGoTrueClient.nextInstanceID = 0;\n//# sourceMappingURL=GoTrueClient.js.map","import GoTrueAdminApi from './GoTrueAdminApi';\nconst AuthAdminApi = GoTrueAdminApi;\nexport default AuthAdminApi;\n//# sourceMappingURL=AuthAdminApi.js.map","import GoTrueClient from './GoTrueClient';\nconst AuthClient = GoTrueClient;\nexport default AuthClient;\n//# sourceMappingURL=AuthClient.js.map","import GoTrueAdminApi from './GoTrueAdminApi';\nimport GoTrueClient from './GoTrueClient';\nimport AuthAdminApi from './AuthAdminApi';\nimport AuthClient from './AuthClient';\nexport { GoTrueAdminApi, GoTrueClient, AuthAdminApi, AuthClient };\nexport * from './lib/types';\nexport * from './lib/errors';\nexport { navigatorLock, NavigatorLockAcquireTimeoutError, internals as lockInternals, } from './lib/locks';\n//# sourceMappingURL=index.js.map","import { AuthClient } from '@supabase/auth-js';\nexport class SupabaseAuthClient extends AuthClient {\n    constructor(options) {\n        super(options);\n    }\n}\n//# sourceMappingURL=SupabaseAuthClient.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { FunctionsClient } from '@supabase/functions-js';\nimport { PostgrestClient, } from '@supabase/postgrest-js';\nimport { RealtimeClient, } from '@supabase/realtime-js';\nimport { StorageClient as SupabaseStorageClient } from '@supabase/storage-js';\nimport { DEFAULT_GLOBAL_OPTIONS, DEFAULT_DB_OPTIONS, DEFAULT_AUTH_OPTIONS, DEFAULT_REALTIME_OPTIONS, } from './lib/constants';\nimport { fetchWithAuth } from './lib/fetch';\nimport { stripTrailingSlash, applySettingDefaults } from './lib/helpers';\nimport { SupabaseAuthClient } from './lib/SupabaseAuthClient';\n/**\n * Supabase Client.\n *\n * An isomorphic Javascript client for interacting with Postgres.\n */\nexport default class SupabaseClient {\n    /**\n     * Create a new client for use in the browser.\n     * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n     * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n     * @param options.db.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n     * @param options.auth.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.auth.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.auth.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.realtime Options passed along to realtime-js constructor.\n     * @param options.global.fetch A custom fetch implementation.\n     * @param options.global.headers Any additional headers to send with each network request.\n     */\n    constructor(supabaseUrl, supabaseKey, options) {\n        var _a, _b, _c;\n        this.supabaseUrl = supabaseUrl;\n        this.supabaseKey = supabaseKey;\n        if (!supabaseUrl)\n            throw new Error('supabaseUrl is required.');\n        if (!supabaseKey)\n            throw new Error('supabaseKey is required.');\n        const _supabaseUrl = stripTrailingSlash(supabaseUrl);\n        this.realtimeUrl = `${_supabaseUrl}/realtime/v1`.replace(/^http/i, 'ws');\n        this.authUrl = `${_supabaseUrl}/auth/v1`;\n        this.storageUrl = `${_supabaseUrl}/storage/v1`;\n        this.functionsUrl = `${_supabaseUrl}/functions/v1`;\n        // default storage key uses the supabase project ref as a namespace\n        const defaultStorageKey = `sb-${new URL(this.authUrl).hostname.split('.')[0]}-auth-token`;\n        const DEFAULTS = {\n            db: DEFAULT_DB_OPTIONS,\n            realtime: DEFAULT_REALTIME_OPTIONS,\n            auth: Object.assign(Object.assign({}, DEFAULT_AUTH_OPTIONS), { storageKey: defaultStorageKey }),\n            global: DEFAULT_GLOBAL_OPTIONS,\n        };\n        const settings = applySettingDefaults(options !== null && options !== void 0 ? options : {}, DEFAULTS);\n        this.storageKey = (_a = settings.auth.storageKey) !== null && _a !== void 0 ? _a : '';\n        this.headers = (_b = settings.global.headers) !== null && _b !== void 0 ? _b : {};\n        if (!settings.accessToken) {\n            this.auth = this._initSupabaseAuthClient((_c = settings.auth) !== null && _c !== void 0 ? _c : {}, this.headers, settings.global.fetch);\n        }\n        else {\n            this.accessToken = settings.accessToken;\n            this.auth = new Proxy({}, {\n                get: (_, prop) => {\n                    throw new Error(`@supabase/supabase-js: Supabase Client is configured with the accessToken option, accessing supabase.auth.${String(prop)} is not possible`);\n                },\n            });\n        }\n        this.fetch = fetchWithAuth(supabaseKey, this._getAccessToken.bind(this), settings.global.fetch);\n        this.realtime = this._initRealtimeClient(Object.assign({ headers: this.headers, accessToken: this._getAccessToken.bind(this) }, settings.realtime));\n        this.rest = new PostgrestClient(`${_supabaseUrl}/rest/v1`, {\n            headers: this.headers,\n            schema: settings.db.schema,\n            fetch: this.fetch,\n        });\n        if (!settings.accessToken) {\n            this._listenForAuthEvents();\n        }\n    }\n    /**\n     * Supabase Functions allows you to deploy and invoke edge functions.\n     */\n    get functions() {\n        return new FunctionsClient(this.functionsUrl, {\n            headers: this.headers,\n            customFetch: this.fetch,\n        });\n    }\n    /**\n     * Supabase Storage allows you to manage user-generated content, such as photos or videos.\n     */\n    get storage() {\n        return new SupabaseStorageClient(this.storageUrl, this.headers, this.fetch);\n    }\n    /**\n     * Perform a query on a table or a view.\n     *\n     * @param relation - The table or view name to query\n     */\n    from(relation) {\n        return this.rest.from(relation);\n    }\n    // NOTE: signatures must be kept in sync with PostgrestClient.schema\n    /**\n     * Select a schema to query or perform an function (rpc) call.\n     *\n     * The schema needs to be on the list of exposed schemas inside Supabase.\n     *\n     * @param schema - The schema to query\n     */\n    schema(schema) {\n        return this.rest.schema(schema);\n    }\n    // NOTE: signatures must be kept in sync with PostgrestClient.rpc\n    /**\n     * Perform a function call.\n     *\n     * @param fn - The function name to call\n     * @param args - The arguments to pass to the function call\n     * @param options - Named parameters\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     * @param options.get - When set to `true`, the function will be called with\n     * read-only access mode.\n     * @param options.count - Count algorithm to use to count rows returned by the\n     * function. Only applicable for [set-returning\n     * functions](https://www.postgresql.org/docs/current/functions-srf.html).\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    rpc(fn, args = {}, options = {}) {\n        return this.rest.rpc(fn, args, options);\n    }\n    /**\n     * Creates a Realtime channel with Broadcast, Presence, and Postgres Changes.\n     *\n     * @param {string} name - The name of the Realtime channel.\n     * @param {Object} opts - The options to pass to the Realtime channel.\n     *\n     */\n    channel(name, opts = { config: {} }) {\n        return this.realtime.channel(name, opts);\n    }\n    /**\n     * Returns all Realtime channels.\n     */\n    getChannels() {\n        return this.realtime.getChannels();\n    }\n    /**\n     * Unsubscribes and removes Realtime channel from Realtime client.\n     *\n     * @param {RealtimeChannel} channel - The name of the Realtime channel.\n     *\n     */\n    removeChannel(channel) {\n        return this.realtime.removeChannel(channel);\n    }\n    /**\n     * Unsubscribes and removes all Realtime channels from Realtime client.\n     */\n    removeAllChannels() {\n        return this.realtime.removeAllChannels();\n    }\n    _getAccessToken() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.accessToken) {\n                return yield this.accessToken();\n            }\n            const { data } = yield this.auth.getSession();\n            return (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : null;\n        });\n    }\n    _initSupabaseAuthClient({ autoRefreshToken, persistSession, detectSessionInUrl, storage, storageKey, flowType, lock, debug, }, headers, fetch) {\n        const authHeaders = {\n            Authorization: `Bearer ${this.supabaseKey}`,\n            apikey: `${this.supabaseKey}`,\n        };\n        return new SupabaseAuthClient({\n            url: this.authUrl,\n            headers: Object.assign(Object.assign({}, authHeaders), headers),\n            storageKey: storageKey,\n            autoRefreshToken,\n            persistSession,\n            detectSessionInUrl,\n            storage,\n            flowType,\n            lock,\n            debug,\n            fetch,\n            // auth checks if there is a custom authorizaiton header using this flag\n            // so it knows whether to return an error when getUser is called with no session\n            hasCustomAuthorizationHeader: 'Authorization' in this.headers,\n        });\n    }\n    _initRealtimeClient(options) {\n        return new RealtimeClient(this.realtimeUrl, Object.assign(Object.assign({}, options), { params: Object.assign({ apikey: this.supabaseKey }, options === null || options === void 0 ? void 0 : options.params) }));\n    }\n    _listenForAuthEvents() {\n        let data = this.auth.onAuthStateChange((event, session) => {\n            this._handleTokenChanged(event, 'CLIENT', session === null || session === void 0 ? void 0 : session.access_token);\n        });\n        return data;\n    }\n    _handleTokenChanged(event, source, token) {\n        if ((event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') &&\n            this.changedAccessToken !== token) {\n            this.changedAccessToken = token;\n        }\n        else if (event === 'SIGNED_OUT') {\n            this.realtime.setAuth();\n            if (source == 'STORAGE')\n                this.auth.signOut();\n            this.changedAccessToken = undefined;\n        }\n    }\n}\n//# sourceMappingURL=SupabaseClient.js.map","import SupabaseClient from './SupabaseClient';\nexport * from '@supabase/auth-js';\nexport { PostgrestError, } from '@supabase/postgrest-js';\nexport { FunctionsHttpError, FunctionsFetchError, FunctionsRelayError, FunctionsError, FunctionRegion, } from '@supabase/functions-js';\nexport * from '@supabase/realtime-js';\nexport { default as SupabaseClient } from './SupabaseClient';\n/**\n * Creates a new Supabase Client.\n */\nexport const createClient = (supabaseUrl, supabaseKey, options) => {\n    return new SupabaseClient(supabaseUrl, supabaseKey, options);\n};\n//# sourceMappingURL=index.js.map","import { NextURL } from '../next-url';\nimport { toNodeOutgoingHttpHeaders, validateURL } from '../utils';\nimport { RemovedUAError, RemovedPageError } from '../error';\nimport { RequestCookies } from './cookies';\nexport const INTERNALS = Symbol('internal request');\n/**\n * This class extends the [Web `Request` API](https://developer.mozilla.org/docs/Web/API/Request) with additional convenience methods.\n *\n * Read more: [Next.js Docs: `NextRequest`](https://nextjs.org/docs/app/api-reference/functions/next-request)\n */ export class NextRequest extends Request {\n    constructor(input, init = {}){\n        const url = typeof input !== 'string' && 'url' in input ? input.url : String(input);\n        validateURL(url);\n        // node Request instance requires duplex option when a body\n        // is present or it errors, we don't handle this for\n        // Request being passed in since it would have already\n        // errored if this wasn't configured\n        if (process.env.NEXT_RUNTIME !== 'edge') {\n            if (init.body && init.duplex !== 'half') {\n                init.duplex = 'half';\n            }\n        }\n        if (input instanceof Request) super(input, init);\n        else super(url, init);\n        const nextUrl = new NextURL(url, {\n            headers: toNodeOutgoingHttpHeaders(this.headers),\n            nextConfig: init.nextConfig\n        });\n        this[INTERNALS] = {\n            cookies: new RequestCookies(this.headers),\n            nextUrl,\n            url: process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE ? url : nextUrl.toString()\n        };\n    }\n    [Symbol.for('edge-runtime.inspect.custom')]() {\n        return {\n            cookies: this.cookies,\n            nextUrl: this.nextUrl,\n            url: this.url,\n            // rest of props come from Request\n            bodyUsed: this.bodyUsed,\n            cache: this.cache,\n            credentials: this.credentials,\n            destination: this.destination,\n            headers: Object.fromEntries(this.headers),\n            integrity: this.integrity,\n            keepalive: this.keepalive,\n            method: this.method,\n            mode: this.mode,\n            redirect: this.redirect,\n            referrer: this.referrer,\n            referrerPolicy: this.referrerPolicy,\n            signal: this.signal\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    get nextUrl() {\n        return this[INTERNALS].nextUrl;\n    }\n    /**\n   * @deprecated\n   * `page` has been deprecated in favour of `URLPattern`.\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\n   */ get page() {\n        throw new RemovedPageError();\n    }\n    /**\n   * @deprecated\n   * `ua` has been removed in favour of \\`userAgent\\` function.\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n   */ get ua() {\n        throw new RemovedUAError();\n    }\n    get url() {\n        return this[INTERNALS].url;\n    }\n}\n\n//# sourceMappingURL=request.js.map","import { LogSpanAllowList, NextVanillaSpanAllowlist } from './constants';\nimport { isThenable } from '../../../shared/lib/is-thenable';\nlet api;\n// we want to allow users to use their own version of @opentelemetry/api if they\n// want to, so we try to require it first, and if it fails we fall back to the\n// version that is bundled with Next.js\n// this is because @opentelemetry/api has to be synced with the version of\n// @opentelemetry/tracing that is used, and we don't want to force users to use\n// the version that is bundled with Next.js.\n// the API is ~stable, so this should be fine\nif (process.env.NEXT_RUNTIME === 'edge') {\n    api = require('@opentelemetry/api');\n} else {\n    try {\n        api = require('@opentelemetry/api');\n    } catch (err) {\n        api = require('next/dist/compiled/@opentelemetry/api');\n    }\n}\nconst { context, propagation, trace, SpanStatusCode, SpanKind, ROOT_CONTEXT } = api;\nexport class BubbledError extends Error {\n    constructor(bubble, result){\n        super(), this.bubble = bubble, this.result = result;\n    }\n}\nexport function isBubbledError(error) {\n    if (typeof error !== 'object' || error === null) return false;\n    return error instanceof BubbledError;\n}\nconst closeSpanWithError = (span, error)=>{\n    if (isBubbledError(error) && error.bubble) {\n        span.setAttribute('next.bubble', true);\n    } else {\n        if (error) {\n            span.recordException(error);\n        }\n        span.setStatus({\n            code: SpanStatusCode.ERROR,\n            message: error == null ? void 0 : error.message\n        });\n    }\n    span.end();\n};\n/** we use this map to propagate attributes from nested spans to the top span */ const rootSpanAttributesStore = new Map();\nconst rootSpanIdKey = api.createContextKey('next.rootSpanId');\nlet lastSpanId = 0;\nconst getSpanId = ()=>lastSpanId++;\nconst clientTraceDataSetter = {\n    set (carrier, key, value) {\n        carrier.push({\n            key,\n            value\n        });\n    }\n};\nclass NextTracerImpl {\n    /**\n   * Returns an instance to the trace with configured name.\n   * Since wrap / trace can be defined in any place prior to actual trace subscriber initialization,\n   * This should be lazily evaluated.\n   */ getTracerInstance() {\n        return trace.getTracer('next.js', '0.0.1');\n    }\n    getContext() {\n        return context;\n    }\n    getTracePropagationData() {\n        const activeContext = context.active();\n        const entries = [];\n        propagation.inject(activeContext, entries, clientTraceDataSetter);\n        return entries;\n    }\n    getActiveScopeSpan() {\n        return trace.getSpan(context == null ? void 0 : context.active());\n    }\n    withPropagatedContext(carrier, fn, getter) {\n        const activeContext = context.active();\n        if (trace.getSpanContext(activeContext)) {\n            // Active span is already set, too late to propagate.\n            return fn();\n        }\n        const remoteContext = propagation.extract(activeContext, carrier, getter);\n        return context.with(remoteContext, fn);\n    }\n    trace(...args) {\n        var _trace_getSpanContext;\n        const [type, fnOrOptions, fnOrEmpty] = args;\n        // coerce options form overload\n        const { fn, options } = typeof fnOrOptions === 'function' ? {\n            fn: fnOrOptions,\n            options: {}\n        } : {\n            fn: fnOrEmpty,\n            options: {\n                ...fnOrOptions\n            }\n        };\n        const spanName = options.spanName ?? type;\n        if (!NextVanillaSpanAllowlist.includes(type) && process.env.NEXT_OTEL_VERBOSE !== '1' || options.hideSpan) {\n            return fn();\n        }\n        // Trying to get active scoped span to assign parent. If option specifies parent span manually, will try to use it.\n        let spanContext = this.getSpanContext((options == null ? void 0 : options.parentSpan) ?? this.getActiveScopeSpan());\n        let isRootSpan = false;\n        if (!spanContext) {\n            spanContext = (context == null ? void 0 : context.active()) ?? ROOT_CONTEXT;\n            isRootSpan = true;\n        } else if ((_trace_getSpanContext = trace.getSpanContext(spanContext)) == null ? void 0 : _trace_getSpanContext.isRemote) {\n            isRootSpan = true;\n        }\n        const spanId = getSpanId();\n        options.attributes = {\n            'next.span_name': spanName,\n            'next.span_type': type,\n            ...options.attributes\n        };\n        return context.with(spanContext.setValue(rootSpanIdKey, spanId), ()=>this.getTracerInstance().startActiveSpan(spanName, options, (span)=>{\n                const startTime = 'performance' in globalThis && 'measure' in performance ? globalThis.performance.now() : undefined;\n                const onCleanup = ()=>{\n                    rootSpanAttributesStore.delete(spanId);\n                    if (startTime && process.env.NEXT_OTEL_PERFORMANCE_PREFIX && LogSpanAllowList.includes(type || '')) {\n                        performance.measure(`${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-${(type.split('.').pop() || '').replace(/[A-Z]/g, (match)=>'-' + match.toLowerCase())}`, {\n                            start: startTime,\n                            end: performance.now()\n                        });\n                    }\n                };\n                if (isRootSpan) {\n                    rootSpanAttributesStore.set(spanId, new Map(Object.entries(options.attributes ?? {})));\n                }\n                try {\n                    if (fn.length > 1) {\n                        return fn(span, (err)=>closeSpanWithError(span, err));\n                    }\n                    const result = fn(span);\n                    if (isThenable(result)) {\n                        // If there's error make sure it throws\n                        return result.then((res)=>{\n                            span.end();\n                            // Need to pass down the promise result,\n                            // it could be react stream response with error { error, stream }\n                            return res;\n                        }).catch((err)=>{\n                            closeSpanWithError(span, err);\n                            throw err;\n                        }).finally(onCleanup);\n                    } else {\n                        span.end();\n                        onCleanup();\n                    }\n                    return result;\n                } catch (err) {\n                    closeSpanWithError(span, err);\n                    onCleanup();\n                    throw err;\n                }\n            }));\n    }\n    wrap(...args) {\n        const tracer = this;\n        const [name, options, fn] = args.length === 3 ? args : [\n            args[0],\n            {},\n            args[1]\n        ];\n        if (!NextVanillaSpanAllowlist.includes(name) && process.env.NEXT_OTEL_VERBOSE !== '1') {\n            return fn;\n        }\n        return function() {\n            let optionsObj = options;\n            if (typeof optionsObj === 'function' && typeof fn === 'function') {\n                optionsObj = optionsObj.apply(this, arguments);\n            }\n            const lastArgId = arguments.length - 1;\n            const cb = arguments[lastArgId];\n            if (typeof cb === 'function') {\n                const scopeBoundCb = tracer.getContext().bind(context.active(), cb);\n                return tracer.trace(name, optionsObj, (_span, done)=>{\n                    arguments[lastArgId] = function(err) {\n                        done == null ? void 0 : done(err);\n                        return scopeBoundCb.apply(this, arguments);\n                    };\n                    return fn.apply(this, arguments);\n                });\n            } else {\n                return tracer.trace(name, optionsObj, ()=>fn.apply(this, arguments));\n            }\n        };\n    }\n    startSpan(...args) {\n        const [type, options] = args;\n        const spanContext = this.getSpanContext((options == null ? void 0 : options.parentSpan) ?? this.getActiveScopeSpan());\n        return this.getTracerInstance().startSpan(type, options, spanContext);\n    }\n    getSpanContext(parentSpan) {\n        const spanContext = parentSpan ? trace.setSpan(context.active(), parentSpan) : undefined;\n        return spanContext;\n    }\n    getRootSpanAttributes() {\n        const spanId = context.active().getValue(rootSpanIdKey);\n        return rootSpanAttributesStore.get(spanId);\n    }\n    setRootSpanAttribute(key, value) {\n        const spanId = context.active().getValue(rootSpanIdKey);\n        const attributes = rootSpanAttributesStore.get(spanId);\n        if (attributes) {\n            attributes.set(key, value);\n        }\n    }\n}\nconst getTracer = (()=>{\n    const tracer = new NextTracerImpl();\n    return ()=>tracer;\n})();\nexport { getTracer, SpanStatusCode, SpanKind };\n\n//# sourceMappingURL=tracer.js.map","import { NEXT_CACHE_IMPLICIT_TAG_ID } from '../../lib/constants';\nimport { getCacheHandlerEntries } from '../use-cache/handlers';\nimport { createLazyResult } from './lazy-result';\nconst getDerivedTags = (pathname)=>{\n    const derivedTags = [\n        `/layout`\n    ];\n    // we automatically add the current path segments as tags\n    // for revalidatePath handling\n    if (pathname.startsWith('/')) {\n        const pathnameParts = pathname.split('/');\n        for(let i = 1; i < pathnameParts.length + 1; i++){\n            let curPathname = pathnameParts.slice(0, i).join('/');\n            if (curPathname) {\n                // all derived tags other than the page are layout tags\n                if (!curPathname.endsWith('/page') && !curPathname.endsWith('/route')) {\n                    curPathname = `${curPathname}${!curPathname.endsWith('/') ? '/' : ''}layout`;\n                }\n                derivedTags.push(curPathname);\n            }\n        }\n    }\n    return derivedTags;\n};\n/**\n * Creates a map with lazy results that fetch the expiration value for the given\n * tags and respective cache kind when they're awaited for the first time.\n */ function createTagsExpirationsByCacheKind(tags) {\n    const expirationsByCacheKind = new Map();\n    const cacheHandlers = getCacheHandlerEntries();\n    if (cacheHandlers) {\n        for (const [kind, cacheHandler] of cacheHandlers){\n            if ('getExpiration' in cacheHandler) {\n                expirationsByCacheKind.set(kind, createLazyResult(async ()=>cacheHandler.getExpiration(...tags)));\n            }\n        }\n    }\n    return expirationsByCacheKind;\n}\nexport async function getImplicitTags(page, url, fallbackRouteParams) {\n    const tags = [];\n    const hasFallbackRouteParams = fallbackRouteParams && fallbackRouteParams.size > 0;\n    // Add the derived tags from the page.\n    const derivedTags = getDerivedTags(page);\n    for (let tag of derivedTags){\n        tag = `${NEXT_CACHE_IMPLICIT_TAG_ID}${tag}`;\n        tags.push(tag);\n    }\n    // Add the tags from the pathname. If the route has unknown params, we don't\n    // want to add the pathname as a tag, as it will be invalid.\n    if (url.pathname && !hasFallbackRouteParams) {\n        const tag = `${NEXT_CACHE_IMPLICIT_TAG_ID}${url.pathname}`;\n        tags.push(tag);\n    }\n    return {\n        tags,\n        expirationsByCacheKind: createTagsExpirationsByCacheKind(tags)\n    };\n}\n\n//# sourceMappingURL=implicit-tags.js.map","\"use strict\";\n\nvar defaultParseOptions = {\n  decodeValues: true,\n  map: false,\n  silent: false,\n};\n\nfunction isNonEmptyString(str) {\n  return typeof str === \"string\" && !!str.trim();\n}\n\nfunction parseString(setCookieValue, options) {\n  var parts = setCookieValue.split(\";\").filter(isNonEmptyString);\n\n  var nameValuePairStr = parts.shift();\n  var parsed = parseNameValuePair(nameValuePairStr);\n  var name = parsed.name;\n  var value = parsed.value;\n\n  options = options\n    ? Object.assign({}, defaultParseOptions, options)\n    : defaultParseOptions;\n\n  try {\n    value = options.decodeValues ? decodeURIComponent(value) : value; // decode cookie value\n  } catch (e) {\n    console.error(\n      \"set-cookie-parser encountered an error while decoding a cookie with value '\" +\n        value +\n        \"'. Set options.decodeValues to false to disable this feature.\",\n      e\n    );\n  }\n\n  var cookie = {\n    name: name,\n    value: value,\n  };\n\n  parts.forEach(function (part) {\n    var sides = part.split(\"=\");\n    var key = sides.shift().trimLeft().toLowerCase();\n    var value = sides.join(\"=\");\n    if (key === \"expires\") {\n      cookie.expires = new Date(value);\n    } else if (key === \"max-age\") {\n      cookie.maxAge = parseInt(value, 10);\n    } else if (key === \"secure\") {\n      cookie.secure = true;\n    } else if (key === \"httponly\") {\n      cookie.httpOnly = true;\n    } else if (key === \"samesite\") {\n      cookie.sameSite = value;\n    } else {\n      cookie[key] = value;\n    }\n  });\n\n  return cookie;\n}\n\nfunction parseNameValuePair(nameValuePairStr) {\n  // Parses name-value-pair according to rfc6265bis draft\n\n  var name = \"\";\n  var value = \"\";\n  var nameValueArr = nameValuePairStr.split(\"=\");\n  if (nameValueArr.length > 1) {\n    name = nameValueArr.shift();\n    value = nameValueArr.join(\"=\"); // everything after the first =, joined by a \"=\" if there was more than one part\n  } else {\n    value = nameValuePairStr;\n  }\n\n  return { name: name, value: value };\n}\n\nfunction parse(input, options) {\n  options = options\n    ? Object.assign({}, defaultParseOptions, options)\n    : defaultParseOptions;\n\n  if (!input) {\n    if (!options.map) {\n      return [];\n    } else {\n      return {};\n    }\n  }\n\n  if (input.headers) {\n    if (typeof input.headers.getSetCookie === \"function\") {\n      // for fetch responses - they combine headers of the same type in the headers array,\n      // but getSetCookie returns an uncombined array\n      input = input.headers.getSetCookie();\n    } else if (input.headers[\"set-cookie\"]) {\n      // fast-path for node.js (which automatically normalizes header names to lower-case\n      input = input.headers[\"set-cookie\"];\n    } else {\n      // slow-path for other environments - see #25\n      var sch =\n        input.headers[\n          Object.keys(input.headers).find(function (key) {\n            return key.toLowerCase() === \"set-cookie\";\n          })\n        ];\n      // warn if called on a request-like object with a cookie header rather than a set-cookie header - see #34, 36\n      if (!sch && input.headers.cookie && !options.silent) {\n        console.warn(\n          \"Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.\"\n        );\n      }\n      input = sch;\n    }\n  }\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n\n  options = options\n    ? Object.assign({}, defaultParseOptions, options)\n    : defaultParseOptions;\n\n  if (!options.map) {\n    return input.filter(isNonEmptyString).map(function (str) {\n      return parseString(str, options);\n    });\n  } else {\n    var cookies = {};\n    return input.filter(isNonEmptyString).reduce(function (cookies, str) {\n      var cookie = parseString(str, options);\n      cookies[cookie.name] = cookie;\n      return cookies;\n    }, cookies);\n  }\n}\n\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n\n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/\nfunction splitCookiesString(cookiesString) {\n  if (Array.isArray(cookiesString)) {\n    return cookiesString;\n  }\n  if (typeof cookiesString !== \"string\") {\n    return [];\n  }\n\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        // ',' is a cookie separator if we have later first '=', not ';' or ','\n        lastComma = pos;\n        pos += 1;\n\n        skipWhitespace();\n        nextStart = pos;\n\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n\n        // currently special character\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          // we found cookies separator\n          cookiesSeparatorFound = true;\n          // pos is inside the next cookie, so back up and return it.\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          // in param ',' or param separator ';',\n          // we continue from that comma\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n\n  return cookiesStrings;\n}\n\nmodule.exports = parse;\nmodule.exports.parse = parse;\nmodule.exports.parseString = parseString;\nmodule.exports.splitCookiesString = splitCookiesString;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst PostgrestFilterBuilder_1 = __importDefault(require(\"./PostgrestFilterBuilder\"));\nclass PostgrestQueryBuilder {\n    constructor(url, { headers = {}, schema, fetch, }) {\n        this.url = url;\n        this.headers = headers;\n        this.schema = schema;\n        this.fetch = fetch;\n    }\n    /**\n     * Perform a SELECT query on the table or view.\n     *\n     * @param columns - The columns to retrieve, separated by commas. Columns can be renamed when returned with `customName:columnName`\n     *\n     * @param options - Named parameters\n     *\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     *\n     * @param options.count - Count algorithm to use to count rows in the table or view.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    select(columns, { head = false, count, } = {}) {\n        const method = head ? 'HEAD' : 'GET';\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = (columns !== null && columns !== void 0 ? columns : '*')\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        if (count) {\n            this.headers['Prefer'] = `count=${count}`;\n        }\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n    /**\n     * Perform an INSERT into the table or view.\n     *\n     * By default, inserted rows are not returned. To return it, chain the call\n     * with `.select()`.\n     *\n     * @param values - The values to insert. Pass an object to insert a single row\n     * or an array to insert multiple rows.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.count - Count algorithm to use to count inserted rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     *\n     * @param options.defaultToNull - Make missing fields default to `null`.\n     * Otherwise, use the default value for the column. Only applies for bulk\n     * inserts.\n     */\n    insert(values, { count, defaultToNull = true, } = {}) {\n        const method = 'POST';\n        const prefersHeaders = [];\n        if (this.headers['Prefer']) {\n            prefersHeaders.push(this.headers['Prefer']);\n        }\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (!defaultToNull) {\n            prefersHeaders.push('missing=default');\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        if (Array.isArray(values)) {\n            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);\n            if (columns.length > 0) {\n                const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`);\n                this.url.searchParams.set('columns', uniqueColumns.join(','));\n            }\n        }\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            body: values,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n    /**\n     * Perform an UPSERT on the table or view. Depending on the column(s) passed\n     * to `onConflict`, `.upsert()` allows you to perform the equivalent of\n     * `.insert()` if a row with the corresponding `onConflict` columns doesn't\n     * exist, or if it does exist, perform an alternative action depending on\n     * `ignoreDuplicates`.\n     *\n     * By default, upserted rows are not returned. To return it, chain the call\n     * with `.select()`.\n     *\n     * @param values - The values to upsert with. Pass an object to upsert a\n     * single row or an array to upsert multiple rows.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.onConflict - Comma-separated UNIQUE column(s) to specify how\n     * duplicate rows are determined. Two rows are duplicates if all the\n     * `onConflict` columns are equal.\n     *\n     * @param options.ignoreDuplicates - If `true`, duplicate rows are ignored. If\n     * `false`, duplicate rows are merged with existing rows.\n     *\n     * @param options.count - Count algorithm to use to count upserted rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     *\n     * @param options.defaultToNull - Make missing fields default to `null`.\n     * Otherwise, use the default value for the column. This only applies when\n     * inserting new rows, not when merging with existing rows under\n     * `ignoreDuplicates: false`. This also only applies when doing bulk upserts.\n     */\n    upsert(values, { onConflict, ignoreDuplicates = false, count, defaultToNull = true, } = {}) {\n        const method = 'POST';\n        const prefersHeaders = [`resolution=${ignoreDuplicates ? 'ignore' : 'merge'}-duplicates`];\n        if (onConflict !== undefined)\n            this.url.searchParams.set('on_conflict', onConflict);\n        if (this.headers['Prefer']) {\n            prefersHeaders.push(this.headers['Prefer']);\n        }\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (!defaultToNull) {\n            prefersHeaders.push('missing=default');\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        if (Array.isArray(values)) {\n            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);\n            if (columns.length > 0) {\n                const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`);\n                this.url.searchParams.set('columns', uniqueColumns.join(','));\n            }\n        }\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            body: values,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n    /**\n     * Perform an UPDATE on the table or view.\n     *\n     * By default, updated rows are not returned. To return it, chain the call\n     * with `.select()` after filters.\n     *\n     * @param values - The values to update with\n     *\n     * @param options - Named parameters\n     *\n     * @param options.count - Count algorithm to use to count updated rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    update(values, { count, } = {}) {\n        const method = 'PATCH';\n        const prefersHeaders = [];\n        if (this.headers['Prefer']) {\n            prefersHeaders.push(this.headers['Prefer']);\n        }\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            body: values,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n    /**\n     * Perform a DELETE on the table or view.\n     *\n     * By default, deleted rows are not returned. To return it, chain the call\n     * with `.select()` after filters.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.count - Count algorithm to use to count deleted rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    delete({ count, } = {}) {\n        const method = 'DELETE';\n        const prefersHeaders = [];\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n}\nexports.default = PostgrestQueryBuilder;\n//# sourceMappingURL=PostgrestQueryBuilder.js.map","export { RequestCookies, ResponseCookies, stringifyCookie } from 'next/dist/compiled/@edge-runtime/cookies';\n\n//# sourceMappingURL=cookies.js.map","import { createAsyncLocalStorage } from './async-local-storage';\nexport const afterTaskAsyncStorageInstance = createAsyncLocalStorage();\n\n//# sourceMappingURL=after-task-async-storage-instance.js.map","// Share the instance module in the next-shared layer\nimport { afterTaskAsyncStorageInstance as afterTaskAsyncStorage } from './after-task-async-storage-instance' with {\n    'turbopack-transition': 'next-shared'\n};\nexport { afterTaskAsyncStorage };\n\n//# sourceMappingURL=after-task-async-storage.external.js.map","import { parsePath } from './parse-path'\n\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */\nexport function pathHasPrefix(path: string, prefix: string) {\n  if (typeof path !== 'string') {\n    return false\n  }\n\n  const { pathname } = parsePath(path)\n  return pathname === prefix || pathname.startsWith(prefix + '/')\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.react-server.production.js');\n} else {\n  module.exports = require('./cjs/react.react-server.development.js');\n}\n","import { HeadersAdapter } from '../web/spec-extension/adapters/headers';\nimport { PRERENDER_REVALIDATE_HEADER, PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER } from '../../lib/constants';\nimport { getTracer } from '../lib/trace/tracer';\nimport { NodeSpan } from '../lib/trace/constants';\nexport function wrapApiHandler(page, handler) {\n    return (...args)=>{\n        getTracer().setRootSpanAttribute('next.route', page);\n        // Call API route method\n        return getTracer().trace(NodeSpan.runHandler, {\n            spanName: `executing api route (pages) ${page}`\n        }, ()=>handler(...args));\n    };\n}\n/**\n *\n * @param res response object\n * @param statusCode `HTTP` status code of response\n */ export function sendStatusCode(res, statusCode) {\n    res.statusCode = statusCode;\n    return res;\n}\n/**\n *\n * @param res response object\n * @param [statusOrUrl] `HTTP` status code of redirect\n * @param url URL of redirect\n */ export function redirect(res, statusOrUrl, url) {\n    if (typeof statusOrUrl === 'string') {\n        url = statusOrUrl;\n        statusOrUrl = 307;\n    }\n    if (typeof statusOrUrl !== 'number' || typeof url !== 'string') {\n        throw Object.defineProperty(new Error(`Invalid redirect arguments. Please use a single argument URL, e.g. res.redirect('/destination') or use a status code and URL, e.g. res.redirect(307, '/destination').`), \"__NEXT_ERROR_CODE\", {\n            value: \"E389\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    res.writeHead(statusOrUrl, {\n        Location: url\n    });\n    res.write(url);\n    res.end();\n    return res;\n}\nexport function checkIsOnDemandRevalidate(req, previewProps) {\n    const headers = HeadersAdapter.from(req.headers);\n    const previewModeId = headers.get(PRERENDER_REVALIDATE_HEADER);\n    const isOnDemandRevalidate = previewModeId === previewProps.previewModeId;\n    const revalidateOnlyGenerated = headers.has(PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER);\n    return {\n        isOnDemandRevalidate,\n        revalidateOnlyGenerated\n    };\n}\nexport const COOKIE_NAME_PRERENDER_BYPASS = `__prerender_bypass`;\nexport const COOKIE_NAME_PRERENDER_DATA = `__next_preview_data`;\nexport const RESPONSE_LIMIT_DEFAULT = 4 * 1024 * 1024;\nexport const SYMBOL_PREVIEW_DATA = Symbol(COOKIE_NAME_PRERENDER_DATA);\nexport const SYMBOL_CLEARED_COOKIES = Symbol(COOKIE_NAME_PRERENDER_BYPASS);\nexport function clearPreviewData(res, options = {}) {\n    if (SYMBOL_CLEARED_COOKIES in res) {\n        return res;\n    }\n    const { serialize } = require('next/dist/compiled/cookie');\n    const previous = res.getHeader('Set-Cookie');\n    res.setHeader(`Set-Cookie`, [\n        ...typeof previous === 'string' ? [\n            previous\n        ] : Array.isArray(previous) ? previous : [],\n        serialize(COOKIE_NAME_PRERENDER_BYPASS, '', {\n            // To delete a cookie, set `expires` to a date in the past:\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n            expires: new Date(0),\n            httpOnly: true,\n            sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n            secure: process.env.NODE_ENV !== 'development',\n            path: '/',\n            ...options.path !== undefined ? {\n                path: options.path\n            } : undefined\n        }),\n        serialize(COOKIE_NAME_PRERENDER_DATA, '', {\n            // To delete a cookie, set `expires` to a date in the past:\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n            expires: new Date(0),\n            httpOnly: true,\n            sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n            secure: process.env.NODE_ENV !== 'development',\n            path: '/',\n            ...options.path !== undefined ? {\n                path: options.path\n            } : undefined\n        })\n    ]);\n    Object.defineProperty(res, SYMBOL_CLEARED_COOKIES, {\n        value: true,\n        enumerable: false\n    });\n    return res;\n}\n/**\n * Custom error class\n */ export class ApiError extends Error {\n    constructor(statusCode, message){\n        super(message);\n        this.statusCode = statusCode;\n    }\n}\n/**\n * Sends error in `response`\n * @param res response object\n * @param statusCode of response\n * @param message of response\n */ export function sendError(res, statusCode, message) {\n    res.statusCode = statusCode;\n    res.statusMessage = message;\n    res.end(message);\n}\n/**\n * Execute getter function only if its needed\n * @param LazyProps `req` and `params` for lazyProp\n * @param prop name of property\n * @param getter function to get data\n */ export function setLazyProp({ req }, prop, getter) {\n    const opts = {\n        configurable: true,\n        enumerable: true\n    };\n    const optsReset = {\n        ...opts,\n        writable: true\n    };\n    Object.defineProperty(req, prop, {\n        ...opts,\n        get: ()=>{\n            const value = getter();\n            // we set the property on the object to avoid recalculating it\n            Object.defineProperty(req, prop, {\n                ...optsReset,\n                value\n            });\n            return value;\n        },\n        set: (value)=>{\n            Object.defineProperty(req, prop, {\n                ...optsReset,\n                value\n            });\n        }\n    });\n}\n\n//# sourceMappingURL=index.js.map","import { COOKIE_NAME_PRERENDER_BYPASS, checkIsOnDemandRevalidate } from '../api-utils';\nexport class DraftModeProvider {\n    constructor(previewProps, req, cookies, mutableCookies){\n        var _cookies_get;\n        // The logic for draftMode() is very similar to tryGetPreviewData()\n        // but Draft Mode does not have any data associated with it.\n        const isOnDemandRevalidate = previewProps && checkIsOnDemandRevalidate(req, previewProps).isOnDemandRevalidate;\n        const cookieValue = (_cookies_get = cookies.get(COOKIE_NAME_PRERENDER_BYPASS)) == null ? void 0 : _cookies_get.value;\n        this._isEnabled = Boolean(!isOnDemandRevalidate && cookieValue && previewProps && (cookieValue === previewProps.previewModeId || // In dev mode, the cookie can be actual hash value preview id but the preview props can still be `development-id`.\n        process.env.NODE_ENV !== 'production' && previewProps.previewModeId === 'development-id'));\n        this._previewModeId = previewProps == null ? void 0 : previewProps.previewModeId;\n        this._mutableCookies = mutableCookies;\n    }\n    get isEnabled() {\n        return this._isEnabled;\n    }\n    enable() {\n        if (!this._previewModeId) {\n            throw Object.defineProperty(new Error('Invariant: previewProps missing previewModeId this should never happen'), \"__NEXT_ERROR_CODE\", {\n                value: \"E93\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        this._mutableCookies.set({\n            name: COOKIE_NAME_PRERENDER_BYPASS,\n            value: this._previewModeId,\n            httpOnly: true,\n            sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n            secure: process.env.NODE_ENV !== 'development',\n            path: '/'\n        });\n        this._isEnabled = true;\n    }\n    disable() {\n        // To delete a cookie, set `expires` to a date in the past:\n        // https://tools.ietf.org/html/rfc6265#section-4.1.1\n        // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n        this._mutableCookies.set({\n            name: COOKIE_NAME_PRERENDER_BYPASS,\n            value: '',\n            httpOnly: true,\n            sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n            secure: process.env.NODE_ENV !== 'development',\n            path: '/',\n            expires: new Date(0)\n        });\n        this._isEnabled = false;\n    }\n}\n\n//# sourceMappingURL=draft-mode-provider.js.map","import { FLIGHT_HEADERS } from '../../client/components/app-router-headers';\nimport { HeadersAdapter } from '../web/spec-extension/adapters/headers';\nimport { MutableRequestCookiesAdapter, RequestCookiesAdapter, responseCookiesToRequestCookies, wrapWithMutableAccessCheck } from '../web/spec-extension/adapters/request-cookies';\nimport { ResponseCookies, RequestCookies } from '../web/spec-extension/cookies';\nimport { DraftModeProvider } from './draft-mode-provider';\nimport { splitCookiesString } from '../web/utils';\nfunction getHeaders(headers) {\n    const cleaned = HeadersAdapter.from(headers);\n    for (const header of FLIGHT_HEADERS){\n        cleaned.delete(header.toLowerCase());\n    }\n    return HeadersAdapter.seal(cleaned);\n}\nfunction getMutableCookies(headers, onUpdateCookies) {\n    const cookies = new RequestCookies(HeadersAdapter.from(headers));\n    return MutableRequestCookiesAdapter.wrap(cookies, onUpdateCookies);\n}\n/**\n * If middleware set cookies in this request (indicated by `x-middleware-set-cookie`),\n * then merge those into the existing cookie object, so that when `cookies()` is accessed\n * it's able to read the newly set cookies.\n */ function mergeMiddlewareCookies(req, existingCookies) {\n    if ('x-middleware-set-cookie' in req.headers && typeof req.headers['x-middleware-set-cookie'] === 'string') {\n        const setCookieValue = req.headers['x-middleware-set-cookie'];\n        const responseHeaders = new Headers();\n        for (const cookie of splitCookiesString(setCookieValue)){\n            responseHeaders.append('set-cookie', cookie);\n        }\n        const responseCookies = new ResponseCookies(responseHeaders);\n        // Transfer cookies from ResponseCookies to RequestCookies\n        for (const cookie of responseCookies.getAll()){\n            existingCookies.set(cookie);\n        }\n    }\n}\nexport function createRequestStoreForRender(req, res, url, rootParams, implicitTags, onUpdateCookies, previewProps, isHmrRefresh, serverComponentsHmrCache, renderResumeDataCache) {\n    return createRequestStoreImpl(// Pages start in render phase by default\n    'render', req, res, url, rootParams, implicitTags, onUpdateCookies, renderResumeDataCache, previewProps, isHmrRefresh, serverComponentsHmrCache);\n}\nexport function createRequestStoreForAPI(req, url, implicitTags, onUpdateCookies, previewProps) {\n    return createRequestStoreImpl(// API routes start in action phase by default\n    'action', req, undefined, url, {}, implicitTags, onUpdateCookies, undefined, previewProps, false, undefined);\n}\nfunction createRequestStoreImpl(phase, req, res, url, rootParams, implicitTags, onUpdateCookies, renderResumeDataCache, previewProps, isHmrRefresh, serverComponentsHmrCache) {\n    function defaultOnUpdateCookies(cookies) {\n        if (res) {\n            res.setHeader('Set-Cookie', cookies);\n        }\n    }\n    const cache = {};\n    return {\n        type: 'request',\n        phase,\n        implicitTags,\n        // Rather than just using the whole `url` here, we pull the parts we want\n        // to ensure we don't use parts of the URL that we shouldn't. This also\n        // lets us avoid requiring an empty string for `search` in the type.\n        url: {\n            pathname: url.pathname,\n            search: url.search ?? ''\n        },\n        rootParams,\n        get headers () {\n            if (!cache.headers) {\n                // Seal the headers object that'll freeze out any methods that could\n                // mutate the underlying data.\n                cache.headers = getHeaders(req.headers);\n            }\n            return cache.headers;\n        },\n        get cookies () {\n            if (!cache.cookies) {\n                // if middleware is setting cookie(s), then include those in\n                // the initial cached cookies so they can be read in render\n                const requestCookies = new RequestCookies(HeadersAdapter.from(req.headers));\n                mergeMiddlewareCookies(req, requestCookies);\n                // Seal the cookies object that'll freeze out any methods that could\n                // mutate the underlying data.\n                cache.cookies = RequestCookiesAdapter.seal(requestCookies);\n            }\n            return cache.cookies;\n        },\n        set cookies (value){\n            cache.cookies = value;\n        },\n        get mutableCookies () {\n            if (!cache.mutableCookies) {\n                const mutableCookies = getMutableCookies(req.headers, onUpdateCookies || (res ? defaultOnUpdateCookies : undefined));\n                mergeMiddlewareCookies(req, mutableCookies);\n                cache.mutableCookies = mutableCookies;\n            }\n            return cache.mutableCookies;\n        },\n        get userspaceMutableCookies () {\n            if (!cache.userspaceMutableCookies) {\n                const userspaceMutableCookies = wrapWithMutableAccessCheck(this.mutableCookies);\n                cache.userspaceMutableCookies = userspaceMutableCookies;\n            }\n            return cache.userspaceMutableCookies;\n        },\n        get draftMode () {\n            if (!cache.draftMode) {\n                cache.draftMode = new DraftModeProvider(previewProps, req, this.cookies, this.mutableCookies);\n            }\n            return cache.draftMode;\n        },\n        renderResumeDataCache: renderResumeDataCache ?? null,\n        isHmrRefresh,\n        serverComponentsHmrCache: serverComponentsHmrCache || globalThis.__serverComponentsHmrCache\n    };\n}\nexport function synchronizeMutableCookies(store) {\n    // TODO: does this need to update headers as well?\n    store.cookies = RequestCookiesAdapter.seal(responseCookiesToRequestCookies(store.mutableCookies));\n}\n\n//# sourceMappingURL=request-store.js.map","(function(){\"use strict\";var e={114:function(e){function assertPath(e){if(typeof e!==\"string\"){throw new TypeError(\"Path must be a string. Received \"+JSON.stringify(e))}}function normalizeStringPosix(e,r){var t=\"\";var i=0;var n=-1;var a=0;var f;for(var l=0;l<=e.length;++l){if(l<e.length)f=e.charCodeAt(l);else if(f===47)break;else f=47;if(f===47){if(n===l-1||a===1){}else if(n!==l-1&&a===2){if(t.length<2||i!==2||t.charCodeAt(t.length-1)!==46||t.charCodeAt(t.length-2)!==46){if(t.length>2){var s=t.lastIndexOf(\"/\");if(s!==t.length-1){if(s===-1){t=\"\";i=0}else{t=t.slice(0,s);i=t.length-1-t.lastIndexOf(\"/\")}n=l;a=0;continue}}else if(t.length===2||t.length===1){t=\"\";i=0;n=l;a=0;continue}}if(r){if(t.length>0)t+=\"/..\";else t=\"..\";i=2}}else{if(t.length>0)t+=\"/\"+e.slice(n+1,l);else t=e.slice(n+1,l);i=l-n-1}n=l;a=0}else if(f===46&&a!==-1){++a}else{a=-1}}return t}function _format(e,r){var t=r.dir||r.root;var i=r.base||(r.name||\"\")+(r.ext||\"\");if(!t){return i}if(t===r.root){return t+i}return t+e+i}var r={resolve:function resolve(){var e=\"\";var r=false;var t;for(var i=arguments.length-1;i>=-1&&!r;i--){var n;if(i>=0)n=arguments[i];else{if(t===undefined)t=\"\";n=t}assertPath(n);if(n.length===0){continue}e=n+\"/\"+e;r=n.charCodeAt(0)===47}e=normalizeStringPosix(e,!r);if(r){if(e.length>0)return\"/\"+e;else return\"/\"}else if(e.length>0){return e}else{return\".\"}},normalize:function normalize(e){assertPath(e);if(e.length===0)return\".\";var r=e.charCodeAt(0)===47;var t=e.charCodeAt(e.length-1)===47;e=normalizeStringPosix(e,!r);if(e.length===0&&!r)e=\".\";if(e.length>0&&t)e+=\"/\";if(r)return\"/\"+e;return e},isAbsolute:function isAbsolute(e){assertPath(e);return e.length>0&&e.charCodeAt(0)===47},join:function join(){if(arguments.length===0)return\".\";var e;for(var t=0;t<arguments.length;++t){var i=arguments[t];assertPath(i);if(i.length>0){if(e===undefined)e=i;else e+=\"/\"+i}}if(e===undefined)return\".\";return r.normalize(e)},relative:function relative(e,t){assertPath(e);assertPath(t);if(e===t)return\"\";e=r.resolve(e);t=r.resolve(t);if(e===t)return\"\";var i=1;for(;i<e.length;++i){if(e.charCodeAt(i)!==47)break}var n=e.length;var a=n-i;var f=1;for(;f<t.length;++f){if(t.charCodeAt(f)!==47)break}var l=t.length;var s=l-f;var o=a<s?a:s;var u=-1;var h=0;for(;h<=o;++h){if(h===o){if(s>o){if(t.charCodeAt(f+h)===47){return t.slice(f+h+1)}else if(h===0){return t.slice(f+h)}}else if(a>o){if(e.charCodeAt(i+h)===47){u=h}else if(h===0){u=0}}break}var c=e.charCodeAt(i+h);var v=t.charCodeAt(f+h);if(c!==v)break;else if(c===47)u=h}var g=\"\";for(h=i+u+1;h<=n;++h){if(h===n||e.charCodeAt(h)===47){if(g.length===0)g+=\"..\";else g+=\"/..\"}}if(g.length>0)return g+t.slice(f+u);else{f+=u;if(t.charCodeAt(f)===47)++f;return t.slice(f)}},_makeLong:function _makeLong(e){return e},dirname:function dirname(e){assertPath(e);if(e.length===0)return\".\";var r=e.charCodeAt(0);var t=r===47;var i=-1;var n=true;for(var a=e.length-1;a>=1;--a){r=e.charCodeAt(a);if(r===47){if(!n){i=a;break}}else{n=false}}if(i===-1)return t?\"/\":\".\";if(t&&i===1)return\"//\";return e.slice(0,i)},basename:function basename(e,r){if(r!==undefined&&typeof r!==\"string\")throw new TypeError('\"ext\" argument must be a string');assertPath(e);var t=0;var i=-1;var n=true;var a;if(r!==undefined&&r.length>0&&r.length<=e.length){if(r.length===e.length&&r===e)return\"\";var f=r.length-1;var l=-1;for(a=e.length-1;a>=0;--a){var s=e.charCodeAt(a);if(s===47){if(!n){t=a+1;break}}else{if(l===-1){n=false;l=a+1}if(f>=0){if(s===r.charCodeAt(f)){if(--f===-1){i=a}}else{f=-1;i=l}}}}if(t===i)i=l;else if(i===-1)i=e.length;return e.slice(t,i)}else{for(a=e.length-1;a>=0;--a){if(e.charCodeAt(a)===47){if(!n){t=a+1;break}}else if(i===-1){n=false;i=a+1}}if(i===-1)return\"\";return e.slice(t,i)}},extname:function extname(e){assertPath(e);var r=-1;var t=0;var i=-1;var n=true;var a=0;for(var f=e.length-1;f>=0;--f){var l=e.charCodeAt(f);if(l===47){if(!n){t=f+1;break}continue}if(i===-1){n=false;i=f+1}if(l===46){if(r===-1)r=f;else if(a!==1)a=1}else if(r!==-1){a=-1}}if(r===-1||i===-1||a===0||a===1&&r===i-1&&r===t+1){return\"\"}return e.slice(r,i)},format:function format(e){if(e===null||typeof e!==\"object\"){throw new TypeError('The \"pathObject\" argument must be of type Object. Received type '+typeof e)}return _format(\"/\",e)},parse:function parse(e){assertPath(e);var r={root:\"\",dir:\"\",base:\"\",ext:\"\",name:\"\"};if(e.length===0)return r;var t=e.charCodeAt(0);var i=t===47;var n;if(i){r.root=\"/\";n=1}else{n=0}var a=-1;var f=0;var l=-1;var s=true;var o=e.length-1;var u=0;for(;o>=n;--o){t=e.charCodeAt(o);if(t===47){if(!s){f=o+1;break}continue}if(l===-1){s=false;l=o+1}if(t===46){if(a===-1)a=o;else if(u!==1)u=1}else if(a!==-1){u=-1}}if(a===-1||l===-1||u===0||u===1&&a===l-1&&a===f+1){if(l!==-1){if(f===0&&i)r.base=r.name=e.slice(1,l);else r.base=r.name=e.slice(f,l)}}else{if(f===0&&i){r.name=e.slice(1,a);r.base=e.slice(1,l)}else{r.name=e.slice(f,a);r.base=e.slice(f,l)}r.ext=e.slice(a,l)}if(f>0)r.dir=e.slice(0,f-1);else if(i)r.dir=\"/\";return r},sep:\"/\",delimiter:\":\",win32:null,posix:null};r.posix=r;e.exports=r}};var r={};function __nccwpck_require__(t){var i=r[t];if(i!==undefined){return i.exports}var n=r[t]={exports:{}};var a=true;try{e[t](n,n.exports,__nccwpck_require__);a=false}finally{if(a)delete r[t]}return n.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(114);module.exports=t})();","/**\n * @license React\n * react-dom.react-server.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"next/dist/compiled/react\");\nfunction noop() {}\nvar Internals = {\n  d: {\n    f: noop,\n    r: function () {\n      throw Error(\n        \"Invalid form element. requestFormReset must be passed a form that was rendered by React.\"\n      );\n    },\n    D: noop,\n    C: noop,\n    L: noop,\n    m: noop,\n    X: noop,\n    S: noop,\n    M: noop\n  },\n  p: 0,\n  findDOMNode: null\n};\nif (!React.__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE)\n  throw Error(\n    'The \"react\" package in this environment is not configured correctly. The \"react-server\" condition must be enabled in any environment that runs React Server Components.'\n  );\nfunction getCrossOriginStringAs(as, input) {\n  if (\"font\" === as) return \"\";\n  if (\"string\" === typeof input)\n    return \"use-credentials\" === input ? input : \"\";\n}\nexports.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  Internals;\nexports.preconnect = function (href, options) {\n  \"string\" === typeof href &&\n    (options\n      ? ((options = options.crossOrigin),\n        (options =\n          \"string\" === typeof options\n            ? \"use-credentials\" === options\n              ? options\n              : \"\"\n            : void 0))\n      : (options = null),\n    Internals.d.C(href, options));\n};\nexports.prefetchDNS = function (href) {\n  \"string\" === typeof href && Internals.d.D(href);\n};\nexports.preinit = function (href, options) {\n  if (\"string\" === typeof href && options && \"string\" === typeof options.as) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin),\n      integrity =\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      fetchPriority =\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0;\n    \"style\" === as\n      ? Internals.d.S(\n          href,\n          \"string\" === typeof options.precedence ? options.precedence : void 0,\n          {\n            crossOrigin: crossOrigin,\n            integrity: integrity,\n            fetchPriority: fetchPriority\n          }\n        )\n      : \"script\" === as &&\n        Internals.d.X(href, {\n          crossOrigin: crossOrigin,\n          integrity: integrity,\n          fetchPriority: fetchPriority,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n  }\n};\nexports.preinitModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (\"object\" === typeof options && null !== options) {\n      if (null == options.as || \"script\" === options.as) {\n        var crossOrigin = getCrossOriginStringAs(\n          options.as,\n          options.crossOrigin\n        );\n        Internals.d.M(href, {\n          crossOrigin: crossOrigin,\n          integrity:\n            \"string\" === typeof options.integrity ? options.integrity : void 0,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n      }\n    } else null == options && Internals.d.M(href);\n};\nexports.preload = function (href, options) {\n  if (\n    \"string\" === typeof href &&\n    \"object\" === typeof options &&\n    null !== options &&\n    \"string\" === typeof options.as\n  ) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin);\n    Internals.d.L(href, as, {\n      crossOrigin: crossOrigin,\n      integrity:\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      nonce: \"string\" === typeof options.nonce ? options.nonce : void 0,\n      type: \"string\" === typeof options.type ? options.type : void 0,\n      fetchPriority:\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0,\n      referrerPolicy:\n        \"string\" === typeof options.referrerPolicy\n          ? options.referrerPolicy\n          : void 0,\n      imageSrcSet:\n        \"string\" === typeof options.imageSrcSet ? options.imageSrcSet : void 0,\n      imageSizes:\n        \"string\" === typeof options.imageSizes ? options.imageSizes : void 0,\n      media: \"string\" === typeof options.media ? options.media : void 0\n    });\n  }\n};\nexports.preloadModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (options) {\n      var crossOrigin = getCrossOriginStringAs(options.as, options.crossOrigin);\n      Internals.d.m(href, {\n        as:\n          \"string\" === typeof options.as && \"script\" !== options.as\n            ? options.as\n            : void 0,\n        crossOrigin: crossOrigin,\n        integrity:\n          \"string\" === typeof options.integrity ? options.integrity : void 0\n      });\n    } else Internals.d.m(href);\n};\nexports.version = \"19.2.0-canary-3fbfb9ba-20250409\";\n","/**\n * For a given page path, this function ensures that there is a leading slash.\n * If there is not a leading slash, one is added, otherwise it is noop.\n */\nexport function ensureLeadingSlash(path: string) {\n  return path.startsWith('/') ? path : `/${path}`\n}\n","export class PageSignatureError extends Error {\n    constructor({ page }){\n        super(`The middleware \"${page}\" accepts an async API directly with the form:\n  \n  export function middleware(request, event) {\n    return NextResponse.redirect('/new-location')\n  }\n  \n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  `);\n    }\n}\nexport class RemovedPageError extends Error {\n    constructor(){\n        super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  `);\n    }\n}\nexport class RemovedUAError extends Error {\n    constructor(){\n        super(`The request.ua has been removed in favour of \\`userAgent\\` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  `);\n    }\n}\n\n//# sourceMappingURL=error.js.map","/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */\nexport function removeTrailingSlash(route: string) {\n  return route.replace(/\\/$/, '') || '/'\n}\n","/**\n * @license React\n * react.react-server.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar ReactSharedInternals = { H: null, A: null };\nfunction formatProdErrorMessage(code) {\n  var url = \"https://react.dev/errors/\" + code;\n  if (1 < arguments.length) {\n    url += \"?args[]=\" + encodeURIComponent(arguments[1]);\n    for (var i = 2; i < arguments.length; i++)\n      url += \"&args[]=\" + encodeURIComponent(arguments[i]);\n  }\n  return (\n    \"Minified React error #\" +\n    code +\n    \"; visit \" +\n    url +\n    \" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"\n  );\n}\nvar isArrayImpl = Array.isArray,\n  REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty,\n  assign = Object.assign;\nfunction ReactElement(type, key, self, source, owner, props) {\n  self = props.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== self ? self : null,\n    props: props\n  };\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  return ReactElement(\n    oldElement.type,\n    newKey,\n    void 0,\n    void 0,\n    void 0,\n    oldElement.props\n  );\n}\nfunction isValidElement(object) {\n  return (\n    \"object\" === typeof object &&\n    null !== object &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n}\nfunction escape(key) {\n  var escaperLookup = { \"=\": \"=0\", \":\": \"=2\" };\n  return (\n    \"$\" +\n    key.replace(/[=:]/g, function (match) {\n      return escaperLookup[match];\n    })\n  );\n}\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction getElementKey(element, index) {\n  return \"object\" === typeof element && null !== element && null != element.key\n    ? escape(\"\" + element.key)\n    : index.toString(36);\n}\nfunction noop() {}\nfunction resolveThenable(thenable) {\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw thenable.reason;\n    default:\n      switch (\n        (\"string\" === typeof thenable.status\n          ? thenable.then(noop, noop)\n          : ((thenable.status = \"pending\"),\n            thenable.then(\n              function (fulfilledValue) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"fulfilled\"),\n                  (thenable.value = fulfilledValue));\n              },\n              function (error) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"rejected\"), (thenable.reason = error));\n              }\n            )),\n        thenable.status)\n      ) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw thenable.reason;\n      }\n  }\n  throw thenable;\n}\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n  if (\"undefined\" === type || \"boolean\" === type) children = null;\n  var invokeCallback = !1;\n  if (null === children) invokeCallback = !0;\n  else\n    switch (type) {\n      case \"bigint\":\n      case \"string\":\n      case \"number\":\n        invokeCallback = !0;\n        break;\n      case \"object\":\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = !0;\n            break;\n          case REACT_LAZY_TYPE:\n            return (\n              (invokeCallback = children._init),\n              mapIntoArray(\n                invokeCallback(children._payload),\n                array,\n                escapedPrefix,\n                nameSoFar,\n                callback\n              )\n            );\n        }\n    }\n  if (invokeCallback)\n    return (\n      (callback = callback(children)),\n      (invokeCallback =\n        \"\" === nameSoFar ? \".\" + getElementKey(children, 0) : nameSoFar),\n      isArrayImpl(callback)\n        ? ((escapedPrefix = \"\"),\n          null != invokeCallback &&\n            (escapedPrefix =\n              invokeCallback.replace(userProvidedKeyEscapeRegex, \"$&/\") + \"/\"),\n          mapIntoArray(callback, array, escapedPrefix, \"\", function (c) {\n            return c;\n          }))\n        : null != callback &&\n          (isValidElement(callback) &&\n            (callback = cloneAndReplaceKey(\n              callback,\n              escapedPrefix +\n                (null == callback.key ||\n                (children && children.key === callback.key)\n                  ? \"\"\n                  : (\"\" + callback.key).replace(\n                      userProvidedKeyEscapeRegex,\n                      \"$&/\"\n                    ) + \"/\") +\n                invokeCallback\n            )),\n          array.push(callback)),\n      1\n    );\n  invokeCallback = 0;\n  var nextNamePrefix = \"\" === nameSoFar ? \".\" : nameSoFar + \":\";\n  if (isArrayImpl(children))\n    for (var i = 0; i < children.length; i++)\n      (nameSoFar = children[i]),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (((i = getIteratorFn(children)), \"function\" === typeof i))\n    for (\n      children = i.call(children), i = 0;\n      !(nameSoFar = children.next()).done;\n\n    )\n      (nameSoFar = nameSoFar.value),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i++)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (\"object\" === type) {\n    if (\"function\" === typeof children.then)\n      return mapIntoArray(\n        resolveThenable(children),\n        array,\n        escapedPrefix,\n        nameSoFar,\n        callback\n      );\n    array = String(children);\n    throw Error(\n      formatProdErrorMessage(\n        31,\n        \"[object Object]\" === array\n          ? \"object with keys {\" + Object.keys(children).join(\", \") + \"}\"\n          : array\n      )\n    );\n  }\n  return invokeCallback;\n}\nfunction mapChildren(children, func, context) {\n  if (null == children) return children;\n  var result = [],\n    count = 0;\n  mapIntoArray(children, result, \"\", \"\", function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\nfunction lazyInitializer(payload) {\n  if (-1 === payload._status) {\n    var ctor = payload._result;\n    ctor = ctor();\n    ctor.then(\n      function (moduleObject) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 1), (payload._result = moduleObject);\n      },\n      function (error) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 2), (payload._result = error);\n      }\n    );\n    -1 === payload._status && ((payload._status = 0), (payload._result = ctor));\n  }\n  if (1 === payload._status) return payload._result.default;\n  throw payload._result;\n}\nfunction createCacheRoot() {\n  return new WeakMap();\n}\nfunction createCacheNode() {\n  return { s: 0, v: void 0, o: null, p: null };\n}\nexports.Children = {\n  map: mapChildren,\n  forEach: function (children, forEachFunc, forEachContext) {\n    mapChildren(\n      children,\n      function () {\n        forEachFunc.apply(this, arguments);\n      },\n      forEachContext\n    );\n  },\n  count: function (children) {\n    var n = 0;\n    mapChildren(children, function () {\n      n++;\n    });\n    return n;\n  },\n  toArray: function (children) {\n    return (\n      mapChildren(children, function (child) {\n        return child;\n      }) || []\n    );\n  },\n  only: function (children) {\n    if (!isValidElement(children)) throw Error(formatProdErrorMessage(143));\n    return children;\n  }\n};\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  ReactSharedInternals;\nexports.cache = function (fn) {\n  return function () {\n    var dispatcher = ReactSharedInternals.A;\n    if (!dispatcher) return fn.apply(null, arguments);\n    var fnMap = dispatcher.getCacheForType(createCacheRoot);\n    dispatcher = fnMap.get(fn);\n    void 0 === dispatcher &&\n      ((dispatcher = createCacheNode()), fnMap.set(fn, dispatcher));\n    fnMap = 0;\n    for (var l = arguments.length; fnMap < l; fnMap++) {\n      var arg = arguments[fnMap];\n      if (\n        \"function\" === typeof arg ||\n        (\"object\" === typeof arg && null !== arg)\n      ) {\n        var objectCache = dispatcher.o;\n        null === objectCache && (dispatcher.o = objectCache = new WeakMap());\n        dispatcher = objectCache.get(arg);\n        void 0 === dispatcher &&\n          ((dispatcher = createCacheNode()), objectCache.set(arg, dispatcher));\n      } else\n        (objectCache = dispatcher.p),\n          null === objectCache && (dispatcher.p = objectCache = new Map()),\n          (dispatcher = objectCache.get(arg)),\n          void 0 === dispatcher &&\n            ((dispatcher = createCacheNode()),\n            objectCache.set(arg, dispatcher));\n    }\n    if (1 === dispatcher.s) return dispatcher.v;\n    if (2 === dispatcher.s) throw dispatcher.v;\n    try {\n      var result = fn.apply(null, arguments);\n      fnMap = dispatcher;\n      fnMap.s = 1;\n      return (fnMap.v = result);\n    } catch (error) {\n      throw ((result = dispatcher), (result.s = 2), (result.v = error), error);\n    }\n  };\n};\nexports.captureOwnerStack = function () {\n  return null;\n};\nexports.cloneElement = function (element, config, children) {\n  if (null === element || void 0 === element)\n    throw Error(formatProdErrorMessage(267, element));\n  var props = assign({}, element.props),\n    key = element.key,\n    owner = void 0;\n  if (null != config)\n    for (propName in (void 0 !== config.ref && (owner = void 0),\n    void 0 !== config.key && (key = \"\" + config.key),\n    config))\n      !hasOwnProperty.call(config, propName) ||\n        \"key\" === propName ||\n        \"__self\" === propName ||\n        \"__source\" === propName ||\n        (\"ref\" === propName && void 0 === config.ref) ||\n        (props[propName] = config[propName]);\n  var propName = arguments.length - 2;\n  if (1 === propName) props.children = children;\n  else if (1 < propName) {\n    for (var childArray = Array(propName), i = 0; i < propName; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  return ReactElement(element.type, key, void 0, void 0, owner, props);\n};\nexports.createElement = function (type, config, children) {\n  var propName,\n    props = {},\n    key = null;\n  if (null != config)\n    for (propName in (void 0 !== config.key && (key = \"\" + config.key), config))\n      hasOwnProperty.call(config, propName) &&\n        \"key\" !== propName &&\n        \"__self\" !== propName &&\n        \"__source\" !== propName &&\n        (props[propName] = config[propName]);\n  var childrenLength = arguments.length - 2;\n  if (1 === childrenLength) props.children = children;\n  else if (1 < childrenLength) {\n    for (var childArray = Array(childrenLength), i = 0; i < childrenLength; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  if (type && type.defaultProps)\n    for (propName in ((childrenLength = type.defaultProps), childrenLength))\n      void 0 === props[propName] &&\n        (props[propName] = childrenLength[propName]);\n  return ReactElement(type, key, void 0, void 0, null, props);\n};\nexports.createRef = function () {\n  return { current: null };\n};\nexports.forwardRef = function (render) {\n  return { $$typeof: REACT_FORWARD_REF_TYPE, render: render };\n};\nexports.isValidElement = isValidElement;\nexports.lazy = function (ctor) {\n  return {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: { _status: -1, _result: ctor },\n    _init: lazyInitializer\n  };\n};\nexports.memo = function (type, compare) {\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: void 0 === compare ? null : compare\n  };\n};\nexports.use = function (usable) {\n  return ReactSharedInternals.H.use(usable);\n};\nexports.useCallback = function (callback, deps) {\n  return ReactSharedInternals.H.useCallback(callback, deps);\n};\nexports.useDebugValue = function () {};\nexports.useId = function () {\n  return ReactSharedInternals.H.useId();\n};\nexports.useMemo = function (create, deps) {\n  return ReactSharedInternals.H.useMemo(create, deps);\n};\nexports.version = \"19.2.0-canary-3fbfb9ba-20250409\";\n","// Share the instance module in the next-shared layer\nimport { workAsyncStorageInstance } from './work-async-storage-instance' with {\n    'turbopack-transition': 'next-shared'\n};\nexport { workAsyncStorageInstance as workAsyncStorage };\n\n//# sourceMappingURL=work-async-storage.external.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.version = void 0;\nexports.version = '0.0.0-automated';\n//# sourceMappingURL=version.js.map"],"names":["DYNAMIC_ERROR_CODE","DynamicServerError","Error","constructor","description","digest","isDynamicServerError","err","StaticGenBailoutError","code","NEXT_STATIC_GEN_BAILOUT","ReactDOM","require","React","REACT_LEGACY_ELEMENT_TYPE","Symbol","for","REACT_ELEMENT_TYPE","REACT_FRAGMENT_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_MEMO_CACHE_SENTINEL","MAYBE_ITERATOR_SYMBOL","iterator","getIteratorFn","maybeIterable","ASYNC_ITERATOR","asyncIterator","handleErrorInNextTick","error","setTimeoutOrImmediate","LocalPromise","Promise","scheduleMicrotask","queueMicrotask","callback","resolve","then","catch","currentView","writtenBytes","writeChunkAndReturn","destination","chunk","byteLength","enqueue","Uint8Array","buffer","allowableBytes","length","set","subarray","textEncoder","TextEncoder","stringToChunk","content","encode","byteLengthOfChunk","closeWithError","close","CLIENT_REFERENCE_TAG$1","SERVER_REFERENCE_TAG","registerClientReferenceImpl","proxyImplementation","id","async","Object","defineProperties","$$typeof","value","$$id","$$async","FunctionBind","Function","prototype","bind","ArraySlice","Array","slice","newFn","apply","arguments","args","call","$$bound","concat","configurable","PROMISE_PROTOTYPE","deepProxyHandlers","get","target","name","toPrimitive","toStringTag","String","getReference","moduleId","default","clientReference","proxy","Proxy","proxyHandlers$1","status","defineProperty","getOwnPropertyDescriptor","descriptor","writable","enumerable","getPrototypeOf","ReactDOMSharedInternals","__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","previousDispatcher","d","trimOptions","options","key","hasProperties","trimmed","f","r","D","prefetchDNS","href","request","resolveRequest","hints","has","add","emitHint","C","preconnect","crossOrigin","L","preload","as","imageSrcSet","imageSizes","uniquePart","m","preloadModule$1","X","preinitScript","src","S","preinitStyle","precedence","M","preinitModuleScript","supportsRequestStorage","AsyncLocalStorage","requestStorage","async_hooks","createHook","executionAsyncId","TEMPORARY_REFERENCE_TAG","proxyHandlers","SuspenseException","noop$1","suspendedThenable","getSuspendedThenable","thenable","currentRequest$1","thenableIndexCounter","thenableState","getThenableStateAfterSuspending","state","HooksDispatcher","readContext","unsupportedContext","use","usable","index","push","reason","fulfilledValue","fulfilledThenable","rejectedThenable","useCallback","useContext","useEffect","unsupportedHook","useImperativeHandle","useLayoutEffect","useInsertionEffect","useMemo","nextCreate","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useSyncExternalStore","useId","identifierCount","identifierPrefix","toString","useHostTransitionStatus","useFormState","useActionState","useOptimistic","useMemoCache","size","data","i","useCacheRefresh","unsupportedRefresh","DefaultAsyncDispatcher","getCacheForType","resourceType","JSCompiler_inline_result","cache","Map","entry","ReactSharedInternalsServer","__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","isArrayImpl","isArray","objectName","object","replace","p0","describeValueForErrorMessage","JSON","stringify","CLIENT_REFERENCE_TAG","displayName","describeObjectForErrorMessage","objectOrArray","expandedName","objKind","str","describeElementType","type","render","payload","_payload","_init","x","keys","encodedKey","repeat","ObjectPrototype","defaultErrorHandler","console","defaultPostponeHandler","RequestInstance","model","bundlerConfig","onError","onPostpone","temporaryReferences","environmentName","filterStackFrame","onAllReady","onFatalError","A","Set","flushScheduled","fatalError","pendingChunks","nextChunkId","abortListeners","abortableTasks","pingedTasks","completedImportChunks","completedHintChunks","completedRegularChunks","completedErrorChunks","writtenSymbols","writtenClientReferences","writtenServerReferences","writtenObjects","WeakMap","taintCleanupQueue","createTask","noop","currentRequest","store","getStore","serializeThenable","task","newTask","keyPath","implicitSlot","pingTask","erroredTask","delete","serializeByValueID","emitModelChunk","enqueueFlush","readThenable","voidHandler","renderFunctionComponent","Component","props","prevThenableState","processServerComponentReturnValue","result","createLazyWrapperAroundWakeable","wakeable","iteratorFn","ReadableStream","renderModelDestructive","emptyRoot","renderFragment","children","performWork","abortSet","ping","toJSON","parentPropertyName","prevKeyPath","prevImplicitSlot","thrownValue","logRecoverableError","emitErrorChunk","encodeReferenceChunk","reference","serializeClientReference","parent","clientReferenceKey","existingId","config","modulePath","resolvedModuleData","idx","lastIndexOf","chunks","importId","json","row","processedChunk","outlineModel","retryTask","serializeTypedArray","tag","typedArray","bufferId","emitTypedArrayChunk","modelRoot","elementReference","existingReference","indexOf","ref","renderElement","init","from","FormData","entries","ArrayBuffer","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array","DataView","Blob","serializeBlob","blob","aborted","abortBlob","reader","cancel","stream","getReader","read","progress","done","serializeReadableStream","abortStream","streamTask","supportsBYOB","mode","releaseLock","emitChunk","x$7","serializeAsyncIterable","iterable","abortIterable","throw","next","endStreamRow","chunkId","x$8","Date","emitTextChunk","Number","isFinite","Infinity","bound","test","prevRequest","errorDigest","run","byteOffset","text","binaryLength","resolvedModel","prevDispatcher","H","hadAbortableTasks","flushCompletedChunks","importsChunks","splice","hintChunks","regularChunks","errorChunks","startWork","startFlowing","abort","errorId","forEach","clear","error$22","error$23","resolveServerReference","chunkCache","requireAsyncModule","promise","globalThis","__next_require__","ignoreReject","preloadModule","metadata","promises","__webpack_chunk_load__","all","requireModule","moduleExports","__esModule","hasOwnProperty","Chunk","response","_response","createPendingChunk","wakeChunk","listeners","triggerErrorOnChunk","resolveModelChunk","enqueueModel","resolveListeners","rejectListeners","initializeModelChunk","createResolvedIteratorResultChunk","resolveIteratorResultChunk","create","reject","initializingChunk","initializingChunkBlockedModel","prevChunk","prevBlocked","rootReference","rawModel","parse","reviveModel","parentObj","parentKey","parseModelString","obj","parseInt","getOutlinedModel","createModel","loadServerReference$1","parentChunk","parentObject","serverReference","_bundlerConfig","_ref","fn","createModelResolver","createModelReject","_temporaryReferences","createMap","createSet","formPrefix","_prefix","_formData","entryKey","startsWith","append","extractIterator","NaN","BigInt","parseTypedArray","parseReadableStream","parseAsyncIterable","deps","reportGlobalError","_closed","_closedReason","_chunks","getChunk","cyclic","map","path","blocked","split","bytesPerElement","arrayBuffer","resolveStream","controller","getAll","start","c","previousBlockedChunk","v","e","chunk$26","blockedChunk","closed","nextWriteIndex","$jscomp$compprop2","nextReadIndex","arg","createResponse","formFieldPrefix","backingFormData","loadServerReference","decodeBoundActionMetaData","body","serverManifest","exports","formData","action","actionResult","metaData","referenceId","webpackMap","form","prefix","exportName","propertyIsEnumerable","setTimeout","signal","listener","removeEventListener","addEventListener","pull","highWaterMark","prelude","normalizeLocalePath","pathname","locales","detectedLocale","lowercasedLocales","locale","toLowerCase","segments","segment","normalizeAppPath","route","ensureLeadingSlash","reduce","isGroupSegment","endsWith","normalizeRscURL","url","addPathPrefix","query","hash","parsePath","addPathSuffix","suffix","getNextPathnameInfo","basePath","i18n","trailingSlash","nextConfig","info","pathHasPrefix","removePathPrefix","withoutPrefix","pathnameNoDataPrefix","paths","buildId","join","i18nProvider","analyze","getHostname","headers","hostname","host","parsed","detectDomainLocale","domainItems","item","domainHostname","domain","defaultLocale","some","addLocale","ignorePrefix","lower","undefined","removeTrailingSlash","InvariantError","message","isThenable","SERVER_ACTION_MANIFESTS_SINGLETON","parseRelativeURL","base","baseURL","URL","relative","isRelative","origin","INTERCEPTION_ROUTE_MARKERS","isInterceptionRouteAppPath","find","TEST_ROUTE","TEST_STRICT_ROUTE","isDynamicRoute","strict","extractInterceptionRouteInformation","interceptingRoute","marker","interceptedRoute","splitInterceptingRoute","performance","every","method","DecodeError","reHasRegExp","reReplaceRegExp","escapeStringRegexp","PARAMETER_PATTERN","parseMatchedParameter","param","optional","getRouteRegex","normalizedRoute","includeSuffix","includePrefix","excludeOptionalTrailingSlash","parameterizedRoute","groups","getParametrizedRoute","groupIndex","markerMatch","paramMatches","match","pos","s","substring","re","getSafeKeyFromSegment","pattern","interceptionMarker","getSafeRouteKey","routeKeys","keyPrefix","backreferenceDuplicateKeys","cleanedKey","invalidKey","duplicateKey","interceptionPrefix","getRouteMatcher","routeMatch","exec","decode","decodeURIComponent","params","group","searchParamsToUrlQuery","searchParams","existing","unescapeSegments","compileNonPath","includes","RegExp","compile","validate","page","getNamedRouteRegex","getNamedParametrizedRoute","prefixRouteKeys","routeKey","j","fromCharCode","Math","floor","hasInterceptionMarker","NEXT_INTERCEPTION_MARKER_PREFIX","NEXT_QUERY_PARAM_PREFIX","namedParameterizedRoute","namedRegex","regexp","pathToRegexp","delimiter","sensitive","matcher","regexpToFunction","regexModifier","source","flags","removeUnnamedParams","matchHas","missing","hasMatch","hasItem","req","cookies","getCookieParser","getSafeParamName","newParamName","paramName","charCode","charCodeAt","matches","groupKey","allMatch","prepareDestination","destHostnameCompiler","newUrl","assign","parsedDestination","parseDestination","escaped","escapeSegment","segmentName","parseUrl","parseRelativeUrl","parseQuery","globalBase","resolvedBase","getLocationOrigin","window","search","parsedURL","port","protocol","destHostname","destQuery","destPath","destParams","destPathParamKeys","destHostnameParamKeys","destPathCompiler","strOrArray","paramKeys","filter","appendParamsToQuery","jwtSecret","process","env","SUPABASE_AUTH_JWT_SECRET","createTRPCContext","opts","cookiesStore","supabase","createRouteHandlerClient","userId","auth","getUser","user","accessToken","pop","jose","sub","createClient","global","Authorization","requestOrigin","initTRPC","context","transformer","superJson","createTRPCRouter","t","router","procedure","enforceUserIsAuthed","middleware","ctx","TRPCError","greetingRouter","greet","protectedProcedure","profile","select","eq","single","getTimeOfDay","curHr","getHours","greeting","runtime","fetchRequestHandler","endpoint","appRouter","createContext","setReferenceManifestsSingleton","clientReferenceManifest","serverActionsManifest","serverModuleMap","clientReferenceManifestsPerPage","module","hashIndex","queryIndex","hasQuery","ALLOWED_CODES","values","NOT_FOUND","FORBIDDEN","UNAUTHORIZED","isHTTPAccessFallbackError","httpStatus","HTTP_ERROR_FALLBACK_ERROR_CODE","RedirectStatusCode","isRedirectError","errorCode","statusCode","at","REDIRECT_ERROR_CODE","isNaN","BAILOUT_TO_CSR","isDefinitelyAValidIdentifier","describeStringPropertyAccess","prop","wellKnownProperties","RSC_HEADER","FLIGHT_HEADERS","NEXT_ROUTER_PREFETCH_HEADER"],"sourceRoot":"","ignoreList":[0,1,2,5,6,8,9,10,11,12,13,14,16,17,18,19,20,24,25,34,35,36,38,40,42,43,44,46,47,48,49,50,51,52,57,58,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,172,173,174,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,201,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,287,288,290,291,292,293,294,296,298,299,300,301,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,365,366,367,368,369,370,372,374,375,376]}